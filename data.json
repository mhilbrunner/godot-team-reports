{"generated_at":1629641132220,"teams":{"1828781":{"id":1828781,"name":"Usability","avatar":"https://avatars.githubusercontent.com/t/1828781?s=40&v=4","slug":"usability","full_name":"_Editor/Usability","full_slug":"_editor/usability"},"1828782":{"id":1828782,"name":"_Platforms","avatar":"https://avatars.githubusercontent.com/t/1828782?s=40&v=4","slug":"_platforms","full_name":"_Platforms","full_slug":"_platforms"},"1828783":{"id":1828783,"name":"Documentation","avatar":"https://avatars.githubusercontent.com/t/1828783?s=40&v=4","slug":"documentation","full_name":"_Community/Documentation","full_slug":"_community/documentation"},"2785428":{"id":2785428,"name":"Network","avatar":"https://avatars.githubusercontent.com/t/2785428?s=40&v=4","slug":"network","full_name":"_Systems/Network","full_slug":"_systems/network"},"3112904":{"id":3112904,"name":"macOS","avatar":"https://avatars.githubusercontent.com/t/3112904?s=40&v=4","slug":"macos","full_name":"_Platforms/macOS","full_slug":"_platforms/macos"},"3112906":{"id":3112906,"name":"Windows","avatar":"https://avatars.githubusercontent.com/t/3112906?s=40&v=4","slug":"windows","full_name":"_Platforms/Windows","full_slug":"_platforms/windows"},"3112907":{"id":3112907,"name":"Linux / *BSD","avatar":"https://avatars.githubusercontent.com/t/3112907?s=40&v=4","slug":"linux-bsd","full_name":"_Platforms/Linux / *BSD","full_slug":"_platforms/linux-bsd"},"3112909":{"id":3112909,"name":"Android","avatar":"https://avatars.githubusercontent.com/t/3112909?s=40&v=4","slug":"android","full_name":"_Platforms/Android","full_slug":"_platforms/android"},"3112910":{"id":3112910,"name":"iOS","avatar":"https://avatars.githubusercontent.com/t/3112910?s=40&v=4","slug":"ios","full_name":"_Platforms/iOS","full_slug":"_platforms/ios"},"3112912":{"id":3112912,"name":"HTML5","avatar":"https://avatars.githubusercontent.com/t/3112912?s=40&v=4","slug":"html5","full_name":"_Platforms/HTML5","full_slug":"_platforms/html5"},"3112913":{"id":3112913,"name":"UWP","avatar":"https://avatars.githubusercontent.com/t/3112913?s=40&v=4","slug":"uwp","full_name":"_Platforms/UWP","full_slug":"_platforms/uwp"},"3377457":{"id":3377457,"name":"GDNative","avatar":"https://avatars.githubusercontent.com/t/3377457?s=40&v=4","slug":"gdnative","full_name":"_Scripting/GDNative","full_slug":"_scripting/gdnative"},"3388402":{"id":3388402,"name":"XR","avatar":"https://avatars.githubusercontent.com/t/3388402?s=40&v=4","slug":"xr","full_name":"_Systems/XR","full_slug":"_systems/xr"},"3609449":{"id":3609449,"name":"Rendering","avatar":"https://avatars.githubusercontent.com/t/3609449?s=40&v=4","slug":"rendering","full_name":"_Systems/Rendering","full_slug":"_systems/rendering"},"3857901":{"id":3857901,"name":"Mono","avatar":"https://avatars.githubusercontent.com/t/3857901?s=40&v=4","slug":"mono","full_name":"_Scripting/Mono","full_slug":"_scripting/mono"},"4038183":{"id":4038183,"name":"GDScript","avatar":"https://avatars.githubusercontent.com/t/4038183?s=40&v=4","slug":"gdscript","full_name":"_Scripting/GDScript","full_slug":"_scripting/gdscript"},"4417777":{"id":4417777,"name":"Physics","avatar":"https://avatars.githubusercontent.com/t/4417777?s=40&v=4","slug":"physics","full_name":"_Systems/Physics","full_slug":"_systems/physics"},"4417819":{"id":4417819,"name":"Shaders","avatar":"https://avatars.githubusercontent.com/t/4417819?s=40&v=4","slug":"shaders","full_name":"_Systems/Shaders","full_slug":"_systems/shaders"},"4417836":{"id":4417836,"name":"_Scripting","avatar":"https://avatars.githubusercontent.com/t/4417836?s=40&v=4","slug":"_scripting","full_name":"_Scripting","full_slug":"_scripting"},"4417868":{"id":4417868,"name":"VisualScript","avatar":"https://avatars.githubusercontent.com/t/4417868?s=40&v=4","slug":"visualscript","full_name":"_Scripting/VisualScript","full_slug":"_scripting/visualscript"},"4418376":{"id":4418376,"name":"Navigation","avatar":"https://avatars.githubusercontent.com/t/4418376?s=40&v=4","slug":"navigation","full_name":"_Systems/Navigation","full_slug":"_systems/navigation"},"4418380":{"id":4418380,"name":"Animation","avatar":"https://avatars.githubusercontent.com/t/4418380?s=40&v=4","slug":"animation","full_name":"_Systems/Animation","full_slug":"_systems/animation"},"4418392":{"id":4418392,"name":"Audio","avatar":"https://avatars.githubusercontent.com/t/4418392?s=40&v=4","slug":"audio","full_name":"_Systems/Audio","full_slug":"_systems/audio"},"4418403":{"id":4418403,"name":"Input","avatar":"https://avatars.githubusercontent.com/t/4418403?s=40&v=4","slug":"input","full_name":"_Systems/Input","full_slug":"_systems/input"},"4418424":{"id":4418424,"name":"Import","avatar":"https://avatars.githubusercontent.com/t/4418424?s=40&v=4","slug":"import","full_name":"_Systems/Import","full_slug":"_systems/import"},"4418518":{"id":4418518,"name":"Buildsystem","avatar":"https://avatars.githubusercontent.com/t/4418518?s=40&v=4","slug":"buildsystem","full_name":"_Platforms/Buildsystem","full_slug":"_platforms/buildsystem"},"4418537":{"id":4418537,"name":"_Editor","avatar":"https://avatars.githubusercontent.com/t/4418537?s=40&v=4","slug":"_editor","full_name":"_Editor","full_slug":"_editor"},"4418542":{"id":4418542,"name":"2D editor","avatar":"https://avatars.githubusercontent.com/t/4418542?s=40&v=4","slug":"2d-editor","full_name":"_Editor/2D editor","full_slug":"_editor/2d-editor"},"4418550":{"id":4418550,"name":"3D editor","avatar":"https://avatars.githubusercontent.com/t/4418550?s=40&v=4","slug":"3d-editor","full_name":"_Editor/3D editor","full_slug":"_editor/3d-editor"},"4418558":{"id":4418558,"name":"Script editor","avatar":"https://avatars.githubusercontent.com/t/4418558?s=40&v=4","slug":"script-editor","full_name":"_Editor/Script editor","full_slug":"_editor/script-editor"},"4418563":{"id":4418563,"name":"Docks","avatar":"https://avatars.githubusercontent.com/t/4418563?s=40&v=4","slug":"docks","full_name":"_Editor/Docks","full_slug":"_editor/docks"},"4418605":{"id":4418605,"name":"Debugger","avatar":"https://avatars.githubusercontent.com/t/4418605?s=40&v=4","slug":"debugger","full_name":"_Editor/Debugger","full_slug":"_editor/debugger"},"4418718":{"id":4418718,"name":"2D nodes","avatar":"https://avatars.githubusercontent.com/t/4418718?s=40&v=4","slug":"2d-nodes","full_name":"_Engine/2D nodes","full_slug":"_engine/2d-nodes"},"4418726":{"id":4418726,"name":"3D nodes","avatar":"https://avatars.githubusercontent.com/t/4418726?s=40&v=4","slug":"3d-nodes","full_name":"_Engine/3D nodes","full_slug":"_engine/3d-nodes"},"4418733":{"id":4418733,"name":"GUI nodes","avatar":"https://avatars.githubusercontent.com/t/4418733?s=40&v=4","slug":"gui-nodes","full_name":"_Engine/GUI nodes","full_slug":"_engine/gui-nodes"},"4418914":{"id":4418914,"name":"Core","avatar":"https://avatars.githubusercontent.com/t/4418914?s=40&v=4","slug":"core","full_name":"_Engine/Core","full_slug":"_engine/core"},"4418923":{"id":4418923,"name":"Tests","avatar":"https://avatars.githubusercontent.com/t/4418923?s=40&v=4","slug":"tests","full_name":"_Engine/Tests","full_slug":"_engine/tests"}},"pulls":[{"id":717300265,"public_id":51982,"url":"https://github.com/godotengine/godot/pull/51982","diff_url":"https://github.com/godotengine/godot/pull/51982.diff","patch_url":"https://github.com/godotengine/godot/pull/51982.patch","title":"Fix doctool merges when method signatures don't match","state":"open","is_draft":false,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2021-08-22T12:15:00Z","updated_at":"2021-08-22T13:45:40Z","body":"If methods signature did not match, documentation is not merged. This is\r\na considerable source of annoyance for contributors and it happened as\r\na result of #4533, which was needed  as, otherwise, the documentation for \r\nconstructors would not be properly merged.\r\n\r\nThis PR modifies the logic introduced to only do the signature test on\r\nconstructors and operators (which are the only types of members that can repeat).","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":717294924,"public_id":51981,"url":"https://github.com/godotengine/godot/pull/51981","diff_url":"https://github.com/godotengine/godot/pull/51981.diff","patch_url":"https://github.com/godotengine/godot/pull/51981.patch","title":"MultiNodeEdit Fix setting NodePath","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-08-22T11:36:31Z","updated_at":"2021-08-22T13:47:09Z","body":"`NodePath` passed in is relative to the root `Node` of the edited scene which means that the target `Node` for the `NodePath`s being set were obtained incorrectly. This PR should fix this.\r\n\r\nFixes #51963.\r\n\r\nCherry-pickable `3.x`, `3.3`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418537]},{"id":717294399,"public_id":51980,"url":"https://github.com/godotengine/godot/pull/51980","diff_url":"https://github.com/godotengine/godot/pull/51980.diff","patch_url":"https://github.com/godotengine/godot/pull/51980.patch","title":"Fix multiview defines in tonemap shader","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-08-22T11:32:10Z","updated_at":"2021-08-22T11:32:11Z","body":"Just fixing a mistake that snuck in when I combined the subpass tonemap shader with the normal one.. ","target_branch":"master","labels":[{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":717280422,"public_id":51975,"url":"https://github.com/godotengine/godot/pull/51975","diff_url":"https://github.com/godotengine/godot/pull/51975.diff","patch_url":"https://github.com/godotengine/godot/pull/51975.patch","title":"Make GraphEdit connections consistent on zoom","state":"open","is_draft":false,"authored_by":{"id":28286961,"user":"Jummit","avater":"https://avatars.githubusercontent.com/u/28286961?v=4","url":"https://github.com/Jummit"},"created_at":"2021-08-22T09:43:04Z","updated_at":"2021-08-22T09:56:09Z","body":"Previously the connections would change shape depending on how far was zoomed in, which was particullary obvious after #51952.\r\n\r\n**Before:**\r\n\r\nhttps://user-images.githubusercontent.com/28286961/130350389-747f1364-6125-4ad0-9770-d71939122e01.mp4\r\n\r\n**After:**\r\n\r\nhttps://user-images.githubusercontent.com/28286961/130350393-4397e8c1-477c-4ea5-b2fd-15e372b49506.mp4\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":717262909,"public_id":51973,"url":"https://github.com/godotengine/godot/pull/51973","diff_url":"https://github.com/godotengine/godot/pull/51973.diff","patch_url":"https://github.com/godotengine/godot/pull/51973.patch","title":"Define a default minimum window size to workaround rendering issues","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-22T07:11:47Z","updated_at":"2021-08-22T07:12:05Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/37260.\n\nThe minimum window size can still be set to `Vector2(0, 0)` in a script if needed.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418914]},{"id":717262412,"public_id":51972,"url":"https://github.com/godotengine/godot/pull/51972","diff_url":"https://github.com/godotengine/godot/pull/51972.diff","patch_url":"https://github.com/godotengine/godot/pull/51972.patch","title":"Improve the editor window title for better usability (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-22T07:06:50Z","updated_at":"2021-08-22T07:07:41Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/47673. Tested locally against `3.x`.\r\n\r\n- Display the scene name, then the project name, then \"Godot Engine\".\r\n- Display the \"modified\" mark before anytihng else.\r\n\r\nBoth of these changes ensure important, project-specific elements can always be seen in the task bar which may truncate strings due to its low per-item width.\r\n\r\n- Use \"Unnamed Project\" if the project has no name (similar to the\r\n  Project Manager).","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":717237615,"public_id":51971,"url":"https://github.com/godotengine/godot/pull/51971","diff_url":"https://github.com/godotengine/godot/pull/51971.diff","patch_url":"https://github.com/godotengine/godot/pull/51971.patch","title":"Replace HTTP URLs with HTTPS for sites with HTTPS versions","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-22T02:23:18Z","updated_at":"2021-08-22T11:24:44Z","body":"This PR replaces HTTP URLs with HTTPS where applicable (only for sites with HTTPS versions, and also example/dummy links). I also fixed a few instances of outdated links, such as `http://continuousphysics.com/Bullet` -> `https://bulletphysics.org`.\r\n\r\nWhile making this PR I noticed that there are many URLs that are dead links. I left all of those alone, but at some point another PR should replace those with working links or with web.archive.org links.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,3112906,3112909,3609449,4038183,4417777,4418392,4418424,4418733,4418914]},{"id":717226961,"public_id":51969,"url":"https://github.com/godotengine/godot/pull/51969","diff_url":"https://github.com/godotengine/godot/pull/51969.diff","patch_url":"https://github.com/godotengine/godot/pull/51969.patch","title":"Document `Image.generate_mipmaps()` always running on the main thread","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-22T00:21:39Z","updated_at":"2021-08-22T00:22:06Z","body":"This closes https://github.com/godotengine/godot/issues/51966.","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":717223385,"public_id":51967,"url":"https://github.com/godotengine/godot/pull/51967","diff_url":"https://github.com/godotengine/godot/pull/51967.diff","patch_url":"https://github.com/godotengine/godot/pull/51967.patch","title":"Allow clearcoat, anisotropy and refraction in SpatialMaterial in GLES2","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-21T23:44:30Z","updated_at":"2021-08-22T01:35:45Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50331.\r\n\r\nThese SpatialMaterial features work just fine in GLES2, but they were not exposed in the inspector when GLES2 was used.\r\n\r\nAfter merging, remember to update [Differences between GLES2 and GLES3](https://docs.godotengine.org/en/stable/tutorials/misc/gles2_gles3_differences.html) in the documentation.\r\n\r\n**HTML5 export for testing:** https://0x0.st/-yhx.zip <sup>(link expires in December 2021)</sup>\r\nUnzip the archive, host a local web server from the extracted folder using something like [devd](https://github.com/cortesi/devd) then open the web server's homepage in a browser. I can confirm the HTML5 export looks as expected for anisotropy and refraction here.\r\n\r\n## Preview\r\n\r\n### Clearcoat\r\n\r\nThe difference is very subtle, but it's there. This is likely due to https://github.com/godotengine/godot/issues/14403. No screenshot for this one, as the difference is barely visible even when looking directly at the specular lobe on the wood material.\r\n\r\n### Anisotropy\r\n\r\n![Anisotropy](https://user-images.githubusercontent.com/180032/130337498-5e0d870a-aedb-4293-87f1-a97b4e13a6bc.png)\r\n\r\n### Refraction\r\n\r\n*Refractions will always be sharp regardless of material roughness. This is a GLES2 limitation, but the effect may still be enough for many use cases such as heat wave effects using particles.*\r\n\r\n![Refraction](https://user-images.githubusercontent.com/180032/130337499-5bc204ee-5f1a-4df3-87d7-b8e74d884660.png)\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":717211224,"public_id":51964,"url":"https://github.com/godotengine/godot/pull/51964","diff_url":"https://github.com/godotengine/godot/pull/51964.diff","patch_url":"https://github.com/godotengine/godot/pull/51964.patch","title":"[macOS] Request camera permission before session init.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-08-21T21:26:15Z","updated_at":"2021-08-21T21:34:14Z","body":"Without explicit permission request, camera will not init correctly on the first start (session creation fails when user confirmation dialog is displayed).\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3388402]},{"id":717210237,"public_id":51962,"url":"https://github.com/godotengine/godot/pull/51962","diff_url":"https://github.com/godotengine/godot/pull/51962.diff","patch_url":"https://github.com/godotengine/godot/pull/51962.patch","title":"Clamp EditorZoomWidget zoom","state":"open","is_draft":false,"authored_by":{"id":46327403,"user":"LoipesMas","avater":"https://avatars.githubusercontent.com/u/46327403?v=4","url":"https://github.com/LoipesMas"},"created_at":"2021-08-21T21:16:11Z","updated_at":"2021-08-21T22:14:24Z","body":"Clamp EditorZoomWidget::zoom.\r\nWithout that the zoom displayed does change past those values, but the actual zoom doesn't. \r\nI think that's what was mentioned in [this comment](https://github.com/godotengine/godot/pull/51551#issuecomment-897538686).\r\n\r\nThe defined constants are the same as for the actual zoom. They probably should be in one place, but I'll leave it to more involved members to decide what place should that be.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":717170870,"public_id":51954,"url":"https://github.com/godotengine/godot/pull/51954","diff_url":"https://github.com/godotengine/godot/pull/51954.diff","patch_url":"https://github.com/godotengine/godot/pull/51954.patch","title":"use bake method for NavigationMeshGenerator in Runtime","state":"open","is_draft":false,"authored_by":{"id":10273261,"user":"thoced","avater":"https://avatars.githubusercontent.com/u/10273261?v=4","url":"https://github.com/thoced"},"created_at":"2021-08-21T15:49:14Z","updated_at":"2021-08-21T22:05:34Z","body":"Use bake with NavigationMeshGenerator in the Runtime in Godot 3.x (Windows, Android)\r\n\r\nHello\r\n\r\nThe use of the Bake in **NavigationMeshGenerator** method did not work in runtime (because of EditorProgress which wants to display a message in runtime) but only in the editor (hint_editor). This fix allows you to generate navigationmesh directly in the runtime. This is very useful, in particular, **when creating procedural or random level.**\r\n\r\nNow, **NavigationMeshGenerator** can be used in the editor and in the Runtime for Plateform **Windows** and **Android**\r\n(with and without flag tool=no or tool=yes)\r\n\r\nThanks\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418376]},{"id":717156188,"public_id":51950,"url":"https://github.com/godotengine/godot/pull/51950","diff_url":"https://github.com/godotengine/godot/pull/51950.diff","patch_url":"https://github.com/godotengine/godot/pull/51950.patch","title":"Simple Godot 3.x -> Godot 4.0 project converter","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-08-21T13:57:54Z","updated_at":"2021-08-22T13:21:05Z","body":"Basic implementation of https://github.com/godotengine/godot-proposals/issues/387\r\n\r\nThis PR aims to create very basic project converter which could upgrade Godot 3.x project to Godot 4.0.\r\n\r\nFor now I recommend to use this bash script - https://gist.github.com/aaronfranke/79b424226475d277d0035b7835b09c5f because renames more functions/enums.\r\n\r\nIn opposite to 2.1 -> 3.0 converter(https://github.com/godotengine/godot/blob/2.1/editor/editor_export_godot3.cpp), it doesn't require to even run editor(but also doesn't modify xml files, properties etc.).\r\n\r\nIf you want, you can test it, because it now renames classes and some enums.\r\n\r\nIt is fast - 800 files which contains 40000 lines(50000 with empty lines) of code takes ~5 seconds(in future it will be slower, but still it will be fast).\r\n\r\nAlso during converting to console are printing stats\r\n```\r\nProcessed 791/802 file - Object/Physics2DDirectBodyState.gd was NOT changed.\r\nProcessed 792/802 file - Object/InputDefault.gd was NOT changed.\r\nProcessed 793/802 file - Object/_JSON.gd was NOT changed.\r\nProcessed 794/802 file - Object/_Engine.gd was NOT changed.\r\nProcessed 795/802 file - Object/BulletPhysicsDirectSpaceState.gd was NOT changed.\r\nProcessed 796/802 file - Object/JavaScript.gd was changed.\r\nProcessed 797/802 file - Object/IP.gd was NOT changed.\r\nProcessed 798/802 file - Object/Physics2DDirectSpaceState.gd was NOT changed.\r\nProcessed 799/802 file - Object/BulletPhysicsDirectBodyState.gd was NOT changed.\r\nProcessed 800/802 file - Object/Physics2DDirectBodyStateSW.gd was NOT changed.\r\nProcessed 801/802 file - Object/IP_Unix.gd was NOT changed.\r\nProcessed 802/802 file - Object/PhysicsDirectBodyState.gd was NOT changed.\r\nConverting ended - all files(802), converted files(319), not converted files(483).\r\n```\r\n\r\nTo use this just compile Godot and use this command `godot4 --convert-to-godot40`(current directory must contains Godot project)\r\n\r\nLooks that in current form can be used to convert projects, but still needs more data about renamed functions, enums etc.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518,4418914]},{"id":717126304,"public_id":51947,"url":"https://github.com/godotengine/godot/pull/51947","diff_url":"https://github.com/godotengine/godot/pull/51947.diff","patch_url":"https://github.com/godotengine/godot/pull/51947.patch","title":"[cppcheck] Remove some redundant assignments.","state":"open","is_draft":false,"authored_by":{"id":17506575,"user":"AnilBK","avater":"https://avatars.githubusercontent.com/u/17506575?v=4","url":"https://github.com/AnilBK"},"created_at":"2021-08-21T09:42:12Z","updated_at":"2021-08-21T13:38:05Z","body":"Remove **some** redundant Assignments from #51151.\r\n\r\nhttps://godotcppcheck.000webhostapp.com/ and just check `redundantAssignment`\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4038183,4418914]},{"id":717114808,"public_id":51945,"url":"https://github.com/godotengine/godot/pull/51945","diff_url":"https://github.com/godotengine/godot/pull/51945.diff","patch_url":"https://github.com/godotengine/godot/pull/51945.patch","title":"Curve2D/Curve3D: exact linear interpolation","state":"open","is_draft":false,"authored_by":{"id":554344,"user":"yjh0502","avater":"https://avatars.githubusercontent.com/u/554344?v=4","url":"https://github.com/yjh0502"},"created_at":"2021-08-21T08:08:53Z","updated_at":"2021-08-21T13:07:59Z","body":"While calculating interpolated points, intervals between two baked\npoints has been assummed to be `baked_interval`. The assumption could\ncause significant error in some extreme cases (for example #7088).\n\nTo improve accuracy, `baked_dist_cache` is introduced, which stores\ndistance from starting point for each baked points. `interpolate_baked`\nnow returns exact linear-interpolated position along baked points.\n\n<!--\nPull requests should always be made for the `master` branch first, as that's\nwhere development happens and the source of all future stable release branches.\n\nRelevant fixes are cherry-picked for stable branches as needed.\n\nDo not create a pull request for stable branches unless the change is already\navailable in the `master` branch and it cannot be easily cherry-picked.\nAlternatively, if the change is only relevant for that branch (e.g. rendering\nfixes for the 3.2 branch).\n-->\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":717096189,"public_id":51941,"url":"https://github.com/godotengine/godot/pull/51941","diff_url":"https://github.com/godotengine/godot/pull/51941.diff","patch_url":"https://github.com/godotengine/godot/pull/51941.patch","title":"assetlib: Fix race condition between CONFIG/SEARCH","state":"open","is_draft":false,"authored_by":{"id":554344,"user":"yjh0502","avater":"https://avatars.githubusercontent.com/u/554344?v=4","url":"https://github.com/yjh0502"},"created_at":"2021-08-21T05:33:33Z","updated_at":"2021-08-21T13:09:19Z","body":"assetlib fails to work when user tries to search before CONFIG finishes.\nThe patch fixes the problem by blocking user input while fetching\nCONFIG.\n\nrelated: #30642\n\n<!--\nPull requests should always be made for the `master` branch first, as that's\nwhere development happens and the source of all future stable release branches.\n\nRelevant fixes are cherry-picked for stable branches as needed.\n\nDo not create a pull request for stable branches unless the change is already\navailable in the `master` branch and it cannot be easily cherry-picked.\nAlternatively, if the change is only relevant for that branch (e.g. rendering\nfixes for the 3.2 branch).\n-->\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":391232995,"name":"topic:assetlib","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,4418537]},{"id":717075339,"public_id":51939,"url":"https://github.com/godotengine/godot/pull/51939","diff_url":"https://github.com/godotengine/godot/pull/51939.diff","patch_url":"https://github.com/godotengine/godot/pull/51939.patch","title":"Compute horizon SO threshold before transformation","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2021-08-21T02:28:59Z","updated_at":"2021-08-21T02:29:00Z","body":"Fixes: https://github.com/godotengine/godot/issues/51897 for 4.0\r\n\r\n4.0 version of https://github.com/godotengine/godot/pull/51927\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":717073724,"public_id":51938,"url":"https://github.com/godotengine/godot/pull/51938","diff_url":"https://github.com/godotengine/godot/pull/51938.diff","patch_url":"https://github.com/godotengine/godot/pull/51938.patch","title":"Properly clear cubemap filter state when texture array environment disabled","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2021-08-21T02:15:32Z","updated_at":"2021-08-21T05:48:20Z","body":"Fixes: https://github.com/godotengine/godot/issues/51924\r\n\r\nA state change in the cubemap filtering shader was accidentally left by the sky filtering code which infected the reflection probe filtering code. This PR properly resets the state of the cubemap filtering shader once the sky code finishes with it. ","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":717062850,"public_id":51935,"url":"https://github.com/godotengine/godot/pull/51935","diff_url":"https://github.com/godotengine/godot/pull/51935.diff","patch_url":"https://github.com/godotengine/godot/pull/51935.patch","title":"[3.x] Window transparency support on Android","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-21T00:57:14Z","updated_at":"2021-08-21T16:40:32Z","body":"Implements per-pixel transparency feature on Android.\r\nAllows plugins to do specific rendering and render godot UI on top (useful for camera support with drawing on top).\r\n\r\nIn order to do that, the plugin itself needs to move its own frame behind the main godot frame with something like that in java:\r\n```\r\nViewGroup parentView = (ViewGroup)pluginFrame.getParent();\r\nparentView.removeView(pluginFrame);\r\nparentView.addView(pluginFrame, 0);\r\n```\r\n\r\n3.x only for now, because I haven't looked into how to do it with Vulkan yet.","target_branch":"3.x","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":716926760,"public_id":51928,"url":"https://github.com/godotengine/godot/pull/51928","diff_url":"https://github.com/godotengine/godot/pull/51928.diff","patch_url":"https://github.com/godotengine/godot/pull/51928.patch","title":"Implement Extension Loader","state":"open","is_draft":false,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2021-08-20T18:35:44Z","updated_at":"2021-08-21T10:33:22Z","body":"* Extensions are now scanned and loaded on demand.\r\n* Extensions found are cached into a file that is used to load them (which is also exported).\r\n* Editor will ask to restart when an extension requires core functionality.\r\n* Editor will attempt to load extensions always before importing or loading scenes. This ensures extensions can register the relevant types.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":716915637,"public_id":51927,"url":"https://github.com/godotengine/godot/pull/51927","diff_url":"https://github.com/godotengine/godot/pull/51927.diff","patch_url":"https://github.com/godotengine/godot/pull/51927.patch","title":"Fix issue #51897 (horizon occlusion causing black blob), fix ver. SP1","state":"open","is_draft":false,"authored_by":{"id":22304167,"user":"20kdc","avater":"https://avatars.githubusercontent.com/u/22304167?v=4","url":"https://github.com/20kdc"},"created_at":"2021-08-20T18:13:01Z","updated_at":"2021-08-20T19:00:24Z","body":"See #51897 for further details.\r\nI am relying on @clayjohn 's testing of the issue and report that this solution worked there.\r\nThis is with the comments referencing the issue removed as per request.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":716859654,"public_id":51925,"url":"https://github.com/godotengine/godot/pull/51925","diff_url":"https://github.com/godotengine/godot/pull/51925.diff","patch_url":"https://github.com/godotengine/godot/pull/51925.patch","title":"Viewports: Allow using parent world_2d as world_2d","state":"open","is_draft":false,"authored_by":{"id":67792882,"user":"BimDav","avater":"https://avatars.githubusercontent.com/u/67792882?v=4","url":"https://github.com/BimDav"},"created_at":"2021-08-20T16:25:46Z","updated_at":"2021-08-20T22:15:21Z","body":"As discussed in https://github.com/godotengine/godot/issues/31856\r\nEnables instanced viewports to render views of the main world.\r\nEnables for 2D scenes the same structure as in 3D, for example: https://github.com/godotengine/godot-demo-projects/tree/master/viewport/dynamic_split_screen\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":716718162,"public_id":51920,"url":"https://github.com/godotengine/godot/pull/51920","diff_url":"https://github.com/godotengine/godot/pull/51920.diff","patch_url":"https://github.com/godotengine/godot/pull/51920.patch","title":"Add missing SNAME macro optimization for StringName in some functions","state":"open","is_draft":false,"authored_by":{"id":3649998,"user":"jmb462","avater":"https://avatars.githubusercontent.com/u/3649998?v=4","url":"https://github.com/jmb462"},"created_at":"2021-08-20T12:59:44Z","updated_at":"2021-08-20T18:20:58Z","body":"In commit 6631f66c2a9d54dc80d57df60376c84ce1252d08 , reduz changed all theme , signal emission and call_deferred usages to use the new SNAME optimization for StringName.\r\n\r\nI find that some occurrences were missing for these usages.\r\nI've added the SNAME macro to these occurrences.\r\n\r\n\r\nThere's a lot of other functions that use StringName parameters ( especially Object.connect() and disconnect() which are widely used). Should macro usage be added to all StringName everywhere ?","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417819,4418550,4418605,4418726,4418733]},{"id":716639101,"public_id":51912,"url":"https://github.com/godotengine/godot/pull/51912","diff_url":"https://github.com/godotengine/godot/pull/51912.diff","patch_url":"https://github.com/godotengine/godot/pull/51912.patch","title":"Improvements for SyntaxHighlighters","state":"open","is_draft":false,"authored_by":{"id":6584330,"user":"Paulb23","avater":"https://avatars.githubusercontent.com/u/6584330?v=4","url":"https://github.com/Paulb23"},"created_at":"2021-08-20T10:52:11Z","updated_at":"2021-08-20T11:33:13Z","body":"If a function was the first item in a lamba e.g `func(): print(\"Hello, World!\")` the `p` in `print` was highlighted as a function definition, this has been fixed.\r\n\r\nPreviously if your signal definition had arguments, it was highlighted as a function. Now all signals are highlighted as members.\r\n\r\nQuoted and non-quoted node-paths now have the same colour.\r\n\r\nEscape chars are now highlighted in strings, this uses the symbol colour.\r\n\r\ncloses #33886\r\ncloses #33316\r\ncloses godotengine/godot-proposals/issues/3104","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":716502832,"public_id":51908,"url":"https://github.com/godotengine/godot/pull/51908","diff_url":"https://github.com/godotengine/godot/pull/51908.diff","patch_url":"https://github.com/godotengine/godot/pull/51908.patch","title":"Make FontData importable resource. Add multi-channel SDF font rendering.","state":"open","is_draft":true,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-08-20T07:16:42Z","updated_at":"2021-08-20T13:51:49Z","body":"Make `FontData` importable resource.\r\nAdd multi-channel(+ true) SDF font texture generation and rendering support.\r\nAdd `FontData` import plugins, font texture cache pre-generation and loading.\r\n\r\nSupersede #44772\r\n\r\nhttps://user-images.githubusercontent.com/7645683/130195127-d13f13b9-0ac5-4709-873f-073353b1fa59.mov\r\n\r\n- M(T)SDF is updated to v1.9.1, and modified to be multithreaded (using Godot `ThreadWorkPool` instead of OpenMP), it's still too slow to use without pre-rendering.\r\n- No custom file formats, `FontData` is stored as normal resource.\r\n- It's now possible to make custom importers for other bitmap font formats, or construct `FontData` from scripts.\r\n- Included importers (all import to the same `FontData` resource):\r\n     - Dynamic font importer (with MSDF support). ![DynMSDFImport](https://user-images.githubusercontent.com/7645683/130194431-75170342-f999-47f2-aba5-5b883736709b.png) ![AdvImport](https://user-images.githubusercontent.com/7645683/130194525-fc3d739e-703a-478a-870f-d91b09294ff7.png)\r\n     - BMFont bitmap font importer.\r\n     - Image to font (included as the example for other font type importers). ![ImageImport](https://user-images.githubusercontent.com/7645683/130194450-a1b43a3b-f086-413d-b419-f0ffc0b513c1.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":716366289,"public_id":51906,"url":"https://github.com/godotengine/godot/pull/51906","diff_url":"https://github.com/godotengine/godot/pull/51906.diff","patch_url":"https://github.com/godotengine/godot/pull/51906.patch","title":"Fix tooltips don't appear for PopupMenus","state":"open","is_draft":false,"authored_by":{"id":12533045,"user":"requizm","avater":"https://avatars.githubusercontent.com/u/12533045?v=4","url":"https://github.com/requizm"},"created_at":"2021-08-20T01:21:34Z","updated_at":"2021-08-20T20:15:22Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixed #49077\r\n\r\nI can't say that the change I made on viewport.cpp is very good, but the system here needs to change. Read this for explanation: https://github.com/godotengine/godot/issues/49077#issuecomment-902343554\r\n\r\nhttps://user-images.githubusercontent.com/12533045/130163857-9c2c6ba9-3594-4105-8a78-c409fe2645ef.mp4","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":716350820,"public_id":51904,"url":"https://github.com/godotengine/godot/pull/51904","diff_url":"https://github.com/godotengine/godot/pull/51904.diff","patch_url":"https://github.com/godotengine/godot/pull/51904.patch","title":"Port recent move_and_slide fixes to 3D","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-20T00:34:24Z","updated_at":"2021-08-21T10:06:05Z","body":"Improves stop on slopes, sliding on walls and gravity handling by porting existing changes from `CharacterBody2D` to `CharacterBody3D` (made by @fabriceci in #51027 and subsequent PRs).\r\n\r\nAlthough this PR doesn't add the new CharacterBody features and API changes, just the behavior fixes.\r\n\r\nThese changes are also part of #51896, but if possible it's better to have them in a separate PR to keep track of general `move_and_slide` improvements independently from ray shape fixes.\r\n\r\nFixes #34117 (although it was already closed with a script workaround)\r\nPartly addresses #51874 (the character can't climb a wall anymore)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777,4418726]},{"id":716199821,"public_id":51896,"url":"https://github.com/godotengine/godot/pull/51896","diff_url":"https://github.com/godotengine/godot/pull/51896.diff","patch_url":"https://github.com/godotengine/godot/pull/51896.patch","title":"Refactor RayShape and rename to SeparationRayShape","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-19T19:25:43Z","updated_at":"2021-08-21T12:20:08Z","body":"Ray shapes were reverted in #51490, but they can be useful in some cases so this PR is putting them back, while refactoring the code to fix some issues and make the code easier to maintain.\r\n\r\nFixes #34098\r\nFixes #34663\r\n**Edit:** Closes godotengine/godot-proposals#711\r\n\r\nI've split in separate commits for clarity, here are the detailed changes for all of them:\r\n\r\n- **Restore RayShape as a regular shape type**\r\n\r\nPartial revert from previously removing ray shapes completely, added back as a shape type but without the specific character controller code.\r\n\r\n- **Fix RayShape collision detection**\r\n\r\nOne-way collision is disabled for both rigid bodies and character bodies.\r\n\r\nKinematic margin is now applied to ray shapes to help getting consistent results in slopes and flat surfaces.\r\n\r\nConvex shapes don't return inverted normals when a segment test starts inside (raycasting will be made consistent in a separate patch).\r\n\r\nRay shapes also discard contacts when fully contained inside a shape and when the contact direction is inverted, so the behavior is consistent with all shape types. Now they always separate only when intersecting the top of a shape (for downward rays).\r\n\r\n- **Fix CharacterBody motion with RayShape**\r\n\r\nMake separation ray shapes work properly in move_and_slide, wihtout the specific code in CharacterBody like before.\r\n\r\nNow most of the logic is handled inside the physics server. The only thing that's needed is to use ray shapes only for recovery and ignore them when performing the motion itself (unless we're snapping or slips on slope is on).\r\n\r\nAlso ported some recent CharacterBody fixes from 2D to 3D to make things consistent and fix certain cases with ray shapes that failed.\r\n\r\n- **Rename slips_on_slope to slide_on_slope**\r\n\r\nAlso added some precision to the documentation.\r\n\r\n- **Rename RayShape to SeparationRayShape**\r\n\r\nMakes it clearer that it's used for special cases when picking a collision shape.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4417777,4418424,4418542,4418550,4418718,4418726]},{"id":716180886,"public_id":51895,"url":"https://github.com/godotengine/godot/pull/51895","diff_url":"https://github.com/godotengine/godot/pull/51895.diff","patch_url":"https://github.com/godotengine/godot/pull/51895.patch","title":"Add preliminary support for subprojects","state":"open","is_draft":true,"authored_by":{"id":17108460,"user":"Xrayez","avater":"https://avatars.githubusercontent.com/u/17108460?v=4","url":"https://github.com/Xrayez"},"created_at":"2021-08-19T18:56:07Z","updated_at":"2021-08-19T19:14:27Z","body":"Solves part of godotengine/godot-proposals#1205. Originally presented in https://github.com/godotengine/godot-proposals/issues/1205#issuecomment-758661586 in 3.2, but rebased to 3.4 now due to conflicts.\r\n\r\nThis PR is not meant to be merged of course, but I'd like to track this solution because I've been using it successfully in my project, and other people expressed some interest as well. This PR will be eventually closed once a proper solution for godotengine/godot-proposals#1205 is out by @reduz (maybe in Godot 4.1?). Feedback welcome, of course!\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4038183,4418914]},{"id":715917125,"public_id":51886,"url":"https://github.com/godotengine/godot/pull/51886","diff_url":"https://github.com/godotengine/godot/pull/51886.diff","patch_url":"https://github.com/godotengine/godot/pull/51886.patch","title":"Fix ItemList layout (+EditorFileDialog)","state":"open","is_draft":false,"authored_by":{"id":50084500,"user":"Geometror","avater":"https://avatars.githubusercontent.com/u/50084500?v=4","url":"https://github.com/Geometror"},"created_at":"2021-08-19T13:05:19Z","updated_at":"2021-08-20T22:41:27Z","body":"This PR aims to fix and improve the layout of the ItemList control when used with several columns, most noticeable in the EditorFileDialog:\r\n\r\nCURRENT MASTER:\r\n![grafik](https://user-images.githubusercontent.com/50084500/130072252-6b2705e6-bdf9-40ed-9bf6-6ed854404d40.png)\r\n![grafik](https://user-images.githubusercontent.com/50084500/130072575-bfb90998-d93f-4ec9-94ed-c81fcd93452e.png)\r\n\r\nTHIS PR:\r\n![grafik](https://user-images.githubusercontent.com/50084500/130072677-01e4ae24-2406-4713-ac51-09e9f8296f36.png)\r\n![grafik](https://user-images.githubusercontent.com/50084500/130072634-92cae8bd-a940-44bf-85ac-0f4fa82fed16.png)\r\n\r\n- Fixed ItemList's layout\r\n  - Fixed TextParagraph get_size() calculation\r\n  - Fixed ignored ItemList max_lines_visible property\r\n- Added text overrrun property to ItemList\r\n- Enabled ellipsis text overrun trimming in EditorFileDialog (in 3.x filenames are cut off, so you didn't notice immediately that a the filename doesn't fit in two lines)\r\n- Fixed clipping in TextParagraph where at some widths the first character was cut off\r\n    - Removed ignore trailing spaces for now in shaped_text_get_line_breaks() since it needs to be handled in many textserver other methods to work properly (possibly done in a future PR)\r\n- Renamed a variable in TextParagraph for consistency/to be more descriptive\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":715905276,"public_id":51884,"url":"https://github.com/godotengine/godot/pull/51884","diff_url":"https://github.com/godotengine/godot/pull/51884.diff","patch_url":"https://github.com/godotengine/godot/pull/51884.patch","title":"Fix visible_characters/percent_visible working incorrectly in `RichTextLabel`","state":"open","is_draft":false,"authored_by":{"id":12533045,"user":"requizm","avater":"https://avatars.githubusercontent.com/u/12533045?v=4","url":"https://github.com/requizm"},"created_at":"2021-08-19T12:49:55Z","updated_at":"2021-08-20T23:54:49Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixed #49189\r\n\r\n\r\nhttps://user-images.githubusercontent.com/12533045/130085081-db7e0fbd-4492-4931-9449-0e7ba87d7fc6.mp4","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":715633678,"public_id":51873,"url":"https://github.com/godotengine/godot/pull/51873","diff_url":"https://github.com/godotengine/godot/pull/51873.diff","patch_url":"https://github.com/godotengine/godot/pull/51873.patch","title":"Fix incorrect checking of uniform set to prevent error spam (2)","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-08-19T06:13:00Z","updated_at":"2021-08-19T06:17:45Z","body":"Continuation of https://github.com/godotengine/godot/pull/51309. Added validation checks + fix a new detected case of spam in particles shader\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":715541849,"public_id":51870,"url":"https://github.com/godotengine/godot/pull/51870","diff_url":"https://github.com/godotengine/godot/pull/51870.diff","patch_url":"https://github.com/godotengine/godot/pull/51870.patch","title":"Optionally render 3D content at scaled resolution","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-08-19T02:25:52Z","updated_at":"2021-08-22T09:33:15Z","body":"This PR adds a tickbox to viewports that instructs Godot to render 3D content of a viewport in a scaled resolution:\r\n![image](https://user-images.githubusercontent.com/1945449/130324304-f7b43423-31e4-4a5b-b9b9-8e4a0f8639c6.png)\r\n\r\nThere is also a project setting that defines the default behavior (and thus lets you set the main viewport):\r\n![image](https://user-images.githubusercontent.com/1945449/130324294-a83e07d7-1d36-45e5-ab3f-ce0be412de1e.png)\r\n\r\nOr alternatively you can obviously do this in code:\r\n```\r\nget_viewport().scale_3d = Viewport.SCALE_3D_75_PERCENT\r\n```\r\nNote that the settings are ignored in the editor, the editor always renders at normal resolution.\r\n\r\n![image](https://user-images.githubusercontent.com/1945449/129997590-be62aa8d-a32e-4fc3-940c-4cfc81e2617c.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418914]},{"id":715493790,"public_id":51867,"url":"https://github.com/godotengine/godot/pull/51867","diff_url":"https://github.com/godotengine/godot/pull/51867.diff","patch_url":"https://github.com/godotengine/godot/pull/51867.patch","title":"Fix bad category name alignment in Inspector","state":"open","is_draft":false,"authored_by":{"id":3649998,"user":"jmb462","avater":"https://avatars.githubusercontent.com/u/3649998?v=4","url":"https://github.com/jmb462"},"created_at":"2021-08-19T00:06:50Z","updated_at":"2021-08-19T01:16:44Z","body":"Fix #51774 \r\n\r\n### Issue : \r\n\r\nName of the first inspector category is misaligned. \r\n\r\n### Fix proposal :\r\n\r\nParent main_vbox is notified with NOTIFICATION_SORT_CHILDREN to have correct alignment while adding category vbox as child.\r\n\r\n### Before : \r\n\r\n![image](https://user-images.githubusercontent.com/3649998/129987398-ff2103e8-1f65-4425-9639-c4437b3a07c5.png)\r\n![image](https://user-images.githubusercontent.com/3649998/129987406-115232c5-6936-4aad-8e6a-c9fa4b181435.png)\r\n\r\n### After : \r\n\r\n![after1](https://user-images.githubusercontent.com/3649998/129987432-0cfd9fdd-6651-4023-85e9-aa4b2c81e146.jpg)\r\n![after2](https://user-images.githubusercontent.com/3649998/129987436-a0d58db2-8d07-4e82-96e1-0e728254cf6c.jpg)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":715478829,"public_id":51864,"url":"https://github.com/godotengine/godot/pull/51864","diff_url":"https://github.com/godotengine/godot/pull/51864.diff","patch_url":"https://github.com/godotengine/godot/pull/51864.patch","title":"Fix String::num_real and test cases when compiling with doubles","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-18T23:21:20Z","updated_at":"2021-08-18T23:26:44Z","body":"This PR does three things:\r\n\r\n* Fix a bug in String::num_real that causes trailing zeros to appear. I discovered this problem when testing float=64, but I was able to create a test case that reproduces the problem with float=32 on the current master:\r\n\r\n```cpp\r\nCHECK_MESSAGE(String::num_real(3.1415f) == \"3.1415\", \"Prints only reliable digits of 32-bit float when real_t = float.\");\r\n```\r\n\r\n```\r\ntests/test_string.h:372: ERROR: CHECK( String::num_real(3.1415f) == \"3.1415\" ) is NOT correct!\r\n  values: CHECK( \"3.141500\" == 3.1415 )\r\n  logged: Prints only reliable digits of 32-bit float when real_t = float.\r\n```\r\n\r\n* Fix a bug in String::num_real when compiling with float=64 that causes integer overflows. The problem is that `int` only gives us 9 decimal digits, but we need at least 14 for doubles. I switched type to `int64_t` to fix the bug. Note that this will need to be changed to int128 if we ever decide to add float=128 as an option.\r\n\r\n```\r\ncore/string/ustring.cpp:1673:22: runtime error: signed integer overflow: 999999999 * 10 cannot be represented in type 'int'\r\ncore/string/ustring.cpp:1672:34: runtime error: 1.41593e+10 is outside the range of representable values of type 'int'\r\ncore/string/ustring.cpp:1672:22: runtime error: signed integer overflow: 1415929999 * 10 cannot be represented in type 'int'\r\ncore/string/ustring.cpp:1676:29: runtime error: 1.41593e+10 is outside the range of representable values of type 'int'\r\ncore/string/ustring.cpp:1691:19: runtime error: 1.41593e+14 is outside the range of representable values of type 'int'\r\n```\r\n\r\n* Add several more test cases for String::num_real with messages.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914,4418923]},{"id":715442281,"public_id":51863,"url":"https://github.com/godotengine/godot/pull/51863","diff_url":"https://github.com/godotengine/godot/pull/51863.diff","patch_url":"https://github.com/godotengine/godot/pull/51863.patch","title":"Improve shader editor templates to be more descriptive","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-18T21:56:22Z","updated_at":"2021-08-19T05:33:34Z","body":"This makes the shader editor more self-explanatory out of the box.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417819]},{"id":715403811,"public_id":51861,"url":"https://github.com/godotengine/godot/pull/51861","diff_url":"https://github.com/godotengine/godot/pull/51861.diff","patch_url":"https://github.com/godotengine/godot/pull/51861.patch","title":"Check for more bugs in CI to reduce the amount of regressions","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-08-18T20:44:07Z","updated_at":"2021-08-20T14:45:22Z","body":"Added more CI checks(with examples) to prevent regressions like - https://github.com/godotengine/godot/issues/51764 or \r\n\r\nAlso fixes \r\n```\r\ndrivers/unix/file_access_unix.cpp:268:2: runtime error: null pointer passed as argument 1, which is declared to never be null\r\n```\r\n(needed to pass new CI) - https://github.com/godotengine/godot/runs/3365003107#step:12:14\r\n\r\n~For now CI probably will fail due this errors(I added simple workaround, but probably this is not right fix)~\r\nFor now checking for vptr(error below) is disabled - this waiting for fix in https://github.com/godotengine/godot/issues/51888, but probably better is to do it in next PR.\r\n```\r\n servers/rendering/renderer_scene_cull.cpp:1299:94: runtime error: downcast of address 0x607000c4d2a0 which does not point to an object of type 'InstanceGeometryData'\r\n0x607000c4d2a0: note: object is of type 'RendererSceneCull::InstanceVisibilityNotifierData'\r\n be be be be  90 b5 c1 24 00 00 00 00  00 be be be be be be be  00 00 00 00 00 00 00 00  01 00 00 00\r\n              ^~~~~~~~~~~~~~~~~~~~~~~\r\n              vptr for 'RendererSceneCull::InstanceVisibilityNotifierData'\r\n```\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418914]},{"id":715349424,"public_id":51853,"url":"https://github.com/godotengine/godot/pull/51853","diff_url":"https://github.com/godotengine/godot/pull/51853.diff","patch_url":"https://github.com/godotengine/godot/pull/51853.patch","title":"Add simple explanation messages to some errors","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-08-18T19:14:01Z","updated_at":"2021-08-22T02:34:27Z","body":"This helps to find what exactly is wrong with bad code.\r\n\r\n\r\nexample from https://github.com/godotengine/godot/issues/50471#issuecomment-880581824\r\n\r\nBefore\r\n```\r\nERROR: Condition \"!method\" is true. Returning: false\r\n   at: is_builtin_method_vararg (core/variant/variant_call.cpp:1125)\r\n```\r\n\r\nAfter\r\n```\r\nERROR: Cannot find \"call_me\" method in \"Nil\" class.\r\n   at: is_builtin_method_vararg (core/variant/variant_call.cpp:1161)\r\n```\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,3112906,3609449,4038183,4418726,4418914]},{"id":715344652,"public_id":51851,"url":"https://github.com/godotengine/godot/pull/51851","diff_url":"https://github.com/godotengine/godot/pull/51851.diff","patch_url":"https://github.com/godotengine/godot/pull/51851.patch","title":"Fixed context menu does not disappear on single window mode","state":"open","is_draft":false,"authored_by":{"id":12533045,"user":"requizm","avater":"https://avatars.githubusercontent.com/u/12533045?v=4","url":"https://github.com/requizm"},"created_at":"2021-08-18T19:06:35Z","updated_at":"2021-08-20T20:09:55Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixed #50309 \r\n\r\nClicking node and scene tab\r\n![clicking_right_click_1](https://user-images.githubusercontent.com/12533045/129956787-7b0a490c-1998-492a-887e-9540da06dd10.gif)\r\n\r\n\r\nClicking nodes\r\n![clicking_right_click_2](https://user-images.githubusercontent.com/12533045/129956870-5d0befd5-6169-4acc-a80b-6d31ee37f171.gif)\r\n\r\n\r\nAs you can see in the 2nd gif, the context menu does not open when clicking the nodes repeatedly. First it closes, then it needs to be opened. I solved most of the problem but I'm open to suggestions. This is what happens too when single window mode is disabled.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":715198453,"public_id":51844,"url":"https://github.com/godotengine/godot/pull/51844","diff_url":"https://github.com/godotengine/godot/pull/51844.diff","patch_url":"https://github.com/godotengine/godot/pull/51844.patch","title":"Add `disable_alpha` render mode to shaders (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-18T15:26:13Z","updated_at":"2021-08-22T05:41:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/51711.\r\n\r\nThis can be used by multipass shaders to write to a texture's alpha channel without causing the material to become transparent.\r\n\r\n## Preview\r\n\r\n### Default render mode (GLES3)\r\n\r\n![2021-08-16_05 08 20](https://user-images.githubusercontent.com/180032/129926445-13211e10-3744-4b2d-89ea-bc68277f9628.png)\r\n\r\n### `disable_alpha` render mode (GLES3)\r\n\r\n![2021-08-16_05 08 29](https://user-images.githubusercontent.com/180032/129926447-2c3c2f5f-8b3a-4b00-9fee-272b205f9a2d.png)\r\n\r\n### Default render mode (GLES2)\r\n\r\n![2021-08-16_05 09 06](https://user-images.githubusercontent.com/180032/129926450-b5872491-5c8d-40d8-8d25-3c38994dc0c9.png)\r\n\r\n### `disable_alpha` render mode (GLES2)\r\n\r\n![2021-08-16_05 09 15](https://user-images.githubusercontent.com/180032/129926451-590cba50-8adc-4b00-a8eb-d84c2edd3056.png)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":715134598,"public_id":51840,"url":"https://github.com/godotengine/godot/pull/51840","diff_url":"https://github.com/godotengine/godot/pull/51840.diff","patch_url":"https://github.com/godotengine/godot/pull/51840.patch","title":"Add an option to preview the 3D scene as a background to the 2D editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-18T14:28:55Z","updated_at":"2021-08-18T14:29:25Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/51817.\r\n\r\nThis can be used while designing a HUD to make sure it's readable on top of a 3D scene.\r\n\r\nUnlike in `master`, I couldn't get MSAA/FXAA to work.\r\n\r\n## Preview\r\n\r\nhttps://user-images.githubusercontent.com/180032/129916642-98ef8f04-79c7-4aba-b86b-ebbea476549b.mp4","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":715035895,"public_id":51835,"url":"https://github.com/godotengine/godot/pull/51835","diff_url":"https://github.com/godotengine/godot/pull/51835.diff","patch_url":"https://github.com/godotengine/godot/pull/51835.patch","title":"C# Array<String> Export Support Enum(String)","state":"open","is_draft":false,"authored_by":{"id":14800320,"user":"magian1127","avater":"https://avatars.githubusercontent.com/u/14800320?v=4","url":"https://github.com/magian1127"},"created_at":"2021-08-18T12:31:54Z","updated_at":"2021-08-20T16:54:07Z","body":"![()Y$(4G5$@ {F3RSM~{O2 H](https://user-images.githubusercontent.com/14800320/129895986-0414a624-0c42-4bcf-8582-5a624e2c716f.png)\r\n\r\n![asdasd](https://user-images.githubusercontent.com/14800320/129898607-4b3f4567-3ea0-471c-897d-7fac680956ed.png)\r\n\r\nAfter searching for a long time and not finding anything relevant, I modified it myself.\r\nSo far I have tested it without problems. Testing in 3.x\r\n搜索很久没找到相关的, 我就自己修改了一下.\r\n目前测试下来没有遇到问题. 测试于3.x","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":714948836,"public_id":51833,"url":"https://github.com/godotengine/godot/pull/51833","diff_url":"https://github.com/godotengine/godot/pull/51833.diff","patch_url":"https://github.com/godotengine/godot/pull/51833.patch","title":"Fixed crash when removing some shortcuts from Editor Settings","state":"open","is_draft":false,"authored_by":{"id":12533045,"user":"requizm","avater":"https://avatars.githubusercontent.com/u/12533045?v=4","url":"https://github.com/requizm"},"created_at":"2021-08-18T10:25:56Z","updated_at":"2021-08-20T20:10:58Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nRefactor of #51813\r\nFixes: #51794","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":714880973,"public_id":51831,"url":"https://github.com/godotengine/godot/pull/51831","diff_url":"https://github.com/godotengine/godot/pull/51831.diff","patch_url":"https://github.com/godotengine/godot/pull/51831.patch","title":"Expose connection hot zones in `GraphNode`","state":"open","is_draft":false,"authored_by":{"id":15977859,"user":"mechPenSketch","avater":"https://avatars.githubusercontent.com/u/15977859?v=4","url":"https://github.com/mechPenSketch"},"created_at":"2021-08-18T08:57:56Z","updated_at":"2021-08-20T06:59:07Z","body":"In my [previous PR](https://github.com/godotengine/godot/pull/51271), I messed up trying to revert an accidental merge resulting in reviewing request in much more unrelated areas.\r\n\r\nHopeful, this gets added to the upcoming version.\r\n\r\nAlso, in hindsight, I probably should have squashed my commits early rather than until I've finalized all my changes.\r\n\r\n_Closes https://github.com/godotengine/godot-proposals/issues/3009_","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":714670466,"public_id":51821,"url":"https://github.com/godotengine/godot/pull/51821","diff_url":"https://github.com/godotengine/godot/pull/51821.diff","patch_url":"https://github.com/godotengine/godot/pull/51821.patch","title":"Add comments at the top of each built-in shader to ease debugging","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-18T01:15:49Z","updated_at":"2021-08-18T22:46:57Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50159, and possibly supersedes https://github.com/godotengine/godot/pull/51557. cc @Chaosus\r\n\r\nWhen a shader error is printed about a built-in shader, the origin of the shader will now be recognizable immediately by looking at the top of the printed shader code.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418550,4418733]},{"id":714662399,"public_id":51819,"url":"https://github.com/godotengine/godot/pull/51819","diff_url":"https://github.com/godotengine/godot/pull/51819.diff","patch_url":"https://github.com/godotengine/godot/pull/51819.patch","title":"Changes to allow broader navigation servers","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2021-08-18T00:52:38Z","updated_at":"2021-08-18T01:21:03Z","body":"I'm working on my own implementation of the navigation server, and some features were missing.\r\n\r\n- There is no way to know which agent is submitting the get path request\r\n\r\n    This allows making custom behavior per agent. In my implementation, I use this to have different behavior depending on the size of the agent.\r\n\r\n- There is no way to use resources that aren't NavigationMesh\r\n\r\n    My implementation uses a grid-based pathfinding algorithm, so the NavigationMesh resource is not very helpful to me.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418376,4418718,4418726]},{"id":714647360,"public_id":51818,"url":"https://github.com/godotengine/godot/pull/51818","diff_url":"https://github.com/godotengine/godot/pull/51818.diff","patch_url":"https://github.com/godotengine/godot/pull/51818.patch","title":"Gdscript2 enum fixes","state":"open","is_draft":false,"authored_by":{"id":1776044,"user":"MarianoGnu","avater":"https://avatars.githubusercontent.com/u/1776044?v=4","url":"https://github.com/MarianoGnu"},"created_at":"2021-08-18T00:21:43Z","updated_at":"2021-08-18T12:45:01Z","body":"This PR aims to fix many issues with ENUMs reported:\r\ngodotengine/godot#45558\r\ngodotengine/godot#49357\r\ngodotengine/godot#50293\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":714641627,"public_id":51817,"url":"https://github.com/godotengine/godot/pull/51817","diff_url":"https://github.com/godotengine/godot/pull/51817.diff","patch_url":"https://github.com/godotengine/godot/pull/51817.patch","title":"Add an option to preview the 3D scene as a background to the 2D editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-18T00:08:35Z","updated_at":"2021-08-18T14:29:38Z","body":"`master` version of https://github.com/godotengine/godot/pull/51840.\r\n\r\nThis can be used while designing a HUD to make sure it's readable on top of a 3D scene. This feature was \"intentionally\" available until https://github.com/godotengine/godot/pull/50007, but exposing it as an option that's disabled by default makes more sense.\r\n\r\nThe main limitation right now is that you can't move the camera by switching to the 3D editor then going back to the 2D editor. Instead, its position will be set based on the initial camera position when the scene was opened.\r\n\r\n## Preview\r\n\r\n***Note:** MSAA/FXAA/debanding support for the 3D preview was added after this video was recorded. It will be synchronized with the project settings, like in the 3D editor.*\r\n\r\nhttps://user-images.githubusercontent.com/180032/129816340-750b2444-f91d-4c11-a540-68f88c077ffc.mp4","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":714593622,"public_id":51815,"url":"https://github.com/godotengine/godot/pull/51815","diff_url":"https://github.com/godotengine/godot/pull/51815.diff","patch_url":"https://github.com/godotengine/godot/pull/51815.patch","title":"[WIP] [3.x] Add full support for Android scoped storage.","state":"open","is_draft":false,"authored_by":{"id":914968,"user":"m4gr3d","avater":"https://avatars.githubusercontent.com/u/914968?v=4","url":"https://github.com/m4gr3d"},"created_at":"2021-08-17T22:00:58Z","updated_at":"2021-08-18T00:34:44Z","body":"This was done by refactoring directory and file access handling for the Android platform so that any general filesystem access type go through the Android layer.\r\n\r\nThis allows us to validate whether the access is unrestricted, or whether it falls under scoped storage and thus act appropriately.\r\n\r\nFix #38913, fix #45467\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112909,4418914]},{"id":714554600,"public_id":51808,"url":"https://github.com/godotengine/godot/pull/51808","diff_url":"https://github.com/godotengine/godot/pull/51808.diff","patch_url":"https://github.com/godotengine/godot/pull/51808.patch","title":"Add word boundary search filter to Create Dialog","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2021-08-17T20:45:56Z","updated_at":"2021-08-18T16:53:42Z","body":"Fixes #46427\r\nFixes #51632\r\n\r\nImplements a substring + word boundary filter to replace the subsequence filter in the Create Dialog. This change lowers the number of spurious results when typing a query to select a particular node.\r\n\r\n#### About the issue\r\n\r\nA glaring example of the issues with just subsequence matching is the query \"line\", which currently matches Line2D, but also likely irrelevant types like MultiMeshInstance and CollisionShape3D. On the other hand, without this filter, we can not quickly select a 2D or 3D node without typing the entire name of the type. \r\n\r\nOne user suggested looking into word boundary matching to solve the issue. The result of a word boundary filter is a subset of the results from a subsequence filter, as it only matches on word boundary characters (in this case: capital letters and digits). Together with a substring filter, this reduces the number of unwanted results, and improves the search ranking. Now, the filter is limited in the sense that you have to either use the word boundary characters, or use regular substring matching. I wasn't sure if being able to combine these in one query was necessary and as it can add back spurious results I decided not to implement it yet. See below for more examples and maybe try it out and see.\r\n\r\n#### Notes\r\n\r\nAn issue preventing the user from instantiating the Node node from the history list was fixed. I have also taken the opportunity to  refactor the code a bit more, which also allowed me to write tests for the new scoring function. In order to extract word boundary characters, I needed access to some char functions that were not exposed. These functions are reimplemented all over the place and should now probably use the one in `ustring.h`. Also, if reordering the favorite section doesn't work, that's because it seems to be broken currently in master.\r\n\r\n<details><summary>Examples comparing against 3.3.2 behaviour</summary>\r\n\r\n![vergelijking](https://user-images.githubusercontent.com/25907608/129782929-2f7fdd86-3cb9-4710-ad9c-b829a7ce08a3.png)\r\n\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914,4418923]},{"id":714518183,"public_id":51805,"url":"https://github.com/godotengine/godot/pull/51805","diff_url":"https://github.com/godotengine/godot/pull/51805.diff","patch_url":"https://github.com/godotengine/godot/pull/51805.patch","title":"Added increment_pressed and decrement_pressed icons to scrollbars","state":"open","is_draft":false,"authored_by":{"id":46826615,"user":"skysphr","avater":"https://avatars.githubusercontent.com/u/46826615?v=4","url":"https://github.com/skysphr"},"created_at":"2021-08-17T19:43:30Z","updated_at":"2021-08-17T20:39:49Z","body":"This PR adds textures for pressed increments and decrements within HScrollBar and VScrollBar. Since we have a texture for the pressed grabber it makes sense to be able to customize the pressed arrows as well.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":714470992,"public_id":51803,"url":"https://github.com/godotengine/godot/pull/51803","diff_url":"https://github.com/godotengine/godot/pull/51803.diff","patch_url":"https://github.com/godotengine/godot/pull/51803.patch","title":"Add note about batching to Line2D's anti-aliasing","state":"open","is_draft":false,"authored_by":{"id":46327403,"user":"LoipesMas","avater":"https://avatars.githubusercontent.com/u/46327403?v=4","url":"https://github.com/LoipesMas"},"created_at":"2021-08-17T18:22:44Z","updated_at":"2021-08-22T11:24:27Z","body":"Added note to Line2D::antialiased about the fact that batching doesn't work for anti-aliased Line2D (as suggested by @lawnjelly in #51317)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":714404607,"public_id":51801,"url":"https://github.com/godotengine/godot/pull/51801","diff_url":"https://github.com/godotengine/godot/pull/51801.diff","patch_url":"https://github.com/godotengine/godot/pull/51801.patch","title":"One-directional layer check for Area vs. RigidBody/SoftBody/Area","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-17T16:37:11Z","updated_at":"2021-08-17T16:37:12Z","body":"Same thing that was already done for rigid body and character body collision detection.\r\n\r\nFinishes implementing and closes https://github.com/godotengine/godot-proposals/issues/2775.\r\nSupersedes #42268.\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":714373175,"public_id":51800,"url":"https://github.com/godotengine/godot/pull/51800","diff_url":"https://github.com/godotengine/godot/pull/51800.diff","patch_url":"https://github.com/godotengine/godot/pull/51800.patch","title":"Sort palette commands by last use","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-17T15:53:37Z","updated_at":"2021-08-18T12:15:06Z","body":"When filter is empty, commands are now sorted by the last time they were used. This way the most relevant commands for you appear on top. This is saved per project.\r\n\r\nI didn't test it with plugins. Also I cleaned up some includes.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":714296672,"public_id":51796,"url":"https://github.com/godotengine/godot/pull/51796","diff_url":"https://github.com/godotengine/godot/pull/51796.diff","patch_url":"https://github.com/godotengine/godot/pull/51796.patch","title":"[3.x] Promote object validity checks to release builds","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-08-17T14:21:31Z","updated_at":"2021-08-17T16:49:40Z","body":"Extra:\r\n- Optimized the debug-only check about why the object is null to determine if it's because it has been deleted (the RC is enough; no need to check the ObjectDB).\r\n- Because of the previous point. the debugger being attached is not required anymore for giving the \"Object was deleted\" error; from now, it only matters that it's a debug build.\r\n- `is_instance_valid()` is now trustworthy. It will return `true` if, and only if, the last object assigned to a `Variant` is still alive (and not if a new object happened to be created at the same memory address of the old one).\r\n- Replacements of `instance_validate()` are used where possible `Variant::is_invalid_object()` is introduced to help with that. (GDScript's `is_instance_valid()` is good.)\r\n\r\nI've smoke-tested this on the Windows editor and on an Android release build of my game. No crashes. No apparent regressions.\r\n\r\nSome of all this is still needed in 4.0. That work will happen separately.\r\n\r\nImplements https://github.com/godotengine/godot-proposals/issues/1589.\r\n\r\n**UPDATE:** To be honest, I'm not very fond of the changes to `Tween` so it can robuslty check the validity of the objects involved. I'd like opinions.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4038183,4418380,4418605,4418914]},{"id":714174803,"public_id":51791,"url":"https://github.com/godotengine/godot/pull/51791","diff_url":"https://github.com/godotengine/godot/pull/51791.diff","patch_url":"https://github.com/godotengine/godot/pull/51791.patch","title":"Improve error descriptions","state":"open","is_draft":false,"authored_by":{"id":1654763,"user":"mhilbrunner","avater":"https://avatars.githubusercontent.com/u/1654763?v=4","url":"https://github.com/mhilbrunner"},"created_at":"2021-08-17T11:53:16Z","updated_at":"2021-08-17T14:35:11Z","body":"Small improvements upon the previous PR, generalizes error messages so they work in more contexts. Also adds some comments.\r\n\r\nTakes some inspiration from https://github.com/KOBUGE-Games/godot-logger/blob/master/logger.gd","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":714133234,"public_id":51789,"url":"https://github.com/godotengine/godot/pull/51789","diff_url":"https://github.com/godotengine/godot/pull/51789.diff","patch_url":"https://github.com/godotengine/godot/pull/51789.patch","title":"Fixes crash when the Message Queue is out of Memory.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2021-08-17T10:53:18Z","updated_at":"2021-08-17T11:27:45Z","body":"The function `statistics()`, called when the MessageQueue is out of memory, will still use the MessageQueue so it crashes.\r\nMoving the error above will improve the behavior since the developer will find the crash reasons and the instruction on how to fix it.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":714083993,"public_id":51788,"url":"https://github.com/godotengine/godot/pull/51788","diff_url":"https://github.com/godotengine/godot/pull/51788.diff","patch_url":"https://github.com/godotengine/godot/pull/51788.patch","title":"[Net] [RFC] MultiplayerReplicator state sync.","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-08-17T09:45:31Z","updated_at":"2021-08-18T18:57:40Z","body":"Like the spawn/despawn feature, it can be completely overridden with 2 custom callables.\r\nThe callables will be called with the list of tracked objects.\r\nIn SERVER mode, objects are automatically tracked, while in CUSTOM mode you can manually track them via `track`/`untrack` (but that's optional).\r\nThe default sync only happens from server to client, with batch updates, over unreliable channel (but with custom ordering).\r\nThe default sync will warn you if your state representation gets too big.\r\n\r\n~This PR is based on #51534 .~ Now merged, so based on master.\r\n\r\nSee attached project for an example: [proj_spawn.zip](https://github.com/godotengine/godot/files/6998820/proj_spawn.zip).\r\n\r\nDocs mostly done, will need proper tutorials soon.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":713919538,"public_id":51780,"url":"https://github.com/godotengine/godot/pull/51780","diff_url":"https://github.com/godotengine/godot/pull/51780.diff","patch_url":"https://github.com/godotengine/godot/pull/51780.patch","title":"Convert output of GLES2 to linear color space","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-08-17T05:07:51Z","updated_at":"2021-08-19T01:39:21Z","body":"In XR the render output is sent to a compositor that will do further processing of the images and output them to an HMD, one of the adjustments made here is converting to the color space that best suits the HMD.\r\n\r\nThe problem we've run into a few times is that as a result many of the compositors expect the render images to be in linear color space. \r\nSome like OpenVR and Oculus' VrAPI do have support for sRGB input (though it doesn't work in OpenVR when RGBA16F is used) but it looks like OpenXR only offers it through hardware sRGB buffers which don't seem to work as advertised when using GLES2. The bottom line is that OpenXR simply expects us to supply render buffers in linear color space.\r\n\r\nFor the GLES3 renderer we solved this issue a long time ago by introducing the `keep_3d_linear` switch as rendering happens in linear color space and we simply convert this to sRGB as part of our tonemapping post process. The introduced switch skips this conversion.\r\n\r\nFor the GLES2 renderer however we render everything in sRGB color space and this is all we have to offer, the `keep_3d_linear` switch has no effect. As it would be way to much work to convert the GLES2 renderer to work in linear color space and it requiring a post process to then convert to sRGB this isn't really an option.\r\nThis PR takes the opposite approach letting the renderer do its work in sRGB color space but converting the sRGB result to linear color space if `keep_3d_linear` is enabled. \r\n\r\nThis PR also changes the arvr blit functions for creating the spectator view that if it is provided with a render buffer that has `keep_3d_linear` turned on, it converts the result to sRGB. This was a long outstanding wish I implemented while working on this anyway.\r\n\r\nI need to do some more testing but this PR is basically ready.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449]},{"id":713658420,"public_id":51751,"url":"https://github.com/godotengine/godot/pull/51751","diff_url":"https://github.com/godotengine/godot/pull/51751.diff","patch_url":"https://github.com/godotengine/godot/pull/51751.patch","title":"Created an area-specific wind force that interacts with soft bodies","state":"open","is_draft":false,"authored_by":{"id":13093421,"user":"jeffrey-cochran","avater":"https://avatars.githubusercontent.com/u/13093421?v=4","url":"https://github.com/jeffrey-cochran"},"created_at":"2021-08-16T18:34:31Z","updated_at":"2021-08-19T22:52:41Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\n- Fulfills proposal [#2291](https://github.com/godotengine/godot-proposals/issues/2591)\r\n- Adds four parameters to the physics overrides of an Area3D that characterize a wind force, which interacts with all soft bodies intersecting the Area3D.\r\n- Builds on the progress made in PR #50785 \r\n-  Attached is a demo project: [softbody_wind_force.zip](https://github.com/godotengine/godot/files/7002971/softbody_wind_force.zip)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":713646869,"public_id":51750,"url":"https://github.com/godotengine/godot/pull/51750","diff_url":"https://github.com/godotengine/godot/pull/51750.diff","patch_url":"https://github.com/godotengine/godot/pull/51750.patch","title":"Adding InputMap action error suggestions for Input singleton (Fix #51634)","state":"open","is_draft":false,"authored_by":{"id":3649998,"user":"jmb462","avater":"https://avatars.githubusercontent.com/u/3649998?v=4","url":"https://github.com/jmb462"},"created_at":"2021-08-16T18:15:21Z","updated_at":"2021-08-17T00:29:09Z","body":"This pull request fixes #51634\r\n\r\n### Issue : \r\n\r\nInput action error suggestions were only printed when using event.is_action_pressed(), not Input.is_action_pressed()\r\n\r\n### Fix proposal :\r\n\r\nInputMap::suggest_actions() is now public and called by : \r\n- Input::is_action_pressed()\r\n- Input::is_action_just_pressed()\r\n- Input::is_action_just_released()\r\n- Input::get_action_strength()\r\n\r\nAs you can see, a suggestion is now printed even via Input singleton.\r\n\r\n![image](https://user-images.githubusercontent.com/3649998/129609712-1392ce3e-2a75-4a07-b734-208ea30734ad.png)\r\n\r\n","target_branch":"master","labels":[{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418403]},{"id":713271080,"public_id":51728,"url":"https://github.com/godotengine/godot/pull/51728","diff_url":"https://github.com/godotengine/godot/pull/51728.diff","patch_url":"https://github.com/godotengine/godot/pull/51728.patch","title":"Create 'rendering/misc' project settings section","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2021-08-16T09:33:04Z","updated_at":"2021-08-16T11:12:20Z","body":"To prevent the project settings `rendering` section getting out of hand, this PR moves some of the smaller new settings into a `misc` category.\r\n\r\nThis PR is one possible way of arranging these settings. It is as much to generate a discussion of how we should address this.\r\n\r\n## Discussion\r\nAs discussed in rocket chat, the number of sections in `rendering` is in danger of becoming a little ridiculous, and given that there are a number of smaller sections added so far for 3.4, it may make sense to consolidate them.\r\n\r\nHistorically we tended to misuse `Quality` as a catch all for rendering settings. This was attempted to be improved by the creation of the `2d` section. But now we are suffering from perhaps a tendency for too many sections, so there is a good argument for a new 'catch all' section for single or small numbers of settings that do not warrant their own section.\r\n\r\n![misc_section](https://user-images.githubusercontent.com/21999379/129543497-861831c3-38bf-4098-9b2d-e3265838bf26.png)\r\n\r\n## Notes\r\n* I'm not convinced the name `lossless compression` is a sensible sub section for webp related settings. It seems a bit vague. How about something like `cpu texture compression` or something a bit more specific? (I don't know the PR well so I'm just guessing here for names)\r\n* It would actually be nice to move some historical settings in here but that would break compatibility. (threads, gles2 possibly? environment would be nice, but more likely to break compatibility) We could consider this at a later date if necessary.\r\n* CPU Lightmapper could have possibly been better in `quality` but at least it has a few settings, and it may well grow in future.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449,4418424]},{"id":713222082,"public_id":51722,"url":"https://github.com/godotengine/godot/pull/51722","diff_url":"https://github.com/godotengine/godot/pull/51722.diff","patch_url":"https://github.com/godotengine/godot/pull/51722.patch","title":"Apply `set_read_only()` to child classes of `EditorProperty` elements","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-08-16T08:22:05Z","updated_at":"2021-08-22T13:47:28Z","body":"Fixed #45769.\r\n\r\nThe `read_only` flag is in `EditorProperty`, so you can use it in the child classes of `EditorProperty`. According to the [description](https://docs.godotengine.org/ja/stable/classes/class_editorproperty.html#class-editorproperty-property-read-only), the `read_only` flag prevents operations in the inspector. However, if you don't set `read_only` for each GUI element implemented in the child class, they can manipulate the value in the inspector even if `read_only == true`.\r\n\r\nCurrently, it seems that the `read_only` flag is not commonly used, but for example, in #45699, it is necessary that `read_only` works correctly to prevent manipulating BonePose in RestMode. Also, the `read_only` flag can only be set in C++ currently, but it may be used in GDScript in the future with some way. So I fixed this.\r\n\r\nhttps://user-images.githubusercontent.com/61938263/129532740-8c7fdd61-aad8-407b-a91e-ce834507b924.mov\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783]},{"id":713202200,"public_id":51718,"url":"https://github.com/godotengine/godot/pull/51718","diff_url":"https://github.com/godotengine/godot/pull/51718.diff","patch_url":"https://github.com/godotengine/godot/pull/51718.patch","title":"Fix macOS fullscreen incorrect mouse position","state":"open","is_draft":false,"authored_by":{"id":38776931,"user":"danielkariv","avater":"https://avatars.githubusercontent.com/u/38776931?v=4","url":"https://github.com/danielkariv"},"created_at":"2021-08-16T07:54:22Z","updated_at":"2021-08-20T22:09:28Z","body":"In relation to #40061. \r\n\r\nThis PR is fixing the incorrect mouse position in fullscreen mode which result UI click registered below expect point.\r\nFrom my testing, it seems like the issue is that when the window getting into or out fullscreen mode, it wouldn't call the resize event to get correct sizing and scale.\r\nI also notice that when i fullscreen and changing resolution of the display, it will call resize event, and the UI will work as it should. but when getting out from fullscreen mode, it will get back to the same issue, now in window mode.\r\n\r\nSo my PR is adding a call to resize event when changing to/from fullscreen mode.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":713160597,"public_id":51716,"url":"https://github.com/godotengine/godot/pull/51716","diff_url":"https://github.com/godotengine/godot/pull/51716.diff","patch_url":"https://github.com/godotengine/godot/pull/51716.patch","title":"Replace force_blinn with use_simple_ggx","state":"open","is_draft":true,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2021-08-16T06:41:45Z","updated_at":"2021-08-16T15:24:40Z","body":"Implements: https://github.com/godotengine/godot-proposals/issues/3117\r\n\r\nThis adds optimized forms of the standard GGX functions (as discussed by the Filament devs [here](https://google.github.io/filament/Filament.html#listing_scalarspecularf) and [here](https://www.youtube.com/watch?v=gbeN4lcjJDA)) many of which are used in the GLES2 renderer. These forms are simplifications of the actual models, but together they reduce instruction count quite nicely. They should be preferred in the mobile renderer as they look very close to standard GGX. \r\n\r\nOpening as draft for now as this should be implemented along with a review of where in the PBR functions we can optimize with fp16 (mediump) and what needs to remain at fp32 (highp)\r\n","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":713136143,"public_id":51715,"url":"https://github.com/godotengine/godot/pull/51715","diff_url":"https://github.com/godotengine/godot/pull/51715.diff","patch_url":"https://github.com/godotengine/godot/pull/51715.patch","title":"Add and use macros for defining editor settings with hint information","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-16T05:47:22Z","updated_at":"2021-08-16T17:27:37Z","body":"This PR adds a macro and converts things like this:\r\n\r\n```cpp\r\n_initial_set(\"editors/3d/navigation_feel/manipulation_orbit_inertia\", 0.075);\r\nhints[\"editors/3d/navigation_feel/manipulation_orbit_inertia\"] = PropertyInfo(Variant::FLOAT, \"editors/3d/navigation_feel/manipulation_orbit_inertia\", PROPERTY_HINT_RANGE, \"0.0,1,0.01\");\r\n```\r\n\r\nTo this:\r\n\r\n```cpp\r\nEDITOR_SETTING(FLOAT, RANGE, \"editors/3d/navigation_feel/manipulation_orbit_inertia\", 0.075, \"0.0,1,0.01\")\r\n```\r\n\r\nIt was driving me crazy how the name was repeated 3 times.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":713090279,"public_id":51712,"url":"https://github.com/godotengine/godot/pull/51712","diff_url":"https://github.com/godotengine/godot/pull/51712.diff","patch_url":"https://github.com/godotengine/godot/pull/51712.patch","title":"Improve the appearance of Deep Parallax in SpatialMaterial","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-16T03:42:05Z","updated_at":"2021-08-16T03:43:04Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/50377. See also https://github.com/godotengine/godot/pull/51433.\r\n\r\nThis better preserves depth when viewed at oblique angles. Artifacts due to the amount of layers being low may be more noticeable as a result, but it's generally better to decrease the heightmap scale instead.\r\n\r\nThis is done by dividing the delta by the dot product of the view vector and normal vector.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":713075874,"public_id":51711,"url":"https://github.com/godotengine/godot/pull/51711","diff_url":"https://github.com/godotengine/godot/pull/51711.diff","patch_url":"https://github.com/godotengine/godot/pull/51711.patch","title":"Add `disable_alpha` render mode to shaders","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-16T02:56:32Z","updated_at":"2021-08-18T15:27:07Z","body":"`master` version of https://github.com/godotengine/godot/pull/51844. Follow-up to https://github.com/godotengine/godot/pull/51709.\r\n\r\nThis can be used by multipass shaders to write to a texture's alpha channel without causing the material to become transparent.\r\n\r\n**Testing project:** [test_shader_disable_alpha_master.zip](https://github.com/godotengine/godot/files/6989503/test_shader_disable_alpha_master.zip)\r\n\r\n## Preview\r\n\r\n### Default render mode\r\n\r\n![Default render mode](https://user-images.githubusercontent.com/180032/129505554-40995461-ffb2-4c85-99c0-344173fc6237.png)\r\n\r\n### `disable_alpha` render mode\r\n\r\n![`disable_alpha` render mode](https://user-images.githubusercontent.com/180032/129505553-557abce3-5dd6-4579-90de-4b1269391dbf.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":713066600,"public_id":51709,"url":"https://github.com/godotengine/godot/pull/51709","diff_url":"https://github.com/godotengine/godot/pull/51709.diff","patch_url":"https://github.com/godotengine/godot/pull/51709.patch","title":"Add a Viewport property to use full floating-point precision","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-16T02:19:49Z","updated_at":"2021-08-16T02:37:52Z","body":"`master` version of https://github.com/godotengine/godot/pull/51708.\r\n\r\nThis is only available on the Vulkan Clustered backend.\r\n\r\nThis can be useful for advanced shaders, but it should generally not be enabled otherwise as full precision has a performance cost. For general-purpose rendering, the built-in debanding filter should be used to reduce banding instead.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2935.\r\n\r\n**Testing project:** [test_32bpc_master.zip](https://github.com/godotengine/godot/files/6989390/test_32bpc_master.zip)\r\n\r\n## Preview\r\n\r\nWhile I don't have a suitable shader for testing the difference, I can note that there *is* a subtle visual difference in a test scene I made (verified by [dssim](https://github.com/kornelski/dssim)).\r\n\r\n### No MSAA\r\n\r\n#### 16 bpc (default)\r\n\r\n![2021-08-16_04 02 40](https://user-images.githubusercontent.com/180032/129502927-ad9fc1f6-896b-49ee-832b-b91d81540300.png)\r\n\r\n#### 32 bpc\r\n\r\n![2021-08-16_04 02 51](https://user-images.githubusercontent.com/180032/129502930-2547ddcb-f6d9-4f4a-9b0c-bd5e8ffe7595.png)\r\n\r\n\r\n\r\n#### Difference\r\n\r\n![s png-0](https://user-images.githubusercontent.com/180032/129502939-34480667-1396-40f6-aeec-a5c3fc2a44c8.png)\r\n\r\n### 8× MSAA\r\n\r\n#### 16 bpc (default)\r\n\r\n![2021-08-16_04 04 18](https://user-images.githubusercontent.com/180032/129502945-52ce2e2f-c5b1-4a84-a3be-63b38514af20.png)\r\n\r\n#### 32 bpc\r\n\r\n![2021-08-16_04 04 28](https://user-images.githubusercontent.com/180032/129502947-d048dad3-6b67-49c1-be7e-7acde08e9c21.png)\r\n\r\n#### Difference\r\n\r\n![msaa png-0](https://user-images.githubusercontent.com/180032/129502960-d74c718c-c5d8-412e-87a1-f8896cecbbde.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418550,4418914]},{"id":713046697,"public_id":51708,"url":"https://github.com/godotengine/godot/pull/51708","diff_url":"https://github.com/godotengine/godot/pull/51708.diff","patch_url":"https://github.com/godotengine/godot/pull/51708.patch","title":"Add a Viewport property to use full floating-point precision in HDR (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-16T01:17:31Z","updated_at":"2021-08-18T10:08:19Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/51709.\r\n\r\nThis is only available on the GLES3 backend.\r\n\r\nThis can be useful for advanced shaders, but it should generally not be enabled otherwise as full precision has a performance cost. For general-purpose rendering, the built-in debanding filter should be used to reduce banding instead.\r\n\r\nThis implements https://github.com/godotengine/godot-proposals/issues/2935 for `3.x`. I'll have to see about creating a `master` version of this PR.\r\n\r\n@Lauson1ex Do you have an example shader to test this?\r\n\r\n## Preview\r\n\r\nWhile I don't have a suitable shader for testing the difference, I can note that there *is* a subtle visual difference in a test scene I made (verified by [dssim](https://github.com/kornelski/dssim)).\r\n\r\n### 16 bpc (default)\r\n\r\n\r\n![16 bpc](https://user-images.githubusercontent.com/180032/129499406-3b53ea62-b1d7-4197-b8d8-345d3e030ac5.png)\r\n\r\n### 32 bpc\r\n\r\n![32 bpc](https://user-images.githubusercontent.com/180032/129499409-93304462-f09e-4ecf-a989-7faec579bb81.png)\r\n\r\n### Difference\r\n\r\n![Difference](https://user-images.githubusercontent.com/180032/129499426-ab268279-56cd-41c2-9f54-238040620776.png)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449,4418914]},{"id":713029332,"public_id":51705,"url":"https://github.com/godotengine/godot/pull/51705","diff_url":"https://github.com/godotengine/godot/pull/51705.diff","patch_url":"https://github.com/godotengine/godot/pull/51705.patch","title":"Add a property to control the bounce indirect energy in LightmapGI","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-16T00:30:39Z","updated_at":"2021-08-16T02:35:03Z","body":"`master` version of https://github.com/godotengine/godot/pull/50827.\r\n\r\nHigher values will make indirect lighting brighter. A value of 1.0 represents physically accurate behavior, but higher values can be used to make indirect lighting propagate more visibly when using a low number of bounces.\r\n\r\nThis can be used to speed up bake times by lowering the number of bounces then increasing the bounce indirect energy.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/50938.\r\n\r\n**Testing project:** [test_lightmap_normalmap2.zip](https://github.com/godotengine/godot/files/6989140/test_lightmap_normalmap2.zip)\r\n\r\n## TODO\r\n\r\n- [ ] Implement when the lights' bake mode is **Dynamic**. Right now, it only works when lights' bake mode is **Static**. I haven't figured out how to multiply *only* bounce lighting when only indirect lighting is baked.\r\n\r\n## Preview\r\n\r\n### Bounce Indirect Energy 1.0 (default)\r\n\r\n![2021-08-16_01 53 30](https://user-images.githubusercontent.com/180032/129497496-8b8c0f79-5ab6-4cf8-94d6-e95f34a6aed8.png)\r\n\r\n### Bounce Indirect Energy 0.0\r\n\r\n*Only direct, environment and emissive lighting are baked.*\r\n\r\n![2021-08-16_02 15 47](https://user-images.githubusercontent.com/180032/129497497-4490d7fa-9a8e-4a39-b374-ff66dbfb4b68.png)\r\n\r\n### Bounce Indirect Energy 4.0\r\n\r\n*Can be used for artistic effects with less strong lights.*\r\n\r\n![2021-08-16_02 16 04](https://user-images.githubusercontent.com/180032/129497498-81c3b6ee-74b0-4183-9ff2-a767fcfb9703.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418726]},{"id":712994494,"public_id":51700,"url":"https://github.com/godotengine/godot/pull/51700","diff_url":"https://github.com/godotengine/godot/pull/51700.diff","patch_url":"https://github.com/godotengine/godot/pull/51700.patch","title":"Reimplement ColorPicker presets","state":"open","is_draft":false,"authored_by":{"id":50084500,"user":"Geometror","avater":"https://avatars.githubusercontent.com/u/50084500?v=4","url":"https://github.com/Geometror"},"created_at":"2021-08-15T20:09:07Z","updated_at":"2021-08-18T00:10:46Z","body":"Reimplements the color preset functionality of the ColorPicker:\r\n\r\n![grafik](https://user-images.githubusercontent.com/50084500/129491085-e121ac1e-76d0-46f4-ad83-82bcb3408520.png)\r\n\r\nChanges:\r\n-\tReimplement color picker presets with custom Button (ColorPresetButton)\r\nPresets were disabled due to the way they were implemented as stated by reduz's comment: `//presets should be shown using buttons or something else, this method is not a good idea` (the former method was using a TextureRect for the whole palette)\r\n-\tAdd the overbright indicator which is already used in other places of the ColorPicker and an alpha checker board background for transparent colors\r\n-\tSome small structural improvements to the code for better readability\r\n\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":712987467,"public_id":51699,"url":"https://github.com/godotengine/godot/pull/51699","diff_url":"https://github.com/godotengine/godot/pull/51699.diff","patch_url":"https://github.com/godotengine/godot/pull/51699.patch","title":"Add method to print backtrace","state":"open","is_draft":true,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-08-15T19:12:31Z","updated_at":"2021-08-15T20:19:45Z","body":"Implements https://github.com/godotengine/godot-proposals/issues/3062 but only for Linux now.\r\n\r\nI'm not sure if OS is best class for it, but this works fine for now.\r\n\r\nNot sure if I will finish this, so feel free to fork it.\r\n\r\nThis is quite slow(full backtrace prints ~5-10s on my OS).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":null,"teams":[3112907,4418914]},{"id":712956866,"public_id":51695,"url":"https://github.com/godotengine/godot/pull/51695","diff_url":"https://github.com/godotengine/godot/pull/51695.diff","patch_url":"https://github.com/godotengine/godot/pull/51695.patch","title":"Add tool quick-select to tile editor","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-15T15:37:24Z","updated_at":"2021-08-15T18:48:20Z","body":"This is a feature I'm really missing from the old editor.\r\n\r\nWhen Paint tool is selected:\r\n- Hold Shift to draw lines\r\n- Hold Shift + Ctrl to draw rectangles\r\n\r\nWhen any drawing tool is selected (Paint, Line, Rect, Bucket):\r\n- Hold Ctrl to pick tile\r\n\r\nAlso RMB will erase tiles. There was some controversy last time I suggested it (something with panning), so it's added in a second commit. RMB erasing has no preview (most notable with bucket tool).\r\n\r\n![r9SBvo2rOW](https://user-images.githubusercontent.com/2223172/129483971-705c1208-3861-4e85-ac49-0dfce911348a.gif)\r\n\r\nEDIT:\r\nbtw the change in BaseButton was required to make `_get_current_tool()` const.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":712884001,"public_id":51685,"url":"https://github.com/godotengine/godot/pull/51685","diff_url":"https://github.com/godotengine/godot/pull/51685.diff","patch_url":"https://github.com/godotengine/godot/pull/51685.patch","title":"Don't translate function prototype in built-in doc","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-08-15T06:27:33Z","updated_at":"2021-08-17T12:24:06Z","body":"The string `(value)` is part of the function prototype for property setters in the built-in doc:\r\n\r\n```gdscript\r\nset_position(value)\r\n```\r\n\r\nIt's currently being translated, but GDScript doesn't support unicode identifiers yet. So it should not be translated to\r\n\r\n```gdscript\r\nset_position(值)\r\n```\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":712872261,"public_id":51684,"url":"https://github.com/godotengine/godot/pull/51684","diff_url":"https://github.com/godotengine/godot/pull/51684.diff","patch_url":"https://github.com/godotengine/godot/pull/51684.patch","title":"Use `enum class` for input enums","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-15T04:08:54Z","updated_at":"2021-08-18T20:07:37Z","body":"Likely fixes #51641\r\n\r\nThis is a lot, but see the below comments for some things I'd like to point out.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,3112906,3112907,3112909,3112910,3112912,3112913,3857901,4417819,4417868,4418403,4418424,4418542,4418550,4418558,4418563,4418605,4418726,4418733,4418914,4418923]},{"id":712865534,"public_id":51682,"url":"https://github.com/godotengine/godot/pull/51682","diff_url":"https://github.com/godotengine/godot/pull/51682.diff","patch_url":"https://github.com/godotengine/godot/pull/51682.patch","title":"OS::is_process_running function.","state":"open","is_draft":false,"authored_by":{"id":82890215,"user":"mdavisprog","avater":"https://avatars.githubusercontent.com/u/82890215?v=4","url":"https://github.com/mdavisprog"},"created_at":"2021-08-15T02:40:52Z","updated_at":"2021-08-15T16:20:06Z","body":"This PR adds the OS::is_process_running function that is exposed to script. The function has been implemented for Windows and Unix platforms and provides stubs for other platforms that are unsupported.\r\n\r\nThis is relevant to the godot-proposal [#1679](https://github.com/godotengine/godot-proposals/issues/1679).\r\n\r\nA test project is provided that creates a process to run the 'ping' command and asserts that the is_process_running function properly returns the correct value.\r\n\r\n[os-is-process-running-project.zip](https://github.com/godotengine/godot/files/6987421/os-is-process-running-project.zip)\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1679.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112906,3112912,3112913,4418914]},{"id":712832795,"public_id":51679,"url":"https://github.com/godotengine/godot/pull/51679","diff_url":"https://github.com/godotengine/godot/pull/51679.diff","patch_url":"https://github.com/godotengine/godot/pull/51679.patch","title":"AMD FidelityFX Super Resolution","state":"open","is_draft":true,"authored_by":{"id":16980628,"user":"Je06jm","avater":"https://avatars.githubusercontent.com/u/16980628?v=4","url":"https://github.com/Je06jm"},"created_at":"2021-08-14T20:19:23Z","updated_at":"2021-08-22T00:55:22Z","body":"AMD FidelityFX Super Resolution, which will be referred to FSR, can be applied to any viewport through code or in the editor. Currently, only SubViewports support FSR. FSR works with all post-processing effects, although any effect that creates any noise is not suggested as FSR makes the noise worse.\r\n\r\nFSR has two properties under the rendering tab named 'Fsr Upscale Quality' and 'Fsr Upscale Sharpness'. These properties can also be modified in gdscript using 'fsr_upscale_quality' and 'fsr_upscale_sharpness'\r\n\r\nBefore FSR is ready, mipmap bias needs to be exposed when FSR is enabled. FSR also needs to be able to be applied to the main 3d viewport.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/2809.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":712825724,"public_id":51678,"url":"https://github.com/godotengine/godot/pull/51678","diff_url":"https://github.com/godotengine/godot/pull/51678.diff","patch_url":"https://github.com/godotengine/godot/pull/51678.patch","title":"Node2D Refractor.","state":"open","is_draft":false,"authored_by":{"id":17506575,"user":"AnilBK","avater":"https://avatars.githubusercontent.com/u/17506575?v=4","url":"https://github.com/AnilBK"},"created_at":"2021-08-14T19:09:30Z","updated_at":"2021-08-14T19:47:03Z","body":"### This is open to discussions,and I am not sure if my solution is any good.\r\n\r\nTrying to Fix Some problems as found in: https://github.com/godotengine/godot-proposals/issues/2742\r\n\r\nFrom the proposal,\r\n\r\n> There are also performance issues. For example, whenever \"Node2D::translate\" is called, instead of a simple vector addition, at least the following steps are performed:\r\n\r\n    One vector addition.\r\n    Two sines and two cosines are calculated.\r\n    Four multiplications and two sums.\r\n\r\nThis was previously the case. With this PR, translate is just one vector addition, and two assignments.\r\n\r\n-------------------------------------------------------------------------------------------------------\r\n\r\n**Some Refractor decisions:**\r\n\r\n\r\n`Basically, eliminate angle, pos, _scale and skew in Node2D. This is very simple to do.`\r\n\r\nIf you want to do this, you have to get those properties from Transform2D, and as of now transform2d doesn't cache those values. Basically, just to get rotation, we have to do this `return Math::atan2(elements[0].y, elements[0].x);` . So, not worth it.\r\n\r\n--------------------------------------------------------------------------------------------------------------\r\n\r\nNow:\r\n\r\nWhenever we set a value, we immediately assign the value to corresponding Transform2d too. So that, whenever we want to access a value, we shouldn't \r\n`\tif (_xform_dirty) {\r\n\t\t((Node2D *)this)->_update_xform_values();\r\n\t}` a branch, a cast, \r\n\r\nand _update_xform_values() ->\r\n```\r\ntransform.set_rotation_scale_and_skew(angle, scale, skew);\r\ntransform.elements[2] = pos;\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718]},{"id":712812708,"public_id":51676,"url":"https://github.com/godotengine/godot/pull/51676","diff_url":"https://github.com/godotengine/godot/pull/51676.diff","patch_url":"https://github.com/godotengine/godot/pull/51676.patch","title":"Add `hint_transparent` to use a transparent black placeholder texture (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-14T17:15:39Z","updated_at":"2021-08-15T00:02:10Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/51672. Works in both GLES3 and GLES2.\r\n\r\n## Preview (GLES3)\r\n\r\n### `hint_black`'s alpha channel\r\n\r\n![hint_black](https://user-images.githubusercontent.com/180032/129455174-4392e831-1ab0-43a6-8549-e7283c19cfaf.png)\r\n\r\n### `hint_transparent`'s alpha channel\r\n\r\n![hint_transparent](https://user-images.githubusercontent.com/180032/129455175-57520504-696f-41e3-a240-70c3fad4d9b1.png)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":712809274,"public_id":51674,"url":"https://github.com/godotengine/godot/pull/51674","diff_url":"https://github.com/godotengine/godot/pull/51674.diff","patch_url":"https://github.com/godotengine/godot/pull/51674.patch","title":"Update VisualScriptCustomNode.xml","state":"open","is_draft":false,"authored_by":{"id":20573784,"user":"Gallilus","avater":"https://avatars.githubusercontent.com/u/20573784?v=4","url":"https://github.com/Gallilus"},"created_at":"2021-08-14T16:47:54Z","updated_at":"2021-08-14T16:53:14Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nIt took me a long time to find what i was doing wrong. My thanks to MarianoRGD\r\nFix #50879\r\nCherry-pick 3.x\r\n","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868]},{"id":712807153,"public_id":51672,"url":"https://github.com/godotengine/godot/pull/51672","diff_url":"https://github.com/godotengine/godot/pull/51672.diff","patch_url":"https://github.com/godotengine/godot/pull/51672.patch","title":"Add `hint_transparent` to use a transparent black placeholder texture","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-14T16:30:24Z","updated_at":"2021-08-14T17:15:48Z","body":"`master` version of https://github.com/godotengine/godot/pull/51676.\r\n\r\nThis can be used in shaders to avoid the need to supply a transparent placeholder texture manually.\r\n\r\n**Question:** Should this be split into hints for transparent black and transparent white? I can't see too many common use cases for a transparent white texture.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1325.\r\n\r\n## Preview\r\n\r\n### `hint_black`'s alpha channel\r\n\r\n![hint_black](https://user-images.githubusercontent.com/180032/129453039-065ac171-bcd0-46db-8dbd-2f263dcec975.png)\r\n\r\n### `hint_transparent`'s alpha channel\r\n\r\n![hint_transparent](https://user-images.githubusercontent.com/180032/129453042-6ee12784-4db9-4310-975f-38498cb438d3.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":712803702,"public_id":51671,"url":"https://github.com/godotengine/godot/pull/51671","diff_url":"https://github.com/godotengine/godot/pull/51671.diff","patch_url":"https://github.com/godotengine/godot/pull/51671.patch","title":"Fix some GDScript bugs","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-08-14T16:06:42Z","updated_at":"2021-08-21T16:16:03Z","body":"Probaly only the last commit is needed to fix the crash in #45003. By the way, that last commit partially reverts a change done in 3abb3c0d6e9e81d3ed171162cc5ce2bbe58296e0, maybe unrelated to its main purpose, but it's good to bear it in mind in case the issue solved there resurrects.\r\n\r\nHowever, I found other errors triggered by the test project and fixed them as well.\r\n\r\nFixes #45003.\r\n\r\nThere's the possibility that this PR fixes other errors. I haven't tested against other bug reports.\r\n\r\n**UPDATE:** Removed one commit which already exists in #51653.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418914]},{"id":712775886,"public_id":51667,"url":"https://github.com/godotengine/godot/pull/51667","diff_url":"https://github.com/godotengine/godot/pull/51667.diff","patch_url":"https://github.com/godotengine/godot/pull/51667.patch","title":"Add volume L/R controls to AudioStreamPlayer (master)","state":"open","is_draft":false,"authored_by":{"id":22304167,"user":"20kdc","avater":"https://avatars.githubusercontent.com/u/22304167?v=4","url":"https://github.com/20kdc"},"created_at":"2021-08-14T13:09:54Z","updated_at":"2021-08-20T18:25:22Z","body":"This is useful for manual panning.\r\nManual panning otherwise requires processing the sounds to have separate L and R variants.\r\nProcessing this in GDScript is insanely inefficient, so I decided this was the neater solution.\r\n\r\nNOTE: Due to inherent interference between Godot 4.x hardware support and my own personal policies, a version of this PR will be made targetting 3.x directly, as the PR is effectively useless to me on 4.x-only.\r\nTesting for this PR has only been performed with the 3.x version.\r\n\r\nThe 3.x PR will be submitted first so that it can be cross-linked-to, the master PR will be submitted a few seconds later with the link added.\r\n\r\n3.x PR: https://github.com/godotengine/godot/pull/51666\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":712775864,"public_id":51666,"url":"https://github.com/godotengine/godot/pull/51666","diff_url":"https://github.com/godotengine/godot/pull/51666.diff","patch_url":"https://github.com/godotengine/godot/pull/51666.patch","title":"Add volume L/R controls to AudioStreamPlayer (3.x)","state":"open","is_draft":false,"authored_by":{"id":22304167,"user":"20kdc","avater":"https://avatars.githubusercontent.com/u/22304167?v=4","url":"https://github.com/20kdc"},"created_at":"2021-08-14T13:09:43Z","updated_at":"2021-08-17T19:53:45Z","body":"This is useful for manual panning.\r\nManual panning otherwise requires processing the sounds to have separate L and R variants.\r\nProcessing this in GDScript is insanely inefficient, so I decided this was the neater solution.\r\n\r\nNOTE: Due to inherent interference between Godot 4.x hardware support and my own personal policies, a version of this PR will be made targetting 3.x directly, as the PR is effectively useless to me on 4.x-only.\r\nTesting for this PR has only been performed with the 3.x version.\r\n\r\nThe 3.x PR will be submitted first so that it can be cross-linked-to, the master PR will be submitted a few seconds later with the link added.\r\n\r\nTest project:\r\nv1 (Outdated): [demo.zip](https://github.com/godotengine/godot/files/6986507/demo.zip)\r\nv2 (Up to date): [demo.zip](https://github.com/godotengine/godot/files/7001513/demo.zip)\r\n\r\n\r\nMaster PR:\r\nhttps://github.com/godotengine/godot/pull/51667","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418392]},{"id":712762124,"public_id":51662,"url":"https://github.com/godotengine/godot/pull/51662","diff_url":"https://github.com/godotengine/godot/pull/51662.diff","patch_url":"https://github.com/godotengine/godot/pull/51662.patch","title":"ItemList.item_rmb_selected and item_selected signals fire at the same time","state":"open","is_draft":false,"authored_by":{"id":79760854,"user":"Vitika9","avater":"https://avatars.githubusercontent.com/u/79760854?v=4","url":"https://github.com/Vitika9"},"created_at":"2021-08-14T11:13:27Z","updated_at":"2021-08-14T22:04:35Z","body":"Fix #23465 \r\nAdded second argument named as 'left' to ItemList.item_selected signal which would tell if the mb is left or not(right)\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":712728812,"public_id":51655,"url":"https://github.com/godotengine/godot/pull/51655","diff_url":"https://github.com/godotengine/godot/pull/51655.diff","patch_url":"https://github.com/godotengine/godot/pull/51655.patch","title":"Improve GDScript Editor performance","state":"open","is_draft":false,"authored_by":{"id":748770,"user":"RevoluPowered","avater":"https://avatars.githubusercontent.com/u/748770?v=4","url":"https://github.com/RevoluPowered"},"created_at":"2021-08-14T06:44:53Z","updated_at":"2021-08-15T02:19:33Z","body":"Improvements:\r\n- Fixes resizing the code\r\n- GDScript Highlighter is faster by 25% as keys are smaller (hashes instead of strings)\r\n- MessageQueue::push_callable took too long to notify for the settings change (the actual fix for the code editor)\r\n\r\nOverall code editor latency is down and code resizing works correctly now.\r\n\r\nTODO: profiling results","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":712674313,"public_id":51653,"url":"https://github.com/godotengine/godot/pull/51653","diff_url":"https://github.com/godotengine/godot/pull/51653.diff","patch_url":"https://github.com/godotengine/godot/pull/51653.patch","title":"Fix type check for assignment to multi-type property in GDScript","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-08-13T23:39:09Z","updated_at":"2021-08-14T00:27:43Z","body":"After this PR the type of a \"multi-type\" property, like the one in the bug fixed by this, is no longer the comma-joined string of types, but the common ancestor type. The individual types are bookkeeped separately to allow the type compatibility check to use them (or any other check that wishes to do it in the future). Using a single type (the common ancestor) as the effective type of the property for the purposes of GDScript may have unexpected side effects, but, if you ask me, I'd say they are necessarily good. That's because I believe that GDScript will work better if the assumption that a single type is there is not broken.\r\n\r\nFixes #42280.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418914]},{"id":712660852,"public_id":51650,"url":"https://github.com/godotengine/godot/pull/51650","diff_url":"https://github.com/godotengine/godot/pull/51650.diff","patch_url":"https://github.com/godotengine/godot/pull/51650.patch","title":"Drag and drop audio files into 2D viewport to make `AudioStreamPlayer2D` nodes","state":"open","is_draft":false,"authored_by":{"id":12120644,"user":"foxydevloper","avater":"https://avatars.githubusercontent.com/u/12120644?v=4","url":"https://github.com/foxydevloper"},"created_at":"2021-08-13T22:43:11Z","updated_at":"2021-08-14T01:15:41Z","body":"This adds the ability to drag `AudioStream` resources into 2D viewport to add `AudioStreamPlayer2D` nodes.\r\nThis improves usability by making adding spatial 2D audio simpler by simply dragging and dropping an audio, rather than having to create the `AudioStreamPlayer2D` node, drag it's position, and then finally adding the `audio_stream`. This makes dragging and dropping files from the filesystem support more than just textures and scenes.\r\n\r\nhttps://user-images.githubusercontent.com/12120644/129424485-75a95660-2875-4093-bdee-b1ac3f92c77c.mp4\r\n\r\nA preview for the AudioStreamPlayer2D is created while dragging, even though it doesn't do anything. It would be nice if in a future PR, AudioStreamPlayer2D nodes could have a gizmo that shows it's location similar to 3D.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":712654502,"public_id":51649,"url":"https://github.com/godotengine/godot/pull/51649","diff_url":"https://github.com/godotengine/godot/pull/51649.diff","patch_url":"https://github.com/godotengine/godot/pull/51649.patch","title":"Add missing typedef in gdnative_interface.h","state":"open","is_draft":false,"authored_by":{"id":74796302,"user":"sepiina","avater":"https://avatars.githubusercontent.com/u/74796302?v=4","url":"https://github.com/sepiina"},"created_at":"2021-08-13T22:20:03Z","updated_at":"2021-08-13T22:31:59Z","body":"Without this change the signatures of `object_get_instance_binding` and `object_set_instance_binding` don't compile properly in C mode because the `struct` keyword is missing. The added `typedef` makes the definition look like others in the file.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":712606107,"public_id":51644,"url":"https://github.com/godotengine/godot/pull/51644","diff_url":"https://github.com/godotengine/godot/pull/51644.diff","patch_url":"https://github.com/godotengine/godot/pull/51644.patch","title":"Fix crash in ResourceImporterTexture::_save_stex if webp disabled","state":"open","is_draft":false,"authored_by":{"id":648339,"user":"ChainedLupine","avater":"https://avatars.githubusercontent.com/u/648339?v=4","url":"https://github.com/ChainedLupine"},"created_at":"2021-08-13T20:20:30Z","updated_at":"2021-08-13T21:20:13Z","body":"If `module_webp_enabled` is set to false in `custom.py` then Godot will crash as it attempts to reference nullptr'd webp compression methods on saving a StreamTexture.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":712552724,"public_id":51639,"url":"https://github.com/godotengine/godot/pull/51639","diff_url":"https://github.com/godotengine/godot/pull/51639.diff","patch_url":"https://github.com/godotengine/godot/pull/51639.patch","title":"Implement more advanced features for DAP","state":"open","is_draft":false,"authored_by":{"id":6501975,"user":"Ev1lbl0w","avater":"https://avatars.githubusercontent.com/u/6501975?v=4","url":"https://github.com/Ev1lbl0w"},"created_at":"2021-08-13T18:29:47Z","updated_at":"2021-08-19T17:57:39Z","body":"*(for [GSoC DAP project](https://summerofcode.withgoogle.com/projects/#6389461815918592), and [godot-proposals#2494](https://github.com/godotengine/godot-proposals/issues/2494))*\r\n\r\nThis PR implements a few more advanced features for DAP:\r\n\r\n- Added support for more requests:\r\n\t- `attach` *(attaching to an already running project instance)*\r\n\t- `evaluate` *(hovering over a variable to query it's current value)*\r\n\r\n- Added support for some internal requests:\r\n\t- `breakpointLocations`\r\n\t- `restart`\r\n\r\n- Implemented a *(configurable)* timeout for requests to prevent infinite dangling requests. Defaults to 1000msecs *(1 second)*\r\n- Removed option to run the DAP interpreter as a separate thread; this only caused problems and random segfaults, and also has no real reason to exist anyways.\r\n- Added a *(configurable)* toggle to sync breakpoints from the editor to any DAP connection.\r\n\t- ***Note:** This feature is disabled by default as it's not 100% reliable due to the nature of DAP's specification, as well as DAP client implementations. Use it only if it's working well under your environment, as it might delete breakpoints and/or report non-existent ones.*\r\n![Peek 2021-08-13 19-08](https://user-images.githubusercontent.com/6501975/129401446-54168f8b-f218-4715-a5a6-3d5319d18c37.gif)\r\n\r\n- Implemented forwarding of Godot's internal communication between game and editor through the DAP.\r\n\t- This is useful for developing specialized plugins for debugging Godot projects with it's unique debugging features *(eg. inspecting live scene tree, reloading scripts, registering custom profilling monitors, etc...)*\r\n\t- The following properties must be present on a `launch` request to use this:\r\n\t```\r\n\tinterface LaunchRequest extends Request {\r\n\t\t...\r\n\r\n\t\t/**\r\n\t\t * If Godot's custom communication should be forwarded. Defaults to false.\r\n\t\t * Note: some events aren't forwarded, as they're already handled by other DAP requests/events.\r\n\t\t */\r\n\t\tgodot/custom_data?: boolean;\r\n\t}\r\n\t```\r\n\t- Clients will then receive a new event type:\r\n\t```\r\n\tinterface GodotCustomDataEvent extends Event {\r\n\t\tevent: 'godot/custom_data'\r\n\r\n\t\tbody: {\r\n\t\t\t/**\r\n\t\t\t * The message string.\r\n\t\t\t */\r\n\t\t\tmessage: string;\r\n\r\n\t\t\t/**\r\n\t\t\t * Any extra data that may exist.\r\n\t\t\t */\r\n\t\t\tdata: any[];\r\n\t\t}\r\n\t}\r\n\t```\r\n\t- A DAP client can also send messages as well through a new request. This is equivalent to a raw `_put_msg()` call on `ScriptEditorDebugger`:\r\n\t```\r\n\tinterface GodotPutMsg extends Request {\r\n\t\tcommand: 'godot/put_msg'\r\n\r\n\t\targuments: GodotPutMsgArguments;\r\n\t}\r\n\t```\r\n\t```\r\n\tinterface GodotPutMsgArguments {\r\n\t\t/**\r\n\t\t * Message to pass to the debugee.\r\n\t\t */\r\n\t\tmessage: string;\r\n\r\n\t\t/**\r\n\t\t * Extra data needed. Supply an empty array if there's none.\r\n\t\t */\r\n\t\tdata: any[];\r\n\t}\r\n\t```\r\n\tThe response is just an empty ACK body:\r\n\t```\r\n\tinterface GodotPutMsgResponse extends Response {\r\n\t}\r\n\t```\r\n- Implemented inspection of Godot Variant types:\r\n![Clipboard - August 2, 2021 11_38 AM](https://user-images.githubusercontent.com/6501975/129401647-07af013f-a6ae-4a7b-b440-2989cbab0e6a.png)\r\n\r\n- Added support for debugging native platforms as well *(aka Android and/or Web)*\r\n\t- The following properties must be present on a `launch` request to use this:\r\n\t```\r\n\tinterface LaunchRequest extends Request {\r\n\t\t...\r\n\r\n\t\t/**\r\n\t\t * Platform for debugging. Defaults to 'host'\r\n\t\t * Values:\r\n\t\t * 'host': Same platform the editor is running under (Windows/macOS/Linux)\r\n\t\t * 'android': Android devices\r\n\t\t * 'web': Web platform\r\n\t\t */\r\n\t\tplatform?: 'host' | 'android' | 'web';\r\n\r\n\t\t/**\r\n\t\t * Device index to use if there is more than one. Only used for Android platforms. Defaults to 0.\r\n\t\t */\r\n\t\tdevice?: number;\r\n\t}\r\n\t```\r\n\r\n- A few more bug-fixing and code cleanups here and there","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868,4418605]},{"id":712191307,"public_id":51615,"url":"https://github.com/godotengine/godot/pull/51615","diff_url":"https://github.com/godotengine/godot/pull/51615.diff","patch_url":"https://github.com/godotengine/godot/pull/51615.patch","title":"`EditorCommandPalette` Documentation.","state":"open","is_draft":false,"authored_by":{"id":70578657,"user":"Bhu1-V","avater":"https://avatars.githubusercontent.com/u/70578657?v=4","url":"https://github.com/Bhu1-V"},"created_at":"2021-08-13T09:05:14Z","updated_at":"2021-08-13T16:20:47Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\n`EditorCommandPalette` Documentation.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":712009872,"public_id":51604,"url":"https://github.com/godotengine/godot/pull/51604","diff_url":"https://github.com/godotengine/godot/pull/51604.diff","patch_url":"https://github.com/godotengine/godot/pull/51604.patch","title":"Vulkan: Fix CanvasItem::use_parent_material","state":"open","is_draft":false,"authored_by":{"id":69441745,"user":"TechnoPorg","avater":"https://avatars.githubusercontent.com/u/69441745?v=4","url":"https://github.com/TechnoPorg"},"created_at":"2021-08-13T03:05:09Z","updated_at":"2021-08-17T15:12:02Z","body":"Fixes #48861\r\nThe \"Use Parent Material\" option now does something when enabled on a CanvasItem. As before, it's not just limited to a node's direct parent but can move up the tree until it finds a material.\r\nI also corrected a typo in rendering_device_vulkan.h that didn't merit its own commit.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":711829621,"public_id":51600,"url":"https://github.com/godotengine/godot/pull/51600","diff_url":"https://github.com/godotengine/godot/pull/51600.diff","patch_url":"https://github.com/godotengine/godot/pull/51600.patch","title":"Rename StaticBody to ColliderBody and make body modes clearer","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-13T00:16:10Z","updated_at":"2021-08-13T02:19:05Z","body":"Physics node changes and documentation update to close https://github.com/godotengine/godot-proposals/issues/2867.\r\n\r\nDiscussion summary in this comment:\r\nhttps://github.com/godotengine/godot-proposals/issues/2867#issuecomment-866372871\r\n\r\n**Rename StaticBody to ColliderBody:**\r\nClearer to users for a physics node that can be either static or kinematic.\r\n\r\n**Replace kinematic_motion property with mode (Static/Kinematic):**\r\nMakes it similar to RigidBody node, makes it clearer static and kinematic modes mean the same thing in both nodes.\r\nHelps addressing confusion between body modes (behavior in the simulation) and physics node types (specific features for different usage).\r\n\r\n**Rename MODE_DYNAMIC_LOCKED to MODE_DYNAMIC_LINEAR for rigid bodies:**\r\nClearer to indicate this mode is for dynamic bodies that can't rotate.\r\n\r\n**Brief summary update:**\r\nAlso updated description for the different physics nodes to make their usage clearer when adding nodes.\r\n(see https://github.com/godotengine/godot-proposals/issues/2867#issuecomment-881021772)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4417777,4418424,4418550,4418718,4418726,4418923]},{"id":711787438,"public_id":51596,"url":"https://github.com/godotengine/godot/pull/51596","diff_url":"https://github.com/godotengine/godot/pull/51596.diff","patch_url":"https://github.com/godotengine/godot/pull/51596.patch","title":"Optimize device calls when using Volk","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-12T23:38:07Z","updated_at":"2021-08-12T23:41:41Z","body":"Follow-up to https://github.com/godotengine/godot/pull/51516.\r\n\r\nThere are some issues with my current proof of concept implementation:\r\n\r\n- This won't work with local RenderingDevices as the [device table approach](https://github.com/zeux/volk#optimizing-device-calls) is not used. I started looking into doing this, but ran into an issue with the Vulkan memory allocator.\r\n\r\n<details>\r\n<summary>Diff of my attempt to use VolkDeviceTable</summary>\r\n\r\n```diff\r\ndiff --git a/drivers/vulkan/rendering_device_vulkan.cpp b/drivers/vulkan/rendering_device_vulkan.cpp\r\nindex f6677e2da4..b0debbfd42 100644\r\n--- a/drivers/vulkan/rendering_device_vulkan.cpp\r\n+++ b/drivers/vulkan/rendering_device_vulkan.cpp\r\n@@ -8778,6 +8778,10 @@ void RenderingDeviceVulkan::initialize(VulkanContext *p_context, bool p_local_de\r\n \r\n \tcontext = p_context;\r\n \tdevice = p_context->get_device();\r\n+#ifdef USE_VOLK\r\n+\tdevice_table = p_context->get_device_table();\r\n+#endif\r\n+\r\n \tif (p_local_device) {\r\n \t\tframe_count = 1;\r\n \t\tlocal_device = p_context->local_device_create();\r\n@@ -8793,7 +8797,11 @@ void RenderingDeviceVulkan::initialize(VulkanContext *p_context, bool p_local_de\r\n \t\tVmaAllocatorCreateInfo allocatorInfo;\r\n \t\tmemset(&allocatorInfo, 0, sizeof(VmaAllocatorCreateInfo));\r\n \t\tallocatorInfo.physicalDevice = p_context->get_physical_device();\r\n+#ifdef USE_VOLK\r\n+\t\tallocatorInfo.device = device_table;\r\n+#else\r\n \t\tallocatorInfo.device = device;\r\n+#endif\r\n \t\tvmaCreateAllocator(&allocatorInfo, &allocator);\r\n \t}\r\n \r\ndiff --git a/drivers/vulkan/rendering_device_vulkan.h b/drivers/vulkan/rendering_device_vulkan.h\r\nindex 6175369285..a4589100c5 100644\r\n--- a/drivers/vulkan/rendering_device_vulkan.h\r\n+++ b/drivers/vulkan/rendering_device_vulkan.h\r\n@@ -100,6 +100,9 @@ class RenderingDeviceVulkan : public RenderingDevice {\r\n \t};\r\n \r\n \tVkDevice device = VK_NULL_HANDLE;\r\n+#ifdef USE_VOLK\r\n+\tVolkDeviceTable device_table;\r\n+#endif\r\n \r\n \tMap<RID, Set<RID>> dependency_map; //IDs to IDs that depend on it\r\n \tMap<RID, Set<RID>> reverse_dependency_map; //same as above, but in reverse\r\ndiff --git a/drivers/vulkan/vulkan_context.cpp b/drivers/vulkan/vulkan_context.cpp\r\nindex 87749450c4..b41a36f23f 100644\r\n--- a/drivers/vulkan/vulkan_context.cpp\r\n+++ b/drivers/vulkan/vulkan_context.cpp\r\n@@ -682,7 +682,16 @@ Error VulkanContext::_create_physical_device() {\r\n \tinst_initialized = true;\r\n \r\n #ifdef USE_VOLK\r\n-\tvolkLoadInstance(inst);\r\n+\t// Godot supports using multiple Vulkan devices at the same time (local RenderingDevices),\r\n+\t// so we have to use the device table approach.\r\n+\t//\r\n+\t// \"Since volkLoadDevice overwrites some function pointers with device-specific versions,\r\n+\t// you can choose to use volkLoadInstanceOnly instead of volkLoadInstance;\r\n+\t// when using table-based interface this can also help enforce the usage\r\n+\t// of the function tables as volkLoadInstanceOnly will leave device-specific functions as NULL.\"\r\n+\t//\r\n+\t// https://github.com/zeux/volk#optimizing-device-calls\r\n+\tvolkLoadInstanceOnly(inst);\r\n #endif\r\n \r\n \t/* Make initial call to query gpu_count, then second call for gpu info*/\r\n@@ -1011,6 +1020,10 @@ Error VulkanContext::_create_device() {\r\n \terr = vkCreateDevice(gpu, &sdevice, nullptr, &device);\r\n \tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n+#ifdef USE_VOLK\r\n+\tvolkLoadDeviceTable(&device_table, device);\r\n+#endif\r\n+\r\n \treturn OK;\r\n }\r\n \r\n@@ -1082,7 +1095,7 @@ Error VulkanContext::_initialize_queues(VkSurfaceKHR p_surface) {\r\n \t\tGET_DEVICE_PROC_ADDR(device, GetPastPresentationTimingGOOGLE);\r\n \t}\r\n \r\n-\tvkGetDeviceQueue(device, graphics_queue_family_index, 0, &graphics_queue);\r\n+\tdevice_table.vkGetDeviceQueue(device, graphics_queue_family_index, 0, &graphics_queue);\r\n \r\n \tif (!separate_present_queue) {\r\n \t\tpresent_queue = graphics_queue;\r\n@@ -1167,14 +1180,14 @@ Error VulkanContext::_create_semaphores() {\r\n \t\t/*flags*/ VK_FENCE_CREATE_SIGNALED_BIT\r\n \t};\r\n \tfor (uint32_t i = 0; i < FRAME_LAG; i++) {\r\n-\t\terr = vkCreateFence(device, &fence_ci, nullptr, &fences[i]);\r\n+\t\terr = device_table.vkCreateFence(device, &fence_ci, nullptr, &fences[i]);\r\n \t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n-\t\terr = vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &draw_complete_semaphores[i]);\r\n+\t\terr = device_table.vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &draw_complete_semaphores[i]);\r\n \t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n \t\tif (separate_present_queue) {\r\n-\t\t\terr = vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &image_ownership_semaphores[i]);\r\n+\t\t\terr = device_table.vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &image_ownership_semaphores[i]);\r\n \t\t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \t\t}\r\n \t}\r\n@@ -1229,7 +1242,7 @@ Error VulkanContext::_window_create(DisplayServer::WindowID p_window_id, Display\r\n \t};\r\n \r\n \tfor (uint32_t i = 0; i < FRAME_LAG; i++) {\r\n-\t\tVkResult vkerr = vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &window.image_acquired_semaphores[i]);\r\n+\t\tVkResult vkerr = device_table.vkCreateSemaphore(device, &semaphoreCreateInfo, nullptr, &window.image_acquired_semaphores[i]);\r\n \t\tERR_FAIL_COND_V(vkerr, ERR_CANT_CREATE);\r\n \t}\r\n \r\n@@ -1540,7 +1553,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \r\n \t\tcolor_image_view.image = window->swapchain_image_resources[i].image;\r\n \r\n-\t\terr = vkCreateImageView(device, &color_image_view, nullptr, &window->swapchain_image_resources[i].view);\r\n+\t\terr = device_table.vkCreateImageView(device, &color_image_view, nullptr, &window->swapchain_image_resources[i].view);\r\n \t\tif (err) {\r\n \t\t\tfree(swapchainImages);\r\n \t\t\tERR_FAIL_V(ERR_CANT_CREATE);\r\n@@ -1593,7 +1606,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t/*pDependencies*/ nullptr,\r\n \t\t};\r\n \r\n-\t\terr = vkCreateRenderPass(device, &rp_info, nullptr, &window->render_pass);\r\n+\t\terr = device_table.vkCreateRenderPass(device, &rp_info, nullptr, &window->render_pass);\r\n \t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n \t\tfor (uint32_t i = 0; i < swapchainImageCount; i++) {\r\n@@ -1609,7 +1622,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t\t/*layers*/ 1,\r\n \t\t\t};\r\n \r\n-\t\t\terr = vkCreateFramebuffer(device, &fb_info, nullptr, &window->swapchain_image_resources[i].framebuffer);\r\n+\t\t\terr = device_table.vkCreateFramebuffer(device, &fb_info, nullptr, &window->swapchain_image_resources[i].framebuffer);\r\n \t\t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \t\t}\r\n \t}\r\n@@ -1623,7 +1636,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t/*flags*/ 0,\r\n \t\t\t/*queueFamilyIndex*/ present_queue_family_index,\r\n \t\t};\r\n-\t\terr = vkCreateCommandPool(device, &present_cmd_pool_info, nullptr, &window->present_cmd_pool);\r\n+\t\terr = device_table.vkCreateCommandPool(device, &present_cmd_pool_info, nullptr, &window->present_cmd_pool);\r\n \t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \t\tconst VkCommandBufferAllocateInfo present_cmd_info = {\r\n \t\t\t/*sType*/ VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,\r\n@@ -1633,7 +1646,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t/*commandBufferCount*/ 1,\r\n \t\t};\r\n \t\tfor (uint32_t i = 0; i < swapchainImageCount; i++) {\r\n-\t\t\terr = vkAllocateCommandBuffers(device, &present_cmd_info,\r\n+\t\t\terr = device_table.vkAllocateCommandBuffers(device, &present_cmd_info,\r\n \t\t\t\t\t&window->swapchain_image_resources[i].graphics_to_present_cmd);\r\n \t\t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n@@ -1643,7 +1656,7 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t\t/*flags*/ VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT,\r\n \t\t\t\t/*pInheritanceInfo*/ nullptr,\r\n \t\t\t};\r\n-\t\t\terr = vkBeginCommandBuffer(window->swapchain_image_resources[i].graphics_to_present_cmd, &cmd_buf_info);\r\n+\t\t\terr = device_table.vkBeginCommandBuffer(window->swapchain_image_resources[i].graphics_to_present_cmd, &cmd_buf_info);\r\n \t\t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \r\n \t\t\tVkImageMemoryBarrier image_ownership_barrier = {\r\n@@ -1659,9 +1672,9 @@ Error VulkanContext::_update_swap_chain(Window *window) {\r\n \t\t\t\t/*subresourceRange*/ { VK_IMAGE_ASPECT_COLOR_BIT, 0, 1, 0, 1 }\r\n \t\t\t};\r\n \r\n-\t\t\tvkCmdPipelineBarrier(window->swapchain_image_resources[i].graphics_to_present_cmd, VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,\r\n+\t\t\tdevice_table.vkCmdPipelineBarrier(window->swapchain_image_resources[i].graphics_to_present_cmd, VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,\r\n \t\t\t\t\tVK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT, 0, 0, nullptr, 0, nullptr, 1, &image_ownership_barrier);\r\n-\t\t\terr = vkEndCommandBuffer(window->swapchain_image_resources[i].graphics_to_present_cmd);\r\n+\t\t\terr = device_table.vkEndCommandBuffer(window->swapchain_image_resources[i].graphics_to_present_cmd);\r\n \t\t\tERR_FAIL_COND_V(err, ERR_CANT_CREATE);\r\n \t\t}\r\n \t}\r\n@@ -2018,11 +2031,17 @@ Error VulkanContext::swap_buffers() {\r\n void VulkanContext::resize_notify() {\r\n }\r\n \r\n-VkDevice VulkanContext::get_device() {\r\n+VkDevice VulkanContext::get_device() const {\r\n \treturn device;\r\n }\r\n \r\n-VkPhysicalDevice VulkanContext::get_physical_device() {\r\n+#ifdef USE_VOLK\r\n+VolkDeviceTable VulkanContext::get_device_table() const {\r\n+\treturn device_table;\r\n+}\r\n+#endif\r\n+\r\n+VkPhysicalDevice VulkanContext::get_physical_device() const {\r\n \treturn gpu;\r\n }\r\n \r\ndiff --git a/drivers/vulkan/vulkan_context.h b/drivers/vulkan/vulkan_context.h\r\nindex 1690b853e3..5660d7cb39 100644\r\n--- a/drivers/vulkan/vulkan_context.h\r\n+++ b/drivers/vulkan/vulkan_context.h\r\n@@ -79,6 +79,8 @@ private:\r\n \tuint32_t queue_family_count = 0;\r\n \tVkQueueFamilyProperties *queue_props = nullptr;\r\n \tVkDevice device = VK_NULL_HANDLE;\r\n+\t// See <https://github.com/zeux/volk#optimizing-device-calls> for the `device_table`'s purpose.\r\n+\tVolkDeviceTable device_table;\r\n \tbool device_initialized = false;\r\n \tbool inst_initialized = false;\r\n \r\n@@ -136,6 +138,8 @@ private:\r\n \tstruct LocalDevice {\r\n \t\tbool waiting = false;\r\n \t\tVkDevice device = VK_NULL_HANDLE;\r\n+\t\t// See <https://github.com/zeux/volk#optimizing-device-calls> for the `device_table`'s purpose.\r\n+\t\tVolkDeviceTable device_table;\r\n \t\tVkQueue queue = VK_NULL_HANDLE;\r\n \t};\r\n \r\n@@ -243,8 +247,11 @@ public:\r\n \tSubgroupCapabilities get_subgroup_capabilities() const { return subgroup_capabilities; };\r\n \tMultiviewCapabilities get_multiview_capabilities() const { return multiview_capabilities; };\r\n \r\n-\tVkDevice get_device();\r\n-\tVkPhysicalDevice get_physical_device();\r\n+\tVkDevice get_device() const;\r\n+#ifdef USE_VOLK\r\n+\tVolkDeviceTable get_device_table() const;\r\n+#endif\r\n+\tVkPhysicalDevice get_physical_device() const;\r\n \tint get_swapchain_image_count() const;\r\n \tuint32_t get_graphics_queue() const;\r\n \r\n```\r\n</details>\r\n\r\n- I could not notice any performance difference in two simple testing projects (one with just a cube, [another with a few spheres and SDFGI enabled](https://github.com/godotengine/godot/files/6979093/d.zip)).\r\n\r\n### With optimized device calls\r\n\r\n#### Run 1\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --fullscreen --path /tmp/d/ --print-fps\r\nGodot Engine v4.0.dev.custom_build.29d18c8cf - https://godotengine.org\r\nVulkan API 1.2.162\r\nUsing Vulkan Device #0: NVIDIA - NVIDIA GeForce GTX 1080\r\n\r\nProject FPS: 2 (500.0 mspf)\r\nProject FPS: 267 (3.7 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 341 (2.9 mspf)\r\nProject FPS: 341 (2.9 mspf)\r\nProject FPS: 336 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\n```\r\n\r\n#### Run 2\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --fullscreen --path /tmp/d/ --print-fps\r\nGodot Engine v4.0.dev.custom_build.29d18c8cf - https://godotengine.org\r\nVulkan API 1.2.162\r\nUsing Vulkan Device #0: NVIDIA - NVIDIA GeForce GTX 1080\r\n\r\nProject FPS: 2 (500.0 mspf)\r\nProject FPS: 275 (3.6 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 337 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\n```\r\n\r\n### Without optimized device calls\r\n\r\n#### Run 1\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm.vanilla --fullscreen --path /tmp/d/ --print-fps\r\nGodot Engine v4.0.dev.custom_build.a98589a44 - https://godotengine.org\r\nVulkan API 1.2.162\r\nUsing Vulkan Device #0: NVIDIA - NVIDIA GeForce GTX 1080\r\n\r\nProject FPS: 1 (1000.0 mspf)\r\nProject FPS: 63 (15.8 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\n```\r\n\r\n#### Run 2\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm.vanilla --fullscreen --path /tmp/d/ --print-fps\r\nGodot Engine v4.0.dev.custom_build.a98589a44 - https://godotengine.org\r\nVulkan API 1.2.162\r\nUsing Vulkan Device #0: NVIDIA - NVIDIA GeForce GTX 1080\r\n\r\nProject FPS: 2 (500.0 mspf)\r\nProject FPS: 275 (3.6 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 337 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 340 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 338 (2.9 mspf)\r\nProject FPS: 337 (2.9 mspf)\r\nProject FPS: 339 (2.9 mspf)\r\nProject FPS: 338 (2.9 mspf)\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":711777242,"public_id":51595,"url":"https://github.com/godotengine/godot/pull/51595","diff_url":"https://github.com/godotengine/godot/pull/51595.diff","patch_url":"https://github.com/godotengine/godot/pull/51595.patch","title":"Make `get_position` and `get_global_position` part of CanvasItem","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-12T23:28:50Z","updated_at":"2021-08-14T14:59:24Z","body":"The existence of `get_position()` on CanvasItem is implied by the existence of `get_transform()`, since you can do `get_transform().origin`. Same with `get_global_position()` and `get_global_transform().origin`.\r\n\r\nThis PR does not change anything else such as `set_position`. We could, since both Control and Node2D have this ability, however I'm not sure that would be good idea since theoretically someone could make third custom class that inherits CanvasItem that doesn't have this ability (yet *getting* the position and transform is always implied since the node needs to be rendered etc).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418733,4418914]},{"id":711707650,"public_id":51593,"url":"https://github.com/godotengine/godot/pull/51593","diff_url":"https://github.com/godotengine/godot/pull/51593.diff","patch_url":"https://github.com/godotengine/godot/pull/51593.patch","title":" Prevent crash when awaiting in a getter/setter","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-12T22:28:07Z","updated_at":"2021-08-12T22:28:07Z","body":"Fixes #51588\r\nProbably not a proper fix, because getters with await can't be called (still better than editor crash). Setters will work properly.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":711653114,"public_id":51591,"url":"https://github.com/godotengine/godot/pull/51591","diff_url":"https://github.com/godotengine/godot/pull/51591.diff","patch_url":"https://github.com/godotengine/godot/pull/51591.patch","title":"Make `{call,set,notify}_group()` immediate by default","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-12T21:43:48Z","updated_at":"2021-08-12T21:47:15Z","body":"This results in less surprising behavior out of the box.\n\nInternal usages were modified to keep the existing behavior identical there.\n\nI've briefly tested the editor and projects and couldn't notice regressions, but I'd recommend having someone else give it a try locally before merging.\n\nThis closes https://github.com/godotengine/godot-proposals/issues/2671.\n\n\n<!--\nPull requests should always be made for the `master` branch first, as that's\nwhere development happens and the source of all future stable release branches.\n\nRelevant fixes are cherry-picked for stable branches as needed.\n\nDo not create a pull request for stable branches unless the change is already\navailable in the `master` branch and it cannot be easily cherry-picked.\nAlternatively, if the change is only relevant for that branch (e.g. rendering\nfixes for the 3.2 branch).\n-->","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418726,4418914]},{"id":711630760,"public_id":51590,"url":"https://github.com/godotengine/godot/pull/51590","diff_url":"https://github.com/godotengine/godot/pull/51590.diff","patch_url":"https://github.com/godotengine/godot/pull/51590.patch","title":"Explicit 2D naming and some organization in texture region editor plugin","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-12T21:26:19Z","updated_at":"2021-08-13T16:34:53Z","body":"This PR does two things:\r\n\r\n* Rename Sprite2D code to be explicitly named with 2D: `node_sprite_2d` and `get_sprite_2d`.\r\n* Organize the `if` statements to have the atlas stuff first so that the 2D and 3D stuff are both on `} else if (` lines. This change makes it so that the Sprite2D and Sprite3D code is lined up for slightly easier readability.\r\n  * This also makes it easier to disable these lines of code in the event that someone compiles the editor without Sprite2D or Sprite3D (though that's not possible at the moment).\r\n\r\nThis code is not exposed, it's only used by the editor. This PR shouldn't change the behavior.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":711142938,"public_id":51576,"url":"https://github.com/godotengine/godot/pull/51576","diff_url":"https://github.com/godotengine/godot/pull/51576.diff","patch_url":"https://github.com/godotengine/godot/pull/51576.patch","title":"Fix AnimationTree function call track loop","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-08-12T15:41:14Z","updated_at":"2021-08-12T19:12:40Z","body":"Fixes #50636.\r\n\r\nIf the animation does not loop, delta time should be set to zero if we're already at the end of the animation.\r\n\r\nNot 100% sure this is the correct fix, but it does resolve the call loop in that issue.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":710890390,"public_id":51569,"url":"https://github.com/godotengine/godot/pull/51569","diff_url":"https://github.com/godotengine/godot/pull/51569.diff","patch_url":"https://github.com/godotengine/godot/pull/51569.patch","title":"Move 3D scene import classes to their own folder","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-08-12T13:10:19Z","updated_at":"2021-08-12T16:50:54Z","body":"This PR moves 3D scene import classes to their own folder (`editor/import/3d`). Previously the 3D scene import classes were in the same place as mostly unrelated files such as texture and audio importers.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":710549195,"public_id":51551,"url":"https://github.com/godotengine/godot/pull/51551","diff_url":"https://github.com/godotengine/godot/pull/51551.diff","patch_url":"https://github.com/godotengine/godot/pull/51551.patch","title":"Fix zooming in 2D editor","state":"open","is_draft":false,"authored_by":{"id":28705694,"user":"floppyhammer","avater":"https://avatars.githubusercontent.com/u/28705694?v=4","url":"https://github.com/floppyhammer"},"created_at":"2021-08-12T09:23:38Z","updated_at":"2021-08-13T09:39:23Z","body":"Fixes #51542.\r\n\r\n![zooming](https://user-images.githubusercontent.com/28705694/129172659-b00616f6-c755-40b4-8465-20d4696d379e.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542]},{"id":710396004,"public_id":51550,"url":"https://github.com/godotengine/godot/pull/51550","diff_url":"https://github.com/godotengine/godot/pull/51550.diff","patch_url":"https://github.com/godotengine/godot/pull/51550.patch","title":"[macOS export, 3.x] Implements ad-hoc signing on Linux/Windows.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-08-12T07:40:24Z","updated_at":"2021-08-12T07:40:24Z","body":"Backport of #51310 for 3.x","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":2909900850,"name":"topic:export","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112904,4418518]},{"id":710347764,"public_id":51547,"url":"https://github.com/godotengine/godot/pull/51547","diff_url":"https://github.com/godotengine/godot/pull/51547.diff","patch_url":"https://github.com/godotengine/godot/pull/51547.patch","title":"Add 'child_manipulation_disabled' property to Container","state":"open","is_draft":false,"authored_by":{"id":44363049,"user":"spectreseven1138","avater":"https://avatars.githubusercontent.com/u/44363049?v=4","url":"https://github.com/spectreseven1138"},"created_at":"2021-08-12T07:05:37Z","updated_at":"2021-08-13T03:23:03Z","body":"Added the `child_manipulation_disabled` property to the Container class, which stops `queue_sort()` from queueing the sort unless overridden via the `ignore_child_manipulation_disabled` argument.\r\n\r\nThis allows users to use Containers such as BoxContainers and PanelContainers to place children initially, but then directly control the properties of the children in a script without having to worry about the Container overriding them when the size changes. The issue can somewhat be worked around by setting properties of the children after the Container has sorted them, but this introduces a noticeable flicker.\r\n\r\nExample of implementation:\r\n[Without `child_manipulation_disabled`](https://user-images.githubusercontent.com/44363049/129152654-905b689f-f861-422a-88ea-70915723e3f8.mp4)\r\n[With `child_manipulation_disabled`](https://user-images.githubusercontent.com/44363049/129152658-e5f94f55-4e37-44bb-a9ce-22df8d1900f1.mp4)\r\n\r\nMaster implementation does not work due to https://github.com/godotengine/godot/issues/51543\r\n\r\nEdit: Godot improvement proposal [here](https://github.com/godotengine/godot-proposals/issues/3123)\r\nEdit: Renamed property name from `sort_disabled` to `child_manipulation_disabled`","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418733]},{"id":710251805,"public_id":51544,"url":"https://github.com/godotengine/godot/pull/51544","diff_url":"https://github.com/godotengine/godot/pull/51544.diff","patch_url":"https://github.com/godotengine/godot/pull/51544.patch","title":"Particles: Work around race for CurveTexture background loading","state":"open","is_draft":false,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2021-08-12T05:50:28Z","updated_at":"2021-08-12T07:49:30Z","body":"Fixes #23684 by saving the result of the first check to avoid a discrepancy.\r\n\r\n---\r\n\r\nI haven't checked if `master` is affected but for good measure, I'm fixing it everywhere.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":709819153,"public_id":51531,"url":"https://github.com/godotengine/godot/pull/51531","diff_url":"https://github.com/godotengine/godot/pull/51531.diff","patch_url":"https://github.com/godotengine/godot/pull/51531.patch","title":"Add Nearest Mipmap Anisotropic filter option to decals and projectors","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-11T23:35:05Z","updated_at":"2021-08-16T03:39:18Z","body":"This is consistent with the BaseMaterial3D filtering options. It can be used for high-quality pixel art textures that remain sharp when viewed at oblique angles, but prevents them from becoming grainy thanks to mipmaps.\r\n\r\nThe options were also reordered to be consistent with the sampling options available in BaseMaterial3D.\r\n\r\n## Preview\r\n\r\n*Click to view at full size.*\r\n\r\n### Nearest Mipmap\r\n\r\n![Nearest Mipmap](https://user-images.githubusercontent.com/180032/129116867-909823a3-3723-4af2-b61a-d6804ddc213b.png)\r\n\r\n### Nearest Mipmap Anisotropic (16×)\r\n\r\n![Nearest Mipmap Anisotropic](https://user-images.githubusercontent.com/180032/129116865-6d588381-0d16-4357-97cb-32aeadb74938.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":709719193,"public_id":51529,"url":"https://github.com/godotengine/godot/pull/51529","diff_url":"https://github.com/godotengine/godot/pull/51529.diff","patch_url":"https://github.com/godotengine/godot/pull/51529.patch","title":"Set looping on OGGVorbis default import options to false","state":"open","is_draft":false,"authored_by":{"id":4182183,"user":"MichaelShaulskiy","avater":"https://avatars.githubusercontent.com/u/4182183?v=4","url":"https://github.com/MichaelShaulskiy"},"created_at":"2021-08-11T22:11:35Z","updated_at":"2021-08-11T23:18:26Z","body":"This was a cause of confusion for me when I was participating in a game jam.\r\nAlthough I had disabled looping on the AudioStreamPlayer2D node, this change had no effect.\r\n\r\nI discovered that the OGG import settings where to blame which have looping turned on by default.\r\n\r\nFirst off all, this option shouldn't even exist. Looping should be controlled by the AudioStreamPlayer only and not be inherent to a resource.\r\nMe and according to google many others had encountered a \"bug\" where a sound, that shouldn't be looping was looping despite looping being turned of in the Node.\r\n\r\nInstead of removing it outright right now, maybe it should be turned off by default to not break any projects.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/3120.*","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418392]},{"id":709150421,"public_id":51518,"url":"https://github.com/godotengine/godot/pull/51518","diff_url":"https://github.com/godotengine/godot/pull/51518.diff","patch_url":"https://github.com/godotengine/godot/pull/51518.patch","title":"Document Android permission requirements for network access where needed","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-11T15:34:05Z","updated_at":"2021-08-11T22:17:30Z","body":"This is a common point of confusion for new users, so it's important to denote it everywhere the permission is needed.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":708049678,"public_id":51491,"url":"https://github.com/godotengine/godot/pull/51491","diff_url":"https://github.com/godotengine/godot/pull/51491.diff","patch_url":"https://github.com/godotengine/godot/pull/51491.patch","title":"Add high quality glow mode (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-11T02:44:53Z","updated_at":"2021-08-11T15:00:44Z","body":"This backports the high quality glow mode from the `master` branch. Thanks @clayjohn for the original implementation :slightly_smiling_face:\r\n\r\nPreviously, during downsample, every second row was ignored. Now, when high-quality is used, we sample two rows at once to ensure that no pixel is missed. It is slower, but looks much better and has a much high stability while moving.\r\n\r\nHigh quality also takes an additional horizontal sample the width of the horizontal blur matches the height of the vertical blur.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/43110.\r\n\r\n## Preview\r\n\r\n### GLES3\r\n\r\n| Low quality (default) | High quality |\r\n|-|-|\r\n| ![2021-08-11_04 45 52](https://user-images.githubusercontent.com/180032/128961647-169342c4-ebcf-48a2-bf0b-90f1d9d08092.png) | ![2021-08-11_04 40 25](https://user-images.githubusercontent.com/180032/128961652-86c2f55c-f20f-4b37-9de7-0ae0a6c9fa4d.png) |\r\n\r\n### GLES2 (Bloom = 1, since there is no HDR)\r\n\r\n| Low quality (default) | High quality |\r\n|-|-|\r\n| ![2021-08-11_04 42 38](https://user-images.githubusercontent.com/180032/128961609-f2844dc5-9889-41dd-a0cd-66f4b5d5df81.png) | ![2021-08-11_04 42 41](https://user-images.githubusercontent.com/180032/128961613-bf464fd1-c860-423c-8555-55b31b5d06dd.png) |","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449]},{"id":707670612,"public_id":51481,"url":"https://github.com/godotengine/godot/pull/51481","diff_url":"https://github.com/godotengine/godot/pull/51481.diff","patch_url":"https://github.com/godotengine/godot/pull/51481.patch","title":"[Net] Rename RPC \"puppet\" to \"master\", drop old \"master\".","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-08-10T20:24:26Z","updated_at":"2021-08-11T16:31:54Z","body":"`RPC_MODE_MASTER` in Godot 3.x meant that a given RPC would be callable by any puppet peer on the master, while `RPC_MODE_PUPPET` meant that it would be callable by the master on any puppet.\r\n\r\nBeside proving to be very confusing to the user (referring to where it could be called instead of who can call it) the `RPC_MODE_MASTER` is quite useless.\r\nIt is almost the same as `RPC_MODE_REMOTE` (anyone can call) with the exception that the network master cannot. While this could be useful to check in some case, in such a function you would anyway need to check in code who is the caller via `get_rpc_sender_id()`, so adding the check there for those rare cases does not warrants a dedicated mode.\r\n\r\nThis PR also slightly improve the GDScript `@rpc` annotation to allow any order for the string arguments.","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3857901,4038183,4417868,4418914]},{"id":707532253,"public_id":51478,"url":"https://github.com/godotengine/godot/pull/51478","diff_url":"https://github.com/godotengine/godot/pull/51478.diff","patch_url":"https://github.com/godotengine/godot/pull/51478.patch","title":"Streamline the project import workflow.","state":"open","is_draft":false,"authored_by":{"id":11571820,"user":"starry-abyss","avater":"https://avatars.githubusercontent.com/u/11571820?v=4","url":"https://github.com/starry-abyss"},"created_at":"2021-08-10T17:45:47Z","updated_at":"2021-08-10T22:14:58Z","body":"The goal of this PR is to ease the steps required to import a project.\r\n\r\n![image](https://user-images.githubusercontent.com/11571820/128908659-4e75ed36-b8e8-45bb-9505-02d41b10f958.png)\r\n\r\nAfter clicking Import, the file selection dialog is immediately shown, and the original dialog is only presented after something is selected.\r\n\r\nThe project file selection dialog now also supports selecting a directory, similar to Scan mode. Changes to Any mode of the selection dialog are because I wanted it to offer full functionality of both File and Directory selection modes.\r\n\r\nNotes:\r\n1) I noticed that after going from zip install mode back to import, the dialog is made higher (as in the install mode) forever:\r\n![image](https://user-images.githubusercontent.com/11571820/128906049-6b13b0c8-1442-4e13-8719-ec3380dc62a4.png)\r\n\r\nNot sure how to reduce it back yet.\r\n \r\n2) I was going to also merge Import and Scan, but not sure about the best approach to show Scan option in the UI of Import. Maybe it's for after this PR is merged.\r\n\r\n3) ask_for_path_and_show() function with only one line is because the called function is private.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":707338542,"public_id":51471,"url":"https://github.com/godotengine/godot/pull/51471","diff_url":"https://github.com/godotengine/godot/pull/51471.diff","patch_url":"https://github.com/godotengine/godot/pull/51471.patch","title":"Fix crash in EditorPropertyArray","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-10T13:08:11Z","updated_at":"2021-08-10T18:45:35Z","body":"Fixes #51298 (probably)\r\nI managed to trigger the condition a few times and prevent a crash, but not sure if it prevents all crashes.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":707046714,"public_id":51466,"url":"https://github.com/godotengine/godot/pull/51466","diff_url":"https://github.com/godotengine/godot/pull/51466.diff","patch_url":"https://github.com/godotengine/godot/pull/51466.patch","title":"[Net] Enet optimizations and fixes for sending unreliable enet traffic larger than enets 1400 byte MTU","state":"open","is_draft":false,"authored_by":{"id":323868,"user":"jordo","avater":"https://avatars.githubusercontent.com/u/323868?v=4","url":"https://github.com/jordo"},"created_at":"2021-08-10T05:45:05Z","updated_at":"2021-08-20T17:11:58Z","body":"This PR includes some of the enet optimizations and fixes we have been using on our private godot fork.\r\n\r\nThis PR address the following:\r\n\r\n * Current NetworkedMultiplayerEnet does not set the flag `ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT` when sending data on the unreliable enet transport.    Enet's internal MTU is configured to be 1400 bytes.  **If you do not set this flag, Enet will deliver messages that are larger than 1400 bytes RELIABLY**.  The following is output from a gameserver with `ENET_DEBUG` defined in enet's `protocol.c` source.  This was really surprising to us to see enet queue up outgoing packets even though our godot application was sending everything unreliably.  Unless the `ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT` flag is set (https://github.com/lsalzman/enet/blob/74cea7abf52ddd355146aeb0a4077d2b95368122/include/enet/enet.h#L115), Enet will deliver unreliable messages over 1400 bytes reliably as enet by default will attempt to re-assemble fragments.  \r\n```\r\n\"peer 0: 0.000000%+-0.000000% packet loss, 16+-4 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.000000%+-0.000000% packet loss, 19+-4 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.000229%+-0.000458% packet loss, 16+-3 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.000839%+-0.001678% packet loss, 18+-4 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.000626%+-0.001160% packet loss, 20+-4 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.002182%+-0.003952% packet loss, 20+-4 ms round trip time, 1.000000% throttle, 9 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.000885%+-0.001404% packet loss, 23+-7 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.001907%+-0.003510% packet loss, 23+-7 ms round trip time, 1.000000% throttle, 0 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.002213%+-0.002319% packet loss, 94+-75 ms round trip time, 0.000000% throttle, 2404 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.002472%+-0.002274% packet loss, 394+-93 ms round trip time, 0.000000% throttle, 7114 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.029907%+-0.056595% packet loss, 639+-161 ms round trip time, 0.062500% throttle, 10664 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.063278%+-0.109177% packet loss, 824+-7 ms round trip time, 1.000000% throttle, 13068 outgoing, 0/0 incoming\\r\\n\"\r\n\"peer 0: 0.093979%+-0.143295% packet loss, 1006+-7 ms round trip time, 1.000000% throttle, 15179 outgoing, 0/0 incoming\\r\\n\"\r\n```\r\n\r\n* The current implementation of `enet_socket_send` in godot (`godot.cpp`), makes a surperflous copy of outbound data before sending it out on the socket.   https://github.com/godotengine/godot/pull/7985/files#diff-4b4db5dcc81b5bff9d43a2bf9b6193316d1b822fe8a310f34b324f0a9e451d3dR143-R148   This is due mainly to the fact that enet wants to to send data via `sendmsg` on posix platforms, and `WSASendTo` on windows (in `win23.c` and `unix.c` within the enet library).  Both these platform functions allow an application to send a list of packets ( A packet being a data pointer and length).  `Netsocket` does not expose a similar interface, so a copy has to be made from each of outgoing packets within `enet_socket_send`.    This PR adds `sendmsg` type support to `Netsocket` which allows godot to send a list of packets implemented with `sendmsg` and `WSASendTo` on supported godot platforms.  Supporting this api in `Netsocket` allows this PR to remove the superfluous memcopy in `enet_socket_send` in `godot.cpp`.\r\n\r\n* Lastly, an improvement is made to how enet is serviced in `NetworkedMultiplayerENet::poll`.  The current implementation is to loop on `enet_host_service()`.  This method of servicing enet has a potential starvation issue that we encountered, which can lead to unexpected durations of how long the godot main thread is spending in `NetworkedMultiplayerENet::poll`.  This is especially not wanted, if you are polling enet on the main thread of a game engine (there is no guarantee the loop will ever stop).  If you have clients that send data fast enough, enet will continue to service these messages, and it can be tough to break out of the loop and lead to starvation issues.  A solution by the enet library developer was to add `enet_host_check_events()`.  This can be used to process all the events queued up for processing by a single call to `enet_host_service()`.  This is somewhat described in this response here: https://github.com/lsalzman/enet/issues/126#issuecomment-802652587    A single call to`enet_host_service()` will hit the socket, and queue all incoming messages for processing in enet.    Repeatedly calling `enet_host_check_events()` doesn't touch the socket at all, and will process all queued messages until there are none left.  This technique is described the enet library's developer here: https://www.mail-archive.com/enet-discuss@cubik.org/msg00947.html and http://lists.cubik.org/pipermail/enet-discuss/2013-September/002238.html.\r\n\r\n* Of note - I have NOT been able to test `NetSocketPosix::sendmsg` on windows.  `NetSocketPosix::sendmsg` does have an `#ifdef` for the windows platform here but I believe it's a good tradeoff here to support this api, as it allows a lot of efficiencies especially when specifically working with the enet api.  The spec for `WSASendTo` seems reasonably straight forward (https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasendto) however I currently don't have a machine to test this path.\r\n\r\nThis change can be cherry picked to 4.0 master as well.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518,4418914]},{"id":706997194,"public_id":51459,"url":"https://github.com/godotengine/godot/pull/51459","diff_url":"https://github.com/godotengine/godot/pull/51459.diff","patch_url":"https://github.com/godotengine/godot/pull/51459.patch","title":"Fixed behavior of insert track queue in `AnimationTrackEditor` is unstable","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-08-10T03:21:35Z","updated_at":"2021-08-16T15:17:19Z","body":"Fixed #51415.\r\n\r\nThe queue for insert track in `AnimationTrackEditor` gets the drawing frame of the Engine and determines if the operation was done on the same frame. Why do we implement it this way? This implementation seems to be special compared to other queues.\r\n\r\nThere does not seem to be any code anywhere that uses the insert track queue, but when we actually try to use it, it does not work well in 4.0 (at least it was working well in 3.3) where the renderer has changed significantly.\r\n\r\nI made it so that the queue creation and commit is done manually.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":706964820,"public_id":51456,"url":"https://github.com/godotengine/godot/pull/51456","diff_url":"https://github.com/godotengine/godot/pull/51456.diff","patch_url":"https://github.com/godotengine/godot/pull/51456.patch","title":"Call _init on base class if one does not exist.","state":"open","is_draft":false,"authored_by":{"id":12756047,"user":"SaracenOne","avater":"https://avatars.githubusercontent.com/u/12756047?v=4","url":"https://github.com/SaracenOne"},"created_at":"2021-08-10T01:43:03Z","updated_at":"2021-08-10T16:38:49Z","body":"Fixes this issue (https://github.com/godotengine/godot/issues/50590)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":706879550,"public_id":51452,"url":"https://github.com/godotengine/godot/pull/51452","diff_url":"https://github.com/godotengine/godot/pull/51452.diff","patch_url":"https://github.com/godotengine/godot/pull/51452.patch","title":"Rename or refactor macros to avoid leading underscores","state":"open","is_draft":false,"authored_by":{"id":47739920,"user":"omar-polo","avater":"https://avatars.githubusercontent.com/u/47739920?v=4","url":"https://github.com/omar-polo"},"created_at":"2021-08-09T21:51:34Z","updated_at":"2021-08-17T14:36:21Z","body":"Since I've ventilated the idea in https://github.com/godotengine/godot/issues/51435 here's an attempt.  After this, there is only [one macro left](https://github.com/godotengine/godot/blob/master/platform/windows/context_gl_windows.cpp#L86) whose names begins with an underscore across all the *.cpp files in the tree -- `_WGL_CONTEXT_DEBUG_BIT_ARB` is actually unused, only mentioned in a comment.\r\n\r\nRealistically speaking, I think that only the first two commit should be committed.  The first fixes a warning when compiling on OpenBSD, and the second removes two unused macros.  The third commit, \"macro ->constexpr conversion\", can be useful, as it removes some macros in favor of C++14 constexprs which avoids possible name clashes with external libraries.  The last two commits are mostly aesthetic (except for the `#undef`s maybe) and can be dropped: even if those macros have illegal names the chance of a name clash is unlikely.\r\n\r\nedit: the format script keeps failing because one of the macros isn't aligned.  I haven't fixed that on purpose: I'm only changing the name, not the body of it (that clang-format wants to change)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,3609449,4417777,4418914]},{"id":706872094,"public_id":51451,"url":"https://github.com/godotengine/godot/pull/51451","diff_url":"https://github.com/godotengine/godot/pull/51451.diff","patch_url":"https://github.com/godotengine/godot/pull/51451.patch","title":"Fix crashing autoloaded singleton from calling another autoloaded in _ready","state":"open","is_draft":true,"authored_by":{"id":12756047,"user":"SaracenOne","avater":"https://avatars.githubusercontent.com/u/12756047?v=4","url":"https://github.com/SaracenOne"},"created_at":"2021-08-09T21:34:54Z","updated_at":"2021-08-09T23:47:59Z","body":"Work in progress fix for this issue (https://github.com/godotengine/godot/issues/50471). Prevents the crashing, but not a complete solution yet since it still prints errors and requires loading the autoload singletons twice.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":706805232,"public_id":51449,"url":"https://github.com/godotengine/godot/pull/51449","diff_url":"https://github.com/godotengine/godot/pull/51449.diff","patch_url":"https://github.com/godotengine/godot/pull/51449.patch","title":"Increase djb2 hash quality by using xor instead of add.","state":"open","is_draft":false,"authored_by":{"id":651449,"user":"logzero","avater":"https://avatars.githubusercontent.com/u/651449?v=4","url":"https://github.com/logzero"},"created_at":"2021-08-09T20:09:39Z","updated_at":"2021-08-09T20:17:44Z","body":"Using xor somewhat increases hash quality and deals with the pathological case identified in the issue #51023\r\n\r\nI've seen this djb2 variant being called djb2a. I don't think it is an official name though. So I didn't change function names.\r\n\r\nI have no idea if this change has any side effects as this is my first time working with Godot code.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":706796429,"public_id":51448,"url":"https://github.com/godotengine/godot/pull/51448","diff_url":"https://github.com/godotengine/godot/pull/51448.diff","patch_url":"https://github.com/godotengine/godot/pull/51448.patch","title":"Allocate unique track_blends vector for animation states","state":"open","is_draft":false,"authored_by":{"id":12756047,"user":"SaracenOne","avater":"https://avatars.githubusercontent.com/u/12756047?v=4","url":"https://github.com/SaracenOne"},"created_at":"2021-08-09T19:56:44Z","updated_at":"2021-08-10T13:44:56Z","body":"This is a fix for the bug logged here (https://github.com/godotengine/godot/issues/51408). The only downside is that the fix introduces an extra memory allocation since it know longer uses the pointers to AnimationNode blends directly in order to prevent memory being overwritten on instanced animation state machines. There are ways this could be cached, so requesting feedback for profiling and alternative suggestions on how to fix.\r\n\r\n*Bugsquad edit:* Fixes #51408.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":706717886,"public_id":51443,"url":"https://github.com/godotengine/godot/pull/51443","diff_url":"https://github.com/godotengine/godot/pull/51443.diff","patch_url":"https://github.com/godotengine/godot/pull/51443.patch","title":"[Net] [Editor] Network scenes configuration.","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-08-09T17:49:09Z","updated_at":"2021-08-11T16:37:29Z","body":"Add and remove \"spawnables\" (#51097) from project settings via the editor.\r\n\"SPAWN_MODE_SERVER\" only, since for custom mode you'll end up with your own registration logic anyway.\r\n\r\n![Network Scenes settings editor](https://user-images.githubusercontent.com/1687918/128750638-9c7c478a-3dad-4f65-bce8-ce1db3300163.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":706606588,"public_id":51438,"url":"https://github.com/godotengine/godot/pull/51438","diff_url":"https://github.com/godotengine/godot/pull/51438.diff","patch_url":"https://github.com/godotengine/godot/pull/51438.patch","title":"[3.x] Make 3D selection box offset independent of object size","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-08-09T15:09:02Z","updated_at":"2021-08-09T15:09:02Z","body":"`3.x` version of #51437.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":706606443,"public_id":51437,"url":"https://github.com/godotengine/godot/pull/51437","diff_url":"https://github.com/godotengine/godot/pull/51437.diff","patch_url":"https://github.com/godotengine/godot/pull/51437.patch","title":"Make 3D selection box offset independent of object size","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-08-09T15:08:52Z","updated_at":"2021-08-09T15:08:53Z","body":"Closes #51419.\r\n\r\nThe offset between object and the inner selection box, and the offset between the inner and outer selection boxes were fixed in the unit selection box and later scaled according to the object size. So the offsets were proportional to the object size.\r\n\r\nThis PR offsets the selection boxes by adjusting the scale, so that the offsets are independent of object size.\r\n\r\n---\r\n\r\nAlso fixed a typo where `sbox_instance` was mixed up with `sbox_instance_xray`.\r\n\r\nhttps://github.com/godotengine/godot/blob/25fd4edd2922e026976a20c495984c7c32ea8b5d/editor/plugins/node_3d_editor_plugin.cpp#L4808-L4818\r\n\r\nLine 4808 and 4818 are the same, and the latter should be using `sbox_instance_xray`.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":706509563,"public_id":51433,"url":"https://github.com/godotengine/godot/pull/51433","diff_url":"https://github.com/godotengine/godot/pull/51433.diff","patch_url":"https://github.com/godotengine/godot/pull/51433.patch","title":"Improve the appearance of simple parallax in SpatialMaterial","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-09T13:12:36Z","updated_at":"2021-08-09T13:12:53Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/50383.\n\nThis uses offset limiting to avoid distortion in the distance, and makes simple (non-deep) parallax more usable overall.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":706366010,"public_id":51429,"url":"https://github.com/godotengine/godot/pull/51429","diff_url":"https://github.com/godotengine/godot/pull/51429.diff","patch_url":"https://github.com/godotengine/godot/pull/51429.patch","title":"use .get_basename() instead of basename from libc","state":"open","is_draft":false,"authored_by":{"id":47739920,"user":"omar-polo","avater":"https://avatars.githubusercontent.com/u/47739920?v=4","url":"https://github.com/omar-polo"},"created_at":"2021-08-09T09:40:34Z","updated_at":"2021-08-09T09:44:46Z","body":"This fixes issue #48938","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112907]},{"id":706349073,"public_id":51426,"url":"https://github.com/godotengine/godot/pull/51426","diff_url":"https://github.com/godotengine/godot/pull/51426.diff","patch_url":"https://github.com/godotengine/godot/pull/51426.patch","title":"Add the sndio driver","state":"open","is_draft":false,"authored_by":{"id":47739920,"user":"omar-polo","avater":"https://avatars.githubusercontent.com/u/47739920?v=4","url":"https://github.com/omar-polo"},"created_at":"2021-08-09T09:15:32Z","updated_at":"2021-08-10T04:02:08Z","body":"This adds an additional audio driver for `sndio`, as per https://github.com/godotengine/godot-proposals/issues/3097\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828782,3112907,4418518]},{"id":706128609,"public_id":51413,"url":"https://github.com/godotengine/godot/pull/51413","diff_url":"https://github.com/godotengine/godot/pull/51413.diff","patch_url":"https://github.com/godotengine/godot/pull/51413.patch","title":"Add option to not expand tree on node select","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-08T23:59:26Z","updated_at":"2021-08-11T23:46:46Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/3095\r\n\r\nAdded as button in the toolbar, next to list select:\r\n![image](https://user-images.githubusercontent.com/2223172/128649278-c9a47d38-b155-4f1e-a5a0-3268ed648b28.png)\r\n\r\nNot sure about the button placement. Right now it's both in 2D and 3D editor and they are synced. But the worst thing is that there is now mutual dependency between SceneTreeEditor and CanvasItem/Node3DEditor. If anyone has a better idea where to put it (perfectly somewhere within scene tree dock), suggestions welcome.\r\n\r\nAlso seems like expand to selected is broken on master, so this can't be fully tested lol","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":706112669,"public_id":51409,"url":"https://github.com/godotengine/godot/pull/51409","diff_url":"https://github.com/godotengine/godot/pull/51409.diff","patch_url":"https://github.com/godotengine/godot/pull/51409.patch","title":"Use range iterators for `Map` in most cases","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-08-08T21:57:46Z","updated_at":"2021-08-19T21:08:24Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nSee https://github.com/godotengine/godot/pull/50284\r\nTries to convert iterators to be `const` whenever possible.\r\n\r\n*Bugsquad edit: Follow-up to https://github.com/godotengine/godot/pull/50511.*\r\n\r\n<details>\r\n<summary>Python script used, although I've made some manual fixup changes too.</summary>\r\n\r\n```py\r\nimport os\r\nimport re\r\n\r\n\r\ndef const_only_usage() -> bool:\r\n\tassigned_to_regex = r\"[^\\s]+? [&*]?[_a-zA-Z][_a-zA-Z0-9]* = &?(Object::cast_to<.+?>\\()?\" + re.escape(iterator_name) + r\"\\.value(((\\.|->).+?)+)?;\"\r\n\titerated_through_regex = r\"\\([^\\s]+? &[_a-zA-Z][_a-zA-Z0-9]* : \" + re.escape(iterator_name) + r\"\\.value\\)\"\r\n\t\r\n\t# Assigned to a constant value, must be constant.\r\n\tif re.search(f\"const {assigned_to_regex}\", slice) != None:\r\n\t\treturn True\r\n\tif re.search(f\"const {iterated_through_regex}\", slice) != None:\r\n\t\treturn True\r\n\r\n\t# Regexes to check.\r\n\tconst_checks = [\r\n\t\t# Value or sub-value assigned.\r\n\t\tre.compile(iterator_name + r\"\\.value(((\\.|->).+?)+)?(\\[.+?\\])? = .+?;\"),\r\n\t\t# Assigned to non-const value.\r\n\t\tre.compile(assigned_to_regex),\r\n\t\tre.compile(iterated_through_regex),\r\n\t\t# Non-const method called on value or sub-value.\r\n\t\tre.compile(iterator_name + r\".value(((\\.|->).+?)+)?(->|\\.)((push_packet|put_packet|commit|notify_tile_data_properties_should_change|_update_doc|clear|normalize|setup_local_to_scene|remove)\\(|(write)\\[)\"),\r\n\t\t# Value passed as a non-const argument.\r\n\t\tre.compile(r\"(_update_context|_set_subclass_path)\\(\" + re.escape(iterator_name) + r\".value\"),\r\n\t\tre.compile(r\"(to_erase\\.push_back|dirty_quadrant_list\\.add)\\(&?\" + iterator_name)\r\n\t]\r\n\r\n\tfor const_check in const_checks:\r\n\t\tif const_check.search(slice) != None:\r\n\t\t\treturn False\r\n\treturn True\r\n\r\n\r\ndirectory = \"C:/Users/Aaron/Projects/GodotSource/godot\"\r\ntypes = (\"cpp\", \"h\", \"hpp\")\r\n\r\nos.chdir(directory)\r\n\r\n# Get a list of files to modify.\r\ngrabbed_files = []\r\nfor root, dirs, files in os.walk(directory, topdown=True):\r\n\tdirs[:] = [d for d in dirs if d not in (\".git\", \"thirdparty\")]\r\n\tfor file in files:\r\n\t\tif not file.endswith(types) or \".gen\" in file:\r\n\t\t\tcontinue\r\n\r\n\t\tgrabbed_files.append(os.path.join(root, file))\r\n\r\n\r\nmap_iter_re = re.compile(r\"for ?\\((const )?Map<(.+?), (.+?)>::Element \\*(.+?) = (.+?)\\.front\\(\\); \\4; \\4 = \\4->next\\(\\)\\) \\{\")\r\nfor grabbed_file in grabbed_files:\r\n\t# Read in the file.\r\n\twith open(grabbed_file, 'r', encoding=\"utf-8\", newline=\"\\n\") as file:\r\n\t\tfile_data = file.read()\r\n\r\n\tpos = 0\r\n\twhile True:\r\n\t\tresult = map_iter_re.search(file_data, pos)\r\n\t\tif not result:\r\n\t\t\t# Next file.\r\n\t\t\tbreak\r\n\t\t\r\n\t\tpos = result.end(0)\r\n\r\n\t\tis_const = result[1] != None\r\n\t\tkey_type = result[2]\r\n\t\tvalue_type = result[3]\r\n\t\titerator_name = result[4]\r\n\t\tcontainer_name = result[5]\r\n\r\n\t\t# Discard custom comparators.\r\n\t\tif value_type.count(\",\") > value_type.count(\">\"):\r\n\t\t\tvalue_type = value_type[:value_type.rfind(\",\")]\r\n\r\n\t\t# Workaround for weird cases.\r\n\t\tif container_name in (\"state.MeshNodes\", \"physics_2d_mouseover\", \"physics_2d_shape_mouseover\"):\r\n\t\t\t# Should state.MeshNodes be deleted? It's an empty loop.\r\n\t\t\tcontinue\r\n\r\n\t\t# Get closing bracket position.\r\n\t\tbracket_count = 1\r\n\t\tbracket_pos = result.end(0)\r\n\t\twhile bracket_count > 0:\r\n\t\t\tif file_data[bracket_pos] == \"{\":\r\n\t\t\t\tbracket_count += 1\r\n\t\t\telif file_data[bracket_pos] == \"}\":\r\n\t\t\t\tbracket_count -= 1\r\n\t\t\t\r\n\t\t\tbracket_pos += 1\r\n\t\r\n\t\tslice = file_data[result.end(0):bracket_pos]\r\n\t\tif re.search(r\"\\b\" + re.escape(iterator_name) + r\"->next\\(\\)\", slice):\r\n\t\t\t# Skip iterators that make use of `->next()`.\r\n\t\t\tcontinue\r\n\t\tif re.search(r\"\\b\" + re.escape(container_name) + r\"(->|\\.)erase\\(\", slice):\r\n\t\t\t# Container is modified, I'm not sure how this is handeled.\r\n\t\t\tcontinue\r\n\t\tif f\"_make_quadrant_dirty({iterator_name})\" in slice:\r\n\t\t\t# See tile_map.cpp\r\n\t\t\tcontinue\r\n\t\tif \"Object::cast_to<VisualShaderNodeGlobalExpression>(E->get().node.ptr())\" in slice:\r\n\t\t\t# Not sure how to handle.\r\n\t\t\tcontinue\r\n\r\n\t\treplace_with = {\"get\": \"value\", \"value\": \"value\", \"key\": \"key\"}\r\n\t\tfor key, value in replace_with.items():\r\n\t\t\tslice = re.sub(\r\n\t\t\t\tr\"(?<=\\b)\" + re.escape(iterator_name) + r\"->\" + re.escape(key) + r\"\\(\\)\",\r\n\t\t\t\titerator_name + \".\" + value,\r\n\t\t\t\tslice\r\n\t\t\t)\r\n\t\t# Convert iterators that weren't previously const to const if possible.\r\n\t\tif not is_const:\r\n\t\t\tis_const = const_only_usage()\r\n\r\n\t\tfile_data = file_data[:result.end(0)] + slice + file_data[bracket_pos:]\r\n\r\n\t\tslice = file_data[result.start(0):result.end(0)]\r\n\t\tconst = \"const \" if is_const else \"\"\r\n\t\tslice = f\"for ({const}KeyValue<{key_type}, {value_type}> &{iterator_name} : {container_name}) {{\"\r\n\t\tfile_data = file_data[:result.start(0)] + slice + file_data[result.end(0):]\r\n\r\n\t# Write the file out again.\r\n\twith open(grabbed_file, 'w', encoding=\"utf-8\", newline=\"\\n\") as file:\r\n\t\tfile.write(file_data)\r\n\r\n```\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,3112906,3112907,3112912,3377457,3609449,4038183,4417777,4417819,4417868,4418380,4418403,4418424,4418550,4418558,4418563,4418605,4418718,4418726,4418733,4418914,4418923]},{"id":706093382,"public_id":51404,"url":"https://github.com/godotengine/godot/pull/51404","diff_url":"https://github.com/godotengine/godot/pull/51404.diff","patch_url":"https://github.com/godotengine/godot/pull/51404.patch","title":"Backport pseudolocalization to 3.x","state":"open","is_draft":false,"authored_by":{"id":54415525,"user":"angad-k","avater":"https://avatars.githubusercontent.com/u/54415525?v=4","url":"https://github.com/angad-k"},"created_at":"2021-08-08T19:18:26Z","updated_at":"2021-08-09T10:01:12Z","body":"(cherry picked from commit e79dde1cbb0e9a97c17bb5d535809efbcee1d965)\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nBackport of pseudolocalization to 3.x. See #49361","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418914]},{"id":705989230,"public_id":51383,"url":"https://github.com/godotengine/godot/pull/51383","diff_url":"https://github.com/godotengine/godot/pull/51383.diff","patch_url":"https://github.com/godotengine/godot/pull/51383.patch","title":"Make GLTF module togglable when compiling release templates","state":"open","is_draft":false,"authored_by":{"id":7788341,"user":"you-win","avater":"https://avatars.githubusercontent.com/u/7788341?v=4","url":"https://github.com/you-win"},"created_at":"2021-08-08T06:04:45Z","updated_at":"2021-08-09T03:27:14Z","body":"The GLTF module is excluded from release templates by default. This PR adds a build flag to enable/disable the GLTF when compiling Godot and release templates.\r\n\r\nThis change was needed for my project on 3.x [openseeface-gd](https://github.com/you-win/openseeface-gd), which loads in `gltf`/`glb` models at runtime.\r\n\r\nAssociated PRs:\r\n- master\r\n  - [godot](https://github.com/godotengine/godot/pull/51383)\r\n  - [godot-docs](https://github.com/godotengine/godot-docs/pull/5161)\r\n- 3.4\r\n  - [godot](https://github.com/godotengine/godot/pull/51382)\r\n  - [godot-docs](https://github.com/godotengine/godot-docs/pull/5160)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424,4418518]},{"id":705989218,"public_id":51382,"url":"https://github.com/godotengine/godot/pull/51382","diff_url":"https://github.com/godotengine/godot/pull/51382.diff","patch_url":"https://github.com/godotengine/godot/pull/51382.patch","title":"[3.x] Make GLTF module togglable when compiling release templates","state":"open","is_draft":false,"authored_by":{"id":7788341,"user":"you-win","avater":"https://avatars.githubusercontent.com/u/7788341?v=4","url":"https://github.com/you-win"},"created_at":"2021-08-08T06:04:37Z","updated_at":"2021-08-16T08:34:32Z","body":"The GLTF module is excluded from release templates by default. This PR adds a build flag to enable/disable the GLTF when compiling Godot and release templates.\r\n\r\nThis change was needed for my project on 3.x [openseeface-gd](https://github.com/you-win/openseeface-gd), which loads in `gltf`/`glb` models at runtime.\r\n\r\nAssociated PRs:\r\n- master\r\n  - [godot](https://github.com/godotengine/godot/pull/51383)\r\n  - [godot-docs](https://github.com/godotengine/godot-docs/pull/5161)\r\n- 3.4\r\n  - [godot](https://github.com/godotengine/godot/pull/51382)\r\n  - [godot-docs](https://github.com/godotengine/godot-docs/pull/5160)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418424,4418518]},{"id":705984807,"public_id":51381,"url":"https://github.com/godotengine/godot/pull/51381","diff_url":"https://github.com/godotengine/godot/pull/51381.diff","patch_url":"https://github.com/godotengine/godot/pull/51381.patch","title":"Make `compile` shader function to use struct instead long parameter list","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-08-08T05:10:24Z","updated_at":"2021-08-08T05:11:06Z","body":"I think having a single struct passing to `ShaderLanguage::compile` and `ShaderLanguage::complete` is better than a long parameter list - it's easier to debug, fix and further expand.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4417819,4418923]},{"id":705975426,"public_id":51378,"url":"https://github.com/godotengine/godot/pull/51378","diff_url":"https://github.com/godotengine/godot/pull/51378.diff","patch_url":"https://github.com/godotengine/godot/pull/51378.patch","title":"Change in RenderingDevice decode api and docs","state":"open","is_draft":false,"authored_by":{"id":11921745,"user":"ChristopheClaustre","avater":"https://avatars.githubusercontent.com/u/11921745?v=4","url":"https://github.com/ChristopheClaustre"},"created_at":"2021-08-08T03:06:06Z","updated_at":"2021-08-18T12:09:53Z","body":"**My goal here is** to add some method on RenderingDevice for ease of use in godot script. As it is easy to push a structure in c++ on GPU it's not as easy in godot script so I just made some method to be able to push/retrieve a PackedVector2Array, a PackedColorArray, a PackedFloat32Array... I think it is useful and I am actually using it for compute shaders ;)\r\n\r\n**RenderingDevice::buffer_update:**\r\nIt is now two template functions.\r\nOne to give an array of element and one to give only one element for ease of use.\r\n\r\nThose two template functions are exposed as specialized functions in gdscript for the different type of array and their type T.\r\n\r\n**PackedByteArray::to_XXX_array:**\r\nBecame a template function to avoid code duplication and then the content of this function have been moved to a Vector<T> ctor to make it more widely available.\r\nAdd three more specialization of this method for vector2, vector3 and color as it is commonly used type in shader.\r\n\r\nDiscussion started here but nobody seems to have something to say against it : https://github.com/godotengine/godot-proposals/issues/3042\r\n\r\nPrevious PR & godot-proposals linked to this issues :\r\nhttps://github.com/godotengine/godot-proposals/issues/2993\r\nhttps://github.com/godotengine/godot/pull/50535","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418914]},{"id":705939302,"public_id":51377,"url":"https://github.com/godotengine/godot/pull/51377","diff_url":"https://github.com/godotengine/godot/pull/51377.diff","patch_url":"https://github.com/godotengine/godot/pull/51377.patch","title":"Re-instance audio previews during resource re-import","state":"open","is_draft":true,"authored_by":{"id":1936763,"user":"ellenhp","avater":"https://avatars.githubusercontent.com/u/1936763?v=4","url":"https://github.com/ellenhp"},"created_at":"2021-08-07T20:03:26Z","updated_at":"2021-08-12T14:35:10Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nI think this fixes #27800 in most cases. It's not really a complete solution because if the audio stream preview is playing audio, it's still possible to get a use-after-free if the audio thread does a mix after `AudioStreamOGGVorbis::clear_data` and before `AudioStreamPreviewGenerator::_update_audio_streams`. I think I have a fix for #26964 that should at least prevent a crash in that situation, but it's still necessary for the preview window to re-instance all of its preview playbacks, so this PR will be necessary from a usability perspective.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":705926107,"public_id":51372,"url":"https://github.com/godotengine/godot/pull/51372","diff_url":"https://github.com/godotengine/godot/pull/51372.diff","patch_url":"https://github.com/godotengine/godot/pull/51372.patch","title":"Fix PathFollow tests, Add PathFollow3D forward test","state":"open","is_draft":true,"authored_by":{"id":3903059,"user":"raulsntos","avater":"https://avatars.githubusercontent.com/u/3903059?v=4","url":"https://github.com/raulsntos"},"created_at":"2021-08-07T18:05:52Z","updated_at":"2021-08-08T09:53:02Z","body":"- Fixes the tests for `PathFollow2D` and `PathFollow3D` so they compile and add them to `test_main.cpp` because they weren't being used before.\r\n- Adds a test for the the forward direction of `PathFollow3D` to prevent regressions like #51342 in the future.\r\n\r\n**TODO:**\r\n- [ ] The `PathFollow2D` tests crash because the `RenderingServer` singleton is null.\r\n- [ ] The `PathFollow3D` tests fail because of float precision.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":705890648,"public_id":51364,"url":"https://github.com/godotengine/godot/pull/51364","diff_url":"https://github.com/godotengine/godot/pull/51364.diff","patch_url":"https://github.com/godotengine/godot/pull/51364.patch","title":"Expose soft body pin methods to GDScript","state":"open","is_draft":false,"authored_by":{"id":7763082,"user":"bengtsts","avater":"https://avatars.githubusercontent.com/u/7763082?v=4","url":"https://github.com/bengtsts"},"created_at":"2021-08-07T13:18:11Z","updated_at":"2021-08-20T16:34:32Z","body":"Makes it easy to auto pin or unpin soft body points using vertex colours with a simple script and other like tools.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":705860152,"public_id":51354,"url":"https://github.com/godotengine/godot/pull/51354","diff_url":"https://github.com/godotengine/godot/pull/51354.diff","patch_url":"https://github.com/godotengine/godot/pull/51354.patch","title":"[3.x] Add Basis helper functions for transforming normals","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2021-08-07T08:49:09Z","updated_at":"2021-08-07T12:44:14Z","body":"Correct transformation of normals that works with a Basis containing non-uniform scale is rather verbose and hard to read in calling code. This PR adds helper functions which both standardize the approach and make it clearer in calling code what is being done and why.\r\n\r\n## Notes\r\n* Followup to #50637 based on the note about trying to simplify calling code for normal transformation\r\n* The naming for the functions is pretty arbitrary and open to personal preference hence why I wanted to break into a separate PR.\r\n* There *could* be an argument for binding the `normal_xform` function so it is available to gdscript etc. As beginners may find the concepts involved difficult, and easier if such a function were available.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777,4418914]},{"id":705832507,"public_id":51348,"url":"https://github.com/godotengine/godot/pull/51348","diff_url":"https://github.com/godotengine/godot/pull/51348.diff","patch_url":"https://github.com/godotengine/godot/pull/51348.patch","title":"Document workaround for non-visible `ColorPickerButton` color preview.","state":"open","is_draft":false,"authored_by":{"id":189962,"user":"follower","avater":"https://avatars.githubusercontent.com/u/189962?v=4","url":"https://github.com/follower"},"created_at":"2021-08-07T04:20:32Z","updated_at":"2021-08-17T22:36:49Z","body":"This might be considered a bug but here's a workaround doc if that's useful. :)\r\n\r\nThis issue occurred for me with \"Godot Engine v3.3.stable.official\" on Linux/Elementary OS.\r\n\r\nThe button was inside a container which might also have contributed to the issue.\r\n\r\nThe default theme seems to set the button padding/margin to take up the entire default size/width of the default button size leaving no color preview visible. Which is very confusing. :)\r\n\r\n[Feel free to edit wording to taste as I'm not currently checking/acting on GitHub notifications very regularly.]","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":705831027,"public_id":51347,"url":"https://github.com/godotengine/godot/pull/51347","diff_url":"https://github.com/godotengine/godot/pull/51347.diff","patch_url":"https://github.com/godotengine/godot/pull/51347.patch","title":"Suggest use of `ColorPickerButton` to show picker.","state":"open","is_draft":false,"authored_by":{"id":189962,"user":"follower","avater":"https://avatars.githubusercontent.com/u/189962?v=4","url":"https://github.com/follower"},"created_at":"2021-08-07T04:05:07Z","updated_at":"2021-08-07T12:07:16Z","body":"It's not obvious that the color picker \"pop-up\" behaviour (as seen in the Godot Editor) is implemented via a `ColorPickerButton` rather than use of a `ColorPicker` directly.\r\n\r\nThis adds a pointer to the `ColorPickerButton` in the docs for `ColorPicker`. (Which would've saved me a web search.)\r\n\r\n(There's already a pointer to `ColorPicker` in the `ColorPickerButton` docs.)\r\n\r\n[Feel free to edit wording to taste as I'm not currently checking/acting on GitHub notifications very regularly.]","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":705829822,"public_id":51346,"url":"https://github.com/godotengine/godot/pull/51346","diff_url":"https://github.com/godotengine/godot/pull/51346.diff","patch_url":"https://github.com/godotengine/godot/pull/51346.patch","title":"Fix focus shortcuts triggering incorrectly","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2021-08-07T03:53:02Z","updated_at":"2021-08-07T06:24:57Z","body":"Closes #8799\r\nCloses #24064\r\n\r\nSupersedes / closes #47671\r\nSupersedes / closes #34410\r\n\r\nSee video, where I can successfully use both change focus shortcuts and previous/next tab shortcuts. This uses the \"exact match\" checking system added in #44355. This should theoretically solve the issue for any bindings made for the related shortcuts.\r\n\r\nhttps://user-images.githubusercontent.com/41730826/128587046-1297077c-5c21-4252-9655-9946bccdc479.mp4\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":705829746,"public_id":51345,"url":"https://github.com/godotengine/godot/pull/51345","diff_url":"https://github.com/godotengine/godot/pull/51345.diff","patch_url":"https://github.com/godotengine/godot/pull/51345.patch","title":"Make gdscripts support Unicode identifiers","state":"open","is_draft":false,"authored_by":{"id":24997404,"user":"zj1d","avater":"https://avatars.githubusercontent.com/u/24997404?v=4","url":"https://github.com/zj1d"},"created_at":"2021-08-07T03:52:10Z","updated_at":"2021-08-07T04:22:46Z","body":"Make gdscripts support Unicode identifiers\r\ne.g. Chinese Japanese Korean emoji\r\nThis is friendly for multilingual developers\r\nFixes: #24785, https://github.com/godotengine/godot-proposals/issues/916\r\n#916\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":705787658,"public_id":51341,"url":"https://github.com/godotengine/godot/pull/51341","diff_url":"https://github.com/godotengine/godot/pull/51341.diff","patch_url":"https://github.com/godotengine/godot/pull/51341.patch","title":"Default to 30 animation fps for better quality.","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-08-06T23:06:55Z","updated_at":"2021-08-07T10:24:38Z","body":"Reduz mentioned that he was working on animation streaming for Godot Engine. It was unclear when his animation streaming support will be complete and animation streaming is an optimization, so this feature is unrelated to the bug-fix of animations defaulting to the wrong fps and skipping transforms by under-sampling.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":705660196,"public_id":51330,"url":"https://github.com/godotengine/godot/pull/51330","diff_url":"https://github.com/godotengine/godot/pull/51330.diff","patch_url":"https://github.com/godotengine/godot/pull/51330.patch","title":"Implement shadowmask for DirectionalLight in BakedLightmap","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-06T18:08:09Z","updated_at":"2021-08-08T15:28:53Z","body":"This can be used to fade distant real-time DirectionalLight shadows with baked shadows (stored in the lightmap's alpha channel).\r\n\r\nSee https://github.com/godotengine/godot-proposals/issues/2354#issuecomment-891389090 for an explanation of why I went with shadowmasking instead of subtractive shadowmapping. This implementation allows changing the DirectionalLight's color and shadow color at run-time, and does not require manual work from the user to define a hand-picked shadow color that looks good.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2354.\r\n\r\n**Testing project:** [test_shadowmask_3.x.zip](https://github.com/godotengine/godot/files/6947378/test_shadowmask_3.x.zip)\r\n\r\n## Usage\r\n\r\nThis feature is enabled by default. It only supports 1 DirectionalLight at once. Point lights are outside the scope of shadowmasking, since the shadowmask is stored in the lightmap's alpha channel for now (and point lights' shadows don't disappear in the distance either).\r\n\r\nIf you don't want to store an alpha channel in the lightmap to decrease its file size, disable **Use Shadowmask** in the BakedLightmap's properties before baking. Bake times remain identical regardless of whether shadowmasking is enabled or not.\r\n\r\nThere are 3 ways to use it, depending on the target hardware:\r\n\r\n- **Default:** Real-time shadow is used up close for both static and dynamic objects.\r\n  - This does not provide a direct performance advantage, but makes static shadows never disappear in the distance and can make shadow acne less visible when up close (since the shadowmask is also sourced when up close). Nonetheless, it lets you decrease your DirectionalLight's Shadow Max Distance property, which increases the shadow detail up close and can improve performance.\r\n  - You also get better shadow detail in the distance and less noticeable split transitions, depending on your lightmap's texel density.\r\n  - This shadow mode is very similar to the one used by the [most popular game on Steam as of writing](https://store.steampowered.com/app/730/CounterStrike_Global_Offensive/) :wink: \r\n- **\"Always Shadowmask\":** Real-time shadow is used up close for dynamic objects only. Static objects only source their shadow from the shadowmask.\r\n  - This is achieved by selecting all the baked meshes and setting their cast shadows mode to **Off** *after* baking lightmaps. Eventually, a property may be added to do this in a more convenient way.\r\n  - This is generally a good choice when targeting recent/high-end mobile platforms or integrated graphics.\r\n- **\"Fully Static\":** Dynamic shadows do not cast shadows. Static objects only source their shadow from the shadowmask.\r\n  - This is achieved by disabling the DirectionalLight shadow *after* baking lightmaps. Eventually, a property may be added to do this in a more convenient way.\r\n  - Unlike using the **All** bake mode for the DirectionalLight, the DirectionalLight's color and shadow color can still be changed at run-time, without having to bake lightmaps again. This also allows using the same set of lightmaps to support real-time shadows for faster hardware.\r\n  - This is generally a good choice when targeting old/low-end mobile platforms or integrated graphics.\r\n\r\n## Preview\r\n\r\n### No shadowmask (current)\r\n\r\nhttps://user-images.githubusercontent.com/180032/128553652-d9be49ad-496f-4881-b595-6c57dc7610d9.mp4\r\n\r\n### With shadowmask (default for newly baked lightmaps)\r\n\r\nhttps://user-images.githubusercontent.com/180032/128553655-bc414f23-33ec-4f02-96fd-50a0730d8059.mp4\r\n\r\n## TODO\r\n\r\n- [x] Port the shader changes to GLES2.\r\n  - This is done and mostly working, but the shadow will fade suddenly at the end since it won't draw the shadowmask past the Shadow Max Distance distance unless the DirectionalLight has its shadow disabled. I don't know why.\r\n- [ ] Restore support for baking lightmaps with HDR. See the FIXME in the diff for more information.\r\n- [ ] Preserve the shadowmask when denoising is enabled. This likely involves moving the shadowmask to a different buffer, creating a new buffer that doesn't contain the shadowmask, passing that new buffer to the denoiser, then combining everything back.\r\n- [x] Handle cases where there is more than 1 DirectionalLight in the scene. We could print a warning message when baking lights in this case, and only take the first DirectionalLight into account for shadow masking.\r\n- [x] Blur the shadowmask slightly? Right now, the shadowmask is \"all or nothing\". It's fine at a distance when bicubic filtering is enabled, but it's not great when up close.\r\n  - Done by allowing the adjustment of the DirectionalLight shadow size when its bake mode is **Indirect** (in addition to **All**). This property is used in shadowmask baking.\r\n- [ ] Handle dynamic object capture. The issue is that we can't store the shadowmask into the probes' alpha channel, as the alpha channel is currently used to determine whether environment lighting should affect the object (it's a boolean choice). If we can move that usage outside of the probe color, then we can use the alpha channel for the shadowmask and use it to shade dynamic objects in the distance.\r\n  - I don't think it's essential to do this in this PR; it can be done later if we don't figure out an easy way to do it.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":705460878,"public_id":51316,"url":"https://github.com/godotengine/godot/pull/51316","diff_url":"https://github.com/godotengine/godot/pull/51316.diff","patch_url":"https://github.com/godotengine/godot/pull/51316.patch","title":"Fix test_shader_lang (for 3.x)","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-08-06T12:53:09Z","updated_at":"2021-08-06T12:59:59Z","body":"Fix #50975. Not quite sure that it's the correct fix but it fixes the error for sure\r\n\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418923]},{"id":705321222,"public_id":51310,"url":"https://github.com/godotengine/godot/pull/51310","diff_url":"https://github.com/godotengine/godot/pull/51310.diff","patch_url":"https://github.com/godotengine/godot/pull/51310.patch","title":"[macOS export] Implements ad-hoc signing on Linux/Windows.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-08-06T09:04:06Z","updated_at":"2021-08-12T19:31:18Z","body":"This PR adds:\r\n- custom implementation of `codesign` to ad-hoc sign macOS exports on Linux/Windows (and macOS without Xcode installed), to allow valid macOS export from any platform. Using real signatures is not supported (MbedTLS used by Godot for cryptography do not have PKCS#7/CMS support), but without notarization there are no benefits over ad-hoc anyway.\r\n- entitlements config validation for GDNative exports.\r\n- extra warnings for different singing conditions.\r\n- some optional extra usage messages to export settings to match supported entitlements.\r\n- improved export template handling to allow including frameworks in the template ZIP (won't work on Windows, due to lack of symlink support implementation).\r\n\r\nTested on macOS, Linux and Windows with classic, mono + GDNative libraries.\r\n\r\nNote for testing: there are changes to export template `Info.plist`, some features (usage message) won't work if it's used with old template, but signing should work in any case.\r\n\r\n<img width=\"1123\" alt=\"Screenshot 2021-08-10 at 20 23 18\" src=\"https://user-images.githubusercontent.com/7645683/128906638-9de4c537-0572-4409-97b3-c159e1538b17.png\">\r\n\r\nFixes: #51007, #48076, #48803","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":2909900850,"name":"topic:export","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,4418518,4418914]},{"id":705263641,"public_id":51308,"url":"https://github.com/godotengine/godot/pull/51308","diff_url":"https://github.com/godotengine/godot/pull/51308.diff","patch_url":"https://github.com/godotengine/godot/pull/51308.patch","title":"Improve implementation of builtin action overrides","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2021-08-06T07:33:47Z","updated_at":"2021-08-06T07:51:42Z","body":"Additional effort to #51280 to remove preprocessor defines and other hard-coded stuff.\r\n\r\nThis moves the \"builtin actions\" system to also use OS features just like the PR above. This means that such overrides can be specified for any OS now, not just macOS.\r\n\r\nSolves an existing bug related to the determining whether to show the 'revert' button in the editor settings dialog. Introduces a new method, `get_builtins_with_feature_overrides_applied()`, which returns the builtin actions with any overrides applied. For example, if we had defined two separate sets of actions for `ui_select` and `ui_select.macOS`, calling `get_builtins_with_feature_overrides_applied()` would return a map with the key as `ui_select`, but with the actions defined in `ui_select.macOS`, if the executing operating system supported the `macOS` feature.\r\n\r\nThe method `get_builtins()` is still called in Project Settings, so that in the action editor there, all the builtins show up, including those which have overrides.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418403]},{"id":705078556,"public_id":51296,"url":"https://github.com/godotengine/godot/pull/51296","diff_url":"https://github.com/godotengine/godot/pull/51296.diff","patch_url":"https://github.com/godotengine/godot/pull/51296.patch","title":"Move mixing out of the AudioStreamPlayback* nodes","state":"open","is_draft":false,"authored_by":{"id":1936763,"user":"ellenhp","avater":"https://avatars.githubusercontent.com/u/1936763?v=4","url":"https://github.com/ellenhp"},"created_at":"2021-08-05T23:10:03Z","updated_at":"2021-08-21T18:08:55Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #25087\r\nFixes #21312\r\n\r\nImplements https://github.com/godotengine/godot-proposals/issues/2299\r\n\r\nMy focus here is parity with current `master`, not to add features, but it's still an enormous change. I can probably split off the individual commits into their own PRs if people would prefer that.\r\n\r\nMore detail is in the proposal above, but this basically moves all mixing into the audio server. Audio streams register their playback objects with the audio server and then update the volume during their panning or spatialization steps. This eliminates an entire class of bugs in which the player node's state is updated and it can't continue a volume ramp or fade out.\r\n\r\nThis also opens the door to lots of really exciting things! Now that we can crossfade across audio buses, we can have Area2D/Area3D based bus overrides that smoothly transition to the new bus. Imagine the mouth of a cave that slowly fades reverb in, or an area of a 2d platformer level that adds a distortion to audio. Before these things would cause pops and abrupt transitions, but with this change the pops are gone and it'll be fairly easy to add smooth transitions.\r\n\r\nAnother thing we can add back is polyphony, which I think users will appreciate. An audio stream player node can simply instance multiple playbacks for a stream and send them all to the audio server which will mix them independently. That's also not included in this change but should be simple to add.\r\n\r\nA few notes:\r\n* I changed the mix buffer size to 512, which I think is fine. It should probably be a project setting or at least influenced by the audio driver's buffer size, i.e. based on the latency project setting. It doesn't make sense for the audio server to have a bigger buffer than the audio driver.\r\n* The NO_THREADS implementation of my SafeList data structure is probably broken, but I don't really know how to test it given that web exports aren't working in 4.0 right now, unless I'm mistaken on that.\r\n* This PR contains a mediocre workaround for #50958 that I put in for testing purposes only. I'm basically including the current viewport in the list of viewports to iterate through while looking for the active listener. It works for simple scenes but we should still address #50958 somehow.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":705064783,"public_id":51295,"url":"https://github.com/godotengine/godot/pull/51295","diff_url":"https://github.com/godotengine/godot/pull/51295.diff","patch_url":"https://github.com/godotengine/godot/pull/51295.patch","title":"Add support for modulating DynamicFont using a gradient","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-05T22:33:04Z","updated_at":"2021-08-06T09:56:00Z","body":"This is useful to make DynamicFonts look better in certain scenarios, especially in pixel art games.\r\n\r\nAlso, this is done in the font itself, but in `master`, shadows/outlines are drawn on a per-font usage basis (e.g. with custom constants in Label). We should try to harmonize this in the future, so that gradients, shadows and outlines can be used in all Control nodes including RichTextLabel, Button, etc.\r\n\r\n## TODO\r\n\r\n- [ ] Update the font's glyphs when points in the gradient are changed. Right now, you need to reload the scene after editing the gradient for changes to be visible.\r\n- [ ] Use font ascent/height instead of glyph height to apply the gradient. Otherwise, the gradient looks too sharp on small glyphs such as the `.` character.\r\n- [ ] Use the gradient in the initial texture fill-in code to prevent artifacts from being visible when a filtered font is zoomed in. It's not very visible most of the time, so this can be done in future PR if it proves to be too difficult.\r\n\r\nThis partially addresses https://github.com/godotengine/godot-proposals/issues/2564.\r\n\r\n## Preview\r\n\r\n**Testing project:** [test_dynamicfont_gradient.zip](https://github.com/godotengine/godot/files/6942003/test_dynamicfont_gradient.zip)\r\n\r\n![DynamicFont gradient](https://user-images.githubusercontent.com/180032/128429785-2341d5e0-3612-4313-8b29-e5d615416607.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":704839419,"public_id":51284,"url":"https://github.com/godotengine/godot/pull/51284","diff_url":"https://github.com/godotengine/godot/pull/51284.diff","patch_url":"https://github.com/godotengine/godot/pull/51284.patch","title":"Use antialiasing for the circles in the 3D editor rotation gizmo","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-05T16:09:37Z","updated_at":"2021-08-07T04:51:38Z","body":"Follow-up to https://github.com/godotengine/godot/pull/51250.\r\n\r\nThis is a crude approach that relies on drawing a second translucent circle. While not as good as proper polygon antialiasing or 2D MSAA, it looks OK in practice.\r\n\r\n## Preview\r\n\r\n### 100% editor scale\r\n\r\n| Before | After |\r\n|-|-|\r\n| ![image](https://user-images.githubusercontent.com/180032/128565516-5f0c74c9-e535-42f7-b3aa-e0ded5a214ba.png) | ![Gizmo](https://user-images.githubusercontent.com/180032/128383809-1b32e732-08ad-48e0-8108-2702bd68272f.png) |\r\n\r\n### 200% editor scale\r\n\r\n| Before | After |\r\n|-|-|\r\n| ![image](https://user-images.githubusercontent.com/180032/128565620-e6b3ce95-9d38-4f6a-b036-87b11455df8f.png) | ![Gizmo](https://user-images.githubusercontent.com/180032/128383926-81a38137-b636-4c72-b92a-9a2e1a6ffeec.png) |","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":704716003,"public_id":51280,"url":"https://github.com/godotengine/godot/pull/51280","diff_url":"https://github.com/godotengine/godot/pull/51280.diff","patch_url":"https://github.com/godotengine/godot/pull/51280.patch","title":"Added ability to override shortcut definitions for OSX (remove preprocessor defines)","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2021-08-05T13:37:28Z","updated_at":"2021-08-08T04:21:37Z","body":"UNTESTED --> NEEDS TESTING\r\n\r\nMay help with https://github.com/godotengine/godot-docs/issues/3333 cc @pycbouh\r\n\r\nNo more `OSX_ENABLED` preprocessor define checks when defining default editor shortcuts. Just add a call to `ED_SHORTCUT_OVERRIDE` with the corresponding feature you want the override to be for (e.g. \"macOS\"), and the new event.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,4418558]},{"id":704592285,"public_id":51273,"url":"https://github.com/godotengine/godot/pull/51273","diff_url":"https://github.com/godotengine/godot/pull/51273.diff","patch_url":"https://github.com/godotengine/godot/pull/51273.patch","title":"Allow shortcuts to have any number of input events assigned to them.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2021-08-05T10:46:47Z","updated_at":"2021-08-07T03:15:59Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/2875\r\nSupersedes / Closes #48009\r\n\r\nThis is based on discussion on Rocket chat as well as feedback in the above proposal and PR.\r\n\r\nSummary:\r\n* One `Shortcut` can now have many `InputEvent`s assigned to it (related; #51215)\r\n* Relevant methods and properties changed, as well as the way Editor shortcuts are serialised as it is now an array.\r\n* The EditorSettings Shortcuts editor finally has the same user interface for Built-In actions and other editor actions! 🎉🎉 (see below). A lot of the changes were to do with the changes made to the editor settings dialog.\r\n* I had to made one minor modification to drag & drop logic, where the drag and drop forward target can now just be a `Node` rather than being a `Control`. This is because `EditorSettingsDialog` needed to be the node which the `Tree` drag was forwarded to, but as `Window` is not a `Control`, I had to change this to `Node`.\r\n\r\nThe the editor settings shows up to 2 shortcuts in-line, and the additional amount in parentheses. The next tree level then shows all shortcuts, where they can be edited or removed. The user can drag and drop shortcuts to determine which one is the \"primary\" one. The primary shortcut is what is displayed in the UI, for example in `PopupMenu`s with items that have shortcuts, or in `Button` tooltips, as shown in the video. In the video, any shortcut (E, Ctrl+R, Ctrl+Shit+T) could be used to select the rotate mode.\r\n![image](https://user-images.githubusercontent.com/41730826/128335653-fd5173ca-8b78-46e7-83a9-927516db8831.png)\r\n\r\nhttps://user-images.githubusercontent.com/41730826/128336380-88ee61e8-7e7e-4d99-8dbe-733438b8d597.mp4\r\n\r\nFor users, the shortcuts resource now includes an array, which accepts any `InputEvent` derived resource. Please note when editing this in the inspector, this is affected by the new \"inspector refresh\" system, as described here: #49817. To test this PR properly and be able to drop down the array item selector, change your inspector refresh interval in your settings to a high value (e.g. 5 seconds). P.S. yes, the button in the video should say \"press S\", its just a typo :)\r\n\r\nhttps://user-images.githubusercontent.com/41730826/128337181-c42ba55a-9b5b-4d7b-9e03-fee5ef344efa.mp4\r\n\r\nAnd for serialization of shortcut editor settings, a bit simpler now:\r\n```\r\nshortcuts = [{\r\n\"name\": \"canvas_item_editor/rotate_mode\",\r\n\"shortcuts\": [SubResource( \"InputEventKey_5ftl2\" ), SubResource( \"InputEventKey_nudrv\" ), SubResource( \"InputEventKey_ffuxw\" )]\r\n}, {\r\n\"name\": \"tiles_editor/paint_tool\",\r\n\"shortcuts\": [SubResource( \"InputEventKey_nlk4p\" )]\r\n}]\r\n```\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418550,4418733]},{"id":704152188,"public_id":51259,"url":"https://github.com/godotengine/godot/pull/51259","diff_url":"https://github.com/godotengine/godot/pull/51259.diff","patch_url":"https://github.com/godotengine/godot/pull/51259.patch","title":"Fix one-way collision in Tilemap","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-08-04T23:15:50Z","updated_at":"2021-08-05T19:11:32Z","body":"Regression on master only.\r\n\r\n~The same body is used for the whole TileMap layer, so the polygon shape index doesn't always correspond to the actual shape index.~\r\n\r\n**Edit:**\r\nIn a given quadrant there can be one or more bodies used, and the process iterated over cells to add the shapes, so the shape index doesn't necessarily correspond to the polygon shape index.\r\n\r\nInstead body shape indices need to be tracked separately.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718]},{"id":703489597,"public_id":51237,"url":"https://github.com/godotengine/godot/pull/51237","diff_url":"https://github.com/godotengine/godot/pull/51237.diff","patch_url":"https://github.com/godotengine/godot/pull/51237.patch","title":"Various fixes to Tween code","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-08-04T13:39:31Z","updated_at":"2021-08-06T11:07:44Z","body":"Attempt to fix #51231\r\n\r\nThe bug is caused by cyclic reference, but even though I clear everything, some of the Tweeners still don't get destroyed. Here's updated code from the issue's MRP, for testing:\r\n```\r\nextends Node2D\r\n\r\n@onready var sprite := $Sprite2D\r\n\r\nfunc _unhandled_input(event: InputEvent) -> void:\r\n\tif event.is_action_pressed(\"click\"):\r\n\t\tmove_node_to_click(get_global_mouse_position())\r\n\t\tget_tree().create_timer(2).timeout.connect(end)\r\n\r\nfunc move_node_to_click(target_position: Vector2) -> void:\r\n\tprint(target_position)\r\n\tvar tween: Tween = get_tree().create_tween()\r\n\ttween.tween_interval(0.5)\r\n\ttween.tween_property(sprite, \"position\", target_position, 0.5)\r\n#\ttween.tween_callback(end)\r\n\ttween.tween_callback(test.bind(\"end?\"))\r\n\ttween.tween_method(test, 0, 2, 0.01)\r\n\r\nfunc test(v):\r\n\tprint(v)\r\n\r\nfunc end():\r\n\tprint(get_tree().get_processed_tweens())\r\n```\r\nFor whatever reason, only MethodTweener and PropertyTweener get properly destroyed. Tween, CallbackTweener and IntervalTweener still linger somewhere. What's more weird, when you change the callback in the code above to the commented out `end`, the callback tweener gets removed too (which makes me think that the issue is not related to Tweens).\r\n\r\nPutting it as draft now. Also there are some debug prints for easier testing.\r\n\r\n---\r\n\r\nAside from the above issue, I fixed broken `is_valid()` method. Also removed return value from `Tween.append()`, which was a leftover from a brief moment when it was exposed. There is also one error message I improved, but I'm not 100% if it's worded correctly.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380,4418914]},{"id":703235242,"public_id":51235,"url":"https://github.com/godotengine/godot/pull/51235","diff_url":"https://github.com/godotengine/godot/pull/51235.diff","patch_url":"https://github.com/godotengine/godot/pull/51235.patch","title":"Fixed awkwardly named AnimatedSprite2D Setters.","state":"open","is_draft":false,"authored_by":{"id":17506575,"user":"AnilBK","avater":"https://avatars.githubusercontent.com/u/17506575?v=4","url":"https://github.com/AnilBK"},"created_at":"2021-08-04T10:07:14Z","updated_at":"2021-08-04T10:58:06Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nThese methods are named _set_playing() and _is_playing(),\r\nChanged them to be set_playing() and is_playing(),\r\n\r\nAlso,previously is_playing() was a separate function with it's own doc.\r\nNow,it is just the setter,as it should be.\r\n\r\nThis PR:\r\n![master](https://user-images.githubusercontent.com/17506575/128163030-b339fb0e-a833-479a-9346-d17dfce73678.png)\r\n\r\n\r\nCurrent Master:\r\n![current](https://user-images.githubusercontent.com/17506575/128163058-0bb64013-6c84-42fe-a0c6-a59d0dfc8bf4.png)\r\n\r\n\r\nCould be cherry-picked to 3.x.\r\nBut, technically compat breaking.\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718]},{"id":702044997,"public_id":51206,"url":"https://github.com/godotengine/godot/pull/51206","diff_url":"https://github.com/godotengine/godot/pull/51206.diff","patch_url":"https://github.com/godotengine/godot/pull/51206.patch","title":"Added SSIL post processing effect","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2021-08-03T07:53:26Z","updated_at":"2021-08-16T12:31:22Z","body":"Implements Screen Space Indirect Lighting (I still need to rename it in the code)\r\n\r\nSSIL adds short-range indirect lighting into the scene by sampling much like SSAO. I went with the ASSAO-like approach after months of testing and experimenting with other methods (including full blown SSGI). This method strikes the best balance between performance and quality and does not require Temporal Super Sampling at all.\r\n\r\n**SSIL is intended to complement VoxelGI or SDFGI and is not a form of GI on its own. It only adds light into the scene and it only takes lighting into account in a short to medium range**\r\n\r\nAs it stands, SSIL is slightly slower than SSAO on my hardware. Results will vary, but for me, it takes between 0.3-1.0 ms.\r\n\r\nhttps://user-images.githubusercontent.com/16521339/128133354-743f3794-cd7f-4220-a4ff-1b6d1a72222b.mp4\r\n\r\n**TODO:**\r\n\r\nBefore marking this PR as ready to merge I need to:\r\n\r\n- [x] 1. convert all references to SSGI to SSIL\r\n- [x] 2. clean up Screen Space reflections (likely I will just remove the changes to SSR and make them in another PR)\r\n- [x] 3. clean up code style (there are lots of places where the code is ugly)\r\n- [x] 4. move SSIL uniform sets into the renderbuffers\r\n- [x] 5. ~move SSIL after AO in the main scene shader~ (nevermind, this doesn't actually make sense)\r\n- [x] 6. write docs :)\r\n\r\nAfter this PR is merged I need to investigate:\r\n1. merging the SSIL buffer with the main GI buffer (might be nice, but limits flexibility)\r\n2. generating Screen Space Bent Normals during SSIL pass (and using them for specular occlusion)\r\n3. generating SSIL at quarter resolution  for performance\r\n4. moving last frame texture copy to raster (so we avoid jumping back and forth between raster and compute\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418550,4418914]},{"id":701436622,"public_id":51179,"url":"https://github.com/godotengine/godot/pull/51179","diff_url":"https://github.com/godotengine/godot/pull/51179.diff","patch_url":"https://github.com/godotengine/godot/pull/51179.patch","title":"Implement external texture support for XR plugins that require render…","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-08-02T12:49:54Z","updated_at":"2021-08-06T00:51:47Z","body":"For a number of XR plugins (namely WebXR, Oculus and OpenXR) the XR runtime supplies us with textures that we need to render into. Especially on mobile platforms such as the Quest we'll want to do so as direct as possible.\r\n\r\nThis PR makes it possible to supply an external texture for the viewport, and an external depth texture for 3D rendering. In doing so Godots own texture objects are not created. \r\nDo note that there is still a copy involved as the 3D render buffer is still created by Godot however in combination with the new subpass logic this should handle things really nicely on a device like the Quest (or so we hope).\r\n\r\nAlso note that for WebXR we're actually not getting textures but we're getting an WebGL framebuffer and this is something we probably can't support until we have OpenGL/WebGL support in Godot 4 so this is not part of this PR.\r\n\r\n Still to do:\r\n - enhance GDNative implementation so a plugin can provide the texture objects, waiting on the new version of GDNative for this\r\n - add the ability to create a Godot texture RID based on a texture object created by our plugin","target_branch":"master","labels":[{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":701035242,"public_id":51165,"url":"https://github.com/godotengine/godot/pull/51165","diff_url":"https://github.com/godotengine/godot/pull/51165.diff","patch_url":"https://github.com/godotengine/godot/pull/51165.patch","title":"[3.x] Add 2 component vector swizzling to Vector3","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-08-02T01:05:57Z","updated_at":"2021-08-06T19:27:18Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nThe following one-liner would now be possible:\r\n```gdscript\r\n# For FPS like movement.\r\nvelocity.xz = Input.get_vector(\"move_left\", \"move_right\", \"move_forward\", \"move_back\") * speed\r\n```\r\nBefore this PR:\r\n```gdscript\r\n# For FPS like movement.\r\nvar input := Input.get_vector(\"move_left\", \"move_right\", \"move_forward\", \"move_back\")\r\nvelocity.x = input.x * speed\r\nvelocity.z = input.y * speed\r\n# or...\r\nvelocity = Vector3(input.x * speed, velocity.y, input.y * speed)\r\n```\r\n\r\nI'm pretty sure that if this change is desired, it'll need a separate implementation for `master` because `variant_op.cpp` has changed a lot. I mostly wanted to make this PR as a proof of concept and to get people's opinions/make sure this is desired.\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/727. ","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":700993968,"public_id":51159,"url":"https://github.com/godotengine/godot/pull/51159","diff_url":"https://github.com/godotengine/godot/pull/51159.diff","patch_url":"https://github.com/godotengine/godot/pull/51159.patch","title":"Improve the default project theme","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-08-01T22:10:07Z","updated_at":"2021-08-20T19:31:33Z","body":"The new default project theme uses StyleBoxFlat extensively for a more modern design and better scalability to multiple resolutions.\r\n\r\nSVG icons are now used in place of PNG icons. While this does not allow for true vector-based icon drawing (icons are still rasterized at load-time), this makes the design work easier for contributors and opens the door to vector drawing in the future (e.g. with polygons or SDFs).\r\n\r\nLike for editor icons, the SVG header file is now built automatically when a SVG file is changed. This removing the need for running `make_header.py` manually.\r\n\r\nThe **Use Hidpi** project setting has been removed in favor of a **Default Theme Scale** project setting, which allows creating the default theme at a higher/lower scale than the default. This can be used when designing GUIs with a high base resolution to ensure crisp visuals.\r\n\r\nThe new theme has slightly different metrics, which may result in elements being shifted around when porting `3.x` projects (hence the `breaks compat` label).\r\n\r\n**Note:** Unlike LineEdit, TextEdit will appear to have no visible focus outline because its focus outline is clipped by the main StyleBox's area (this is not about drawing order). We need to fix this in the TextEdit node, ideally before this PR is merged. See https://github.com/godotengine/godot/issues/32996.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/25349.\r\n\r\n## Preview\r\n\r\n*On all screenshots, the first button is focused so that you can see how the focus outline looks.*\r\n\r\n### Default resolution\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/127786747-c56be4a6-84de-45cf-abd2-6fccb2aba6f9.png) | ![After](https://user-images.githubusercontent.com/180032/127887867-87801fc4-41dd-488b-be48-bfdb65c5ee5c.png) |\r\n\r\n### Fullscreen (`2d` stretch mode)\r\n\r\n*The new theme scales much better to higher resolutions thanks to its StyleBoxFlat-based design.*\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/127786748-fd7b12a1-d847-4096-bb86-e16bc2973b37.png) | ![After](https://user-images.githubusercontent.com/180032/127887869-64896fc1-1181-4a99-a38e-2af566ee94ee.png) |\r\n\r\n## TODO\r\n\r\n- [ ] Finish theming all nodes and remove PNGs.\r\n  - Tree, GraphEdit and WindowDialog and possibly more weren't redesigned yet.\r\n- [ ] Print a warning message when compiling Godot with the NanoSVG module disabled.\r\n  - Generate fallback images when the NanoSVG module is disabled.\r\n  - Alternatively, make NanoSVG a hard requirement for compiling Godot.\r\n- [ ] Remove `make_header.py` which should no longer be needed.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":700987437,"public_id":51158,"url":"https://github.com/godotengine/godot/pull/51158","diff_url":"https://github.com/godotengine/godot/pull/51158.diff","patch_url":"https://github.com/godotengine/godot/pull/51158.patch","title":"Make some enhancements to the POT generation","state":"open","is_draft":false,"authored_by":{"id":30739239,"user":"YeldhamDev","avater":"https://avatars.githubusercontent.com/u/30739239?v=4","url":"https://github.com/YeldhamDev"},"created_at":"2021-08-01T21:23:58Z","updated_at":"2021-08-01T21:31:50Z","body":"- Extract the menu items of `Menu`/`OptionButton` nodes.\r\n- Ignore nodes that have `auto_translate` set to `false`.\r\n- Ignore the `text` property of `Line`/`TextEdit` nodes.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418537]},{"id":700983093,"public_id":51157,"url":"https://github.com/godotengine/godot/pull/51157","diff_url":"https://github.com/godotengine/godot/pull/51157.diff","patch_url":"https://github.com/godotengine/godot/pull/51157.patch","title":"Fix: UWP App crashes when managed_object->update_clipboard() is called","state":"open","is_draft":false,"authored_by":{"id":7196697,"user":"Antokolos","avater":"https://avatars.githubusercontent.com/u/7196697?v=4","url":"https://github.com/Antokolos"},"created_at":"2021-08-01T21:02:09Z","updated_at":"2021-08-17T22:37:37Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nOperating system and version: Windows 10 / UWP\r\nGodot version: tested on 3.1.2\r\nDevice: x86_64\r\nSteps to reproduce: this bug sometimes occurred when I tried to launch the application\r\n\r\nHello!\r\nWhen I attempted to port our game to Xbox One I encountered a bug which was described here:\r\nhttps://stackoverflow.com/questions/58660743/uwp-app-crashes-when-clipboard-getcontent-is-called-from-inside-onnavigatedto\r\nI attempted to apply the fix described in the article and it worked, the application won't crash anymore.\r\nUnfortunately, I don't remember well exactly under which circumstances the bug was reproduced (as far as I've remembered, it happened when I tried to launch the release version), but I hope it will be useful...\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":361780559,"name":"platform:uwp","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112913]},{"id":700979039,"public_id":51156,"url":"https://github.com/godotengine/godot/pull/51156","diff_url":"https://github.com/godotengine/godot/pull/51156.diff","patch_url":"https://github.com/godotengine/godot/pull/51156.patch","title":"Add const lvalue ref to container parameters","state":"open","is_draft":false,"authored_by":{"id":37383316,"user":"Muller-Castro","avater":"https://avatars.githubusercontent.com/u/37383316?v=4","url":"https://github.com/Muller-Castro"},"created_at":"2021-08-01T20:28:07Z","updated_at":"2021-08-02T11:49:26Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nAdds const lvalue reference to the core container types specified in the [documentation](https://docs.godotengine.org/en/stable/development/cpp/core_types.html) that are declared in function parameters, with the exception of **Vector** and **String** that don't make a deep copy during copy-construction","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112909,3377457,3609449,3857901,4417868,4418376,4418550,4418718,4418726,4418733,4418914]},{"id":700959928,"public_id":51153,"url":"https://github.com/godotengine/godot/pull/51153","diff_url":"https://github.com/godotengine/godot/pull/51153.diff","patch_url":"https://github.com/godotengine/godot/pull/51153.patch","title":"Rebased Meson build system PR against current master","state":"open","is_draft":false,"authored_by":{"id":4079821,"user":"jpakkane","avater":"https://avatars.githubusercontent.com/u/4079821?v=4","url":"https://github.com/jpakkane"},"created_at":"2021-08-01T18:23:49Z","updated_at":"2021-08-20T18:34:39Z","body":"This is #45093 rebased to work against the current master. It also has some minor correctness fixes. I only tested this on Linux where the build completes and can be run, but the end result has broken text (all Unicode replacement squares).\r\n\r\nThe build definitions work, but could use some TLC. For example the way it uses system libtheora is fairly complicated as opposed to using Meson subprojects and dependency management. [Here is an equivalent build file for SDL Mixer that uses Vorbis](https://github.com/mesonbuild/wrapdb/blob/master/subprojects/packagefiles/sdl2_mixer/meson.build). It would probably also make more sense to move from `config.py` scripts that you run to doing the configuration and header generation with Meson builtins.\r\n\r\nIf there is genuine interest in getting this working, I can help with the work needed to get the rest of it working with equivalent or better level than the current SCons build.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1797.*","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":null,"teams":[4418518]},{"id":700908627,"public_id":51147,"url":"https://github.com/godotengine/godot/pull/51147","diff_url":"https://github.com/godotengine/godot/pull/51147.diff","patch_url":"https://github.com/godotengine/godot/pull/51147.patch","title":"[4.0] Fix output port type mismatch for some VisualScript nodes","state":"open","is_draft":false,"authored_by":{"id":28917197,"user":"haskaris","avater":"https://avatars.githubusercontent.com/u/28917197?v=4","url":"https://github.com/haskaris"},"created_at":"2021-08-01T13:23:38Z","updated_at":"2021-08-10T19:46:09Z","body":"This was a regression from #51084\r\n(#51100 without mistake of wrong source branch)\r\n\r\nThis PR fix the regression and other nodes.\r\n\r\n\r\nBefore the fix:\r\n![](https://user-images.githubusercontent.com/28917197/127752191-996b682c-ceb7-40a2-8975-88675af67285.png)\r\n\r\n\r\nAfter the fix:\r\n![](https://user-images.githubusercontent.com/28917197/127752196-6094d332-ab41-4474-bb54-26ae8e90582f.png)\r\n\r\n\r\nFor the nodes that still have 'any' output, I honestly don't know how to fix theses since it's dynamic. Plus it's not really a mismatch since it's dynamic.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868]},{"id":700902643,"public_id":51146,"url":"https://github.com/godotengine/godot/pull/51146","diff_url":"https://github.com/godotengine/godot/pull/51146.diff","patch_url":"https://github.com/godotengine/godot/pull/51146.patch","title":"[3.4] Fix output port type mismatch for some VisualScript nodes","state":"open","is_draft":false,"authored_by":{"id":28917197,"user":"haskaris","avater":"https://avatars.githubusercontent.com/u/28917197?v=4","url":"https://github.com/haskaris"},"created_at":"2021-08-01T12:55:34Z","updated_at":"2021-08-10T19:48:27Z","body":"Same as #51147 but on 3.4\r\n(#51122 without mistake of wrong source branch)\r\n\r\nThis PR fix the regression and other nodes.\r\n\r\nBefore the fix:\r\n![](https://user-images.githubusercontent.com/28917197/127752191-996b682c-ceb7-40a2-8975-88675af67285.png)\r\n\r\n\r\nAfter the fix:\r\n![](https://user-images.githubusercontent.com/28917197/127752196-6094d332-ab41-4474-bb54-26ae8e90582f.png)\r\n\r\n\r\nFor the nodes that still have 'any' output, I honestly don't know how to fix theses since it's dynamic. Plus it's not really a mismatch since it's dynamic.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417868]},{"id":700796756,"public_id":51128,"url":"https://github.com/godotengine/godot/pull/51128","diff_url":"https://github.com/godotengine/godot/pull/51128.diff","patch_url":"https://github.com/godotengine/godot/pull/51128.patch","title":" Add `GraphEdit.is_node_hover_valid(...)` method","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-08-01T01:23:53Z","updated_at":"2021-08-01T10:02:16Z","body":"This enables custom error detection while the connection is still dragged. I develoepd it to prevent circular references (I could implement something like that in the GraphEdit node as well. It is not that hard).\r\n\r\nHere are an example usage of this feature using the 3.x version (https://github.com/HaSa1002/godot/tree/add-graphedit-is-ok-method-3x):\r\n![AudioTool5](https://user-images.githubusercontent.com/14185889/127756185-74e26d08-6488-4f6b-905a-821c42437181.gif)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":700794689,"public_id":51127,"url":"https://github.com/godotengine/godot/pull/51127","diff_url":"https://github.com/godotengine/godot/pull/51127.diff","patch_url":"https://github.com/godotengine/godot/pull/51127.patch","title":"[3.x] Support negative time scales inside the BlendTreeAnimationNode","state":"open","is_draft":false,"authored_by":{"id":1776044,"user":"MarianoGnu","avater":"https://avatars.githubusercontent.com/u/1776044?v=4","url":"https://github.com/MarianoGnu"},"created_at":"2021-08-01T01:14:46Z","updated_at":"2021-08-06T11:24:32Z","body":"Negative time scales are usefull to add reverse walking cycles, but there's no way to introduce them to a StateMachineAnimationNode. Using a BlendTreeAnimationNode is easy to scale animation speeds, but up until now negative scales was not supported.\r\n\r\n**Preview:**\r\nhttps://gyazo.com/ef5b34cfa6d57346b8479b44e2acdaf6\r\n**Blend Tree example:**\r\n![image](https://user-images.githubusercontent.com/1776044/127756064-408d6b17-a718-4b05-b532-ea3780832221.png)\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418380]},{"id":700769255,"public_id":51121,"url":"https://github.com/godotengine/godot/pull/51121","diff_url":"https://github.com/godotengine/godot/pull/51121.diff","patch_url":"https://github.com/godotengine/godot/pull/51121.patch","title":"Docs: add more explanation for `Shape2D.custom_solver_bias`","state":"open","is_draft":false,"authored_by":{"id":17676847,"user":"merumelu","avater":"https://avatars.githubusercontent.com/u/17676847?v=4","url":"https://github.com/merumelu"},"created_at":"2021-07-31T21:17:25Z","updated_at":"2021-08-04T16:04:32Z","body":"Copies the explanation what a solver bias is from the [PhysicsServer2D docs](https://github.com/godotengine/godot/blob/007b877cb73cd6b60c86eb7b02d4e6f1cee409ea/doc/classes/PhysicsServer2D.xml#L843) to the documentation for `Shape2D.custom_solver_bias` because it was ... very sparse.\r\n","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":700758548,"public_id":51115,"url":"https://github.com/godotengine/godot/pull/51115","diff_url":"https://github.com/godotengine/godot/pull/51115.diff","patch_url":"https://github.com/godotengine/godot/pull/51115.patch","title":"Move assignment of SSAO radius push constant","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2021-07-31T19:35:55Z","updated_at":"2021-07-31T19:35:56Z","body":"Fixes: https://github.com/godotengine/godot/issues/50851\r\n\r\nAssign ``ssao.gather_push_constant.radius`` before adjusting it based on quality. \r\n\r\nThis results in a slight improvement when using the lowest quality setting. \r\n\r\nI removed the branch for half_size as that was an artifact from when I was adding the half resolution option. It is no longer needed and I didnt notice it was still there because it was always overwritten. ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":700717036,"public_id":51104,"url":"https://github.com/godotengine/godot/pull/51104","diff_url":"https://github.com/godotengine/godot/pull/51104.diff","patch_url":"https://github.com/godotengine/godot/pull/51104.patch","title":"Improve invalid non-graphic glyph detection.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-07-31T14:20:15Z","updated_at":"2021-08-02T14:04:54Z","body":"Add additional rule to consider glyph that should visibly separate words (except U+0009 (TAB), which can be zero width depending on alignment settings) have zero invalid (e.g. font do not have space character defined).\r\n\r\nFixes #51101\r\n\r\n<img width=\"660\" alt=\"Screenshot 2021-07-31 at 16 54 33\" src=\"https://user-images.githubusercontent.com/7645683/127742716-5d86e221-c414-4293-b851-afa588a3a4ec.png\">\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":700712083,"public_id":51102,"url":"https://github.com/godotengine/godot/pull/51102","diff_url":"https://github.com/godotengine/godot/pull/51102.diff","patch_url":"https://github.com/godotengine/godot/pull/51102.patch","title":"Add `get_video_adapter_api_version()` to RenderingServer","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-31T13:41:04Z","updated_at":"2021-07-31T14:04:19Z","body":"Follow-up to https://github.com/godotengine/godot/pull/32126.\r\n\r\nThis method can be used to get the graphics API version currently in use (such as Vulkan). It can be used by projects for troubleshooting or statistical purposes.\r\n\r\n## Preview\r\n\r\n### Code\r\n\r\n```gdscript\r\nextends Node\r\n\r\nfunc _ready():\r\n\tprint(RenderingServer.get_video_adapter_name())\r\n\tprint(RenderingServer.get_video_adapter_vendor())\r\n\tprint(RenderingServer.get_video_adapter_api_version())\r\n```\r\n\r\n### Output\r\n\r\n```\r\nNVIDIA GeForce GTX 1080\r\nNVIDIA\r\n1.2.162\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":700697111,"public_id":51098,"url":"https://github.com/godotengine/godot/pull/51098","diff_url":"https://github.com/godotengine/godot/pull/51098.diff","patch_url":"https://github.com/godotengine/godot/pull/51098.patch","title":"Convert TSCN files into binary .scn on export by default","state":"open","is_draft":false,"authored_by":{"id":1554127,"user":"Listwon","avater":"https://avatars.githubusercontent.com/u/1554127?v=4","url":"https://github.com/Listwon"},"created_at":"2021-07-31T11:33:27Z","updated_at":"2021-08-20T12:14:26Z","body":"3.x version https://github.com/godotengine/godot/pull/51096\r\nRelated to https://github.com/godotengine/godot-docs/issues/5131 and https://github.com/godotengine/godot/issues/42115\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":700688598,"public_id":51096,"url":"https://github.com/godotengine/godot/pull/51096","diff_url":"https://github.com/godotengine/godot/pull/51096.diff","patch_url":"https://github.com/godotengine/godot/pull/51096.patch","title":"[3.x] Convert TSCN files into binary .scn on export by default","state":"open","is_draft":false,"authored_by":{"id":1554127,"user":"Listwon","avater":"https://avatars.githubusercontent.com/u/1554127?v=4","url":"https://github.com/Listwon"},"created_at":"2021-07-31T10:17:23Z","updated_at":"2021-08-20T12:00:52Z","body":"Fixes https://github.com/godotengine/godot-docs/issues/5131 (.tscn scenes are properly compiled into compressed .scn)\r\nPossible fix for https://github.com/godotengine/godot/issues/42115\r\n","target_branch":"3.x","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":700687054,"public_id":51095,"url":"https://github.com/godotengine/godot/pull/51095","diff_url":"https://github.com/godotengine/godot/pull/51095.diff","patch_url":"https://github.com/godotengine/godot/pull/51095.patch","title":"[3.x] Complain if casting a freed object in a debug session","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-07-31T10:04:19Z","updated_at":"2021-08-06T11:24:32Z","body":"Version of #51094 for 3.x.\r\n\r\nIn this version I've needed to add `Variant::get_object_instance_id()`, which is the 3.x incarnation of 4.0's `Variant::operator ObjectID()`. In 3.x we can't have an operator like that because `ObjectID` is not a proper class but an alias of a primitive type.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183,4418914]},{"id":700686552,"public_id":51094,"url":"https://github.com/godotengine/godot/pull/51094","diff_url":"https://github.com/godotengine/godot/pull/51094.diff","patch_url":"https://github.com/godotengine/godot/pull/51094.patch","title":"Complain if casting a freed object in a debug session","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-07-31T10:00:43Z","updated_at":"2021-07-31T10:04:46Z","body":"The idea is to give the user a chance to realize a mistake that will cause a crash in a release build (or with no debugger attached).\r\n\r\nFixes #50968.\r\n\r\n**NOTE:** The version for 3.x is #51095.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":700664624,"public_id":51090,"url":"https://github.com/godotengine/godot/pull/51090","diff_url":"https://github.com/godotengine/godot/pull/51090.diff","patch_url":"https://github.com/godotengine/godot/pull/51090.patch","title":"Autofill bug report","state":"open","is_draft":false,"authored_by":{"id":4079608,"user":"dweremeichik","avater":"https://avatars.githubusercontent.com/u/4079608?v=4","url":"https://github.com/dweremeichik"},"created_at":"2021-07-31T06:42:40Z","updated_at":"2021-08-01T01:47:37Z","body":"Github allows pre-populating issue fields. This takes advantage of that\r\nto prevent typos and prefill information for users when they click the\r\n\"Report a Bug\" button.\r\n\r\nProposal godotengine/godot-proposals/issues/3063\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":700597046,"public_id":51086,"url":"https://github.com/godotengine/godot/pull/51086","diff_url":"https://github.com/godotengine/godot/pull/51086.diff","patch_url":"https://github.com/godotengine/godot/pull/51086.patch","title":"[3.x] Warn when using the `dectime` method","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-30T22:39:44Z","updated_at":"2021-08-20T00:11:50Z","body":"`dectime` has been removed in the master branch (what will be Godot 4.0) as of #51084.\r\n\r\nThis PR does not prevent using the method, it only shows a warning. This can be helpful for users that want to future-proof their projects for Godot 4.0.\r\n\r\nThis PR doesn't wrap the method in `#ifndef DISABLE_DEPRECATED` because there are a lot of places where this method is bound so it would be a lot of additions. I can add these if desired though.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3857901,4038183,4418914]},{"id":700476117,"public_id":51079,"url":"https://github.com/godotengine/godot/pull/51079","diff_url":"https://github.com/godotengine/godot/pull/51079.diff","patch_url":"https://github.com/godotengine/godot/pull/51079.patch","title":"Add documentation to GodotSharp, Fix PackedInt64Array typo","state":"open","is_draft":true,"authored_by":{"id":3903059,"user":"raulsntos","avater":"https://avatars.githubusercontent.com/u/3903059?v=4","url":"https://github.com/raulsntos"},"created_at":"2021-07-30T18:01:16Z","updated_at":"2021-08-21T01:53:52Z","body":"Follow-up to #40218, #50867 and #51044\r\n\r\n- Adds documentation to almost every class and member in `GodotSharp` (Related to #39703 but I'm not sure if this is enough to close it).\r\n- Fixes a typo in `bindings_generator.h`\r\n- Fixes the documentation generation for `[constant]` tags in `bindings_generator.cpp`","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":700046053,"public_id":51054,"url":"https://github.com/godotengine/godot/pull/51054","diff_url":"https://github.com/godotengine/godot/pull/51054.diff","patch_url":"https://github.com/godotengine/godot/pull/51054.patch","title":"glTF2 use alpha instead of depth prepass","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-07-30T06:41:05Z","updated_at":"2021-07-30T14:12:29Z","body":"Not sure of the implications, but depth-prepass is broken.\r\n\r\nCommunity reddit has had threads about trees and foilage.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310502,"name":"topic:import","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":700028579,"public_id":51050,"url":"https://github.com/godotengine/godot/pull/51050","diff_url":"https://github.com/godotengine/godot/pull/51050.diff","patch_url":"https://github.com/godotengine/godot/pull/51050.patch","title":"Visual script modules draft","state":"open","is_draft":true,"authored_by":{"id":20573784,"user":"Gallilus","avater":"https://avatars.githubusercontent.com/u/20573784?v=4","url":"https://github.com/Gallilus"},"created_at":"2021-07-30T06:02:52Z","updated_at":"2021-07-30T18:42:11Z","body":"Visualscript modules are similar to scripts but they allow for storing\r\nand loading parts of the visualscript aka snippet/sub-graph/module as a\r\nresource that can be utilized in any other visualscript.\r\n\r\nAdded:\r\nVisualScriptModule Class as Resource types for allowing handling\r\nvisualscript code snippets as resource.\r\nVisualScriptModuleNodes for interfacing with the Modules in\r\nvisualscript.\r\n\r\nChanged:\r\nCreation of visualscript instances for making room for modules.\r\nAdding checks in the visualscript editor for handling modules.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nTEMP REBASED FOR TESTS AND DEVELOPMENT #45294\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868,4418733]},{"id":699982304,"public_id":51048,"url":"https://github.com/godotengine/godot/pull/51048","diff_url":"https://github.com/godotengine/godot/pull/51048.diff","patch_url":"https://github.com/godotengine/godot/pull/51048.patch","title":"Add a minimal template build to CI","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-30T03:52:44Z","updated_at":"2021-08-18T00:34:02Z","body":"This PR creates a new CI build that does a minimal export template build with everything disabled.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":699816330,"public_id":51034,"url":"https://github.com/godotengine/godot/pull/51034","diff_url":"https://github.com/godotengine/godot/pull/51034.diff","patch_url":"https://github.com/godotengine/godot/pull/51034.patch","title":"[macOS] Update MIME codes and file type name to match \"dist/linux/org.godotengine.Godot.xml\"","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-07-29T20:19:17Z","updated_at":"2021-07-29T20:23:11Z","body":"Update filetype info to match Linux. Add GDShader filetype.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":699715811,"public_id":51028,"url":"https://github.com/godotengine/godot/pull/51028","diff_url":"https://github.com/godotengine/godot/pull/51028.diff","patch_url":"https://github.com/godotengine/godot/pull/51028.patch","title":"Add command line arguments to print licenses, authors and donors","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-29T17:29:52Z","updated_at":"2021-08-06T16:38:32Z","body":"This is required for complying with third-party licenses when distributing headless/server binaries (including Docker containers).\r\n\r\nSince the license text is already included within the binary, this doesn't increase the binary size.\r\n\r\nThis adds the following command line arguments:\r\n\r\n- `--about license` - Prints Godot's MIT license\r\n- `--about thirdparty-copyrights` - Prints third-party copyright notices with SPDX license names\r\n- `--about thirdparty-licenses` - Prints the full text of third-party licenses\r\n- `--about authors` - Print the engine contributors' names\r\n- `--about donors` - Print the engine donors' names\r\n\r\n## Preview\r\n\r\n***Note:** The Unicode parsing error demonstrated in this preview has since been fixed.*\r\n\r\n### `--about license`\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --about license\r\nMIT license\r\n===========\r\n\r\nCopyright (c) 2007-2021 Juan Linietsky, Ariel Manzur.\r\nCopyright (c) 2014-2021 Godot Engine contributors (cf. `--about authors` CLI argument).\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n### `--about thirdparty-copyrights`\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --about thirdparty-copyrights\r\nGodot Engine includes the following components. Some of them are developed by third parties:\r\n\r\n- Godot Engine\r\n\r\n    © 2007-2021, Juan Linietsky, Ariel Manzur.\r\n    © 2014-2021, Godot Engine contributors.\r\n    License: Expat\r\n\r\n- Godot Engine logo\r\n\r\n    © 2017, Andrea Calabró\r\n    License: CC-BY-4.0\r\n\r\n- Bullet Continuous Collision Detection and Physics Library\r\n\r\n    © 2011, Ole Kniemeyer, MAXON, www.maxon.net\r\n    © 2007-2021, Juan Linietsky, Ariel Manzur.\r\n    © 2014-2021, Godot Engine contributors.\r\n    License: Expat and Zlib\r\n\r\n    © 2003-2008, Erwin Coumans\r\n    © 2007-2021, Juan Linietsky, Ariel Manzur.\r\n    © 2014-2021, Godot Engine contributors.\r\n    License: Expat and Zlib\r\n\r\n    © 2007, Starbreeze Studios\r\n    © 2007-2021, Juan Linietsky, Ariel Manzur.\r\n    © 2014-2021, Godot Engine contributors.\r\n    License: Expat and Zlib\r\n\r\n    © 2003-2013, Erwin Coumans\r\n    License: Zlib\r\n\r\n[...]\r\n```\r\n\r\n### `--about thirdparty-licenses`\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --about thirdparty-licenses \r\nGodot Engine includes components licensed under the following open source licenses:\r\n\r\n- Apache-2.0\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n    \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n    \r\n\r\n- Bitstream Vera Fonts Copyright\r\n\r\n[...]\r\n```\r\n\r\n### `--about authors`\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --about authors            \r\n\r\nLead Developers\r\n===============\r\n\r\nJuan Linietsky (reduz)\r\n\r\nProject Managers\r\n================\r\n\r\nUnicode parsing error: Invalid unicode codepoint ffffffc3.\r\n\r\n\r\nFounders\r\n========\r\n\r\nJuan Linietsky (reduz)                            Ariel Manzur (punto-)\r\n\r\nDevelopers\r\n==========\r\n\r\nAaron Franke (aaronfranke)                        Aaron Record (LightningAA)\r\nAlexander Holland (AlexHolly)                     Alexey Khoroshavin (allkhor)\r\n\r\n[...]\r\n```\r\n\r\n### `--about donors`\r\n\r\n```\r\n❯ bin/godot.linuxbsd.tools.64.llvm --about donors \r\n\r\nPlatinum Sponsors\r\n=================\r\n\r\nGamblify <https://www.gamblify.com>    Heroic Labs <https://heroiclabs.com>    Spiffcode <http://www.spiffcode.com>\r\n\r\nGold Sponsors\r\n=============\r\n\r\nNone currently, become one! <https://godotengine.org/donate>\r\n\r\nSilver Sponsors\r\n===============\r\n\r\nASIFA-Hollywood <https://www.asifa-hollywood.org>    LITSLINK <https://litslink.com>\r\n\r\nBronze Sponsors\r\n===============\r\n\r\nBen Nolan                     Brandon Lamb                  Garry Newman\r\nGordon MacPherson             Hunter Dickson                Kitcat490\r\nKyle Szklenski                Moonwards <https://www.moonwards.com>    TrampolineTales <http://trampolinetales.com>\r\n\r\nMini Sponsors\r\n=============\r\n\r\nAD Ford                       alex brown                    Andrew Dunai\r\nAngry Skull                   anti666                       blurp\r\n\r\n[...]\r\n```\r\n\r\n## TODO\r\n\r\n- [x] Fix `--about authors` and `--about donors` misbehaving on names containing Unicode characters. I can never figure out how to use `String::utf8()` on a Variant :slightly_frowning_face:","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":699508697,"public_id":51013,"url":"https://github.com/godotengine/godot/pull/51013","diff_url":"https://github.com/godotengine/godot/pull/51013.diff","patch_url":"https://github.com/godotengine/godot/pull/51013.patch","title":"Tweak the font oversampling warning to only print when relevant","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-29T12:55:48Z","updated_at":"2021-08-06T11:24:32Z","body":"There's no point in displaying this  warning if the process can't draw (e.g. using a headless/server binary or `--no-window` command line argument).\r\n\r\nThe warning was also tweaked to be only printed once per session.\r\n\r\nI noticed this issue in the log of https://github.com/godotengine/godot/issues/51012.\r\n\r\nNot relevant for `master` as the font oversampling warning there was removed entirely.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":699030434,"public_id":50990,"url":"https://github.com/godotengine/godot/pull/50990","diff_url":"https://github.com/godotengine/godot/pull/50990.diff","patch_url":"https://github.com/godotengine/godot/pull/50990.patch","title":"Convert `typedef` statements to C++11's `using`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-28T21:35:21Z","updated_at":"2021-08-13T21:53:43Z","body":"This provides a more readable syntax that is recommended since C++11.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,3112906,3112907,3112909,3112910,3112912,3388402,3609449,4038183,4417777,4418376,4418392,4418403,4418424,4418558,4418605,4418726,4418733,4418914,4418923]},{"id":698377781,"public_id":50964,"url":"https://github.com/godotengine/godot/pull/50964","diff_url":"https://github.com/godotengine/godot/pull/50964.diff","patch_url":"https://github.com/godotengine/godot/pull/50964.patch","title":"feat: add HTTPClient implementation using curl as a module","state":"open","is_draft":true,"authored_by":{"id":1424843,"user":"jonbonazza","avater":"https://avatars.githubusercontent.com/u/1424843?v=4","url":"https://github.com/jonbonazza"},"created_at":"2021-07-28T05:34:04Z","updated_at":"2021-07-29T05:13:21Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nThis PR uses libcurl in multi mode (curl_multi) to implement the HTTPClient interface. It cleans up the implementations significantly and should reduce maintenance burden while giving us easier access to more features in the end.\r\n\r\nfixes https://github.com/godotengine/godot-proposals/issues/2903\r\n\r\n## Scope\r\n\r\nThe goal of this PR is only to create a curl-based implementation of `HTTPClient` that conforms to the existing interface and nothing more.\r\n\r\nThe net team has discussed several improvements to the `HTTPClient` interface in general that may be implemented in future PRs, but they remain outside the scope of this one.\r\n\r\n## Remaining Work\r\n\r\nThe current state of the PR is *DRAFT*. It still needs more testing and there are still a few remaining pieces left.\r\n\r\n- [ ] Support IPv6 DNS resolution using Godot's resolver APIs. I was unable to get this to work, but I consider it essential for this PR to be merged. IPv4 works fine though.\r\n- [x] See if there's a way to make DNS resolution more performant by using the async apis. I'm not familiar enough with Godot's DNS APIs to know how best to use them, and the documentation for them is quite lacking. May want to just leave this up to a future improvement with its own PR.\r\n- [ ] Support blocking mode. The `HTTPClient` interface has a function for setting blocking mode. Currently it does nothing in this implementation. I'm not even really sure how this is expected to be used. Is it even needed?\r\n- [x] Implement `set_connection` and `get_connection`. The way libcurl works doesn't lend itself well to the `StreamPeer` interface, so without some changes to that API, there's not a good way to do t his. If we _do_ decide to use `NetSocket` as the socket implementation (see above item) then we get this for free, so that's one pro to that approach. That said, I don't see these functions used anywhere in the Godot codebase, so I'd question whether they are even needed to begin with.\r\n- [ ] Get libcurl building on all platforms. Currently, I only have it working on Windows. I know @Faless has gotten it working on Linux, but I'm not sure what was necessary there. This might take some effort. We should also take the time to decide what features to enable/disable to tune binary size and also add a flag for using the system libcurl if available.\r\n\r\n\r\nIf I've missed anything in either the implementation itself, or the TODO list above, please don't hesitate to bring it up so we can discuss and potentially address it.\r\n\r\n## Regarding Unit Tests\r\n\r\nWhile we should certainly strive for as much unit tests coverage as possible, I didn't see any existing tests for the http client, so I've decided to leave that for an exercise for another day (and potentially another person). \r\n\r\nI want to stress that my decision not to include unit tests is not to the discredit of the idea of unit tests in general; quite the contrary, in fact. I would like to see a day where Godot's unit test coverage nears 100% just as much as anyone. However the best way to test http code is by running it against a real HTTP server, and to my knowledge, Godot doesn't currently have the facilities to do that and I'm not comfortable convoluting this particular PR by adding those facilities.\r\n\r\n## A Note About The Commits\r\n\r\nThere's quite a lot of commits in this one and none of them are particularly clean. I'm a bit embarrassed about that, but it's mostly due to the fact I was learning so many new technologies along the way and ended up doing a lot of things wrong in a lot of different places in odd orders.\r\n\r\nI suggest when merging this PR to squash all of the commits in order to keep things as clean as possible in master.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":698217722,"public_id":50955,"url":"https://github.com/godotengine/godot/pull/50955","diff_url":"https://github.com/godotengine/godot/pull/50955.diff","patch_url":"https://github.com/godotengine/godot/pull/50955.patch","title":"Pause the project execution if `get_node()` can't find the node","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-27T22:05:32Z","updated_at":"2021-07-28T07:39:25Z","body":"This makes troubleshooting easier by requiring the user to fix their script, while still printing a message to the console. The script can be manually continued if desired.\r\n\r\nIf the node may not be found at run-time, `get_node_or_null()` should be used instead.\r\n\r\nThe implementation is a proof-of-concept and most likely doesn't work with C# and visual scripting. We'll most likely want to put this behind a `break_on_runtime_error` project setting (enabled by default in `master`, disabled by default in `3.x`).\r\n\r\nOnce we figure out a good implementation, we can extend it to other things such as nonexistent Input action names.\r\n\r\nThis partially addresses https://github.com/godotengine/godot-proposals/issues/1729.\r\n\r\n## Preview\r\n\r\n![Editor break](https://user-images.githubusercontent.com/180032/127233650-dde3ee52-d4b2-4b02-a7fd-6621d651ee3e.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":698204034,"public_id":50954,"url":"https://github.com/godotengine/godot/pull/50954","diff_url":"https://github.com/godotengine/godot/pull/50954.diff","patch_url":"https://github.com/godotengine/godot/pull/50954.patch","title":"Improve the script editor's executing line icon (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-27T21:36:18Z","updated_at":"2021-08-06T11:24:32Z","body":"The executing line icon now surrounds the breakpoint icon with an outline instead of being drawn inside.\r\n\r\nI tested this at editor scales 100% and 200% and it works well in both.\r\n\r\nThis addresses https://github.com/godotengine/godot/issues/50950 for `3.x`. A `master` PR needs to be made too – the code is entirely different, and the breakpoint icon was also changed.\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/127230769-8821c02f-872e-4c73-948e-699ff3f9e89d.png)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828781,4418733]},{"id":698164544,"public_id":50952,"url":"https://github.com/godotengine/godot/pull/50952","diff_url":"https://github.com/godotengine/godot/pull/50952.diff","patch_url":"https://github.com/godotengine/godot/pull/50952.patch","title":"[3.x] Backport output log enhancements and features","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-27T20:23:09Z","updated_at":"2021-08-06T11:24:32Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nIncludes https://github.com/godotengine/godot/pull/41321 and some other follow-up changes.\r\n\r\nhttps://user-images.githubusercontent.com/50304111/127759508-73bfcd17-8165-4210-9e67-e3d4e7805e4f.mp4\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828781,4418733]},{"id":697898507,"public_id":50943,"url":"https://github.com/godotengine/godot/pull/50943","diff_url":"https://github.com/godotengine/godot/pull/50943.diff","patch_url":"https://github.com/godotengine/godot/pull/50943.patch","title":"[3.x] Bind `Input.mouse_mode` as a property","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-27T14:11:04Z","updated_at":"2021-08-17T17:50:38Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n3.x version of https://github.com/godotengine/godot/pull/50940","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418914]},{"id":697854768,"public_id":50941,"url":"https://github.com/godotengine/godot/pull/50941","diff_url":"https://github.com/godotengine/godot/pull/50941.diff","patch_url":"https://github.com/godotengine/godot/pull/50941.patch","title":"Remove `CoreStringNames` and `SceneStringNames`","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-27T13:18:38Z","updated_at":"2021-07-27T18:15:01Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nSee https://chat.godotengine.org/channel/scripting?msg=ZCRd86Xg7vAtDaNKu\r\n\r\nNot certain that this is desired, but `CoreStringNames` and `SceneStringNames` aren't used very consistently, several of their `StringName`s are unused, and they're no longer that useful for caching the `StringName`s since we have the `SNAME()` macro. I this will make it less work to implement something better like https://github.com/godotengine/godot-proposals/issues/2152.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4417868,4418380,4418558,4418726,4418914]},{"id":697836877,"public_id":50940,"url":"https://github.com/godotengine/godot/pull/50940","diff_url":"https://github.com/godotengine/godot/pull/50940.diff","patch_url":"https://github.com/godotengine/godot/pull/50940.patch","title":"Bind `Input.mouse_mode` as a property","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-27T12:57:22Z","updated_at":"2021-08-01T00:52:42Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nIt seems this was an oversight, `mouse_mode` already has both a setter and a getter.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418403]},{"id":697711455,"public_id":50929,"url":"https://github.com/godotengine/godot/pull/50929","diff_url":"https://github.com/godotengine/godot/pull/50929.diff","patch_url":"https://github.com/godotengine/godot/pull/50929.patch","title":"Removed Redundant initialization of probe_half_size","state":"open","is_draft":false,"authored_by":{"id":79760854,"user":"Vitika9","avater":"https://avatars.githubusercontent.com/u/79760854?v=4","url":"https://github.com/Vitika9"},"created_at":"2021-07-27T09:57:25Z","updated_at":"2021-07-27T12:27:39Z","body":"Fixes #50903\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":697378089,"public_id":50915,"url":"https://github.com/godotengine/godot/pull/50915","diff_url":"https://github.com/godotengine/godot/pull/50915.diff","patch_url":"https://github.com/godotengine/godot/pull/50915.patch","title":"Add SSR resolution selection","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-26T21:54:23Z","updated_at":"2021-08-16T16:24:08Z","body":"This salvages https://github.com/godotengine/godot/pull/28502.\r\n\r\n- Full, Half, and Quarter setting in WorldEnvironment under Ss Reflections.\r\n- Replaces 0.5 with a custom multiplier.\r\n- Higher resolution requires more steps, else the range of the reflections is shorter.\r\n- Slight performance changes per resolution. Quarter res and lowering max depth may be useful for lower end devices.\r\n\r\n**Testing project:** [test_ssr_resolution_3.x.zip](https://github.com/godotengine/godot/files/6881423/test_ssr_resolution_3.x.zip)\r\n\r\n## Preview\r\n\r\n### Half resolution (default, existing behavior)\r\n\r\n![2021-07-26_23 41 23](https://user-images.githubusercontent.com/180032/127064217-d0237896-450c-46f4-a999-fae234fe0323.png)\r\n\r\n### Full resolution + doubled max steps\r\n\r\n![2021-07-26_23 41 13](https://user-images.githubusercontent.com/180032/127064211-a9ae021d-672e-46de-9ad4-78ff6a9b5ae8.png)\r\n\r\n### Quarter resolution + halved max steps\r\n\r\n![2021-07-26_23 41 34](https://user-images.githubusercontent.com/180032/127064218-b5f9a93f-1e6f-409e-b5cc-499a23b3224a.png)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":697241392,"public_id":50907,"url":"https://github.com/godotengine/godot/pull/50907","diff_url":"https://github.com/godotengine/godot/pull/50907.diff","patch_url":"https://github.com/godotengine/godot/pull/50907.patch","title":"Add tests file for Quaternion unit tests, with initial UTs","state":"open","is_draft":false,"authored_by":{"id":87913676,"user":"codepatzer","avater":"https://avatars.githubusercontent.com/u/87913676?v=4","url":"https://github.com/codepatzer"},"created_at":"2021-07-26T18:07:27Z","updated_at":"2021-08-02T04:34:03Z","body":"- Test Quaternion constructors and quaternion product.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":697106402,"public_id":50896,"url":"https://github.com/godotengine/godot/pull/50896","diff_url":"https://github.com/godotengine/godot/pull/50896.diff","patch_url":"https://github.com/godotengine/godot/pull/50896.patch","title":"Add `GraphEdit` drag notifications","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-07-26T14:58:39Z","updated_at":"2021-07-26T15:10:03Z","body":"# Context\r\n\r\nI am working on a graph based tool and wanted to implement shortcuts to add nodes while I am dragging a node. To increase usability the newly created node should be connected to the current connection and the connection dragging should end.\r\n\r\n![AudioTool3](https://user-images.githubusercontent.com/14185889/127008201-4d46ecbd-7fd4-400c-ba96-0801caff5ac2.gif)\r\n*(I press `O` and `S+T` in the gif)*\r\n\r\n# Implementation\r\n\r\nI added two new signals `connection_drag_begun` and `connection_drag_ended`. Those are called whenever a connection drag starts or ends. `connection_drag_begun` passes the node, port, and a boolean to determine on which side the port is. As a user, I save node, port and the flag and clear the node when the drag ends. In my shortcut logic, I can spawn a connection with the new node, if the node is not empty. Because the graph node is still in its connection drag mode, you need to end that mode without calling any other signals. With `force_connection_drag_end()` you can do that.\r\n\r\n<details>\r\n<summary>Example Code</summary>\r\n\r\n```gdscript\r\nvar shortcuts := {}\r\nvar from_node_d := \"\"\r\nvar from_slot_d := 0\r\nvar from_output_d := false\r\n\r\nfunc _unhandled_key_input(event: InputEventKey):\r\n\tif !event.pressed:\r\n\t\treturn\r\n\t\r\n\tvar was_invoked := false\r\n\t\r\n\tfor shortcut in shortcuts:\r\n\t\tif shortcut.size() != 1:\r\n\t\t\tcontinue\r\n\t\tif event.keycode == shortcut[0]:\r\n\t\t\tif from_node_d.is_empty():\r\n\t\t\t\tadd_graph_node(shortcuts[shortcut])\r\n\t\t\telse:\r\n\t\t\t\tadd_graph_node_and_connection(shortcuts[shortcut], from_output_d, from_node_d, from_slot_d)\r\n\t\t\twas_invoked = true\r\n\r\n\tif was_invoked && !from_node_d.is_empty():\r\n\t\tforce_connection_drag_end()\r\n\r\nfunc _on_SoundGraph_connection_drag_begun(from, slot, is_output):\r\n\tfrom_node_d = from\r\n\tfrom_slot_d = slot\r\n\tfrom_output_d = is_output\r\n\r\nfunc _on_SoundGraph_connection_drag_ended():\r\n\tfrom_node_d = \"\"\r\n```\r\n\r\n</details>\r\n\r\nI have a 3.x version of this change as well (because I use 3.x), which I could PR, too.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":696953615,"public_id":50883,"url":"https://github.com/godotengine/godot/pull/50883","diff_url":"https://github.com/godotengine/godot/pull/50883.diff","patch_url":"https://github.com/godotengine/godot/pull/50883.patch","title":"Scale color output in the mobile renderer to provide HDR support","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-07-26T11:45:49Z","updated_at":"2021-08-15T10:53:59Z","body":"As we are now using an A2R10G10B10 UNORM buffer our color values can only be between 0.0 and 1.0 disabling full HDR support on the mobile renderer. \r\n\r\nBy scaling the color output we can support a 0.0 to 2.0 range. This involves dividing by 2.0 at the output of our scene renderer, and multiplying by 2.0 in our tonemapper. Similar changes are needed in some other parts of the engine such as reading from screen_texture and reading from reflection maps both in reflection probes and for our sky.\r\n\r\nBecause the clustered renderer and mobile renderer share some code (mostly the lighting code) the `color_scale` input has been added to the clustered `scene_data` as well but remains large unused and should remain at its default `1.0`.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":696581743,"public_id":50873,"url":"https://github.com/godotengine/godot/pull/50873","diff_url":"https://github.com/godotengine/godot/pull/50873.diff","patch_url":"https://github.com/godotengine/godot/pull/50873.patch","title":"Prevent 2D editor plugins from breaking editor","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-07-25T23:32:33Z","updated_at":"2021-07-26T07:25:18Z","body":"See https://github.com/godotengine/godot-proposals/issues/3038#issuecomment-886194459\r\n\r\nPlugin can still break another plugin, not sure if setting transform is cheap enough to call it after every plugin.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542]},{"id":696580031,"public_id":50872,"url":"https://github.com/godotengine/godot/pull/50872","diff_url":"https://github.com/godotengine/godot/pull/50872.diff","patch_url":"https://github.com/godotengine/godot/pull/50872.patch","title":"Some more C# formatting and style fixes","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-25T23:19:21Z","updated_at":"2021-08-20T03:06:48Z","body":"Follow-up to #50757. This PR manually picks out some of the changes of #49352, anything that is easy to decide if it's a benefit.\r\n\r\nThis PR does the following:\r\n* Use `_` for private fields/constants.\r\n* Replace `extern static` with `static extern`.\r\n* Replace `String` with `string`.\r\n* Add explicit access modifiers.\r\n* Add explicit parenthesis.\r\n* Use camelCase for local variables.\r\n* Use static types where 49352 does.\r\n* Manually break up some of the lines that were automatically broken up by the formatter in 49352.\r\n\r\nI can make a version of this PR for 3.x, if so #49352 will have to be rebased on top of it. As with #50757 the goal here is to break down #49352 into smaller pieces so we can more easily review the remaining style changes. There are also a few places where the automatic formatter produced sub-par results that I've replaced with better alternatives in this PR.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3857901]},{"id":696571225,"public_id":50870,"url":"https://github.com/godotengine/godot/pull/50870","diff_url":"https://github.com/godotengine/godot/pull/50870.diff","patch_url":"https://github.com/godotengine/godot/pull/50870.patch","title":"Removed redundant variable assignment in remote debugger","state":"open","is_draft":false,"authored_by":{"id":78760470,"user":"TheRealChestnut","avater":"https://avatars.githubusercontent.com/u/78760470?v=4","url":"https://github.com/TheRealChestnut"},"created_at":"2021-07-25T22:07:52Z","updated_at":"2021-08-03T16:04:28Z","body":"*Bugsquad edit:* Fixes #50848.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,3112906,3609449,3857901,4417868,4418550,4418605,4418914]},{"id":696539515,"public_id":50864,"url":"https://github.com/godotengine/godot/pull/50864","diff_url":"https://github.com/godotengine/godot/pull/50864.diff","patch_url":"https://github.com/godotengine/godot/pull/50864.patch","title":"Generate docs on a thread","state":"open","is_draft":false,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2021-07-25T17:47:22Z","updated_at":"2021-07-26T07:11:24Z","body":"* The main generation could not be moved to a thread, unfortunately, as it instantiates classes to get default values, interacts with ProjectSettings, etc.\r\n* Only uncompressing documentation and merging it is threaded.\r\n* Seems to improve editor load times by 0.5 seconds.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":696527336,"public_id":50859,"url":"https://github.com/godotengine/godot/pull/50859","diff_url":"https://github.com/godotengine/godot/pull/50859.diff","patch_url":"https://github.com/godotengine/godot/pull/50859.patch","title":"Set all icons to maximum opacity","state":"open","is_draft":false,"authored_by":{"id":23073976,"user":"algorev","avater":"https://avatars.githubusercontent.com/u/23073976?v=4","url":"https://github.com/algorev"},"created_at":"2021-07-25T16:17:10Z","updated_at":"2021-08-14T22:41:49Z","body":"Some icons were darker than others or had inconsistent brightness in general. This was due to the icon SVGs having different opacities.\r\n\r\nThis PR fixes this by removing all opacity attributes from the SVGs.\r\n\r\n_Note: This is my first PR ever, I'm trying to do everything according to the guide, but I might still have gotten some steps wrong, so please be kind with me._\r\n\r\n**See godotengine/godot-proposals#3025 for more info.**\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781]},{"id":696433385,"public_id":50830,"url":"https://github.com/godotengine/godot/pull/50830","diff_url":"https://github.com/godotengine/godot/pull/50830.diff","patch_url":"https://github.com/godotengine/godot/pull/50830.patch","title":"Modulate albedo by vertex color in the fallback 3D material","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-25T02:48:58Z","updated_at":"2021-07-25T02:49:20Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50801.\r\n\r\nThis lets people preview vertex color without having to assign a material to a mesh.\r\n\r\nThis makes the process of debugging procedural geometry generation more convenient, in addition to allowing the customization of primitive mesh colors out of the box.\r\n\r\n**This change does not affect the default StandardMaterial3D configuration**, and should therefore not impact performance in a finished project that won't use any fallback materials.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/3031.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":696408428,"public_id":50823,"url":"https://github.com/godotengine/godot/pull/50823","diff_url":"https://github.com/godotengine/godot/pull/50823.diff","patch_url":"https://github.com/godotengine/godot/pull/50823.patch","title":"Added material_overlay property to MeshInstance (gles2 & gles3)","state":"open","is_draft":false,"authored_by":{"id":28926813,"user":"fbcosentino","avater":"https://avatars.githubusercontent.com/u/28926813?v=4","url":"https://github.com/fbcosentino"},"created_at":"2021-07-24T21:35:10Z","updated_at":"2021-08-13T07:13:02Z","body":"### Current problem\r\n\r\nApplying overlay materials (such as momentary visual effects) on multi-surface meshes currently requires adding a next pass material to all the surfaces, which might be cumbersome when the material is to be applied to a range of different geometries. E. g. an enemy plays a VFX when receiving a blaster hit, but each enemy type is a different mesh, with different number of surfaces.\r\n\r\nThis also makes it not very trivial to use AnimationPlayer to control the material. In the mentioned example, controlling the effect via animations require either adding a different AnimationPlayer to each different type of mesh, with manually set animations for each of the surfaces (which means only prepared targets could show the effect), or - if a same AnimationPlayer-based scene is instanced in any of the affected enemies - a script iterating over the surfaces of the mesh assigning the material, and exposing to the AnimationPlayer somehow (e.g. via export var).\r\n\r\nThe material_override property is not an option as it works replacing the active material for the surfaces, not adding a new pass.\r\n\r\n### Solution\r\n\r\nThis commit adds the material_overlay property to GeometryInstance (and therefore MeshInstance), which is a Material affecting all surfaces like material_override does, but rendering as a new pass on top of the active materials, instead of replacing them.\r\n\r\n![image](https://user-images.githubusercontent.com/28926813/126881358-e1a78a17-7979-4f19-9989-6e0fa5857e95.png)\r\n\r\n\r\nImplemented in rasterizer of both GLES2 and GLES3.\r\n\r\n### Example\r\n\r\nTest model: mesh with 3 surfaces, each with a different material\r\n\r\n![image](https://user-images.githubusercontent.com/28926813/126881151-f5a2627b-a10a-4628-ac90-d0f83dce0f60.png)\r\n\r\n\r\nTest effect added as next pass in first surface - provides a single point of access for an AnimationPlayer but needs scripting to be assigned to other surfaces - or repetition in the animation itself.\r\n\r\n![image](https://user-images.githubusercontent.com/28926813/126881192-b94bf08f-a246-4223-91bc-856be81c4772.png)\r\n\r\n\r\nTest effect added as material_override - direct interface with single material, but underlying materials are lost\r\n\r\n![image](https://user-images.githubusercontent.com/28926813/126881236-f931462c-27ac-4817-99c5-f5ece6a6945c.png)\r\n\r\n\r\nTest effect using material_overlay - effect covers entire model preserving base materials and providing single access for animations\r\n\r\n![image](https://user-images.githubusercontent.com/28926813/126881256-46116125-288a-4d17-9133-2a650bd929ab.png)\r\n\r\n\r\nGIF below demonstrates using \"Next pass\" to stack 3 material effects in material_overlay, all controlled via a single animation in AnimationPlayer. This AnimationPlayer can be saved as branch scene and instanced in any affected MeshInstance during runtime as needed. The only scripting required is assigning the material to material_overlay, which is completely independent from mesh materials or number of surfaces.\r\n\r\n![material_overlay_1](https://user-images.githubusercontent.com/28926813/126881316-ba2e4330-5c23-4f5b-99f0-088861879086.gif)\r\n\r\n\r\n\r\n\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":696361320,"public_id":50806,"url":"https://github.com/godotengine/godot/pull/50806","diff_url":"https://github.com/godotengine/godot/pull/50806.diff","patch_url":"https://github.com/godotengine/godot/pull/50806.patch","title":"[3.x] GDNative stringification of uint64_t","state":"open","is_draft":false,"authored_by":{"id":51226895,"user":"IlyaStuurFedorov","avater":"https://avatars.githubusercontent.com/u/51226895?v=4","url":"https://github.com/IlyaStuurFedorov"},"created_at":"2021-07-24T14:49:42Z","updated_at":"2021-08-06T11:24:32Z","body":"This reflects some additional unimplemented functionality for `stringification` of `uint64_t` to the GDNative.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3377457]},{"id":696350149,"public_id":50805,"url":"https://github.com/godotengine/godot/pull/50805","diff_url":"https://github.com/godotengine/godot/pull/50805.diff","patch_url":"https://github.com/godotengine/godot/pull/50805.patch","title":"Fixed drag and drop not respecting type on exported arrays.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2021-07-24T13:16:36Z","updated_at":"2021-07-25T07:27:17Z","body":"See #50718\r\n\r\nBefore: drag and drop of invalid type was allowed, and also created empty value in array.\r\n\r\nhttps://user-images.githubusercontent.com/41730826/126869563-0d1b875c-6fcb-4e4d-acdc-969fa6a38e9d.mp4\r\n\r\nAfter: drag and drop not allowed in the first place.\r\n\r\nhttps://user-images.githubusercontent.com/41730826/126869529-849f31a6-f034-4ed3-88e7-83eea01c1500.mp4\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":696334946,"public_id":50801,"url":"https://github.com/godotengine/godot/pull/50801","diff_url":"https://github.com/godotengine/godot/pull/50801.diff","patch_url":"https://github.com/godotengine/godot/pull/50801.patch","title":"Add a vertex color property to PrimitiveMesh","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-24T11:14:07Z","updated_at":"2021-07-24T11:19:21Z","body":"This property can be used to color primitive meshes individually.\r\n\r\n- This can be used to color billboards such as light flares without having to use a unique material for each color, improving performance.\r\n- This can be used when prototyping to color different objects while keeping a single material for all meshes.\r\n  - **Note:** Until https://github.com/godotengine/godot-proposals/issues/3031 is implemented, you will have to create a StandardMaterial3D resource, assign it to the mesh and enable **Vertex Color > Use As Albedo** for the color to be visible.\r\n- This can be used in custom shaders to provide configurable per-instance information.\r\n\r\n## Preview\r\n\r\n***Note:** The property is now called `vertex_color` instead of `vertex_color_modulate`.*\r\n\r\nhttps://user-images.githubusercontent.com/180032/126866782-bed89b28-bb2a-4ac3-9cf0-c115ad6ef125.mp4\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":696304752,"public_id":50798,"url":"https://github.com/godotengine/godot/pull/50798","diff_url":"https://github.com/godotengine/godot/pull/50798.diff","patch_url":"https://github.com/godotengine/godot/pull/50798.patch","title":"Use dithering to fade DirectionalLight shadow splits between each other","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-24T06:45:33Z","updated_at":"2021-08-08T15:30:15Z","body":"See also https://github.com/godotengine/godot/pull/48776 (this does not supersede it, as both techniques can work together).\r\n\r\nThis provides a cheaper alternative to the Blend Splits property. It doesn't look as good, but it still helps make split transitions much less noticeable.\r\n\r\nThis PR is marked as a draft, since we'll need to revise how blend splitting is defined in DirectionalLight to move it to an enum project setting instead (`None (Fastest), Dither (Fast), Blend (Average)`).\r\n\r\nThis can be backported to `3.x`'s GLES3 backend and possibly GLES2.\r\n\r\n### Performance comparison\r\n\r\n**OS:** Fedora 34\r\n**GPU:** NVIDIA GeForce GTX 1080 (driver version 465.31)\r\n\r\nWith the project used for the screenshots:\r\n\r\n```yaml\r\nNo dithering\r\nProject FPS: 200 (5.0 mspf)\r\n\r\nDithering\r\nProject FPS: 198 (5.0 mspf)\r\n\r\nBlending\r\nProject FPS: 194 (5.1 mspf)\r\n```\r\n\r\n## Preview\r\n\r\n*Directional shadow size was decreased from 4096 to 1024 to make the difference between each split blending mode more noticeable. In practice, the dithering pattern won't be as noticeable as it is here.*\r\n\r\n*Click to view at full size.*\r\n\r\n### No dithering\r\n\r\n![No dithering](https://user-images.githubusercontent.com/180032/126860105-cb7a16e7-6076-4ff0-9580-83841c2ff322.png)\r\n\r\n### Dithering\r\n\r\n![Dithering](https://user-images.githubusercontent.com/180032/126860104-76d55ade-4be1-4a06-b1ae-81503c8f16aa.png)\r\n\r\n### Blending\r\n\r\n![Blending](https://user-images.githubusercontent.com/180032/126860106-cff1a2d0-89ed-4a25-85ef-96adba03c692.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":696295212,"public_id":50796,"url":"https://github.com/godotengine/godot/pull/50796","diff_url":"https://github.com/godotengine/godot/pull/50796.diff","patch_url":"https://github.com/godotengine/godot/pull/50796.patch","title":"Allow any number of frames for the SDFGI Frames To Converge setting","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-24T05:04:38Z","updated_at":"2021-08-16T03:54:00Z","body":"This allows for more flexibility over the stability versus update speed compromise.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/50773.\r\n\r\n## Preview\r\n\r\n### Bounce Feedback 0, Energy 1\r\n\r\n| Default (25 frames) | Maximum (300 frames) |\r\n|---------------------|----------------------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126858013-976053cd-bbe7-4152-99ad-88ea62bd9776.png) | ![After](https://user-images.githubusercontent.com/180032/126858014-3fe6b73c-a95a-474a-b994-e866d3f45435.png) |\r\n\r\n### Bounce Feedback 0.5, Energy 0.5\r\n\r\n| Default (25 frames) | Maximum (300 frames) |\r\n|---------------------|----------------------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126858015-1c2d3827-138e-408c-9018-d377f2b5b084.png) | ![After](https://user-images.githubusercontent.com/180032/126858016-4cb9c109-f9f9-4a33-a8bb-215172434420.png) |","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":695517479,"public_id":50755,"url":"https://github.com/godotengine/godot/pull/50755","diff_url":"https://github.com/godotengine/godot/pull/50755.diff","patch_url":"https://github.com/godotengine/godot/pull/50755.patch","title":"Add global_position and global_rotation to Node3D","state":"open","is_draft":false,"authored_by":{"id":12120644,"user":"foxydevloper","avater":"https://avatars.githubusercontent.com/u/12120644?v=4","url":"https://github.com/foxydevloper"},"created_at":"2021-07-22T21:17:05Z","updated_at":"2021-08-14T15:32:13Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/3033\r\n\r\nAdds a `global_position` and `global_rotation` property to Node3D. These properties already existed for Node2D, so it makes sense to have them for Node3D as well to lessen the differences between 2D and 3D.\r\n\r\nHere's the project that I used for testing that they work properly:\r\n[testing_node3d_global_properties.zip](https://github.com/godotengine/godot/files/6859480/testing_node3d_global_properties.zip)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":695317356,"public_id":50737,"url":"https://github.com/godotengine/godot/pull/50737","diff_url":"https://github.com/godotengine/godot/pull/50737.diff","patch_url":"https://github.com/godotengine/godot/pull/50737.patch","title":"Re-enable building position-independent executables on Linux/*BSD","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-22T16:12:42Z","updated_at":"2021-07-23T06:59:02Z","body":"This provides better security at the cost of having misleading binary icons on some file managers.\r\n\r\nNow that recent Linux distributions no longer allow executing binaries by double-clicking them in a file manager (even if the binary is set to be executable), the usability cost of PIE is lowered. You have to use a terminal or install a `.desktop` file nowadays.\r\n\r\nI would recommend doing this only for 4.0. As far as I know, people on old LTS Linux distributions are still able to run binaries by double-clicking them. Due to this, we should wait for the number of users on old LTS Linux distributions to decrease a bit until this is done in a stable release. Hopefully, this number of users should be low enough by the time Godot 4.0 is released :slightly_smiling_face: \r\n\r\nThis reverts https://github.com/godotengine/godot/pull/23542.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112907]},{"id":694731867,"public_id":50718,"url":"https://github.com/godotengine/godot/pull/50718","diff_url":"https://github.com/godotengine/godot/pull/50718.diff","patch_url":"https://github.com/godotengine/godot/pull/50718.patch","title":"[3.x] Drag multiple resources onto exported array variable at once","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-21T21:50:42Z","updated_at":"2021-08-06T11:24:32Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nBackport of https://github.com/godotengine/godot/pull/37965","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":694271005,"public_id":50693,"url":"https://github.com/godotengine/godot/pull/50693","diff_url":"https://github.com/godotengine/godot/pull/50693.diff","patch_url":"https://github.com/godotengine/godot/pull/50693.patch","title":"[3.x] Implement textual ext/subresource IDs.","state":"open","is_draft":false,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2021-07-21T11:02:16Z","updated_at":"2021-08-19T09:51:51Z","body":"* Friendlier with version control.\r\n* Generates pseudo unique IDs, to minimize conflicts when merging, but still user readable (so, not UUID).\r\n* Eventually will also allow to have more precisely named sub-resources in imported files.\r\n* This will allow better reloading on changes (including resources already loaded) as well as better keeping track of changes on the DCC.\r\n* Keeps compatibility with the old formats.\r\n\r\nBackport of #50676.\r\n\r\n----\r\n\r\n**IMPORTANT:** Needs extensive testing on *safe* project backups. If there's a bug in this PR, it can break scene files and lead to data loss. So make copies of your projects (or better, use VCS) when testing this PR. But please do test it on your projects to make sure that it works as expected :)\r\n\r\n**How to test:** See [**Testing pull requests**](https://docs.godotengine.org/en/stable/community/contributing/testing_pull_requests.html) for instructions on how to download CI builds to test locally.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":694129310,"public_id":50685,"url":"https://github.com/godotengine/godot/pull/50685","diff_url":"https://github.com/godotengine/godot/pull/50685.diff","patch_url":"https://github.com/godotengine/godot/pull/50685.patch","title":"Fix KinematicBody mask has layer logic","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-07-21T07:40:02Z","updated_at":"2021-07-21T08:34:07Z","body":"As identified by @pouleyKetchoupp [here](https://github.com/godotengine/godot/pull/42641#discussion_r672702932), the `KinematicBody` layer-mask check is the wrong way around. `KinematicBodies` should only interact with other `Bodies` who have a layer that is in the `KinematicBody`'s mask i.e. Its mask is the layers it sees. This PR fixes the flawed logic in #42641.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":693983085,"public_id":50680,"url":"https://github.com/godotengine/godot/pull/50680","diff_url":"https://github.com/godotengine/godot/pull/50680.diff","patch_url":"https://github.com/godotengine/godot/pull/50680.patch","title":"Enable single-window mode by default in projects","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-21T01:58:11Z","updated_at":"2021-07-21T05:46:10Z","body":"There are many issues with using multiple windows by default:\r\n\r\n- Taking screenshots of a specific window will not capture subwindows. This also applies when recording a video using tools such as OBS.\r\n- Subwindows may not behave correctly when fullscreen mode is enabled, especially if exclusive fullscreen is implemented in the future to decrease input lag on Windows.\r\n- Subwindows do not inherit scaling applied by the `2d` and `viewport` stretch modes. This is problematic for dropdown menus, as they will be tiny if using the `2d` or `viewport` stretch mode and playing at a higher resolution than the project's base resolution.\r\n\r\n\"Subwindows\" is quite general here, and also refers to dropdown menus (e.g. those spawned by OptionButton) and Control tooltips.\r\n\r\nTherefore, it's safer to embed subwindows by default in projects. This will also avoid various surprises when upgrading projects from `3.x` to 4.0.\r\n\r\nMulti-window mode remains the default in the editor.\r\n\r\nSee [discussion on the Godot Contributors Chat](https://chat.godotengine.org/channel/devel?msg=HwdRmMnFBaczx7EYZ) for more information.\r\n\r\n**There remains an open question:** should we do this for [custom Viewports](https://github.com/godotengine/godot/blob/e248d2629ab9cb1dcfa91af5202af4f17754e44f/scene/main/viewport.h#L383) by default?","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":693937713,"public_id":50674,"url":"https://github.com/godotengine/godot/pull/50674","diff_url":"https://github.com/godotengine/godot/pull/50674.diff","patch_url":"https://github.com/godotengine/godot/pull/50674.patch","title":"Project manager buttons rearrangement","state":"open","is_draft":false,"authored_by":{"id":11571820,"user":"starry-abyss","avater":"https://avatars.githubusercontent.com/u/11571820?v=4","url":"https://github.com/starry-abyss"},"created_at":"2021-07-20T23:45:22Z","updated_at":"2021-07-23T14:45:49Z","body":"So each time I recommend Godot to someone, I'm ashamed of the Project Manager (the welcome screen, not the person).\r\n\r\nThis PR addresses the main problem with it - mixing buttons which affect the project list with buttons which affect the project selected. A separator is also added to make the new layout easier to read. All other \"overhaul\" ideas are not going to be included in this PR.\r\n\r\nNotes:\r\n~~1) Unfinished - I seemingly broke some of button functionality and my code is ugly for now, please don't worry about that yet~~\r\n2) Technically \"Remove Missing\" also belongs in the top panel (and \"About\" does as well), but they don't feel as out of place as the other 3, so not sure\r\n\r\nBefore:\r\n![project_manager_before](https://user-images.githubusercontent.com/11571820/126407513-53a0e9a9-a805-4594-9866-86200811833a.png)\r\n\r\nAfter:\r\n![project_manager_after](https://user-images.githubusercontent.com/11571820/126407530-68d89a90-dfe1-4e20-b2fe-66ddd41c3dd7.png)\r\n\r\nImplements https://github.com/godotengine/godot/issues/25305\r\nThis is a first step towards something like https://github.com/godotengine/godot/issues/31342","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":693927574,"public_id":50671,"url":"https://github.com/godotengine/godot/pull/50671","diff_url":"https://github.com/godotengine/godot/pull/50671.diff","patch_url":"https://github.com/godotengine/godot/pull/50671.patch","title":"Add editor setting for spin slider sensibility","state":"open","is_draft":false,"authored_by":{"id":44872771,"user":"winston-yallow","avater":"https://avatars.githubusercontent.com/u/44872771?v=4","url":"https://github.com/winston-yallow"},"created_at":"2021-07-20T23:14:44Z","updated_at":"2021-07-21T09:55:50Z","body":"This PR adds an editor setting \"Float Drag Speed\" to control the base speed of dragging EditorSpinSlider nodes. It is applied directly to `grabbing_spinner_dist_cache` which means that all the other logic (pressing shift to slow down; pressing control to snap to integers; and always being a multiple of `step`) works flawlessly with the new speed. The initial value for the setting is `5.0` to increase the base speed.\r\n\r\nCloses godotengine/godot-proposals/issues/3017\r\nProbably also makes godotengine/godot-proposals/issues/2760 obsolete. That proposal requests a key to increase the drag speed. With this PR it would instead have an increased base speed, using the existing shift modifier to slow the speed down if needed. This is in line with other applications like blender that use a similar approach.\r\n\r\n(can be directly cherry picked for 3.x, just tested and it works as expected)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":693906295,"public_id":50669,"url":"https://github.com/godotengine/godot/pull/50669","diff_url":"https://github.com/godotengine/godot/pull/50669.diff","patch_url":"https://github.com/godotengine/godot/pull/50669.patch","title":"Add \"far distance\" to SpatialMaterial proximity fade","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-20T22:27:17Z","updated_at":"2021-08-09T13:20:11Z","body":"**Note:** Opened against `3.x` first due to [the feature not being testable in `master`](https://github.com/godotengine/godot/issues/35646).\r\n\r\nThis is the opposite of standard proximity fade. When set to a value greater than 0, it will fade the material's alpha as it gets further away from a solid material.\r\n\r\nThis can be used for:\r\n\r\n- Fading quads used as decals if there is no surface close to them (useful to prevent \"flying\" blob shadows).\r\n- Welding/cutting torch effects (https://simonschreibt.de/gat/alien-vs-wolfenstein-cutting-torch/).\r\n- Area-of-effect and explosion VFX.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/3021.\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/126403149-0b0060fe-49d7-424c-a846-12abd912d03f.png)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":693690246,"public_id":50654,"url":"https://github.com/godotengine/godot/pull/50654","diff_url":"https://github.com/godotengine/godot/pull/50654.diff","patch_url":"https://github.com/godotengine/godot/pull/50654.patch","title":"[WIP] Implement distance fade and transparency","state":"open","is_draft":true,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2021-07-20T18:19:56Z","updated_at":"2021-07-20T21:59:35Z","body":"* ALPHA in shader comes pre-set with a distance fade. Multiply by it if you want fade to work.\r\n* Added transparency and distance fade for clustered renderer.\r\n(will add support in mobile renderer after it works).\r\n\r\nCurrently this does nothing, this PR is intended to be continued by @JFonS.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":692946232,"public_id":50622,"url":"https://github.com/godotengine/godot/pull/50622","diff_url":"https://github.com/godotengine/godot/pull/50622.diff","patch_url":"https://github.com/godotengine/godot/pull/50622.patch","title":"[3.x] Add highlight to the relationship lines of selected Tree items","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-19T21:46:05Z","updated_at":"2021-08-06T11:24:32Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nBackport of https://github.com/godotengine/godot/pull/48546 and https://github.com/godotengine/godot/pull/49085\r\n\r\nhttps://user-images.githubusercontent.com/50304111/126232339-035d6baa-d956-460d-862d-e61bc8d28038.mp4\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418733]},{"id":692784413,"public_id":50614,"url":"https://github.com/godotengine/godot/pull/50614","diff_url":"https://github.com/godotengine/godot/pull/50614.diff","patch_url":"https://github.com/godotengine/godot/pull/50614.patch","title":"Improve tooltips for grouping/ungrouping nodes","state":"open","is_draft":false,"authored_by":{"id":12120644,"user":"foxydevloper","avater":"https://avatars.githubusercontent.com/u/12120644?v=4","url":"https://github.com/foxydevloper"},"created_at":"2021-07-19T17:15:08Z","updated_at":"2021-07-20T19:37:47Z","body":"Currently the tooltips for the group/ungroup button are a bit confusing. The verbs also shouldn't have an s at the end like the other buttons' tooltips.\r\nThis PR makes it easier to understand what the button does:\r\n\r\n**Makes sure the object's children are not selectable.** -> **Make selected node's children not selectable.**\r\n**Restores the object's children's ability to be selected.** -> **Make selected node's children selectable.**\r\n\r\nThis also makes the tooltips more consistent with the tooltip that shows up when hovering over a grouped node in the scene tree:\r\n![image](https://user-images.githubusercontent.com/12120644/126198909-cd93f9c4-5f8a-455b-a9bb-9942d5e1b3e5.png)\r\n\r\nThis PR also changes \"Click to make selectable.\" to \"Click to make them selectable.\" in the above tooltip","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":692206523,"public_id":50603,"url":"https://github.com/godotengine/godot/pull/50603","diff_url":"https://github.com/godotengine/godot/pull/50603.diff","patch_url":"https://github.com/godotengine/godot/pull/50603.patch","title":"Implement specular occlusion in SpatialMaterial (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-19T02:04:38Z","updated_at":"2021-08-20T21:23:42Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/50601.\r\n\r\nUnlike https://github.com/godotengine/godot/pull/50601, `ao_light_affect` isn't taken into account at this point in the shader, so we don't need to move it.\r\n\r\nSpecular occlusion works by:\r\n\r\n- Applying specular occlusion and horizon specular occlusion as advised by Filament: https://google.github.io/filament/Filament.html#lighting/occlusion/specularocclusion\r\n- Always treating Light Affect is if it was set to 1.0 for the purposes of specular lighting.\r\n\r\nIt is an approximate effect with a very low performance cost, but makes specular reflections more believable overall.\r\n\r\n## Preview\r\n\r\n### GLES3\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126093278-fc11d9c1-f480-45bb-b0f2-b2097ac0f61b.png) | ![After](https://user-images.githubusercontent.com/180032/126093266-626c2d92-3dd5-4514-bc94-a15af6bb4b91.png) |\r\n\r\n### GLES2\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126093291-1b5ac20e-c57b-495e-987c-b071beebd627.png) | ![After](https://user-images.githubusercontent.com/180032/126093258-44be2af8-581c-4be6-b0e5-a6187fdb729c.png) |\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":692196222,"public_id":50601,"url":"https://github.com/godotengine/godot/pull/50601","diff_url":"https://github.com/godotengine/godot/pull/50601.diff","patch_url":"https://github.com/godotengine/godot/pull/50601.patch","title":"Implement specular occlusion in StandardMaterial3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-19T01:42:35Z","updated_at":"2021-08-20T21:23:53Z","body":"`master` version of https://github.com/godotengine/godot/pull/50603.\r\n\r\nSpecular occlusion works by:\r\n\r\n- Applying specular occlusion and horizon specular occlusion as advised by Filament: https://google.github.io/filament/Filament.html#lighting/occlusion/specularocclusion\r\n- Always treating Light Affect is if it was set to 1.0 for the purposes of specular lighting.\r\n\r\nIt is an approximate effect with a very low performance cost, but makes specular\r\nreflections more believable overall.\r\n\r\n## Preview\r\n\r\n*SSAO intensity was doubled to make the difference more noticeable. In real world scenarios, the difference will be more subtle.*\r\n\r\n### Non-metallic + light\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126090973-45d1b56a-bed2-42ae-9e3b-7a8bd9fb1812.png) | ![After](https://user-images.githubusercontent.com/180032/126090969-0b492003-6d83-49e0-8010-f06d3b45008e.png) |\r\n\r\n### Metallic\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/126090968-8c28873b-d999-4b05-8a15-99c781fd3c94.png) | ![After](https://user-images.githubusercontent.com/180032/126090966-0f78a91f-8a28-4579-b62e-908f0d425039.png) |","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":692003932,"public_id":50574,"url":"https://github.com/godotengine/godot/pull/50574","diff_url":"https://github.com/godotengine/godot/pull/50574.diff","patch_url":"https://github.com/godotengine/godot/pull/50574.patch","title":"Add Use Color and Use Hdr properties to LightmapGI","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-17T23:36:48Z","updated_at":"2021-07-18T02:08:21Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50572.\r\n\r\nColored lightmaps and HDR lightmaps can be disabled to reduce file size, which is useful for mobile/web platforms.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/50569 and closes https://github.com/godotengine/godot/issues/50570.\r\n\r\n### Test file sizes\r\n\r\n- HDR + color: **425 KB** .exr on disk\r\n- HDR + grayscale: **165 KB** .exr on disk\r\n- LDR + color: **66 KB** .png on disk\r\n- LDR + grayscale: **26 KB** .png on disk","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":692000922,"public_id":50572,"url":"https://github.com/godotengine/godot/pull/50572","diff_url":"https://github.com/godotengine/godot/pull/50572.diff","patch_url":"https://github.com/godotengine/godot/pull/50572.patch","title":"Add Environment Min Light property to LightmapGI","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-17T23:06:05Z","updated_at":"2021-07-17T23:07:39Z","body":"This property works the same as BakedLightmap's Environment Min Light property in `3.x`. It can be used to avoid overly dark areas in the lightmap, or to tweak the shadow color for artistic reasons.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/50568.\r\n\r\n## Preview\r\n\r\n*The color is exaggerated for previewing purposes. Typically, you'll use much darker colors like `#050505`.*\r\n\r\n![2021-07-18_00 50 11](https://user-images.githubusercontent.com/180032/126051205-671055f4-c7b3-46fc-8fab-e2ac13f8746f.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":691965990,"public_id":50560,"url":"https://github.com/godotengine/godot/pull/50560","diff_url":"https://github.com/godotengine/godot/pull/50560.diff","patch_url":"https://github.com/godotengine/godot/pull/50560.patch","title":"Clarify that resize doesn't initialize memory","state":"open","is_draft":false,"authored_by":{"id":526829,"user":"noidexe","avater":"https://avatars.githubusercontent.com/u/526829?v=4","url":"https://github.com/noidexe"},"created_at":"2021-07-17T17:48:01Z","updated_at":"2021-08-06T11:24:32Z","body":"Some users might expect resize() to initialize added elements to zero. This clarifies that it is not the case.\r\n\r\nOnly relevant to 3.x since 4.0 handles it differently\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":691820537,"public_id":50540,"url":"https://github.com/godotengine/godot/pull/50540","diff_url":"https://github.com/godotengine/godot/pull/50540.diff","patch_url":"https://github.com/godotengine/godot/pull/50540.patch","title":"Hide triplanar sharpness when triplanar is disabled in SpatialMaterial","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-17T02:24:30Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/50539 (without world triplanar, as that property is a global flag for both UV1 and UV2 in `3.x`).\n\nThe Triplanar Sharpness property has no effect when Triplanar is disabled.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":691818671,"public_id":50539,"url":"https://github.com/godotengine/godot/pull/50539","diff_url":"https://github.com/godotengine/godot/pull/50539.diff","patch_url":"https://github.com/godotengine/godot/pull/50539.patch","title":"Hide triplanar subproperties when triplanar is disabled in BaseMaterial3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-17T02:14:28Z","updated_at":"2021-07-17T02:14:52Z","body":"The Triplanar Sharpness and World Triplanar properties have no effect when their respective UV triplanar property is disabled.\n\nThis also renames some sections for consistency.\n\n\n<!--\nPull requests should always be made for the `master` branch first, as that's\nwhere development happens and the source of all future stable release branches.\n\nRelevant fixes are cherry-picked for stable branches as needed.\n\nDo not create a pull request for stable branches unless the change is already\navailable in the `master` branch and it cannot be easily cherry-picked.\nAlternatively, if the change is only relevant for that branch (e.g. rendering\nfixes for the 3.2 branch).\n-->","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":691136661,"public_id":50506,"url":"https://github.com/godotengine/godot/pull/50506","diff_url":"https://github.com/godotengine/godot/pull/50506.diff","patch_url":"https://github.com/godotengine/godot/pull/50506.patch","title":"Increase the default Light3D shadow blur by 50%","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-16T01:51:24Z","updated_at":"2021-07-16T02:25:54Z","body":"`master` version of https://github.com/godotengine/godot/pull/50507.\r\n\r\nThis provides smoother, more stable shadows for moving objects out of the box (a common issue with DirectionalLight3D).\r\n\r\nNow that [the noise pattern has been made much less noticeable](https://github.com/godotengine/godot/pull/45326), using a higher default value should be fine. It doesn't seem to impact performance in a noticeable way.\r\n\r\nVarious property hints were also adjusted to provide greater flexibility:\r\n\r\n- Specular can now be set above 1.0.\r\n- Blur can be set to 0 to disable shadow blurring entirely, which is useful on lights that have a non-zero size.\r\n  - When shadow blurring is disabled, lights that have a non-zero size will not use PCSS-like soft shadows, speeding up shadow rendering considerably.\r\n- Some property hints now allow more precise values.\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n![After](https://user-images.githubusercontent.com/180032/125879558-5809323d-756a-4939-8554-b00a2db94824.png)\r\n\r\n### After\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/125879553-83b7d070-3e1f-446c-9c3d-9c2c3101e556.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418726]},{"id":691086669,"public_id":50504,"url":"https://github.com/godotengine/godot/pull/50504","diff_url":"https://github.com/godotengine/godot/pull/50504.diff","patch_url":"https://github.com/godotengine/godot/pull/50504.patch","title":"[3.4] Implement constructors and operator= for std::initializer_list<T> in …","state":"open","is_draft":false,"authored_by":{"id":1776044,"user":"MarianoGnu","avater":"https://avatars.githubusercontent.com/u/1776044?v=4","url":"https://github.com/MarianoGnu"},"created_at":"2021-07-15T23:06:37Z","updated_at":"2021-08-06T11:24:32Z","body":"…one dimensional data containers. As a side effect append_array() also works with initializer_list\r\n\r\n**TODO:** reimplement for master branch\r\n\r\n**Test case:**\r\nPaste the following snippet on any runnable piece of code and put a breakpoint to follow the execution\r\n```\r\n\tArray test = {1, 2, \"String\"};\r\n\tVector<int> v1 = {1, 2, 3, 4, 5};\r\n\tVector<int> v2({1, 2, 3, 4, 5});\r\n\tv1.append_array({6,7,8});\r\n\tLocalVector<int, uint32_t, true> v3 = {7,8,9,10,11};\r\n\tLocalVector<int, uint32_t, true> v4({12,13,14,15});\r\n\tLocalVector<int, uint32_t, false> v5 = {7,8,9,10,11};\r\n\tLocalVector<int, uint32_t, false> v6({12,13,14,15});\r\n\tPoolStringArray v7 = {\"AB\", \"CD\", \"EF\"};\r\n\tPoolStringArray v8({\"AB\", \"CD\", \"EF\"});\r\n\tv8.append_array({\"GH\", \"IJ\"});\r\n\tPoolVector2Array v9 = {Vector2(0, 1), Vector2(2, 3)};\r\n\tv9.append_array({Vector2(0, 1), Vector2(2, 3)});\r\n\tVariant varArray = {1, 2, \"String\", false, this, {1, 2}};\r\n```\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":690880018,"public_id":50493,"url":"https://github.com/godotengine/godot/pull/50493","diff_url":"https://github.com/godotengine/godot/pull/50493.diff","patch_url":"https://github.com/godotengine/godot/pull/50493.patch","title":"Add list initialization support for Vector & LocalVector","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-07-15T16:37:50Z","updated_at":"2021-07-15T21:44:00Z","body":"Adds list initialzation support for `LocalVector` in order to get rid of `std::vector` in `VulkanContext`.\r\n\r\n* `std::initializer_list` is used because it's the required parameter type when doing list initialization.\r\n* ranged-for loop is used because I think it's allowed since #50284 was merged and simplifies code.\r\n\r\nAlso added list initialzation support for `Vector`. No code were harmed during production, only added a unit test.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418914,4418923]},{"id":690015530,"public_id":50456,"url":"https://github.com/godotengine/godot/pull/50456","diff_url":"https://github.com/godotengine/godot/pull/50456.diff","patch_url":"https://github.com/godotengine/godot/pull/50456.patch","title":"Fix extends with relative path to parent script","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-07-14T15:29:50Z","updated_at":"2021-07-14T16:18:25Z","body":"Closes #49938\r\n\r\nIn gdscript, when extending to a parent script using a relative path, the parent file cannot be found as it does not manage relative paths.\r\nThis PR makes the following change: in the GDScript analyser, when analyzing the extends, the relative path is transformed to an absolute path, which helps the next code to find the parent script file.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":689503905,"public_id":50442,"url":"https://github.com/godotengine/godot/pull/50442","diff_url":"https://github.com/godotengine/godot/pull/50442.diff","patch_url":"https://github.com/godotengine/godot/pull/50442.patch","title":"Implement blending in particle flipbook animation","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-14T01:19:52Z","updated_at":"2021-08-09T13:21:02Z","body":"This makes changes between frames look smoother, making flipbook particle animation more viable for realistic particle effects such as fire.\r\n\r\nThis works with both GPUParticles3D and CPUParticles3D.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1636.\r\n\r\n**Testing project:** [test_particle_animation.zip](https://github.com/godotengine/godot/files/6812878/test_particle_animation.zip) (`master` only, won't work in `3.x`)\r\n\r\n## Preview\r\n\r\nhttps://user-images.githubusercontent.com/180032/125545579-b652fea8-0db1-4c67-b0e3-0b09d2129239.mp4\r\n\r\n## TODO\r\n\r\n- [ ] Implement this feature in CanvasItemMaterial for 2D particles.\r\n- [x] See if we can keep UV2 free for other purposes when this feature is active, and ideally not require UV2 in meshes in the first place.\r\n- [ ] Investigate whether it's better to use a different shader version rather than a conditional. From my testing, the conditional doesn't affect performance in a meaningful way – I get 342 FPS instead of 343 FPS in my test project. However, this is a material feature that won't be used often, so perhaps it's still worth moving it to separate shader version (which requires compiling another shader when this feature is used).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":689453060,"public_id":50440,"url":"https://github.com/godotengine/godot/pull/50440","diff_url":"https://github.com/godotengine/godot/pull/50440.diff","patch_url":"https://github.com/godotengine/godot/pull/50440.patch","title":"Increase the default StandardMaterial3D triplanar sharpness to 4.0","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-13T22:56:50Z","updated_at":"2021-08-16T03:49:51Z","body":"This results in sharper texture transitions, which generally looks better and less flat.\r\n\r\nThe documentation around triplanar mapping was also improved.\r\n\r\n**Testing project:** [test_triplanar_normal.zip](https://github.com/godotengine/godot/files/6812446/test_triplanar_normal.zip) (`master` only, won't work in `3.x`)\r\n\r\n## Preview\r\n\r\n*Triplanar material on the left, non-triplanar material on the right.*\r\n\r\n### Before\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/125535624-735dcc2e-91d7-42b3-891a-1d19b9bb807a.png)\r\n\r\n### After\r\n\r\n![After](https://user-images.githubusercontent.com/180032/125535622-6db41075-783b-4aef-9d17-dc5ade581fdd.png)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417819]},{"id":689440554,"public_id":50438,"url":"https://github.com/godotengine/godot/pull/50438","diff_url":"https://github.com/godotengine/godot/pull/50438.diff","patch_url":"https://github.com/godotengine/godot/pull/50438.patch","title":"Add 'create_module.py' to streamline module creation process","state":"open","is_draft":false,"authored_by":{"id":12436824,"user":"summertimejordi","avater":"https://avatars.githubusercontent.com/u/12436824?v=4","url":"https://github.com/summertimejordi"},"created_at":"2021-07-13T22:23:53Z","updated_at":"2021-07-16T04:54:46Z","body":"Add a python script that creates a barebones custom module in the `modules/` folder.\r\n\r\nExample:\r\n`D:\\godot> py modules/create_module.py \"My Module\"`\r\nCreates the following file structure:\r\n![image](https://user-images.githubusercontent.com/12436824/125532147-19f41e69-4b42-407e-bf04-b77237a3294d.png)\r\n\r\nThis build option makes it easier to add modules by allowing you to easily create a barebones module with everything you need to get started.\r\n\r\nYou can see the full generated code [here](https://github.com/summertimejordi/custom_module_generation_example).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":689325868,"public_id":50434,"url":"https://github.com/godotengine/godot/pull/50434","diff_url":"https://github.com/godotengine/godot/pull/50434.diff","patch_url":"https://github.com/godotengine/godot/pull/50434.patch","title":"Particle params are expressed as min-max rather than value+range AND separate axes scaling","state":"open","is_draft":false,"authored_by":{"id":7917475,"user":"QbieShay","avater":"https://avatars.githubusercontent.com/u/7917475?v=4","url":"https://github.com/QbieShay"},"created_at":"2021-07-13T19:00:31Z","updated_at":"2021-08-14T14:14:12Z","body":"Supersedes https://github.com/godotengine/godot/pull/46912\r\n\r\nI got a bit carried away and implemented separate axes scale as well.. sorry!\r\n\r\nCPUParticle2D conversion will come next week. Since this is a relatively big change to ParticleMaterial, i wanted to get it in asap so whoever else needs to work on it, can.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/2405.*\r\nAnd also closes https://github.com/godotengine/godot-proposals/issues/2404","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418726]},{"id":689144248,"public_id":50425,"url":"https://github.com/godotengine/godot/pull/50425","diff_url":"https://github.com/godotengine/godot/pull/50425.diff","patch_url":"https://github.com/godotengine/godot/pull/50425.patch","title":"Fix `get_method_list` of GDScript to properly fill the returning array","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-07-13T15:05:49Z","updated_at":"2021-07-13T15:35:28Z","body":"Fix https://github.com/godotengine/godot/issues/33624\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":688715645,"public_id":50414,"url":"https://github.com/godotengine/godot/pull/50414","diff_url":"https://github.com/godotengine/godot/pull/50414.diff","patch_url":"https://github.com/godotengine/godot/pull/50414.patch","title":"Fix for gdscript dynamic properties #24534","state":"open","is_draft":false,"authored_by":{"id":40638625,"user":"iiiCpu","avater":"https://avatars.githubusercontent.com/u/40638625?v=4","url":"https://github.com/iiiCpu"},"created_at":"2021-07-13T09:20:54Z","updated_at":"2021-08-06T11:24:32Z","body":"https://github.com/godotengine/godot/issues/24534 \r\nDynamic properties were always accessible with '.' dot operator. Just fixed false error when property name were not checked for presence in  '_get_property_list'.\r\n\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":688307104,"public_id":50408,"url":"https://github.com/godotengine/godot/pull/50408","diff_url":"https://github.com/godotengine/godot/pull/50408.diff","patch_url":"https://github.com/godotengine/godot/pull/50408.patch","title":"Implement simplification of generated occluders in OccluderInstance3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-13T01:39:30Z","updated_at":"2021-08-16T16:15:53Z","body":"The meshoptimizer library is used if the `bake_simplify` property is set to a value greater than 0.\r\n\r\nThe default simplifcation threshold (0.02) is fairly aggressive, but occluders don't need to be very detailed to work well.\r\n\r\nThis also adds documentation for occlusion culling in the class reference XML.\r\n\r\n**Testing project:** [test_occlusion_culling.zip](https://github.com/godotengine/godot/files/6805329/test_occlusion_culling.zip)\r\n\r\n## Preview\r\n\r\n*In this particular scene, even the most aggressive simplification still provides good culling capabilities. However, this may not be true in more complex scenes.*\r\n\r\n*Remember to tweak the Bake Mask to exclude dynamic objects, small objects and fixtures from your occluder mesh.*\r\n\r\n### No simplification (0.0)\r\n\r\n*Lots of stuttering.*\r\n\r\n![No simplification](https://user-images.githubusercontent.com/180032/125376756-faa4dd80-e38b-11eb-80e8-6062715b3060.png)\r\n\r\n### Most conservative simplification (0.0001)\r\n\r\n*Still a fair bit of stuttering.*\r\n\r\n![Most conservative simplification](https://user-images.githubusercontent.com/180032/125376761-fd9fce00-e38b-11eb-90fb-012eb814d830.png)\r\n\r\n### Balanced simplification (0.01)\r\n\r\n*No more stuttering.*\r\n**Note:** The default simplification value is now 0.02, which is more aggressive but still works quite well.*\r\n\r\n![Balanced simplification](https://user-images.githubusercontent.com/180032/125376768-009abe80-e38c-11eb-8589-d1a5428cead3.png)\r\n\r\n### Aggressive simplification (0.1)\r\n\r\n*No more stuttering.*\r\n\r\n![Aggressive simplification](https://user-images.githubusercontent.com/180032/125376774-0395af00-e38c-11eb-9e90-d48d104f067b.png)","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":688270539,"public_id":50405,"url":"https://github.com/godotengine/godot/pull/50405","diff_url":"https://github.com/godotengine/godot/pull/50405.diff","patch_url":"https://github.com/godotengine/godot/pull/50405.patch","title":"[3.x] Clean convex hull decomposition code","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-07-13T00:04:56Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #50404\r\n\r\nRemove unnecessary conversion between triangle data and vertex data whenever possible.\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449,4418914]},{"id":688270125,"public_id":50404,"url":"https://github.com/godotengine/godot/pull/50404","diff_url":"https://github.com/godotengine/godot/pull/50404.diff","patch_url":"https://github.com/godotengine/godot/pull/50404.patch","title":"Clean convex hull decomposition code","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-07-13T00:03:56Z","updated_at":"2021-07-13T18:19:59Z","body":"Following-up from https://github.com/godotengine/godot/pull/50262#issuecomment-878507055 (CC @lawnjelly)\r\n\r\nRemove unnecessary conversion between triangle data and vertex data whenever possible.\r\n\r\nAfter testing performance, it doesn't seem to make much difference because the time spent in preparing and finalizing data is negligible compared to the process in VHACD, but the code generally seems cleaner this way.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418914]},{"id":688264458,"public_id":50403,"url":"https://github.com/godotengine/godot/pull/50403","diff_url":"https://github.com/godotengine/godot/pull/50403.diff","patch_url":"https://github.com/godotengine/godot/pull/50403.patch","title":"Take CPU time into account when calculating FPS in the editor Frame Time","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-12T23:51:06Z","updated_at":"2021-08-16T11:21:36Z","body":"This is required to display accurate FPS measurements when the CPU is the bottleneck.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch, as the View Frame Time panel is new in `master` (and relies on Vulkan-only functionality).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":687406514,"public_id":50383,"url":"https://github.com/godotengine/godot/pull/50383","diff_url":"https://github.com/godotengine/godot/pull/50383.diff","patch_url":"https://github.com/godotengine/godot/pull/50383.patch","title":"Improve the appearance of simple parallax in StandardMaterial3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-11T22:55:09Z","updated_at":"2021-08-09T13:12:55Z","body":"`master` version of https://github.com/godotengine/godot/pull/51433. Follow-up to https://github.com/godotengine/godot/pull/50377.\r\n\r\nThis uses offset limiting to avoid distortion in the distance, and makes simple (non-deep) parallax more usable overall. While this reduces the overall impression of depth, it results in much less texture warping in motion.\r\n\r\nInspired by the Three.js parallax mapping demo: https://github.com/mrdoob/three.js/blob/bb484d616955e2bf1c3329383c3c0cc3543ccf71/examples/jsm/shaders/ParallaxShader.js#L62-L64\r\n\r\n**Testing project:** https://github.com/Calinou/godot-parallax-test-4.0\r\n\r\n## Preview\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![old_simple_parallax_1](https://user-images.githubusercontent.com/180032/125212174-eb4e6300-e2ab-11eb-9a45-69f6d1574c7a.png) | ![new_simple_parallax_1](https://user-images.githubusercontent.com/180032/125212168-e7badc00-e2ab-11eb-8a64-647991ad3ddc.png) |\r\n| ![old_simple_parallax_2](https://user-images.githubusercontent.com/180032/125212175-ebe6f980-e2ab-11eb-8d8b-6ed3ef1df94e.png) | ![new_simple_parallax_2](https://user-images.githubusercontent.com/180032/125212169-e8ec0900-e2ab-11eb-9239-4fb7651a4b94.png) |\r\n| ![old_simple_parallax_3](https://user-images.githubusercontent.com/180032/125212176-ec7f9000-e2ab-11eb-8680-b25e5a3d1947.png) | ![new_simple_parallax_3](https://user-images.githubusercontent.com/180032/125212170-e9849f80-e2ab-11eb-9c6a-5dc0ad25e5a6.png) |\r\n| ![old_simple_parallax_4](https://user-images.githubusercontent.com/180032/125212178-ec7f9000-e2ab-11eb-8821-ce87ca5d062f.png) | ![new_simple_parallax_4](https://user-images.githubusercontent.com/180032/125212171-ea1d3600-e2ab-11eb-93be-06b91547a77e.png) |\r\n| ![old_simple_parallax_5](https://user-images.githubusercontent.com/180032/125212179-ed182680-e2ab-11eb-87aa-2d20f492a8f1.png) | ![new_simple_parallax_5](https://user-images.githubusercontent.com/180032/125212172-ea1d3600-e2ab-11eb-9f32-63ff5af1108e.png) |\r\n| ![old_simple_parallax_6](https://user-images.githubusercontent.com/180032/125212180-edb0bd00-e2ab-11eb-9bc5-37605c6f8bc6.png) | ![new_simple_parallax_6](https://user-images.githubusercontent.com/180032/125212173-eab5cc80-e2ab-11eb-8a8d-75efc528a7a6.png) |","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":687389395,"public_id":50378,"url":"https://github.com/godotengine/godot/pull/50378","diff_url":"https://github.com/godotengine/godot/pull/50378.diff","patch_url":"https://github.com/godotengine/godot/pull/50378.patch","title":"Implement applyEdit in LSP for signal connecting","state":"open","is_draft":false,"authored_by":{"id":2823241,"user":"Razoric480","avater":"https://avatars.githubusercontent.com/u/2823241?v=4","url":"https://github.com/Razoric480"},"created_at":"2021-07-11T20:15:31Z","updated_at":"2021-08-04T22:21:01Z","body":"As per the discussion in #42416, when an external text editor is set, the Connect Dialog fails to actually enact any change into the script. The workaround currently is to disable external editor, connect your signals, then re-enable it (or work in an external editor even with it turned off.)\r\n\r\nThis PR implements the workspace/applyEdit server request, which can cause a connected client to insert or replace text - in this case, a blank method stub. By connecting to the EditorNode, we can detect the \"script_add_function_request\" signal and pass the new function along to the client.\r\n\r\n~~## Known Issues~~\r\n\r\n~~Currently, once the script has been saved, its changes are not detected by Godot, so the \"Go to method\" menu item fails, and it will try to add duplicate functions if it already exists. This is fixed by the as yet unmerged #48615, which forces a resync by the server whenever a script is saved.~~\r\n\r\nThat PR has been merged in, so it's no longer an issue - so long as you save your script.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":687382622,"public_id":50377,"url":"https://github.com/godotengine/godot/pull/50377","diff_url":"https://github.com/godotengine/godot/pull/50377.diff","patch_url":"https://github.com/godotengine/godot/pull/50377.patch","title":"Improve the appearance of Deep Parallax in StandardMaterial3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-11T19:13:46Z","updated_at":"2021-08-16T03:43:13Z","body":"`master` version of https://github.com/godotengine/godot/pull/51712. See also https://github.com/godotengine/godot/pull/50383.\r\n\r\nThis better preserves depth when viewed at oblique angles. Artifacts due to the amount of layers being low may be more noticeable as a result, but it's generally better to decrease the heightmap scale instead.\r\n\r\nThis is done by dividing the delta by the dot product of the view vector and normal vector.\r\n\r\nThanks @Arnklit for suggesting the idea :slightly_smiling_face: \r\n\r\n**Testing project:** https://github.com/Calinou/godot-parallax-test-4.0\r\n\r\n## Preview\r\n\r\n***Note:** From my testing, performance is about the same overall. The FPS counter on the last screenshot fluctuates a fair bit at higher values, so it's not meant to be used to compare performance here.*\r\n\r\n| Before | After |\r\n|-------:|:------|\r\n| ![old_parallax_1](https://user-images.githubusercontent.com/180032/125207617-87b53d00-e28d-11eb-9d53-4a91cdf6f2f0.png) | ![new_parallax_1](https://user-images.githubusercontent.com/180032/125207607-8421b600-e28d-11eb-8113-5813bc27e505.png) |\r\n| ![old_parallax_2](https://user-images.githubusercontent.com/180032/125207618-884dd380-e28d-11eb-83aa-5d6a632a3c75.png) | ![new_parallax_2](https://user-images.githubusercontent.com/180032/125207610-8552e300-e28d-11eb-895f-db1183945711.png) |\r\n| ![old_parallax_3](https://user-images.githubusercontent.com/180032/125207619-88e66a00-e28d-11eb-9103-39c06911842c.png) | ![new_parallax_3](https://user-images.githubusercontent.com/180032/125207611-85eb7980-e28d-11eb-9dad-c1d3f176b80f.png) |\r\n| ![old_parallax_4](https://user-images.githubusercontent.com/180032/125207620-897f0080-e28d-11eb-96f0-11eb77be9411.png) | ![new_parallax_4](https://user-images.githubusercontent.com/180032/125207613-86841000-e28d-11eb-8798-ed3583d80be6.png) |\r\n| ![old_parallax_5](https://user-images.githubusercontent.com/180032/125207622-8a179700-e28d-11eb-9b45-97c46e5de5a3.png) | ![new_parallax_5](https://user-images.githubusercontent.com/180032/125207614-86841000-e28d-11eb-9e8a-32bae5819f9b.png) |\r\n| ![old_parallax_6](https://user-images.githubusercontent.com/180032/125207623-8ab02d80-e28d-11eb-9837-4fb705033336.png) | ![new_parallax_6](https://user-images.githubusercontent.com/180032/125207615-871ca680-e28d-11eb-95b4-781b764d754f.png) |\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":687369322,"public_id":50375,"url":"https://github.com/godotengine/godot/pull/50375","diff_url":"https://github.com/godotengine/godot/pull/50375.diff","patch_url":"https://github.com/godotengine/godot/pull/50375.patch","title":"Support SceneTree and signal testing  - Code edit unit tests","state":"open","is_draft":false,"authored_by":{"id":6584330,"user":"Paulb23","avater":"https://avatars.githubusercontent.com/u/6584330?v=4","url":"https://github.com/Paulb23"},"created_at":"2021-07-11T17:25:30Z","updated_at":"2021-08-17T16:18:16Z","body":"Builds on and used to test #50372\r\n\r\nRelated godotengine/godot-proposals/issues/1307\r\n\r\n---\r\n\r\nSupport SceneTree and signal testing, opening up for feedback.\r\n\r\nTest code changes can be added separately to #50372 but I figured it made sense to have an example with it, so included it here. \r\n\r\nAdded a doctest reporter `GodotTestCaseListener`. When doctest runs the `test_case_start` callback (not subcase) it will check if the case name contains, `[SceneTree]`; if found will create all the required engine parts. \r\n\r\nIt will then cleanup that code on the `test_case_end` callback.\r\n\r\nA key part of  #50372 is user input and signals. \r\n\r\nTo handle this a macro `SEND_GUI_ACTION(object, action_name)` has been added, this will call the `_gui_input` method on the object with a given action, i.e `SEND_GUI_ACTION(code_edit, \"ui_text_newline\")`. This requires a `MessageQueue` and `InputMap`.\r\n\r\nFor signals a test singleton `SignalWatcher` as been added, when a signal is connected, the SignalWatcher between checks, will capture every time it is emitted with it's args.\r\n\r\nThe following macros can be use to check signals:\r\n- `SIGNAL_WATCH(*object, \"signal_name\")` to start watching.\r\n- `SIGNAL_UNWATCH(*object, \"signal_name\")` to stop watching.\r\n- `SIGNAL_CHECK(\"signal_name\"), Vector<Vector<Variant>>)`, to check the arguments of all fired signals.\r\n    - The outer vector is each fired signal, the inner vector the list of arguments for that signal. Order does matter.\r\n- `SIGNAL_CHECK_FALSE(\"signal_name\")` to check if a signal was not fired.\r\n- `SIGNAL_DISCARD(\"signal_name\")` to discard records all of the given signal\r\n\r\nFinally, two minor bugfixs where the input map and display server where not nulling it's singleton var, causing it to print a warning every time it was re-setup. In addition `rasterizer_dummy.h` was returning `true` when it has not freed the memory causing a minor memory leak.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418403,4418914,4418923]},{"id":687339157,"public_id":50369,"url":"https://github.com/godotengine/godot/pull/50369","diff_url":"https://github.com/godotengine/godot/pull/50369.diff","patch_url":"https://github.com/godotengine/godot/pull/50369.patch","title":"[3.x] [HTML5] Editor plugin now hides unsupported features.","state":"open","is_draft":true,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-07-11T14:00:00Z","updated_at":"2021-08-06T11:24:32Z","body":"Alternative to #49540.\r\n\r\nQuite hacky, but doesn't mess up with the editor code.\r\n\r\nOpinions?","target_branch":"3.x","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":687326390,"public_id":50368,"url":"https://github.com/godotengine/godot/pull/50368","diff_url":"https://github.com/godotengine/godot/pull/50368.diff","patch_url":"https://github.com/godotengine/godot/pull/50368.patch","title":"Added additional constants to GDScript and Visual Script","state":"open","is_draft":false,"authored_by":{"id":25853767,"user":"DavidHusicka","avater":"https://avatars.githubusercontent.com/u/25853767?v=4","url":"https://github.com/DavidHusicka"},"created_at":"2021-07-11T12:26:38Z","updated_at":"2021-07-11T13:29:45Z","body":"This PR does the same as https://github.com/godotengine/godot/pull/33166 but is updated and rebased against current master. This branch is ready to be merged. I will close the old merge request since this one replaces it.\r\n\r\nEdit: Found out that CI fails. Will fix asap.\r\n\r\nEdit: CI fixed","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4417868,4418914]},{"id":687307627,"public_id":50365,"url":"https://github.com/godotengine/godot/pull/50365","diff_url":"https://github.com/godotengine/godot/pull/50365.diff","patch_url":"https://github.com/godotengine/godot/pull/50365.patch","title":"Try other resolved IPs if one fails to connect","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-07-11T10:00:17Z","updated_at":"2021-07-16T18:21:25Z","body":"When `HTTPClient` and `WebSocketClient` are connecting to server, save all resolved IPs, and try other candidates if one failed to connect. Not [Happy Eyeballs](https://tools.ietf.org/html/rfc8305), but at least it's happy I think :)\r\n\r\nFixes #46972, and hopefully fixes #36418, I don't have IPv6 connection to the AssetLib, so I only tested on my `localhost` which resolved to IPv6 first.\r\n\r\nIt's the same for 3.x, but `core/io/http_client_tcp.{h,cpp}` → `core/io/http_client.{h,cpp}` and `container.is_empty()` → `container.empty()`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,4418914]},{"id":687227579,"public_id":50352,"url":"https://github.com/godotengine/godot/pull/50352","diff_url":"https://github.com/godotengine/godot/pull/50352.diff","patch_url":"https://github.com/godotengine/godot/pull/50352.patch","title":"Add is_built_in() method to Resource","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-07-10T19:23:24Z","updated_at":"2021-07-10T19:45:21Z","body":"A built-in Resource can be recognized by its path, which may be:\r\n- empty\r\n- containing `::`\r\n- starting with `local://`? idk, I've seen it in few places\r\n\r\nThere were such checks all over the codebase, but they were inconsistent, which led to some bugs, e.g. #45950 or partially #49086 (`_is_built_in_script()` is not checking for empty paths, so the issue isn't fully fixed).\r\n\r\nTo fix inconsistencies I added `is_built_in()` to resources. I replaced equivalent conditions with this method.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417819,4418558,4418563,4418914]},{"id":687222006,"public_id":50350,"url":"https://github.com/godotengine/godot/pull/50350","diff_url":"https://github.com/godotengine/godot/pull/50350.diff","patch_url":"https://github.com/godotengine/godot/pull/50350.patch","title":"Rename ProjectSettings macros to follow the singleton's rename","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-10T18:34:53Z","updated_at":"2021-07-12T13:47:07Z","body":"The Globals singleton was renamed to ProjectSettings in 3.0. Additionally, this renames some of the macros to be more explicit (including for EditorSettings).\r\n\r\n`_DEF` was renamed to `_DEFAULT` to avoid having the same length as `_GET` (which can look confusing at a glance).\r\n\r\nThis also adds comments above each macro, which will appear in many IDEs when hovering the macro names.\r\n\r\nSee https://github.com/godotengine/godot/issues/16863#issuecomment-871572390.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112906,4417819,4418380,4418403,4418542,4418550,4418558,4418563]},{"id":687220348,"public_id":50349,"url":"https://github.com/godotengine/godot/pull/50349","diff_url":"https://github.com/godotengine/godot/pull/50349.diff","patch_url":"https://github.com/godotengine/godot/pull/50349.patch","title":"Add `any()` and `all()` methods to Array","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-10T18:20:40Z","updated_at":"2021-08-02T15:42:55Z","body":"These can be used as faster, more convenient shorthands to using `filter()` + `size()`.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2926. `reduce_right()` wasn't implemented as it wasn't deemed useful enough in daily use cases.\r\n\r\n### Testing code\r\n\r\n```gdscript\r\nfunc _ready():\r\n\tprint([5, 10, 0].any(func(v): return v > 5))  # true\r\n\tprint([5, 5 , 0].any(func(v): return v > 5))  # false\r\n\tprint([6, 10, 6].all(func(v): return v > 5))  # true\r\n\tprint([6, 10, 0].all(func(v): return v > 5))  # false\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":687210662,"public_id":50346,"url":"https://github.com/godotengine/godot/pull/50346","diff_url":"https://github.com/godotengine/godot/pull/50346.diff","patch_url":"https://github.com/godotengine/godot/pull/50346.patch","title":"Print the class when using Node's `print_tree()`/`print_tree_pretty()`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-10T17:00:50Z","updated_at":"2021-07-11T16:30:10Z","body":"The class name may not always be obvious, especially when nodes are renamed from their default names.\r\n\r\nSee https://github.com/godotengine/godot-proposals/issues/2953#issuecomment-874938164.\r\n\r\n**Question:** Should we print the node's class name only if it differs from the node name? Right now, it looks a bit noisy.\r\n\r\n## Preview\r\n\r\n### `print_tree()`\r\n\r\n#### Before\r\n\r\n```\r\n.\r\nThisIsNode3D\r\nThisIsNode3D/OccluderInstance3D\r\nThisIsNode3D/MeshInstance3D2\r\nThisIsNode3D/SomeCSGBox\r\nThisIsNode3D/SomeCSGBox/CSGCylinder3D\r\nThisIsNode3D/MeshInstance3D\r\nThisIsNode3D/MeshInstance3D3\r\nThisIsNode3D/VoxelGI\r\nThisIsNode3D/OmniLight3D\r\nThisIsNode3D/Camera3D\r\nThisIsNode3D/Sprite2D\r\nThisIsNode3D/WorldEnvironment\r\nThisIsNode3D/DirectionalLight3D\r\n```\r\n\r\n#### After\r\n\r\n```\r\n.: Window\r\nThisIsNode3D: Node3D\r\nThisIsNode3D/OccluderInstance3D: OccluderInstance3D\r\nThisIsNode3D/MeshInstance3D2: MeshInstance3D\r\nThisIsNode3D/SomeCSGBox: CSGBox3D\r\nThisIsNode3D/SomeCSGBox/CSGCylinder3D: CSGCylinder3D\r\nThisIsNode3D/MeshInstance3D: MeshInstance3D\r\nThisIsNode3D/MeshInstance3D3: MeshInstance3D\r\nThisIsNode3D/VoxelGI: VoxelGI\r\nThisIsNode3D/OmniLight3D: OmniLight3D\r\nThisIsNode3D/Camera3D: Camera3D\r\nThisIsNode3D/Sprite2D: Sprite2D\r\nThisIsNode3D/WorldEnvironment: WorldEnvironment\r\nThisIsNode3D/DirectionalLight3D: DirectionalLight3D\r\n```\r\n\r\n### `print_tree_pretty()`\r\n\r\n#### Before\r\n\r\n```\r\n ┖╴root\r\n    ┖╴ThisIsNode3D\r\n       ┠╴OccluderInstance3D\r\n       ┠╴MeshInstance3D2\r\n       ┠╴SomeCSGBox\r\n       ┃  ┖╴CSGCylinder3D\r\n       ┠╴MeshInstance3D\r\n       ┠╴MeshInstance3D3\r\n       ┠╴VoxelGI\r\n       ┠╴OmniLight3D\r\n       ┠╴Camera3D\r\n       ┠╴Sprite2D\r\n       ┠╴WorldEnvironment\r\n       ┖╴DirectionalLight3D\r\n```\r\n\r\n#### After\r\n\r\n```\r\n ┖╴root: Window\r\n    ┖╴ThisIsNode3D: Node3D\r\n       ┠╴OccluderInstance3D: OccluderInstance3D\r\n       ┠╴MeshInstance3D2: MeshInstance3D\r\n       ┠╴SomeCSGBox: CSGBox3D\r\n       ┃  ┖╴CSGCylinder3D: CSGCylinder3D\r\n       ┠╴MeshInstance3D: MeshInstance3D\r\n       ┠╴MeshInstance3D3: MeshInstance3D\r\n       ┠╴VoxelGI: VoxelGI\r\n       ┠╴OmniLight3D: OmniLight3D\r\n       ┠╴Camera3D: Camera3D\r\n       ┠╴Sprite2D: Sprite2D\r\n       ┠╴WorldEnvironment: WorldEnvironment\r\n       ┖╴DirectionalLight3D: DirectionalLight3D\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":687159227,"public_id":50336,"url":"https://github.com/godotengine/godot/pull/50336","diff_url":"https://github.com/godotengine/godot/pull/50336.diff","patch_url":"https://github.com/godotengine/godot/pull/50336.patch","title":"Add description to `Viewport`","state":"open","is_draft":false,"authored_by":{"id":62965063,"user":"SirQuartz","avater":"https://avatars.githubusercontent.com/u/62965063?v=4","url":"https://github.com/SirQuartz"},"created_at":"2021-07-10T09:59:45Z","updated_at":"2021-07-11T07:59:39Z","body":"This pull request adds a missing method description to `Viewport` in the class docs.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":687102780,"public_id":50331,"url":"https://github.com/godotengine/godot/pull/50331","diff_url":"https://github.com/godotengine/godot/pull/50331.diff","patch_url":"https://github.com/godotengine/godot/pull/50331.patch","title":"Allow SpatialMaterial Depth in the GLES2 backend","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-10T01:10:12Z","updated_at":"2021-08-06T11:24:32Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50295.\r\n\r\nOn GLES2, the shader now uses a fixed `for` loop instead of a dynamic `while` loop as `while` loops aren't supported on all platforms in GLES2.\r\n\r\nI've tested both simple (non-deep) parallax and deep parallax on desktop, HTML5 and Android. They all work as expected now.\r\n\r\nInspired by three.js: https://github.com/mrdoob/three.js/blob/bb484d616955e2bf1c3329383c3c0cc3543ccf71/examples/jsm/shaders/ParallaxShader.js#L84-L95\r\n\r\nAfter merging, remember to update [Differences between GLES2 and GLES3](https://docs.godotengine.org/en/stable/tutorials/misc/gles2_gles3_differences.html) in the documentation.\r\n\r\n**Testing project:** [tp.zip](https://github.com/godotengine/godot/files/6794440/tp.zip)\r\n\r\n## Preview (Deep Parallax)\r\n\r\n### Desktop\r\n\r\n*Fedora 34 - GeForce GTX 1080 - OpenGL 2.1*\r\n\r\n![Deep Parallax](https://user-images.githubusercontent.com/180032/125147551-6c7eec00-e12c-11eb-9a3d-811a4378e57e.png)\r\n\r\n### HTML5\r\n\r\n*Firefox 90 - GeForce GTX 1080 - WebGL 1.0*\r\n\r\n![HTML5](https://user-images.githubusercontent.com/180032/125214311-babff680-e2b6-11eb-91b7-b0886efcadbe.png)\r\n\r\n### Android (high precision not forced, resulting in artifacts)\r\n\r\n*Android 10 - OnePlus 6*\r\n\r\n![Android low precision](https://user-images.githubusercontent.com/180032/125214300-a7149000-e2b6-11eb-8bc9-fc97b203ead9.jpg)\r\n\r\n### Android (high precision forced)\r\n\r\n*Android 10 - OnePlus 6*\r\n\r\n![Android high precision](https://user-images.githubusercontent.com/180032/125214296-9f54eb80-e2b6-11eb-9598-04f7a6b4cc47.jpg)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":686731000,"public_id":50312,"url":"https://github.com/godotengine/godot/pull/50312","diff_url":"https://github.com/godotengine/godot/pull/50312.diff","patch_url":"https://github.com/godotengine/godot/pull/50312.patch","title":"[3.x] Move platform/*/export folders to editor/export","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-07-09T11:55:42Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #50311.\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112904,3112906,3112907,3112909,3112910,3112912,3112913,4418518]},{"id":686730877,"public_id":50311,"url":"https://github.com/godotengine/godot/pull/50311","diff_url":"https://github.com/godotengine/godot/pull/50311.diff","patch_url":"https://github.com/godotengine/godot/pull/50311.patch","title":"Move platform/*/export folders to editor/export","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-07-09T11:55:28Z","updated_at":"2021-07-09T12:07:18Z","body":"As described in https://github.com/godotengine/godot-proposals/issues/2929, currently, it's difficult to troubleshoot issues with exporting (especially to Android).\r\n\r\nThe current build model requires all the code to be in a single file `platform/*/export/export.cpp`. There is no separation between declarations and definitions. Attempts have been made to reduce the complexity by moving some code into an included header file. However, this just splits the file into multiple files. They are not header files, because they also contain declarations and definitions. Furthermore, the new files have no access to the functions and variables in the parent file `export.cpp`. Therefore, parts get moved back to `export.cpp`, which just adds to the complexity.\r\n\r\nThis PR makes the first step required to reduce the complexity. Instead of searching for and only using `platform/*/export/export.cpp` files, this PR uses an SCsub to build all the required editor export code. Since the platform export code is only used by the editor, this PR creates an export folder in the `/editor/` directory and places all platform export code there.\r\n\r\nA subsequent PR will be created to separate the export code's declarations and definitions into the `.h` and `.cpp` files respectively to further reduce the complexity and fully address https://github.com/godotengine/godot-proposals/issues/2929.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,3112906,3112907,3112909,3112910,3112912,3112913,4418518]},{"id":686570990,"public_id":50308,"url":"https://github.com/godotengine/godot/pull/50308","diff_url":"https://github.com/godotengine/godot/pull/50308.diff","patch_url":"https://github.com/godotengine/godot/pull/50308.patch","title":"PoC for resource loader batching","state":"open","is_draft":true,"authored_by":{"id":1700581,"user":"GiantBlargg","avater":"https://avatars.githubusercontent.com/u/1700581?v=4","url":"https://github.com/GiantBlargg"},"created_at":"2021-07-09T07:47:06Z","updated_at":"2021-07-11T00:51:53Z","body":"Proof of concept for proposal godotengine/godot-proposals#2966.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":686362690,"public_id":50297,"url":"https://github.com/godotengine/godot/pull/50297","diff_url":"https://github.com/godotengine/godot/pull/50297.diff","patch_url":"https://github.com/godotengine/godot/pull/50297.patch","title":"Use interleaved gradient noise for distance fade","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-08T22:24:49Z","updated_at":"2021-08-16T03:48:52Z","body":"Follow-up to https://github.com/godotengine/godot/pull/50294.\r\n\r\nThis provides better visuals and performance compared to the previous ordered dither. On my GTX 1080 in a 4K editor, I get 230 FPS in locations where I would get 210 FPS previously.\r\n\r\nThe new shader performs better since it has much less instructions and branching to do.\r\n\r\nI also tested this PR on the `3.x` branch together with https://github.com/godotengine/godot/pull/50294 and it works fine there, both in GLES3 and [GLES2](https://github.com/godotengine/godot/pull/50295).\r\n\r\n## Preview\r\n\r\n***Note:** These images should be viewed on a desktop device at 1:1 resolution by clicking them. Otherwise, they will not look as expected due to the nature of dithering.*\r\n\r\n### Pixel Alpha (for comparison)\r\n\r\n![Pixel Alpha](https://user-images.githubusercontent.com/180032/124998108-1e92b700-e04c-11eb-9f92-383599d3269f.png)\r\n\r\n### Pixel Dither (new)\r\n\r\n![Pixel Dither](https://user-images.githubusercontent.com/180032/124998105-1d618a00-e04c-11eb-9185-0d18dc3e78e0.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":686347736,"public_id":50295,"url":"https://github.com/godotengine/godot/pull/50295","diff_url":"https://github.com/godotengine/godot/pull/50295.diff","patch_url":"https://github.com/godotengine/godot/pull/50295.patch","title":"Allow Distance Fade Pixel Dither and Object Dither in the GLES2 backend","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-08T21:50:57Z","updated_at":"2021-08-06T11:24:32Z","body":"These Distance Fade modes appear to work fine on desktop platforms and HTML5 at least, even with https://github.com/godotengine/godot/pull/50294 merged in.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":686332757,"public_id":50294,"url":"https://github.com/godotengine/godot/pull/50294","diff_url":"https://github.com/godotengine/godot/pull/50294.diff","patch_url":"https://github.com/godotengine/godot/pull/50294.patch","title":"Use circular fade instead of linear fade for distance fade","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-08T21:19:28Z","updated_at":"2021-07-26T23:07:30Z","body":"This makes distance fade look the same regardless of the camera angle, for all distance fade modes (Pixel Alpha, Pixel Dither, Object Dither). Distance fade now behaves like fog in this regard.\r\n\r\nThis has a minimal performance cost, but the quality increase is worth it. When viewing a plane that fully covers the screen, I get 215 FPS instead of 218 FPS with Pixel Dither in 4K, but this does not reflect the typical use case of distance fade (which is for LOD purposes). Besides, there are likely other ways to improve dithering efficiency (such as reducing branching or using interleaved gradient noise).\r\n\r\nThanks to @mrjustaguy for providing the formula here: https://github.com/godotengine/godot-proposals/issues/2963#issuecomment-876559516\r\n\r\nThis can be cherry-picked without conflicts to the `3.x` branch. I tested this PR on the `3.x` branch on both GLES3 and [GLES2](https://github.com/godotengine/godot/pull/50295), and it works as expected there too. This PR can be merged independently of https://github.com/godotengine/godot/pull/50297 as both can work together.\r\n\r\nThis partially addresses https://github.com/godotengine/godot-proposals/issues/2963.\r\n\r\n## Preview\r\n\r\n***Note:** These images should be viewed on a desktop device at 1:1 resolution by clicking them. Otherwise, they will not look as expected due to the nature of dithering.*\r\n\r\n### Pixel Alpha\r\n\r\n![Pixel Alpha](https://user-images.githubusercontent.com/180032/124992256-04081000-e043-11eb-8584-ebf0b3734f13.png)\r\n\r\n### Pixel Dither\r\n\r\n![Pixel Dither](https://user-images.githubusercontent.com/180032/124992249-02d6e300-e043-11eb-860c-63c31b391297.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":686263753,"public_id":50289,"url":"https://github.com/godotengine/godot/pull/50289","diff_url":"https://github.com/godotengine/godot/pull/50289.diff","patch_url":"https://github.com/godotengine/godot/pull/50289.patch","title":"Allow unindent without selection","state":"open","is_draft":false,"authored_by":{"id":86890728,"user":"ykasehf","avater":"https://avatars.githubusercontent.com/u/86890728?v=4","url":"https://github.com/ykasehf"},"created_at":"2021-07-08T19:16:46Z","updated_at":"2021-07-08T21:17:34Z","body":"This allows a user to press shift+tab to unindent a line without needing to make a selection. Previously, this would remove spaces or tabs preceding the cursor, and an active selection was necessary to actually unindent the line. Now, it always unindents the line the cursor is on by removing spaces or tabs at the front.\r\n\r\nResolves: #50279 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":685502364,"public_id":50264,"url":"https://github.com/godotengine/godot/pull/50264","diff_url":"https://github.com/godotengine/godot/pull/50264.diff","patch_url":"https://github.com/godotengine/godot/pull/50264.patch","title":"[WIP] Install Android Template from Cli","state":"open","is_draft":false,"authored_by":{"id":21955247,"user":"thebestnom","avater":"https://avatars.githubusercontent.com/u/21955247?v=4","url":"https://github.com/thebestnom"},"created_at":"2021-07-07T20:49:16Z","updated_at":"2021-08-01T19:43:34Z","body":"Allows to install Android template from cli, good for CI and quick devlopment\r\n(not tested yet... would like some feedback before compiling godot main a million times)\r\n\r\n@akien-mga @HEAVYPOLY As we talked in RocketChat (crrently you'll need to first copy the zp file to correct directory)\r\n\r\nif we need a way to install by path it would take significaly more work (currently the only thing that does somthing like that is the download template which heavily relise on the UI and does things Im not familiar enough to replicate)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":685358681,"public_id":50253,"url":"https://github.com/godotengine/godot/pull/50253","diff_url":"https://github.com/godotengine/godot/pull/50253.diff","patch_url":"https://github.com/godotengine/godot/pull/50253.patch","title":"[3.x] Use MetalANGLE on iOS and Mac","state":"open","is_draft":true,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-07-07T16:55:35Z","updated_at":"2021-08-06T11:24:32Z","body":"OpenGL ES is deprecated on Apple platforms. As such, it may be dropped in the future.\r\n\r\nThis PR aims to avoid such risk by adding the MetalANGLE GL-to-Metal translation to Godot for iOS and Mac.\r\n\r\nOne extra benefit is higher performance than the GL-to-Metal translation that those devices perform under the hood when interfacting directly with OpenGL ES.\r\n\r\n**NOTES:**\r\n- More testing is needed, to catch regressions and also to verify if current rendering bugs go away with this.\r\n- Adaptation for MacOS is pending.\r\n- Known issue: PVRTC texture fails to be displayed on some example project.\r\n\r\n---\r\nThe initial work was generously sponsored by IMVU.\r\nThe build system integration is proudly sponsored by Prehensile Tales.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":684703119,"public_id":50228,"url":"https://github.com/godotengine/godot/pull/50228","diff_url":"https://github.com/godotengine/godot/pull/50228.diff","patch_url":"https://github.com/godotengine/godot/pull/50228.patch","title":"Reorder properties in BaseMaterial3D for better usability","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-06T21:56:06Z","updated_at":"2021-07-06T22:03:08Z","body":"- List textures first since these are the most likely properties to be changed by the user.\r\n- List textures in the \"occlusion, roughness, metallic\" order in StandardMaterial3D.\r\n- Put normalmap below albedo as it's likely to be set by the user.\r\n- For height and emission, list texture properties below the most \"essential\" properties of their section such as scale, rather than placing them near the bottom.\r\n\r\nSince this only reorders properties (and does not rename them), this is compatible with existing projects.\r\n\r\nI can open a similar PR for `3.x` once we agree on the ordering here.\r\n\r\n## Preview\r\n\r\n### StandardMaterial3D\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/124671966-9202c000-deb6-11eb-942d-f1352c045484.png) | ![After](https://user-images.githubusercontent.com/180032/124671982-95964700-deb6-11eb-9ca5-412e53c36095.png) |\r\n\r\n### ORMMaterial3D\r\n\r\n*Disregard the extraneous Ambient Occlusion section – it seems to be a bug in ORMMaterial3D.*\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![Before](https://user-images.githubusercontent.com/180032/124671971-9333ed00-deb6-11eb-989f-51ff9233359c.png) | ![After](https://user-images.githubusercontent.com/180032/124671976-94651a00-deb6-11eb-80ed-7360b5225d61.png) | \r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":684470491,"public_id":50207,"url":"https://github.com/godotengine/godot/pull/50207","diff_url":"https://github.com/godotengine/godot/pull/50207.diff","patch_url":"https://github.com/godotengine/godot/pull/50207.patch","title":"Add note to `SceneTree` about pausing","state":"open","is_draft":false,"authored_by":{"id":62965063,"user":"SirQuartz","avater":"https://avatars.githubusercontent.com/u/62965063?v=4","url":"https://github.com/SirQuartz"},"created_at":"2021-07-06T15:19:51Z","updated_at":"2021-07-06T16:23:03Z","body":"This pull request adds a small amendment to `SceneTree` describing the behavior of `_physics_process()` when pausing the scene.\r\n\r\n`_physics_process` will completely stop processing collisions and signals whenever the scene is paused.\r\n\r\nResolves: #47326","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":684326106,"public_id":50204,"url":"https://github.com/godotengine/godot/pull/50204","diff_url":"https://github.com/godotengine/godot/pull/50204.diff","patch_url":"https://github.com/godotengine/godot/pull/50204.patch","title":"[3.x] NatVis improvements & GDNative implementation","state":"open","is_draft":false,"authored_by":{"id":51226895,"user":"IlyaStuurFedorov","avater":"https://avatars.githubusercontent.com/u/51226895?v=4","url":"https://github.com/IlyaStuurFedorov"},"created_at":"2021-07-06T12:17:45Z","updated_at":"2021-08-06T11:24:32Z","body":"This is a 3.x version of #50168. This PR improves NatVis for the engine by adding all of the core types, that are addable to the Variant, as well as implements GDNative's NatVis that was non-existent before. GDNative's debugger now looks something like this:\r\n![NatVis](https://user-images.githubusercontent.com/51226895/124598448-4bd53e80-de6d-11eb-98b6-3aa582ab6c62.png)\r\n","target_branch":"3.x","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112906]},{"id":684187109,"public_id":50197,"url":"https://github.com/godotengine/godot/pull/50197","diff_url":"https://github.com/godotengine/godot/pull/50197.diff","patch_url":"https://github.com/godotengine/godot/pull/50197.patch","title":"Add note to `RichTextLabel` about BBCode and `push_*/pop` functions","state":"open","is_draft":false,"authored_by":{"id":62965063,"user":"SirQuartz","avater":"https://avatars.githubusercontent.com/u/62965063?v=4","url":"https://github.com/SirQuartz"},"created_at":"2021-07-06T08:58:09Z","updated_at":"2021-07-07T19:58:25Z","body":"This pull request adds a small note to RichTextLabel in the class docs that the `push_*/pop` functions won't work with BBCode and that this is intended behavior.\r\n\r\nResolves: #49855","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":684089130,"public_id":50196,"url":"https://github.com/godotengine/godot/pull/50196","diff_url":"https://github.com/godotengine/godot/pull/50196.diff","patch_url":"https://github.com/godotengine/godot/pull/50196.patch","title":"Add reflection mask to reflection probes","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-07-06T06:15:41Z","updated_at":"2021-07-07T01:15:05Z","body":"The `cull_mask` property on reflection probes had a double function that did not make sense.\r\n\r\n1. It determined which objects were rendered to the probe\r\n2. It determined which objects would get reflections using this probe\r\n\r\nRarely do you want to have an object reflect onto itself so a likely use case is where you'd want to exclude the object that gets reflections from being rendered to the probe. But due to this combined function that was impossible.\r\n\r\nThe documentation stated that it should be doing 1 and never mentioned 2 however seeing that for all other objects that have a `cull_mask` (i.e. lights and decals) `cull_mask` behaves as defined at 2 I've chosen to split off 1 into a separate property.\r\n\r\nThis PR introduces a new property called `reflection_mask` that determines which layers are rendered to the probe.\r\n\r\nUsing the material tester demo I've added a reflection probe to the mirror ball:\r\n![image](https://user-images.githubusercontent.com/1945449/124551300-467bf200-de75-11eb-9479-eca9af7f67e5.png)\r\n\r\nNote that the mirror ball itself has been placed into layer 2\r\n\r\nThe result is proper reflections onto the mirror ball:\r\n![image](https://user-images.githubusercontent.com/1945449/124551245-349a4f00-de75-11eb-83cf-ef12d38bb529.png)\r\n\r\nFixes #50195","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418726]},{"id":683734113,"public_id":50182,"url":"https://github.com/godotengine/godot/pull/50182","diff_url":"https://github.com/godotengine/godot/pull/50182.diff","patch_url":"https://github.com/godotengine/godot/pull/50182.patch","title":"Add many descriptions to the `Window` class","state":"open","is_draft":false,"authored_by":{"id":62965063,"user":"SirQuartz","avater":"https://avatars.githubusercontent.com/u/62965063?v=4","url":"https://github.com/SirQuartz"},"created_at":"2021-07-05T14:07:10Z","updated_at":"2021-07-07T05:01:20Z","body":"This pull request adds many missing descriptions to `Window` in the class docs.\r\n\r\nIf you've any feedback, recommendations, and/or insights I'd be glad to hear it.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":683705696,"public_id":50180,"url":"https://github.com/godotengine/godot/pull/50180","diff_url":"https://github.com/godotengine/godot/pull/50180.diff","patch_url":"https://github.com/godotengine/godot/pull/50180.patch","title":"Improve visibility rect/AABB generation usability in Particles (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-07-05T13:28:38Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/50181.\r\n\r\n- Don't display the time dialog if the automatically calculated generation time is short enough.\r\n- Clarify the purpose of waiting in the progress dialog.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418542]},{"id":683679847,"public_id":50179,"url":"https://github.com/godotengine/godot/pull/50179","diff_url":"https://github.com/godotengine/godot/pull/50179.diff","patch_url":"https://github.com/godotengine/godot/pull/50179.patch","title":"Add godot app lifecycle callbacks to modules.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2021-07-05T12:57:17Z","updated_at":"2021-07-11T11:40:39Z","body":"This feature add a mechanism that emits a notification when a specific app lifecycle phase is executed.\r\nIt call the callback on:\r\n- Setup begins (`Main::setup`) LIFECYCLE_PHASE_SETUP_BEGIN\r\n- Setup2 begins (`Main::setup2`) LIFECYCLE_PHASE_POST_SETUP_BEGIN\r\n- Setup2 done (`Main::setup2`) LIFECYCLE_PHASE_SETUP_DONE\r\n- Start begins (`Main::start`) LIFECYCLE_PHASE_START_BEGIN\r\n- Start done (`Main::start`) LIFECYCLE_PHASE_START_DONE\r\n- Cleanup begins (`Main::cleanup`) LIFECYCLE_PHASE_CLEANUP_BEGIN\r\n- Cleanup done (`Main::cleanup`) LIFECYCLE_PHASE_CLEANUP_DONE\r\n\r\n----\r\n\r\nTo use it, it's enough to implement the function `void MODULENAME_lifecycle_callback(int);` to `yourmodule/register_types.h` and define the macro: `#define MODULE_MODULENAME_HAS_LIFECYCLE_CALLBACK`\r\n\r\nFor example, if we need to register a new singleton in the GLTF module, we can write the following:\r\n```c++\r\n// register_types.h\r\n#define MODULE_GLTF_HAS_LIFECYCLE_CALLBACK\r\nvoid gltf_lifecycle_callback(int p_lifecycle_phase);\r\n\r\n\r\n// register_types.cpp\r\nvoid gltf_lifecycle_callback(int p_lifecycle_phase) {\r\n\tswitch (p_lifecycle_phase) {\r\n\t\tcase LIFECYCLE_PHASE_STARTUP_BEGIN:\r\n\t\t\t// TODO Init here the singleton.\r\n\t\t\tbreak;\r\n\t\tcase LIFECYCLE_PHASE_CLEANUP_BEGIN:\r\n\t\t\t// TODO Clear here the singleton.\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n```\r\n\r\nImplements the proposal: https://github.com/godotengine/godot-proposals/issues/1593\r\n\r\nThe proposal code is different than this implementation because this PR was implemented following the advises received during a proposal review by the core devs.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518,4418914]},{"id":683504966,"public_id":50175,"url":"https://github.com/godotengine/godot/pull/50175","diff_url":"https://github.com/godotengine/godot/pull/50175.diff","patch_url":"https://github.com/godotengine/godot/pull/50175.patch","title":"Image.blit_rect/blend_rect Fix rects calculations for negative arguments","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-07-05T09:00:44Z","updated_at":"2021-07-05T12:53:20Z","body":"Fixes #50126.\r\nCherry-pickable `3.x`, `3.3`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":683226910,"public_id":50168,"url":"https://github.com/godotengine/godot/pull/50168","diff_url":"https://github.com/godotengine/godot/pull/50168.diff","patch_url":"https://github.com/godotengine/godot/pull/50168.patch","title":"NatVis improvement","state":"open","is_draft":false,"authored_by":{"id":51226895,"user":"IlyaStuurFedorov","avater":"https://avatars.githubusercontent.com/u/51226895?v=4","url":"https://github.com/IlyaStuurFedorov"},"created_at":"2021-07-04T19:44:08Z","updated_at":"2021-07-06T12:58:06Z","body":"This PR improves NatVis for the engine by adding all of the core types, that are addable to the Variant. (GDNative implementation had to be cut out since API has not stabilized yet for NatVis)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":683213278,"public_id":50165,"url":"https://github.com/godotengine/godot/pull/50165","diff_url":"https://github.com/godotengine/godot/pull/50165.diff","patch_url":"https://github.com/godotengine/godot/pull/50165.patch","title":"Refactor and move easing equations","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-07-04T18:00:15Z","updated_at":"2021-07-04T18:29:59Z","body":"Supposed to close #22513\r\n\r\nI mostly cleaned up the code. I wasn't sure what to do with the easings file, it's so heavily modified now that it's not much of a third-party. Although we should probably credit Penner somewhere, his equations are MIT/BSD.\r\n\r\nEDIT:\r\nAh, I forgot. Here is a test scene:\r\n[TweenTest.zip](https://github.com/godotengine/godot/files/6760395/TweenTest.zip)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380,4418518]},{"id":683180243,"public_id":50156,"url":"https://github.com/godotengine/godot/pull/50156","diff_url":"https://github.com/godotengine/godot/pull/50156.diff","patch_url":"https://github.com/godotengine/godot/pull/50156.patch","title":"Some fixes to runtime navmesh baking","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-07-04T14:06:22Z","updated_at":"2021-07-04T14:53:24Z","body":"Fix some issues when baking the navigation mesh using `NavigationRegion3D.bake_navigation_mesh`.\r\n\r\n- Don't bake the navmesh in a thread when calling `NavigationRegion3D.bake_navigation_mesh` from a tool script to prevent a crash (has the side effect to show the progress dialog).\r\n- Use CollisionObject3D API when baking the navmesh with static colliders, instead of collecting CollisionShape3D nodes.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":683114178,"public_id":50148,"url":"https://github.com/godotengine/godot/pull/50148","diff_url":"https://github.com/godotengine/godot/pull/50148.diff","patch_url":"https://github.com/godotengine/godot/pull/50148.patch","title":"Move 2D and 3D resources to their own folders","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-04T04:45:09Z","updated_at":"2021-08-18T00:26:34Z","body":"Similarly to how we have the `scene/2d` folder and `scene/3d` folder for 2D and 3D nodes, this PR moves 2D and 3D resources to `scene/resources/2d` and `scene/resources/3d`. Also, I moved the skeleton modification resources to another subfolder, `scene/resources/2d/skeleton` since there were 18 2D skeleton modification resource files. Resources that are shared between 2D and 3D are still in `scene/resources`.\r\n\r\n* This gives us the ability to easily exclude the resources in these folders when disabling 2D or 3D (but as of this PR, they are always included).\r\n\r\n* In terms of compiled size, as of the current master, the resources folder is the biggest one, so that's another reason that I think it would be nice to divide it up into 2D and 3D subfolders:\r\n\r\n![godot4-chart](https://user-images.githubusercontent.com/1646875/126118432-969b7732-39ae-4a01-961b-7f7c6a974a68.png)\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418424,4418518,4418542,4418550,4418718,4418726]},{"id":683084303,"public_id":50139,"url":"https://github.com/godotengine/godot/pull/50139","diff_url":"https://github.com/godotengine/godot/pull/50139.diff","patch_url":"https://github.com/godotengine/godot/pull/50139.patch","title":"Rename `remove()` to `remove_at()` when removing by index","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-03T22:21:18Z","updated_at":"2021-08-01T00:59:54Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nPart of https://github.com/godotengine/godot-proposals/issues/2885 and https://github.com/godotengine/godot/issues/16863\r\n\r\nI figured the `erase()` -> `remove()` rename should probably be a separate PR to help minimize the chance of regressions.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,2785428,3112904,3112907,3112909,3112913,3377457,3388402,3609449,3857901,4038183,4417777,4417819,4417868,4418380,4418392,4418403,4418424,4418542,4418550,4418558,4418563,4418718,4418726,4418733,4418914,4418923]},{"id":683074739,"public_id":50134,"url":"https://github.com/godotengine/godot/pull/50134","diff_url":"https://github.com/godotengine/godot/pull/50134.diff","patch_url":"https://github.com/godotengine/godot/pull/50134.patch","title":"Fix output of --version","state":"open","is_draft":false,"authored_by":{"id":86890728,"user":"ykasehf","avater":"https://avatars.githubusercontent.com/u/86890728?v=4","url":"https://github.com/ykasehf"},"created_at":"2021-07-03T20:32:56Z","updated_at":"2021-07-03T21:02:51Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nRunning Godot with the `--version` flag would previously give the following error after outputting the version:\r\n```\r\nERROR: Condition \"int32_t(p_level) != level\" is true.\r\n   at: deinitialize_extensions (core/extension/native_extension_manager.cpp:101)\r\n```\r\nThis change prevents this error message by returning early from `deinitialize_extensions`.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":682963359,"public_id":50106,"url":"https://github.com/godotengine/godot/pull/50106","diff_url":"https://github.com/godotengine/godot/pull/50106.diff","patch_url":"https://github.com/godotengine/godot/pull/50106.patch","title":"Add more units and use units in nodes and resources","state":"open","is_draft":true,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-03T04:19:24Z","updated_at":"2021-08-20T02:30:56Z","body":"Draft because this PR depends on #50042.\r\n\r\nThis PR fulfills a goal of #50009 left for future PRs (\"someone needs to go through the rest of the engine and add all remaining suffixes\") and goals of #50042 left for future PRs (\"Add more types of units\" and \"Use these units in more places around the engine\"), although this PR is only for nodes and resources in the inspector, not around the whole engine.\r\n\r\nThis PR adds many new types of units and uses them in hundreds of places on nodes. It adds angular velocity, mass, time, ratio, volume, 2D and 3D velocity, acceleration, and force.\r\n\r\nOne new editor setting was added: Ratio unit. This allows viewing 0 to 1 ratios as either 0 to 1 or 0% to 100%. The ability to configure any of the other units is likely not worth doing in the core engine, and is left to a fork (perhaps Imperial Godot :crown:...?)\r\n\r\nWhile making this, I also realized that it would be cool if we could somehow expose this information in the XML docs. I'm not sure how feasible this is to do, however.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":682318767,"public_id":50067,"url":"https://github.com/godotengine/godot/pull/50067","diff_url":"https://github.com/godotengine/godot/pull/50067.diff","patch_url":"https://github.com/godotengine/godot/pull/50067.patch","title":"Rename PointLight2D to SpriteLight2D","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-02T04:14:15Z","updated_at":"2021-07-19T19:26:36Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nSee https://github.com/godotengine/godot/issues/16863#issuecomment-869587241\r\nAnd https://github.com/godotengine/godot/pull/50066","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,3609449,4418718]},{"id":682315857,"public_id":50066,"url":"https://github.com/godotengine/godot/pull/50066","diff_url":"https://github.com/godotengine/godot/pull/50066.diff","patch_url":"https://github.com/godotengine/godot/pull/50066.patch","title":"Rename OmniLight3D to PointLight3D","state":"open","is_draft":false,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-07-02T04:06:07Z","updated_at":"2021-07-19T19:40:22Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nThis makes it more consistent with Blender, Unity, Unreal, etc.\r\n\r\nSee https://github.com/godotengine/godot/issues/16863#issuecomment-869587241\r\nAnd https://github.com/godotengine/godot/pull/50067","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,3609449,4418424,4418550,4418726,4418914,4418923]},{"id":681750534,"public_id":50047,"url":"https://github.com/godotengine/godot/pull/50047","diff_url":"https://github.com/godotengine/godot/pull/50047.diff","patch_url":"https://github.com/godotengine/godot/pull/50047.patch","title":"Renamed `Vector3.BACK` to `BACKWARD`","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-07-01T11:07:15Z","updated_at":"2021-08-22T06:33:43Z","body":"Fix for better compatibility with `FORWARD`: (https://github.com/godotengine/godot/issues/16863#issuecomment-872036846).\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3857901,4418914]},{"id":681477720,"public_id":50042,"url":"https://github.com/godotengine/godot/pull/50042","diff_url":"https://github.com/godotengine/godot/pull/50042.diff","patch_url":"https://github.com/godotengine/godot/pull/50042.patch","title":"Make the code for units for the editor inspector more generic","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-07-01T05:18:37Z","updated_at":"2021-08-20T02:29:23Z","body":"EDIT: Removed the ability to customize the distance unit as per @reduz's feedback. Now this PR just adds the rotation unit setting, uses the units in a few more places, and changes this code more generic such that it would be easy for anyone to add their own units if they fork the engine.\r\n\r\nThis PR is a continuation of #50009. It adds support for users to switch between various units.\r\n\r\nInstead of the editor hint `,suffix:m`, we can write the hint as `,3d_distance`. However, Godot will always use meters. Similarly, there is also a `,2d_distance` meant to be used for 2D nodes (Node2D-derived, not Control). Also, this PR adds support for using these hint strings even when the property hint is something other than `PROPERTY_HINT_RANGE`.\r\n\r\nJust like in #50009 with the automatic conversion of degrees and radians, this PR can convert units to display the correct values depending on both which unit the API expects under the hood and what the user's preference is. The conversion is handled by multiplying as needed with a scale factor grabbed from a method in Editor settings. However, in this PR, the only place where conversion actually happens is with angles.\r\n\r\nThe suffix is also grabbed from a method in Editor settings, but it can still also be hard-coded with `,suffix:` which doesn't use the scaling method, in case the value isn't scalable (like integer types), shouldn't be scaled (like on Control where it's hard-coded to use pixels regardless of the distance unit used for Node2D), or is a non-standard unit (`,suffix:apples` or anything else is valid).\r\n\r\nThere is 1 editor setting added: Rotation unit. Therefore this solves #50009's goal for a future PR of \"Ability to switch radians/degrees in the inspector for angle properties\". Other things can be configured in a fork of Godot.\r\n\r\nThings to do / consider doing, likely in future PRs:\r\n\r\n* Add more types of units (mass, speed, acceleration, force, ratios/percentages, and more).\r\n* Use these units in more places around the engine.\r\n* Should these units be translatable? I think these suffixes are fairly universal.\r\n\r\nOld PR description:\r\n\r\n<details>\r\n\r\nThis PR is a continuation of #50009. It adds support for users to switch between various units.\r\n\r\nInstead of the editor hint `,suffix:m`, we can write the hint as `,3d_distance`, then Godot will use the user's preferred unit. Similarly, there is also a `,2d_distance` meant to be used for 2D nodes (Node2D-derived, not Control). Also, this PR adds support for using these hint strings even when the property hint is something other than `PROPERTY_HINT_RANGE`.\r\n\r\nJust like in #50009 with the automatic conversion of degrees and radians, this PR can convert units to display the correct values depending on both which unit the API expects under the hood and what the user's preference is. The conversion is handled by multiplying as needed with a scale factor grabbed from a method in Editor settings.\r\n\r\nThe suffix is also grabbed from a method in Editor settings, but it can still also be hard-coded with `,suffix:` which does no scaling, in case the value isn't scalable (like integer types), shouldn't be scaled (like on Control where it's hard-coded to use pixels regardless of the distance unit used for Node2D), or is a non-standard unit (`,suffix:apples` or anything else is valid).\r\n\r\nThere are 4 total editor settings added: Rotation unit, 2D distance unit, 2D pixels per meter, and 3D distance unit.\r\n\r\nHere is what the inspectors for Node2D, Node3D, and Control look like with the default settings:\r\n\r\n![1](https://user-images.githubusercontent.com/1646875/124066112-1a401b80-da06-11eb-9035-0dbc96c02af8.png)\r\n\r\nHere is what the inspectors for Node2D, Node3D, and Control look like with the same positions/rotations/etc, but with the 2D unit changed to millimeters, the 3D unit changed to centimeters, and the rotation unit changed to radians:\r\n\r\n![2](https://user-images.githubusercontent.com/1646875/124066129-1f9d6600-da06-11eb-95be-54a3a542158b.png)\r\n\r\nThings to do / consider doing, likely in future PRs:\r\n\r\n* Add more distance units (does anyone care about feet in Godot?).\r\n* Add more types of units (mass, speed, acceleration, force, ratios/percentages, and more).\r\n* Use these units in more places around the engine.\r\n* Should these units be translatable? I think these suffixes are fairly universal.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718,4418726,4418733,4418914]},{"id":680665120,"public_id":50019,"url":"https://github.com/godotengine/godot/pull/50019","diff_url":"https://github.com/godotengine/godot/pull/50019.diff","patch_url":"https://github.com/godotengine/godot/pull/50019.patch","title":"Better gltf2 export","state":"open","is_draft":true,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-06-30T08:57:19Z","updated_at":"2021-08-12T09:15:59Z","body":"Fixes: https://github.com/godotengine/godot/issues/50020","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":680035347,"public_id":50001,"url":"https://github.com/godotengine/godot/pull/50001","diff_url":"https://github.com/godotengine/godot/pull/50001.diff","patch_url":"https://github.com/godotengine/godot/pull/50001.patch","title":"Improve cursor placement when clicking on text in LineEdit (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-29T14:06:57Z","updated_at":"2021-08-06T11:24:32Z","body":"This implements behavior similar to TextEdit when clicking on text.\r\n\r\nThis partially addresses https://github.com/godotengine/godot-proposals/issues/125.\r\n\r\nThis needs further testing with various fonts (in both LineEdit and TextEdit) :slightly_smiling_face: The selecting-by-holding behavior should also be tested.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418733]},{"id":679429087,"public_id":49976,"url":"https://github.com/godotengine/godot/pull/49976","diff_url":"https://github.com/godotengine/godot/pull/49976.diff","patch_url":"https://github.com/godotengine/godot/pull/49976.patch","title":"Proof-of-concept for Physics.simulate() for discussion purposes","state":"open","is_draft":true,"authored_by":{"id":191561,"user":"dsnopek","avater":"https://avatars.githubusercontent.com/u/191561?v=4","url":"https://github.com/dsnopek"},"created_at":"2021-06-28T21:50:46Z","updated_at":"2021-08-06T11:24:32Z","body":"Not for consideration to actually commit!\r\n\r\nThis PR is only for discussion purposes, to argue for https://github.com/godotengine/godot-proposals/issues/2821.\r\n\r\nIt can probably just be closed, because (I think) we can discuss the patch without the PR being open.\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777,4418914]},{"id":679357157,"public_id":49972,"url":"https://github.com/godotengine/godot/pull/49972","diff_url":"https://github.com/godotengine/godot/pull/49972.diff","patch_url":"https://github.com/godotengine/godot/pull/49972.patch","title":"Add a project setting to control the minimum ReflectionProbe roughness","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-28T20:06:25Z","updated_at":"2021-08-06T11:24:32Z","body":"This can be used as a form of antialiasing with very little performance cost.\r\n\r\nThe default value removes almost all aliasing present in ReflectionProbes while still keeping reflections fairly sharp for real world use cases.\r\n\r\nI could only get it working in GLES3, so the feature is limited to GLES3. The default value for the minimum roughness is `0.05` and can be changed at run-time.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/49789.\r\n\r\n## Preview\r\n\r\n*Reflective materials have Roughness = 0, Metallic = 1.*\r\n\r\n### Before (Min Roughness = 0.0)\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/123697450-36ed1f80-d85d-11eb-9cbe-b30bc6363692.png)\r\n\r\n### After (Min Roughness = 0.05)\r\n\r\n![After](https://user-images.githubusercontent.com/180032/123697452-38b6e300-d85d-11eb-89c2-44c1a5b290de.png)","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449]},{"id":679179681,"public_id":49967,"url":"https://github.com/godotengine/godot/pull/49967","diff_url":"https://github.com/godotengine/godot/pull/49967.diff","patch_url":"https://github.com/godotengine/godot/pull/49967.patch","title":"Print a warning for Viewports that have 2D usage and HDR enabled","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-28T16:09:43Z","updated_at":"2021-08-06T11:24:32Z","body":"2D usage + HDR isn't supported, so the usage must be changed to 3D to be able to use HDR.\r\n\r\nI wanted to print the node path using [KoBeWi's suggested solution](https://github.com/godotengine/godot/pull/48164#issuecomment-846984050), but that didn't work either.\r\n\r\nSee https://github.com/godotengine/godot/issues/41151 and https://github.com/Zylann/godot_heightmap_plugin/issues/269.\r\n\r\n**Note:** Not applicable to the `master` branch as the notion of viewport usage is gone there.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418914]},{"id":678610099,"public_id":49959,"url":"https://github.com/godotengine/godot/pull/49959","diff_url":"https://github.com/godotengine/godot/pull/49959.diff","patch_url":"https://github.com/godotengine/godot/pull/49959.patch","title":"Utilize empty base class optimization in Vector<T> to save memory","state":"open","is_draft":false,"authored_by":{"id":86566939,"user":"Macksaur","avater":"https://avatars.githubusercontent.com/u/86566939?v=4","url":"https://github.com/Macksaur"},"created_at":"2021-06-28T00:34:20Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of #49957 to keep history clean and tidy.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":678595708,"public_id":49957,"url":"https://github.com/godotengine/godot/pull/49957","diff_url":"https://github.com/godotengine/godot/pull/49957.diff","patch_url":"https://github.com/godotengine/godot/pull/49957.patch","title":"Utilize empty base class optimization in Vector<T> to save memory","state":"open","is_draft":false,"authored_by":{"id":86566939,"user":"Macksaur","avater":"https://avatars.githubusercontent.com/u/86566939?v=4","url":"https://github.com/Macksaur"},"created_at":"2021-06-27T23:11:33Z","updated_at":"2021-06-28T11:08:22Z","body":"I was exploring the Godot source to learn the ins-and-outs and I was looking over some of the more commonly utilized classes and I noticed `Vector<T>` had a nice COW implementation. In looking over the history of `Vector<T>` it seems a memory regression has snuck in.\r\n\r\nWhen editing one of my projects I counted ~250k instances of `Vector<T>` in a simple scene with a few TileMaps and Sprites. Any memory regressions here would be important targets to fix.\r\n\r\nThe issue:\r\n\r\n```cpp\r\ntemplate <class T>\r\nclass VectorWriteProxy {\r\n\t// empty class with no member fields\r\n};\r\n\r\ntemplate <class T>\r\nclass Vector {\r\n\tfriend class VectorWriteProxy<T>;\r\npublic:\r\n\tVectorWriteProxy<T> write; // <--- occupies memory\r\nprivate:\r\n\tCowData<T> _cowdata;\r\n\t// ...\r\n};\r\n```\r\n\r\nThe size of any object or member (in this case `VectorWriteProxy<T> write`) will always occupy at least one byte so that its address can be taken and so that it can be differentiated from other members using this address. Using a 64-bit target as an example, this fact combined with the compiler attempting to align pointers results in `write` using 8 bytes total instead of one. This 8 bytes is ultimately unused, all-zero, padding. `_cowdata` then starts 8 bytes in and occupies a further 8 bytes. Effectively the size of the housekeeping for `Vector<T>`  is doubled to a total of 16 bytes. This is at least until C++20 when the `[[no_unique_address]]` attribute suppressing this behaviour is available. Despite this, we can fix it today with available features.\r\n\r\nThe logic in 3ef7ecf5468960c362511a69b153471b33544464 is solid but it's overcomplicated. In order to satisfy and guarantee the behaviour that that commit requires (the reinterpreted address of the struct/class is also the same address as the first member) C++ also has to guarantee that base subobjects are optimized out of the memory layout if they are empty. Utilizing this behaviour (well defined and utilized since at least C++11) we can return `Vector<T>` back to 8 bytes, more than enough housekeeping for storing the COW pointer!\r\n\r\nThe change is simple, `VectorWriteProxy<T>` should be a base class of `Vector<T>` instead of a member in order to allow us to use `static_cast` to jump between the proxy and the backing `Vector<T>`. This also allows the compiler to optimize it out of the memory layout entirely and enables flexibility in how the write proxy is obtained.\r\n\r\nIn remaining consistent with expected usage of `Vector<T>` (and the scenarios that previously involved `PoolVector` prior to deprecation) I've changed the `.write` member into a `write()` function that does the cast and returns the proxy object without going through a member field that occupies memory.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":678542577,"public_id":49956,"url":"https://github.com/godotengine/godot/pull/49956","diff_url":"https://github.com/godotengine/godot/pull/49956.diff","patch_url":"https://github.com/godotengine/godot/pull/49956.patch","title":"Rename `ADD_GROUP()` macros to `BEGIN_GROUP()` and `END_GROUP()`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-27T16:14:22Z","updated_at":"2021-07-02T00:31:47Z","body":"This better highlights the stateful nature of inspector categories defined using the `ADD_GROUP()` macro. [I discussed this with Zylann on the Godot contributors chat.](https://chat.godotengine.org/channel/devel?msg=TEKci49pCprBzZbSo)\r\n\r\nThis also adds comments above each macro, which will appear in many IDEs when hovering the macro names.\r\n\r\nThird-party C++ modules that use the `ADD_GROUP()` macro will have to be updated to use the new macros.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3377457,3388402,3609449,4418380,4418392,4418718,4418726,4418733,4418914]},{"id":678530965,"public_id":49954,"url":"https://github.com/godotengine/godot/pull/49954","diff_url":"https://github.com/godotengine/godot/pull/49954.diff","patch_url":"https://github.com/godotengine/godot/pull/49954.patch","title":"Tweak LightmapGI defaults to be closer to the CPU lightmapper","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-27T15:00:32Z","updated_at":"2021-06-27T15:03:11Z","body":"- Use 3 bounces by default. This is slower but gives significantly better results out of the box. The GPU lightmapper is very fast compared to the CPU lightmapper anyway.\r\n- Enable environment lighting from the scene by default.\r\n  - This is not done in `3.x` for compatibility with existing projects, but it makes sense to do this by default since pretty much all outdoor scenes benefit from this.\r\n- Set the custom environment color to white (like ReflectionProbe).\r\n  - Its default energy is still 0, so it's invisible by default.\r\n- Enable the generation of dynamic object probes by default.\r\n- Tweak the `max_texture_size` property hint for better usability.\r\n- Improve error messages when passing invalid sizes to `LightmapGI.set_max_texture_size()`.\r\n\r\n## Preview\r\n\r\n*Using the **All** bake mode for the DirectionalLight, which means both direct and indirect lighting are baked.*\r\n\r\n**Testing project:** [test_lightmap_normalmap_2.zip](https://github.com/godotengine/godot/files/6721779/test_lightmap_normalmap_2.zip) (`master` only, won't work in `3.x`)\r\n\r\n### Before\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/123549444-530f9480-d769-11eb-95ae-7cf4627fab25.png)\r\n\r\n### After\r\n\r\n![After](https://user-images.githubusercontent.com/180032/123549445-5440c180-d769-11eb-9db4-126d83eb7731.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":678528088,"public_id":49952,"url":"https://github.com/godotengine/godot/pull/49952","diff_url":"https://github.com/godotengine/godot/pull/49952.diff","patch_url":"https://github.com/godotengine/godot/pull/49952.patch","title":"Print warning in SpatialMaterial when depth and triplanar are active","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-27T14:41:49Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/49951.\n\nUsing both depth mapping and triplanar mapping isn't supported.\n\nSee https://github.com/godotengine/godot/issues/44322.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":678522884,"public_id":49947,"url":"https://github.com/godotengine/godot/pull/49947","diff_url":"https://github.com/godotengine/godot/pull/49947.diff","patch_url":"https://github.com/godotengine/godot/pull/49947.patch","title":"Tweak StandardMaterial3D's default height properties","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-27T14:09:09Z","updated_at":"2021-08-16T03:58:16Z","body":"- Enable Deep Parallax by default as most people end up enabling it in the end. Non-Deep Parallax, while cheaper, is only suited to a few types of textures whereas Deep Parallax is much more general-purpose.\r\n  - **Edit:** We may want to leave it disabled by default if https://github.com/godotengine/godot/pull/50383 is merged.\r\n  - See https://github.com/godotengine/godot-proposals/issues/2455 which should eventually be implemented to improve performance on low-end systems.\r\n- Set the default height scale to 1 and multiply it by 0.05 in the shader.\r\n  - This makes the height scale match normal map intensity and other scale factors.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":678503836,"public_id":49942,"url":"https://github.com/godotengine/godot/pull/49942","diff_url":"https://github.com/godotengine/godot/pull/49942.diff","patch_url":"https://github.com/godotengine/godot/pull/49942.patch","title":"Add support for returning the play area from XRInterface","state":"open","is_draft":false,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-06-27T11:58:15Z","updated_at":"2021-08-02T11:58:00Z","body":"This PR adds support for querying the play area available to an XR game.\r\n\r\nCurrently most Godot 3 XR plugins implement their own version of this such as:\r\n- OpenVR: https://github.com/GodotVR/godot_openvr/blob/master/src/open_vr/OpenVRConfig.cpp#L93\r\n- Oculus desktop: https://github.com/GodotVR/godot_oculus/blob/master/src/oculus/oculus_config.cpp#L38\r\n- Oculus mobile: https://github.com/GodotVR/godot_oculus_mobile/blob/master/plugin/src/main/cpp/api/ovr_guardian_system.cpp#L23 (currently disabled)\r\n\r\nThis means that in order to implement functionality around this platform dependent implementations are needed.\r\n\r\nBy adding an entry point into the XRInterface that plugin developers can implement we can standardize this solution.\r\n\r\nThe PR also adds methods to query and set the play area mode. It is up to the XR interface to implement what is supported here as not all XR runtimes support the same modes. \r\n\r\nFinally a signal `play_area_changed` is introduced that should be emitted whenever the play area changes regardless of the cause of this change. It is up to the XR interface to emit this signal, the signal definition is purely there for standardization.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":678423008,"public_id":49932,"url":"https://github.com/godotengine/godot/pull/49932","diff_url":"https://github.com/godotengine/godot/pull/49932.diff","patch_url":"https://github.com/godotengine/godot/pull/49932.patch","title":"Define UV2 in primitive meshes","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-26T22:24:14Z","updated_at":"2021-06-27T11:09:03Z","body":"This allows using the lightmapper without using a mesh exported from a 3D DCC. Simply enable **Use In Baked Light** in the MeshInstance properties and lights will be baked.\r\n\r\nThis is especially useful for prototyping or testing the lightmapper itself.\r\n\r\nI'm marking this PR as a draft. While it works as intended, the lack of padding in the UV causes lightmaps to bleed noticeably. There is surely a way to fix this, but I'd like to reuse the existing UV as a base as much as possible. Do I have to do all the calculations manually?\r\n\r\nStretched meshes such as boxes will also have lower lightmap resolution on the longer axis. You can see this on the stretched box on the screenshots. I'm not sure how to fix this.\r\n\r\n## Preview\r\n\r\n*Screenshots taken from a project using the `3.x` branch CPU lightmapper.*\r\n\r\n**Testing project:** [test_primitive_uv2.zip](https://github.com/godotengine/godot/files/6720778/test_primitive_uv2.zip) (`3.x` with this PR, will not work in vanilla `3.x`)\r\n\r\n### Without UV1 texture\r\n\r\n*The large cube on the left is exported from Blender and has a good, padded UV generated by xatlas. The two large cubes on the right are primitive meshes with UV1 used as UV2.*\r\n\r\n![Without UV1 texture](https://user-images.githubusercontent.com/180032/123527249-22364d80-d6de-11eb-9ac3-3c55ee4eb6fd.png)\r\n\r\n### With UV1 texture\r\n\r\n![With UV1 texture](https://user-images.githubusercontent.com/180032/123527251-24001100-d6de-11eb-8b73-6aaf96d0a466.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":678392760,"public_id":49928,"url":"https://github.com/godotengine/godot/pull/49928","diff_url":"https://github.com/godotengine/godot/pull/49928.diff","patch_url":"https://github.com/godotengine/godot/pull/49928.patch","title":"Focusable Tabs and TabContainer, tabs can be changed using keyboard and gamepad","state":"open","is_draft":false,"authored_by":{"id":69091976,"user":"DrRevert","avater":"https://avatars.githubusercontent.com/u/69091976?v=4","url":"https://github.com/DrRevert"},"created_at":"2021-06-26T18:12:26Z","updated_at":"2021-06-30T20:07:55Z","body":"This PR adds support for UI focus Tabs and TabContainer so they can be navigated using keyboard and gamepad. Related issues: #25877 #46111\r\n**Changes:**\r\n- Tab and TabContainer focus mode is now set to \"All\" by default\r\n- When Tab/TabContainer node has focus it will render a blue rectangle (the same as the button) \r\n![image](https://user-images.githubusercontent.com/69091976/123520941-d1116400-d6b3-11eb-802a-cd3b91b8fb65.png)\r\n- When Tab/TabContainer node has focus pressing ui_left will switch to the tab on the left of the currently selected, if the first tab is currently selected it will loop over and choose the last tab\r\n- Similary when pressing ui_right the tab on the right be selected, if the last tab is currently selected, it will loop over and select first tab\r\n- ~~Pressing ui_down when TabContainer has focus will in practice have the same effect as pressing ui_focus_next, more details in the Known issues section.~~ (refer to my second comment for more information)\r\n\r\n**Known issues:**\r\n- [x] - Because of the way TabContainer is implemented, changing focus from the TabContainer and Control inside the tab (child) is tricky. Engine for some reason doesn't treat TabContainer and child Control as valid neighbours. Switching from TabContainer to a child can be achieved using the find_next_valid_focus, but might cause issues in a more advanced UI design. Switching from child to TabContainer can be accomplished by explictly setting the Neighbor Top/Left/Right/Bottom parameter.\r\n- [x] - Current implementation doesn't check if the tab is disabled, before switching to it.\r\n- [x] - Behavior for looping over from last to first tab or vice versa might not be desired and should be enabled by a new property\r\n- [ ] - Focus graphic is the same as button focus graphic, it looks okay, but if the PR gets approved it should propably use its own graphic","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":678110196,"public_id":49913,"url":"https://github.com/godotengine/godot/pull/49913","diff_url":"https://github.com/godotengine/godot/pull/49913.diff","patch_url":"https://github.com/godotengine/godot/pull/49913.patch","title":"Display time spent and ETA to editor progress dialogs","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-25T18:40:02Z","updated_at":"2021-08-06T11:24:32Z","body":"This is useful for long tasks such as lightmap baking.\r\n\r\nI worked on this on the `3.x` branch since I needed a long task to test it on, but I can remake this PR for the `master` branch once we agree on its design.\r\n\r\nI'll need some help improving the ETA calculations. While they work well for tasks that advance continuously, they're useless for tasks that have few long steps (such as the \"main\" tasks in the BakedLightmap progress dialog shown below, as opposed to the subtasks). Nonetheless, this is not critical for now as this PR already improves editor usability a bit.\r\n\r\n## Preview\r\n\r\nhttps://user-images.githubusercontent.com/180032/123471214-bb3d6980-d5f5-11eb-9cfb-fc1ee85baa5b.mp4","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":677404186,"public_id":49897,"url":"https://github.com/godotengine/godot/pull/49897","diff_url":"https://github.com/godotengine/godot/pull/49897.diff","patch_url":"https://github.com/godotengine/godot/pull/49897.patch","title":"Fix crash when writing $. in the editor","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-06-24T20:08:12Z","updated_at":"2021-08-06T11:10:16Z","body":"Fixes #49764 and fixes #50259\r\n\r\nWhen writing $. in the editor, the analyzer expect an expression like object.attribute, but in this case, object is $, which is a get_node on nothing, so converted to nullptr, making the base null.\r\nThis PR only adds a check on nullptr to avoid the crash.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":675339002,"public_id":49829,"url":"https://github.com/godotengine/godot/pull/49829","diff_url":"https://github.com/godotengine/godot/pull/49829.diff","patch_url":"https://github.com/godotengine/godot/pull/49829.patch","title":"[4.0] [iOS] Swift runtime support for iOS Plugins","state":"open","is_draft":false,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-06-22T11:38:04Z","updated_at":"2021-06-22T12:31:15Z","body":"Same as #49828 for `master` branch\r\n\r\n> Adds a `use_swift_runtime` key to iOS Plugin configuration in `[config]` section.\r\n> \r\n> This should allow to use Swift-based plugins without using custom export template or manually changing exported project. This also allows to use Swift runtime only when it's required by libraries/frameworks.\r\n> \r\n> Fixes https://github.com/godotengine/godot-proposals/issues/2895\r\n> Related issue https://github.com/godotengine/godot/pull/46683","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112910,4418518]},{"id":675338567,"public_id":49828,"url":"https://github.com/godotengine/godot/pull/49828","diff_url":"https://github.com/godotengine/godot/pull/49828.diff","patch_url":"https://github.com/godotengine/godot/pull/49828.patch","title":"[3.x] [iOS] Swift runtime support for iOS Plugins","state":"open","is_draft":false,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-06-22T11:37:25Z","updated_at":"2021-08-06T11:24:32Z","body":"Adds a `use_swift_runtime` key to iOS Plugin configuration in `[config]` section.\r\n\r\nThis should allow to use Swift-based plugins without using custom export template or manually changing exported project. This also allows to use Swift runtime only when it's required.\r\n\r\nRelated issue https://github.com/godotengine/godot/pull/46683","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112910,4418518]},{"id":675265893,"public_id":49827,"url":"https://github.com/godotengine/godot/pull/49827","diff_url":"https://github.com/godotengine/godot/pull/49827.diff","patch_url":"https://github.com/godotengine/godot/pull/49827.patch","title":"Rename OptionButton to DropDownList","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-06-22T09:57:09Z","updated_at":"2021-07-09T20:53:37Z","body":"As originally mentioned in #6558, the [`OptionButton`](https://docs.godotengine.org/en/stable/classes/class_optionbutton.html) is actually a [`Drop-Down List`](https://en.wikipedia.org/wiki/Drop-down_list).\r\n\r\nThis PR renames `OptionButton` to `DropDownList`.\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/1998\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4417819,4417868,4418424,4418542,4418550,4418563,4418605,4418733,4418923]},{"id":675094269,"public_id":49822,"url":"https://github.com/godotengine/godot/pull/49822","diff_url":"https://github.com/godotengine/godot/pull/49822.diff","patch_url":"https://github.com/godotengine/godot/pull/49822.patch","title":"Split tonemapper out of effects","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-06-22T05:42:30Z","updated_at":"2021-06-22T05:42:33Z","body":"Moved tonemap copy shader into its own object. Did this after discussing with @reduz as we will probably introduce a new version of this specific for the mobile renderer that uses subpasses. \r\n\r\nIt may be interesting to further split other effects into separate classes as well however we need to either come up with a nicer way to share some of the objects or accept some duplication of logic between the implementations. \r\n\r\nWe also likely will have to move the tonemapper out of storage and into the renderer itself and see if we can move the related logic into `RenderForwardClustered` and `RenderForwardMobile` so we can deviate the implementation for the mobile renderer. May postpone that to the PR that will introduce the subpass based solution.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":674989787,"public_id":49819,"url":"https://github.com/godotengine/godot/pull/49819","diff_url":"https://github.com/godotengine/godot/pull/49819.diff","patch_url":"https://github.com/godotengine/godot/pull/49819.patch","title":"Fix process mode update when mode owner is set to Inherit","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-06-22T00:51:36Z","updated_at":"2021-06-22T01:01:40Z","body":"When the process mode owner is the root and is set to `PROCESS_MODE_INHERIT`, the mode needs to be considered as the default (`PROCESS_MODE_PAUSABLE`) instead of making the node disabled.\r\n\r\nFixes #49818\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":674424793,"public_id":49793,"url":"https://github.com/godotengine/godot/pull/49793","diff_url":"https://github.com/godotengine/godot/pull/49793.diff","patch_url":"https://github.com/godotengine/godot/pull/49793.patch","title":"Expose `randfn` to global scope","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-06-21T10:23:26Z","updated_at":"2021-06-22T10:22:39Z","body":"I think it's not that bad to make it globally accessed as I did for `randi_range` previously simply for the user's comfortability.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417868,4418914]},{"id":674100572,"public_id":49775,"url":"https://github.com/godotengine/godot/pull/49775","diff_url":"https://github.com/godotengine/godot/pull/49775.diff","patch_url":"https://github.com/godotengine/godot/pull/49775.patch","title":"Faster CVTT","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-06-20T21:27:04Z","updated_at":"2021-07-10T16:28:27Z","body":"## Current and lowest quality (1 thread)\r\nRGBA    Max error: 57 RMSE: 0.85 PSNR 49.57 dB\r\nCVTT 1024x1024 total time: 1.55 secs\r\n## Previous and standard quality (1 thread)\r\nRGBA    Max error: 28 RMSE: 0.43 PSNR 55.53 dB\r\nCVTT 1024x1024 total time: 35.68 secs\r\n\r\n## Notes\r\n\r\n1. Update to latest CVTT\r\n2. Set bc7 quality to 0\r\n3. Set general quality to faster","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"},{"id":370471795,"name":"topic:thirdparty","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418424,4418518,4418914]},{"id":674058992,"public_id":49765,"url":"https://github.com/godotengine/godot/pull/49765","diff_url":"https://github.com/godotengine/godot/pull/49765.diff","patch_url":"https://github.com/godotengine/godot/pull/49765.patch","title":"Fix assignment with operator on type member","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-06-20T16:05:37Z","updated_at":"2021-08-21T20:05:37Z","body":"Fixes #49748 \r\n\r\nWhen assigning on the type member for instance transform.x += 1.0, the destination type is not guessed and the binary operation fails.\r\nThis change is made to guess the type before the binary operation, but I don't know if it could have some side effect.\r\n\r\nTested with the following script:\r\n\r\n\r\n```\r\nfunc _ready():\r\n\tvar vec2: Vector2 = Vector2()\r\n\tvec2.x = vec2.x + 1.0\r\n\tvec2.x -= 10.0\r\n\tprint(vec2.x)  # ----> print -9 OK\r\n\t\r\n\tvar a = 3\r\n\ta += 3\r\n\tprint(a)  # -----> print 6 OK\r\n\r\n```","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":674056589,"public_id":49763,"url":"https://github.com/godotengine/godot/pull/49763","diff_url":"https://github.com/godotengine/godot/pull/49763.diff","patch_url":"https://github.com/godotengine/godot/pull/49763.patch","title":"[3.x] Implement CameraServer on Windows","state":"open","is_draft":false,"authored_by":{"id":8124614,"user":"benjarmstrong","avater":"https://avatars.githubusercontent.com/u/8124614?v=4","url":"https://github.com/benjarmstrong"},"created_at":"2021-06-20T15:49:11Z","updated_at":"2021-08-15T20:03:09Z","body":"This PR implements webcam support on Windows via the Media Foundation API and partially solves [#46531](https://github.com/godotengine/godot/issues/46531).\r\n\r\nTested on both virtual and real cameras, compiled with both MSVC and MinGW/Linux. Supports hot-plugging and performs YUV to RGB conversion on the GPU (massive thanks to whoever wrote those shaders). \r\n\r\nThe actual code for acquiring/decoding/releasing streams has been tested thoroughly as I’ve been using it for a work project for a few weeks. The main issue is getting MinGW to compile and link with the Media Foundation libraries. I’ve got it to a point where it seems to build on MinGW W64 major version 5 and newer. The MinGW workarounds are as elegant as I could get them but they're still pretty ugly. I would appreciate any testing to find a MinGW version under which it breaks.\r\n\r\nI’m aware that there are currently other pull requests and forks for this, however they all convert YUV to RGB on the CPU (can't be used for higher resolutions), have no hot-plugging support and require MSVC to compile.\r\n\r\nI understand PRs should generally be for the master branch and cherry-picked, but I checked quite recently and a lot of the CameraServer implementation in master was missing due to 4.0 refactoring. If the CameraFeed methods stay the same in 4.0, this should be trivial to bring port to it. \r\n\r\nSome things I’m not entirely sure about:\r\n- CameraFeed instances “prefer” to select a resolution around 4096 by 4096, but will ultimately use the nearest resolution supported by the device. I chose this value because there doesn’t appear to be a webcam that goes beyond that resolution. My implementation assumes we want the highest resolution up to (and around) 4K. Thoughts?\r\n- CameraServer gets a virtual update_feeds method that is called from OS_Windows for hot-plugging. This new virtual method means the camera module can still be disabled if the developer chooses. I’m not sure if this was the best way to implement this from a design perspective.\r\n- CameraFeed instances always have their position set to unspecified (not front or back). I assumed camera position is irrelevant on a desktop OS.\r\n- Supports Cameras with drivers that output in either RGB, RGBA, NV12 or YUY2. I'd like to know if anyone can find a camera that doesn't output to any of those formats.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112906,3388402]},{"id":674007780,"public_id":49756,"url":"https://github.com/godotengine/godot/pull/49756","diff_url":"https://github.com/godotengine/godot/pull/49756.diff","patch_url":"https://github.com/godotengine/godot/pull/49756.patch","title":"Move the Android \"clear previous install\" setting to Editor Settings","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-20T10:03:48Z","updated_at":"2021-08-16T04:00:19Z","body":"This means the setting now applies to every project deployed from the editor, rather than being per-export preset.\n\nThis closes https://github.com/godotengine/godot-proposals/issues/2892.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":673855328,"public_id":49738,"url":"https://github.com/godotengine/godot/pull/49738","diff_url":"https://github.com/godotengine/godot/pull/49738.diff","patch_url":"https://github.com/godotengine/godot/pull/49738.patch","title":"Compute SSAO and GI at half resolution by default","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-19T09:57:59Z","updated_at":"2021-08-08T15:30:16Z","body":"Follow-up to https://github.com/godotengine/godot/pull/49736 (can be merged independently).\r\n\r\nThis provides a significant speedup for a small quality loss.\r\n\r\nThe quality loss is generally more noticeable during a project's early stages of development (e.g. in level blockouts) than it is in a finished project.\r\n\r\nSome added rationale:\r\n\r\n- People with low-end or even mid-range GPUs may not know *why* an effect is slow, so it's better to default to a lower quality version that can reasonably run on such GPUs.\r\n- People with high-end GPUs will generally figure out how to increase graphics settings.\r\n  - Eventually, [automatic graphics quality adjustment](https://github.com/godotengine/godot-proposals/issues/2183) could be used, but I think it's better to err on the side of caution from now.\r\n- With the current GPU shortages, most people will not be able to upgrade their GPU until after Godot 4.0 is released. Some people will also have to \"downgrade\" their GPU due to their current GPU calling it quits and having to replace it with a much slower option (integrated graphics or low-end dedicated GPU).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":673853135,"public_id":49736,"url":"https://github.com/godotengine/godot/pull/49736","diff_url":"https://github.com/godotengine/godot/pull/49736.diff","patch_url":"https://github.com/godotengine/godot/pull/49736.patch","title":"Tweak the editor environment defaults and its interface","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-19T09:38:53Z","updated_at":"2021-06-21T13:25:17Z","body":"- Enable SSAO by default for better visual quality.\r\n- Set the default tonemap whitepoint to 6 to make filmic tonemapping less bright and blown out. Linear tonemapping is unaffected.\r\n- Add tooltips to post-process buttons to explain what they do and how they work.\r\n- Rename Tonemap button to Filmic Tonemap to better explain its effect when enabled.\r\n- Reorder post-process buttons from least to most expensive.\r\n- Decrease the maximum shadow distance for the default sun to improve shadow texel density. It's now the same as the DirectionalLight3D node's default value (100).\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/122638165-ef46f500-d0f2-11eb-8c08-c4dd1ad82924.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":673833676,"public_id":49730,"url":"https://github.com/godotengine/godot/pull/49730","diff_url":"https://github.com/godotengine/godot/pull/49730.diff","patch_url":"https://github.com/godotengine/godot/pull/49730.patch","title":"Decrease the default number of rings in CylinderMesh to 0","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-19T06:50:24Z","updated_at":"2021-08-16T10:44:40Z","body":"Follow-up to https://github.com/godotengine/godot/pull/49729.\r\n\r\nSubdividing a CylinderMesh is only needed when deforming it in a shader. The new default rings value decreases the triangle count for a CylinderMesh by a factor of 5.\r\n\r\nThe property hint was also tweaked to allow setting the number of rings to 0, which is a valid value.\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n![Subdivided cylinder](https://user-images.githubusercontent.com/180032/122633979-bea79100-d0db-11eb-98e2-7b746f1d8071.png)\r\n\r\n### After\r\n\r\n![Non-subdivided cylinder](https://user-images.githubusercontent.com/180032/122633978-be0efa80-d0db-11eb-97ad-90a3ef09e7cd.png)\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":673832272,"public_id":49729,"url":"https://github.com/godotengine/godot/pull/49729","diff_url":"https://github.com/godotengine/godot/pull/49729.diff","patch_url":"https://github.com/godotengine/godot/pull/49729.patch","title":"Tweak CSG shape defaults for consistency with primitive meshes","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-19T06:37:34Z","updated_at":"2021-08-16T04:02:53Z","body":"- Increase the default level of detail (but not too much since updating CSG is expensive).\r\n\r\n## Preview\r\n\r\n*MeshInstances on the front, CSG nodes on the back.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/122633579-9f0f6900-d0d9-11eb-884c-7ca0679e4ac1.png)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":673828296,"public_id":49727,"url":"https://github.com/godotengine/godot/pull/49727","diff_url":"https://github.com/godotengine/godot/pull/49727.diff","patch_url":"https://github.com/godotengine/godot/pull/49727.patch","title":"Improve undo log messages throughout the editor for additional context","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-19T05:58:42Z","updated_at":"2021-07-08T10:56:11Z","body":"Follow-up to https://github.com/godotengine/godot/pull/42229.\r\n\r\nNote that unlike https://github.com/godotengine/godot/pull/42229, many of these messages also display the *old* values (e.g. `Rename Animation from \"run\" to \"running\"`). While this gives even more context in the undo log, it can look a bit verbose at times, so I'm not sure if it's a good idea. Feel free to chime in on this :slightly_smiling_face:\r\n\r\nI've done some testing to make sure this doesn't break anything. Most notably, I had to back away from improving the array editor/dictionary editor/inspector undo messages because merging relies on the string being constant.\r\n\r\nSince this PR modifies a lot of messages, it would have to be remade manually for the `3.x` branch once we reach an agreement on this one.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3377457,4417819,4418380,4418542,4418550,4418563,4418726]},{"id":673782698,"public_id":49722,"url":"https://github.com/godotengine/godot/pull/49722","diff_url":"https://github.com/godotengine/godot/pull/49722.diff","patch_url":"https://github.com/godotengine/godot/pull/49722.patch","title":"Automatic `GraphEdit` node connection hot zone height 2","state":"open","is_draft":true,"authored_by":{"id":6329420,"user":"Ansraer","avater":"https://avatars.githubusercontent.com/u/6329420?v=4","url":"https://github.com/Ansraer"},"created_at":"2021-06-18T23:42:42Z","updated_at":"2021-06-19T19:44:24Z","body":"The graph editor in 4.0 has a too-small hot zone for connecting graph nodes, which can make snapping unintuitive. This PR changes how hot zones are calculated and now automatically sets their height based on the accompanying UI elements instead of using a constant.\r\n\r\nred is what we currently have, green is what I am proposing:\r\n![image](https://user-images.githubusercontent.com/6329420/122623745-9a2cc400-d09d-11eb-90c3-ddcecab70642.png)\r\n\r\nHowever, this PR exacerbates another problem with the `GraphEditor`: When the input is filtered it doesn't take child nodes into consideration, which means that hot zones can block the user from editing fields below them. To fix this we would need to pass the mouse down event to the children first before the GraphEditor handles it, and I have no clue how to properly do that.\r\nWould appreciate it if someone could help me with this. Perhaps I am missing something obvious.\r\n\r\nThis PR superseeds #49705, for more information please see godotengine/godot-proposals#2790.\r\n\r\n\r\n## TODO\r\n\r\n- [ ] figure out how to handle overlapping hot zones and input field ui elements\r\n\t- if impossible just use differents hot zones for drag and drop.\r\n- [ ] add highlights to connections on hover","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":673498583,"public_id":49708,"url":"https://github.com/godotengine/godot/pull/49708","diff_url":"https://github.com/godotengine/godot/pull/49708.diff","patch_url":"https://github.com/godotengine/godot/pull/49708.patch","title":"Update editor description property flag","state":"open","is_draft":false,"authored_by":{"id":80655527,"user":"megalobyte","avater":"https://avatars.githubusercontent.com/u/80655527?v=4","url":"https://github.com/megalobyte"},"created_at":"2021-06-18T13:58:26Z","updated_at":"2021-06-18T20:33:16Z","body":"Fixes #49648\r\n\r\nI updated the property flag for `editor_description` to be the same as `text` from `Label`. It fixed the problem, but maybe it's not a valid flag to use? \r\n\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":671741995,"public_id":49664,"url":"https://github.com/godotengine/godot/pull/49664","diff_url":"https://github.com/godotengine/godot/pull/49664.diff","patch_url":"https://github.com/godotengine/godot/pull/49664.patch","title":"Fix loading packed scene with editable children at runtime","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-06-16T17:59:08Z","updated_at":"2021-06-29T10:46:20Z","body":"Fixes #49660\r\n\r\nAt runtime, packed scenes with nodes marked as editable instance where saved with node type tags, which prevented the scene to be then loaded as an instance, causing duplicated nodes in the tree.\r\n\r\nThis change ensures nodes marked as editable instances and their owned children are properly set as instances.\r\n\r\nThat doesn't make a difference in the editor, since such nodes where already set as instances based on their instance state, but it helps at runtime where instance states are disabled.\r\n\r\nCredits to @latorril for finding the issue and investigating the cause.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":671713620,"public_id":49662,"url":"https://github.com/godotengine/godot/pull/49662","diff_url":"https://github.com/godotengine/godot/pull/49662.diff","patch_url":"https://github.com/godotengine/godot/pull/49662.patch","title":"[3.x] Clarify docs of Transform.xform_inv, Transform2D.xform_inv","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-06-16T17:32:02Z","updated_at":"2021-08-06T11:24:32Z","body":"Related issue: #39433.\r\n`3.x` only since `xform_inv()` is no longer documented (and binded/exposed?) in the `master` (probably because of favoring multiplying operators).\r\nCherry-pickable for `3.3`.","target_branch":"3.x","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":671016083,"public_id":49645,"url":"https://github.com/godotengine/godot/pull/49645","diff_url":"https://github.com/godotengine/godot/pull/49645.diff","patch_url":"https://github.com/godotengine/godot/pull/49645.patch","title":"Use ThorVG instead of NanoSVG for importing SVGs","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-06-16T05:07:36Z","updated_at":"2021-08-17T00:33:35Z","body":"ThorVG is a platform-independent portable library for drawing vector-based scene and animation.\r\n\r\nAlternative to https://github.com/godotengine/godot/pull/49601.\r\n\r\nAs discussed with @Calinou we should probably move the light to dark icons code out of svg import. The light to dark icons code is disabled.\r\n\r\nhttps://github.com/Samsung/thorvg\r\n\r\nFixes: https://github.com/godotengine/godot/issues/49205\r\nFixes: https://github.com/godotengine/godot/issues/16180 (Due to increased support we are able to resolve SVG issues better).\r\nFixes: https://github.com/godotengine/godot/issues/33641 (Changing SVG libraries replaces old bugs with new bugs.)\r\nFixes: https://github.com/godotengine/godot/issues/41339 (Via https://github.com/Samsung/thorvg/pull/530)\r\nFixes: https://github.com/godotengine/godot/issues/51763 ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":669853124,"public_id":49610,"url":"https://github.com/godotengine/godot/pull/49610","diff_url":"https://github.com/godotengine/godot/pull/49610.diff","patch_url":"https://github.com/godotengine/godot/pull/49610.patch","title":"Proper support for custom mass properties in 2D/3D physics bodies","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-06-14T20:30:56Z","updated_at":"2021-06-14T21:08:30Z","body":"**Default center of mass in 2D:**\r\nCompute center of mass based on shapes by default in 2D, same as in 3D.\r\nThis change breaks compatibility because it was always using the center of the body before, although in common cases the computed center of mass is still going to be at the center.\r\n\r\n**Custom center of mass:**\r\nCan be set through the physics server using:\r\n`PhysicsServer2D.body_set_param(get_rid(), PhysicsServer2D.BODY_PARAM_CENTER_OF_MASS, center_of_mass)`\r\nCan be reset through the physics server using:\r\n`PhysicsServer2D.body_reset_mass_properties(get_rid())`\r\n\r\n3D uses a similar API.\r\n\r\n**Custom inertia:**\r\nCan be set through the physics server using:\r\n`PhysicsServer2D.body_set_param(get_rid(), PhysicsServer2D.BODY_PARAM_INERTIA, inertia)`\r\nCan be reset through the physics server using:\r\n`PhysicsServer2D.body_reset_mass_properties(get_rid())`\r\nCan be also set on rigid body nodes through the `inertia` property, with 0 meaning default calculated inertia.\r\n\r\n3D has a similar API, although it's also possible to setup a custom inertia on specific axes, and set the other ones to 0 in order to keep the default computation. That's useful to make a body rotate more or less easily on a specific axis, without affecting other axes.\r\n\r\n**Full list of changes:**\r\n-Added support for custom inertia and center of mass in 3D\r\n-Added support for custom center of mass in 2D\r\n-Calculated center of mass from shapes in 2D (same as in 3D)\r\n-Updated forces and joints to use center of mass in 2D\r\n-Fixed mass properties calculation with disabled shapes in 2D/3D\r\n-Removed `first_integration` which is not used in 2D and doesn't seem to make a lot of sense (prevents omit_force_integration to work during the first frame)\r\n-Support for custom inertia on different axes for `RigidBody3D`\r\n-`mass` property uses a more reasonable slider range by default (max 1000), with the possibility to set higher values\r\n\r\nCloses #https://github.com/godotengine/godot-proposals/issues/945\r\nFixes #12353\r\nSupersedes #29867\r\nAddresses issue from https://github.com/godotengine/godot/pull/49185#pullrequestreview-671757775","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777,4418718,4418726]},{"id":669830128,"public_id":49609,"url":"https://github.com/godotengine/godot/pull/49609","diff_url":"https://github.com/godotengine/godot/pull/49609.diff","patch_url":"https://github.com/godotengine/godot/pull/49609.patch","title":"[android] Added pressure support for stylus.","state":"open","is_draft":false,"authored_by":{"id":11978847,"user":"ModProg","avater":"https://avatars.githubusercontent.com/u/11978847?v=4","url":"https://github.com/ModProg"},"created_at":"2021-06-14T19:49:32Z","updated_at":"2021-08-16T15:41:40Z","body":"Fixes godotengine/godot-proposals#735 for android.\r\n\r\nI verified that this works on [3.2.2](https://github.com/ModProg/godot/tree/android-stylus-support) and builds for master,\r\nas I was not able to run the master godot engine.\r\n\r\nThere are no tests as I didn't find anything about tests for android.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":890310664,"name":"topic:input","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112909]},{"id":669718383,"public_id":49605,"url":"https://github.com/godotengine/godot/pull/49605","diff_url":"https://github.com/godotengine/godot/pull/49605.diff","patch_url":"https://github.com/godotengine/godot/pull/49605.patch","title":"Wrote JNISingleton docs","state":"open","is_draft":false,"authored_by":{"id":57882701,"user":"likeich","avater":"https://avatars.githubusercontent.com/u/57882701?v=4","url":"https://github.com/likeich"},"created_at":"2021-06-14T16:45:20Z","updated_at":"2021-06-14T17:45:47Z","body":"I added a few descriptions and links to the empty JNISingleton class doc.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":669627171,"public_id":49602,"url":"https://github.com/godotengine/godot/pull/49602","diff_url":"https://github.com/godotengine/godot/pull/49602.diff","patch_url":"https://github.com/godotengine/godot/pull/49602.patch","title":"Added create folder button to project imports","state":"open","is_draft":false,"authored_by":{"id":57882701,"user":"likeich","avater":"https://avatars.githubusercontent.com/u/57882701?v=4","url":"https://github.com/likeich"},"created_at":"2021-06-14T14:41:40Z","updated_at":"2021-06-14T16:20:25Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/2754\r\n\r\nThis adds a \"create folder\" button to the import project window in the project manager as described in the linked proposal.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":669551691,"public_id":49598,"url":"https://github.com/godotengine/godot/pull/49598","diff_url":"https://github.com/godotengine/godot/pull/49598.diff","patch_url":"https://github.com/godotengine/godot/pull/49598.patch","title":"Improve the generated ZIP archive name when using Download Project Source","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-14T13:08:03Z","updated_at":"2021-08-17T10:32:19Z","body":"`master` version of https://github.com/godotengine/godot/pull/49597.\r\n\r\nThis makes for easier organization since downloading a project several times (or several different projects) will result in more meaningful file names.\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":669549664,"public_id":49597,"url":"https://github.com/godotengine/godot/pull/49597","diff_url":"https://github.com/godotengine/godot/pull/49597.diff","patch_url":"https://github.com/godotengine/godot/pull/49597.patch","title":"Improve the generated ZIP archive name when using Download Project Source (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-14T13:05:32Z","updated_at":"2021-08-16T16:33:40Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/49598.\r\n\r\nThis makes for easier organization since downloading a project several times (or several different projects) will result in more meaningful file names.\r\n\r\nI haven't been able to test this (not even with a HTTPS-enabled local web server), so someone else will have to test it before this can be merged.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112912]},{"id":668919883,"public_id":49540,"url":"https://github.com/godotengine/godot/pull/49540","diff_url":"https://github.com/godotengine/godot/pull/49540.diff","patch_url":"https://github.com/godotengine/godot/pull/49540.patch","title":"Hide unsupported features in the web editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-12T17:38:06Z","updated_at":"2021-08-16T04:08:12Z","body":"The game camera override button is disabled with a tooltip explaining why, but other menu options are hidden entirely to prevent them from being listed in the list of available editor shortcuts.\n\nThis pull request can be remade on the `3.x` branch once we agree on its design.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":668730776,"public_id":49525,"url":"https://github.com/godotengine/godot/pull/49525","diff_url":"https://github.com/godotengine/godot/pull/49525.diff","patch_url":"https://github.com/godotengine/godot/pull/49525.patch","title":"Document editor export presets in the class reference","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-12T03:24:31Z","updated_at":"2021-06-12T03:26:22Z","body":"The documentation appears as tooltips when hovering options in export presets.\r\n\r\nThis PR can be remade for the `3.x` branch once we reach an agreement on its design.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1955. See also https://github.com/godotengine/godot/pull/48548 and https://github.com/godotengine/godot/pull/49524 (can be merged independently).\r\n\r\n## Preview\r\n\r\n*Disregard the black text – it's not a bug related to this PR.*\r\n\r\n![Tooltip](https://user-images.githubusercontent.com/180032/121763733-9e595e80-cb3e-11eb-8c03-8598626d6e2a.png)\r\n\r\n## TODO\r\n\r\n- [ ] Only one export platform is present in the documentation right now. Generate the XML for all other export platforms.\r\n- [ ] Write documentation for all export platforms.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":668721137,"public_id":49524,"url":"https://github.com/godotengine/godot/pull/49524","diff_url":"https://github.com/godotengine/godot/pull/49524.diff","patch_url":"https://github.com/godotengine/godot/pull/49524.patch","title":"Document editor import options in the class reference","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-12T02:57:29Z","updated_at":"2021-06-12T03:24:39Z","body":"Tooltips are displayed when hovering import options, both in the Import dock and in the import defaults editor (which is in the Project Settings).\r\n\r\nThis PR can be remade for the `3.x` branch once we reach an agreement on its design.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2041. See also https://github.com/godotengine/godot/pull/48548 and #49525 (can be merged independently).\r\n\r\n## Preview\r\n\r\n*Disregard the black text – it's not a bug related to this PR.*\r\n\r\n### Import dock\r\n\r\n![Import dock](https://user-images.githubusercontent.com/180032/121763242-c2b33c00-cb3a-11eb-8d27-df3f5075abd2.png)\r\n\r\n### Import defaults editor\r\n\r\n![Import defaults editor](https://user-images.githubusercontent.com/180032/121763241-c21aa580-cb3a-11eb-8315-90ef9e028821.png)\r\n\r\n## TODO\r\n\r\n- [ ] Only one importer is present in the documentation right now. Add the rest of the importers.\r\n- [ ] Write documentation for all importers.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":668190752,"public_id":49513,"url":"https://github.com/godotengine/godot/pull/49513","diff_url":"https://github.com/godotengine/godot/pull/49513.diff","patch_url":"https://github.com/godotengine/godot/pull/49513.patch","title":"Remove unused `caret_background_color` theme item from TextEdit","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-11T14:07:49Z","updated_at":"2021-06-15T13:00:53Z","body":"This color wasn't used anywhere.\r\n\r\nSince this is a theme item (and not a property), removing it shouldn't break existing any projects, so we can probably cherry-pick this for `3.4`. This would also be useful to remove the associated editor setting which does nothing.\r\n\r\nI found this out while working on https://github.com/godotengine/godot/pull/48548.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":668105537,"public_id":49510,"url":"https://github.com/godotengine/godot/pull/49510","diff_url":"https://github.com/godotengine/godot/pull/49510.diff","patch_url":"https://github.com/godotengine/godot/pull/49510.patch","title":"Move render tree BVH frame update to occur in viewport draw","state":"open","is_draft":true,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2021-06-11T12:43:35Z","updated_at":"2021-08-06T11:24:32Z","body":"Moves the render tree bvh update from `VisualServerScene::update_dirty_instances` to `VisualServerViewport::draw_viewports`. It is more clear that the scenario should be valid at this point (as the scenario is stored on the viewport), and this ensures update is called once per viewport draw, rather than possibly several times per frame in update_dirty_instances.\r\n\r\nMay help with #48749, #48790\r\n\r\nI wouldn't suggest necessarily merging this straight away, but it will be good to have available for the artefacts for testing if we get anyone else who can replicate the above bugs.\r\n\r\n## Notes\r\n* I had been meaning to change the location of the render tree bvh update for a while, I tried it in #45311, but had to revert it in #45335 because that method was not sound\r\n* The scenarios are usually created in Worlds, and even if not, they seem tightly bound to Viewports, so it seems to make sense to access the scenario for the update from Viewport (there is no other obvious list, the `scenario_owner` does not provide facilities for iterating the scenarios in Godot 3.x)\r\n* There is a possibility that some of the bugs seen above are similar in nature to #44973 in Godot 4, which we tracked down to a problem of using scenarios after they had been freed. The same thing is theoretically possible in Godot 3, although perhaps less likely. The previous method of getting the scenario from instances assumes that the scenario is valid - however instances linked to the scenario do seem to get deleted with the scenario, so it may not be a problem in practice.\r\n* This will probably result in less calls to update (which is good), it does however move the point in the code where collision callbacks can occur, which may or may not be a good thing, so this would need to be extensively tested in betas. If there are problems having the collision check here, another possibility is to separate the update call into two - the trickle optimization of the tree, and the collision check.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":667606738,"public_id":49501,"url":"https://github.com/godotengine/godot/pull/49501","diff_url":"https://github.com/godotengine/godot/pull/49501.diff","patch_url":"https://github.com/godotengine/godot/pull/49501.patch","title":"[WIP] Fix RID get_ptr_by_index access to freed objects","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2021-06-11T02:37:19Z","updated_at":"2021-06-11T09:35:40Z","body":"RID_Alloc get_ptr_by_index was allowing access to objects that had previously been freed, causing crashes in the BVH.\r\n\r\nThis PR changes the function to iterate by allocation id rather than index, and provides protection against access to freed allocations.\r\n\r\nFixes #44973\r\n\r\n## Notes\r\n* Thanks to extensive debugging by @pouleyKetchoupp the issue was tracked down to access to freed memory\r\n* This is a rough PR for discussion as I need to check it with pouley and reduz, and reduz may want to make / decide on the final PR. In particular I'm unsure whether the `validator_chunks` index used should be `p_index` or `idx`, I'm just guessing by reverse engineering the existing code.\r\n* There are probably multiple ways of fixing this.\r\n* Let me know of preferences for different names for functions etc.\r\n\r\n## Update\r\nThis version is changed to iterate through the list by allocation ID rather than `index` .. it doesn't matter the order for the BVH, and I suspect the `index` is semi random anyway, and iterating by `alloc_id` is more efficient and simpler.\r\n\r\nWhile we could just check for nullptr and access up to `max_alloc` sequentially, it is inefficient if there are a lot of invalid allocations in the list, because of the spinlock .. so I'm trying a single function to move an iterator on to the next valid `alloc_id`.\r\n\r\n* We can alternatively iterate by `index` if desired, it isn't hugely different.\r\n* The other alternative is to maintain a separate list of used elements, similar to the free list, but this may be overkill for the use case (although we should consider whether this would be generally useful functionality for RID_PtrOwners).\r\n* Note that this implementation does a fair amount of naive silliness compared to having a `used_list`, like if there are 512 members in the scenario minimum chunk size, it will iterate through all 512, even if only 1 is active.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418914]},{"id":667142154,"public_id":49495,"url":"https://github.com/godotengine/godot/pull/49495","diff_url":"https://github.com/godotengine/godot/pull/49495.diff","patch_url":"https://github.com/godotengine/godot/pull/49495.patch","title":"[3.x] AnimatedSprite Fix updating inspector when SpriteFrames is modified","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-06-10T17:51:59Z","updated_at":"2021-08-06T11:24:32Z","body":"\r\n\r\n\r\n\r\n(needs a separate `master` version due to #45879; for the same reason some issues fixed here might already be non-existent in the `master`; haven't checked none of these)\r\n\r\nMakes creating / renaming / deleting animations in the `SpriteFramesEditorPlugin` properly update properties of the `AnimatedSprite` in the inspector (mainly options in the animation dropdown). Removing current animation of the `AnimatedSprite` will make the first (after removal) animation left be selected as the new current animation (if no animation would be left then nothing will be done from the inspector point of view). \r\n\r\n\r\nReverts #27254 but keeps #26381 being fixed.\r\nFixes #44438.\r\nFixes #46741.\r\nFixes #28658, fixes #40263 (these look like duplicates).\r\n\r\nRemoves unused `SpriteFrames::_get_animation_list()` method.\r\n\r\nAfter reverting #27254 newly created animation is no longer automatically set as the current animation of the `AnimatedSprite`/`AnimatedSprite3D` being edited. Should the current behavior be preserved (assigning it automatically)?\r\n\r\n\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418718]},{"id":666996951,"public_id":49490,"url":"https://github.com/godotengine/godot/pull/49490","diff_url":"https://github.com/godotengine/godot/pull/49490.diff","patch_url":"https://github.com/godotengine/godot/pull/49490.patch","title":"Replace render tree bvh with version from 3.x","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2021-06-10T15:20:43Z","updated_at":"2021-08-13T14:46:42Z","body":"Some modifications of the collision routines to allow it to work more efficiently with the template callback mechanism of the old dynamic_bvh API.\r\n\r\nThis adds a new wrapper `BVH_Simple` for a front end of this simplified version for the render tree compared to the `BVH_Manager` (which creates the full pairing version, which is used in the physics and also Godot 3).\r\n\r\n## Notes\r\n* This should hopefully be a pretty smooth changeover, as the BVH is already pretty tested, the only change is the new simple interface, and mechanism for callbacks used in Godot 4, and hopefully any bugs in this should be easily fixed. \r\n* It turns out Godot 4 doesn't use the BVH for frustum culling so I've tried to test as best I can.\r\n* There's still some unnecessary data being stored in the simple BVH that was to do with pairing. I can try and figure out a way to compile this out, it's not strictly necessary to get started though, it should just improve performance / memory use a tad in extreme cases.\r\n* I'm kind of torn about whether to cover both collision paths in the same code (as this does) or separate them out to neaten things. As there still may be a bug in the BVH (#48749, #48790) there is an argument to making sure that is fixed, before separating them out for greater readability - it's a little bit more ugly than it could be at the moment, but this may be temporary.\r\n* I've tried to check the performance of the existing physics and the changes supporting both paths do seem to be optimized out as far as I can see.\r\n\r\nFeel free to try this out and let me know bugs.\r\n\r\nPerformance wise I don't have a good test case yet, because Godot 4 isn't typically making many BVH tests, so I've only been able to compare the general tree updating. The updates alone for 10,000-20,000 spinning boxes seem to give me a frame rate about 1.5-2x faster than the old version. But as ever I emphasise the changes are primarily for stability rather than performance (render tree is unlikely to be a major bottleneck in most games).\r\n\r\nI tried the examples in godot-benchmarks repository, but I'm not sure they really stress the bvh, and the results weren't very repeatable when I tried them, making them a bit harder to interpret. In general spinning a bunch of objects on a central axis is a good test of spatial partitioning because it forces continuous rebuilding the tree, and this is the test that I quoted above which seems faster.\r\n\r\nI did still notice this bug occurred #44973 even with the new bvh, but it turns out on investigation the problem isn't in the bvh, but in the visual server, and we have some fixes in the works so that shouldn't hopefully be a problem much longer.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4417777,4418914]},{"id":666909441,"public_id":49488,"url":"https://github.com/godotengine/godot/pull/49488","diff_url":"https://github.com/godotengine/godot/pull/49488.diff","patch_url":"https://github.com/godotengine/godot/pull/49488.patch","title":"SpriteFramesEditor Add animation searchbox","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-06-10T13:46:36Z","updated_at":"2021-06-10T15:34:40Z","body":"`master` version of #49255. Didn't test this port.\r\nCloses godotengine/godot-proposals#2681.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":666851684,"public_id":49485,"url":"https://github.com/godotengine/godot/pull/49485","diff_url":"https://github.com/godotengine/godot/pull/49485.diff","patch_url":"https://github.com/godotengine/godot/pull/49485.patch","title":"Added support for uniform arrays in shaders","state":"open","is_draft":true,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2021-06-10T12:40:36Z","updated_at":"2021-08-11T08:26:30Z","body":"A draft pull request which intended to add support for uniform arrays to shaders and should fix https://github.com/godotengine/godot-proposals/issues/931\r\n\r\nCurrently, this adds support only for scalar shader types like float, vec* or mat*. Support for texture samplers will be later.\r\n![image](https://user-images.githubusercontent.com/3036176/121525282-d064a680-ca00-11eb-82df-4b4dca05248f.png)\r\n\r\nI'm not sure whether I did everything correct - especially about offsets of binding of array uniforms in the renderer. There are some bugs that lead to the shader crash which I should fix somehow. Anyway, if this PR is not correct - it can be salvageable by the user with more experience in rendering than me (the part about shader editor is fully complete).\r\n","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":666406905,"public_id":49473,"url":"https://github.com/godotengine/godot/pull/49473","diff_url":"https://github.com/godotengine/godot/pull/49473.diff","patch_url":"https://github.com/godotengine/godot/pull/49473.patch","title":"Fix auto reload scripts on external change","state":"open","is_draft":false,"authored_by":{"id":32113038,"user":"cptchuckles","avater":"https://avatars.githubusercontent.com/u/32113038?v=4","url":"https://github.com/cptchuckles"},"created_at":"2021-06-10T00:41:50Z","updated_at":"2021-07-02T21:00:03Z","body":"Fixes issue #49298","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418914]},{"id":666393599,"public_id":49471,"url":"https://github.com/godotengine/godot/pull/49471","diff_url":"https://github.com/godotengine/godot/pull/49471.diff","patch_url":"https://github.com/godotengine/godot/pull/49471.patch","title":"Clean physics direct body state usage in 2D and 3D physics","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-06-10T00:06:25Z","updated_at":"2021-06-10T00:21:26Z","body":"Follow-up changes after https://github.com/godotengine/godot/pull/42928#issuecomment-757061748.\r\n\r\nAfter investigation, `PhysicsDirectBodyState2D` and `PhysicsDirectBodyState3D` can't be removed completely because they allow users to do many different things in an efficient way that can't be easily replaced with a callback. But this PR simplifies the way it's used for physics nodes and ensures that it can be used for multiples bodies.\r\n\r\nFixes #42877.\r\nSupersedes #42928.\r\n\r\nList of changes:\r\n-Use a C++ callback instead of Callable for synchronizing physics nodes' state with physics servers.\r\n-Remove usage of PhysicsDirectBodyState in physics nodes when not necessary.\r\n-Store PhysicsDirectBodyState for bodies individually instead of a singleton to avoid issues when accessing direct body state for multiple bodies.\r\n-PhysicsDirectBodyState is initialized only when needed, so it doesn't have to be created when using the physics server directly.\r\n-Move PhysicsDirectBodyState2D and PhysicsDirectBodyState3D to separate cpp files.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777,4418718,4418726]},{"id":666251207,"public_id":49469,"url":"https://github.com/godotengine/godot/pull/49469","diff_url":"https://github.com/godotengine/godot/pull/49469.diff","patch_url":"https://github.com/godotengine/godot/pull/49469.patch","title":"Make sure Variant is not implicitely cast when using operator[]","state":"open","is_draft":false,"authored_by":{"id":6093119,"user":"groud","avater":"https://avatars.githubusercontent.com/u/6093119?v=4","url":"https://github.com/groud"},"created_at":"2021-06-09T19:29:50Z","updated_at":"2021-07-18T17:45:15Z","body":"Without this change, doing something like:\r\n```\r\nVariant test;\r\nprint_line(test[\"test\"]);\r\n```\r\ncould compile fine in C++. \r\n\r\nIn this case, `test` Variant would be implicitly cast to `int64_t`, which would fail, and thus lead to an int64_t of value 0. This means that print_line would print `0[\"test\"]`, which is equivalent to `\"test\"[0]`, which itself is equivalent to the character 't'.\r\nConsequently, those two lines would compile fine and print 116, the decimal ASCII value of the 't' character.\r\n\r\nAs you can imagine, I spent some time trying to understand what was happening... (thanks @JFonS for the explanation).\r\nTo avoid the compiler to accept such lines of code, @hpvb suggested these changes. They seem to fix the problem as my compiler now throws this error:\r\n![2021-06-09-212212_996x46_scrot](https://user-images.githubusercontent.com/6093119/121416177-ca22eb80-c968-11eb-9fb9-9f49b78dc177.png)\r\n\r\nAnd even if the operator is not ambiguous (with `test[Variant(\"test\")]`) it still fails at compile time:\r\n![2021-06-09-212337_865x36_scrot](https://user-images.githubusercontent.com/6093119/121416338-fccce400-c968-11eb-9bc8-a4e43cfa45db.png)\r\n\r\nSo yeah, it solves the issue pretty well.\r\n\r\nOf course, @hpvb, I added you as co-author.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":666155928,"public_id":49467,"url":"https://github.com/godotengine/godot/pull/49467","diff_url":"https://github.com/godotengine/godot/pull/49467.diff","patch_url":"https://github.com/godotengine/godot/pull/49467.patch","title":"Don't terminate library if other `GDNative`s are still using it","state":"open","is_draft":false,"authored_by":{"id":2176843,"user":"Waridley","avater":"https://avatars.githubusercontent.com/u/2176843?v=4","url":"https://github.com/Waridley"},"created_at":"2021-06-09T18:09:32Z","updated_at":"2021-08-06T11:24:32Z","body":"This PR is being made directly to 3.x because there are apparently so many massive changes to GDNative coming in 4.0 that I have no way to test this or even know if it will be relevant to 4.0. \r\n\r\nIf a GDNative library is marked as reloadable, `GDNative::terminate()` checks `GDNativeLibrary::loaded_libraries` to see if any other `GDNative` objects are currently using the library before actually closing it, but they weren't actually being added to the list beyond the first one.\r\n\r\nNow that `NativeScriptLanguage::unregister_script()` calls `GDNative::terminate()` when `NativeScript`s are left referencing the library (introduced by hot-reloading in https://github.com/godotengine/godot/commit/311ca0c6f23784dfa831d8f058a335f698dcc5ea), this means that libraries can be terminated out from under `GDNative` objects just by freeing an object that happens to hold the last `NativeScript` using a library.\r\n\r\nThis could happen previously by creating two `GDNative` objects referencing the same library, and then terminating one of them, but now it's relevant to the more widely-used `NativeScript`s as well. This is still a relatively rare scenario, using the same library for both a basic `GDNative` object *and* creating `NativeScript`s from it, but this is exactly what the godot-rust tests do to verify that the bindings work both with and without `NativeScript` functionality. \r\n\r\nThere is one issue with this fix, which makes it technically a breaking change: without this fix, dropping the last `NativeScript` terminates the library, and creating a new one would re-initialize it; while with this fix, `godot_nativescript_init` can end up being called multiple times without terminating the library. Since there is no `godot_nativescript_terminate` counterpart, libraries have no way of knowing that they can do any `NativeScript`-related cleanup until `godot_gdnative_terminate` is called. However, if they were expecting `godot_gdnative_terminate` to be called before `godot_nativescript_init` was called again, invariants could be broken and lead to crashes or even UB on the next `godot_nativescript_init` callback.\r\n\r\nThe workaround, whether this fix is applied or not, is to mark the library as not-reloadable (luckily this case was fixed by https://github.com/godotengine/godot/commit/5228871e2660f7b83cc1ac6c95c90bf884ec5f50). However, since the current situation can *very* easily lead to undefined behavior, a solution needs to be decided on, and the changes in this PR appear to be the original intended behavior.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3377457]},{"id":666072737,"public_id":49466,"url":"https://github.com/godotengine/godot/pull/49466","diff_url":"https://github.com/godotengine/godot/pull/49466.diff","patch_url":"https://github.com/godotengine/godot/pull/49466.patch","title":"Add rotation ability to material editor preview.","state":"open","is_draft":false,"authored_by":{"id":17506575,"user":"AnilBK","avater":"https://avatars.githubusercontent.com/u/17506575?v=4","url":"https://github.com/AnilBK"},"created_at":"2021-06-09T16:34:51Z","updated_at":"2021-07-17T10:45:13Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nMesh editor(Inspector while selecting MeshInstance3D) already  had the ability to rotate the preview of currently edited mesh.\r\n\r\nThat feature is added to material editor.Just  a copy paste from mesh_editor class.\r\n\r\n\r\nNormal Preview:\r\n\r\nhttps://user-images.githubusercontent.com/17506575/121393295-ef672800-c96f-11eb-9e21-1c28b7acffc1.mp4\r\n\r\n\r\nShader Preview:\r\n\r\nhttps://user-images.githubusercontent.com/17506575/121393318-f3934580-c96f-11eb-8ac5-b6017b814c0e.mp4\r\n\r\n\r\n\r\nUseful especially while shader editor is zoomed. If more primitives are added along with the built in sphere and cube then, it low key would act like that scrapped dedicated shader editor PR.\r\n![shader editor full screen](https://user-images.githubusercontent.com/17506575/121393153-cd6da580-c96f-11eb-821d-ec2be68ce37b.png)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":665855581,"public_id":49457,"url":"https://github.com/godotengine/godot/pull/49457","diff_url":"https://github.com/godotengine/godot/pull/49457.diff","patch_url":"https://github.com/godotengine/godot/pull/49457.patch","title":"Ensure inherited default parameter is not redefined","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-06-09T12:22:24Z","updated_at":"2021-06-12T16:57:31Z","body":"As identified by [lgtm](https://lgtm.com/projects/g/godotengine/godot/?mode=tree&ruleFocus=2153510663), #48908 changed the default values for the inherited functions `body_test_motion()` and `body_test_ray_separation()`'s `p_margin` values in `physics_server_2d_sw.h` to be different from the parent default values in `physics_server_2d.h`:\r\nhttps://github.com/godotengine/godot/blob/f178e7abd7d0af21d326f2e818bcd07a487b19fe/servers/physics_server_2d.h#L503\r\nhttps://github.com/godotengine/godot/blob/f178e7abd7d0af21d326f2e818bcd07a487b19fe/servers/physics_server_2d.h#L517\r\n\"Inherited default parameters should not be redefined because this obscures the behavior of the code. Default values are statically bound and when they are redefined in dynamically bound function calls this reduces readability of the code, increasing the risk of introducing defects.\"[[1](https://lgtm.com/rules/2153510663/)]\r\n\r\nThis PR reverts that change so the inherited default values are once again the same as the parent's default values.\r\n\r\nNote: The confusion comes from the fact that this function is called by `_body_test_motion()` (with an underscore) that passes a defined (non-default) value into `body_test_motion()`:\r\nhttps://github.com/godotengine/godot/blob/f178e7abd7d0af21d326f2e818bcd07a487b19fe/servers/physics_server_2d.cpp#L514-L520\r\n`_body_test_motion()` `p_margin`'s default value is 0.08:\r\nhttps://github.com/godotengine/godot/blob/f178e7abd7d0af21d326f2e818bcd07a487b19fe/servers/physics_server_2d.h#L233\r\nAnd it's `_body_test_motion()` that is exposed as `body_test_motion()`:\r\nhttps://github.com/godotengine/godot/blob/f178e7abd7d0af21d326f2e818bcd07a487b19fe/servers/physics_server_2d.cpp#L646\r\n\r\nI've have previously suggested fixing this, so the values are all 0.001 by default as is the case in 3D physics: #45361 (and it's 3.x version: #45362). Perhaps we should reopen those PRs.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":665437793,"public_id":49447,"url":"https://github.com/godotengine/godot/pull/49447","diff_url":"https://github.com/godotengine/godot/pull/49447.diff","patch_url":"https://github.com/godotengine/godot/pull/49447.patch","title":"Remove unused `shadow_color` property from Light3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-08T23:43:11Z","updated_at":"2021-06-08T23:44:37Z","body":"This shadow color property was no longer effective since the [shaders were optimized to improve occupancy](https://github.com/godotengine/godot/pull/45023). Note that this doesn't affect its Light2D counterpart which still supports per-light shadow colors.\r\n\r\nIt could technically be supported in the lightmapper (for fully baked lights), but I can't find any references to the per-light shadow color in the GPU lightmapper in `master`.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch as per-light shadow color is still functional there.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418726]},{"id":665427611,"public_id":49445,"url":"https://github.com/godotengine/godot/pull/49445","diff_url":"https://github.com/godotengine/godot/pull/49445.diff","patch_url":"https://github.com/godotengine/godot/pull/49445.patch","title":"Highlight \"namespace\" as a GDScript keyword in the syntax highlighter","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-08T23:20:34Z","updated_at":"2021-06-25T20:47:26Z","body":"Like \"trait\" and \"yield\", \"namespace\" is currently not implemented but is still reserved for future use.\r\n\r\nSee https://github.com/godotengine/godot/issues/41865.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch as the \"namespace\" keyword is not reserved there.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":665284810,"public_id":49441,"url":"https://github.com/godotengine/godot/pull/49441","diff_url":"https://github.com/godotengine/godot/pull/49441.diff","patch_url":"https://github.com/godotengine/godot/pull/49441.patch","title":"WIP: Fix wrong editor hint for string values in visual script editor","state":"open","is_draft":true,"authored_by":{"id":6075580,"user":"NoFr1ends","avater":"https://avatars.githubusercontent.com/u/6075580?v=4","url":"https://github.com/NoFr1ends"},"created_at":"2021-06-08T20:38:40Z","updated_at":"2021-07-20T13:46:21Z","body":"Fixes #49231\r\n\r\n---\r\n\r\nStill work in progress as the PropertyEditor for Multi Line Text in master is currently not displayed correctly.\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868]},{"id":664988782,"public_id":49425,"url":"https://github.com/godotengine/godot/pull/49425","diff_url":"https://github.com/godotengine/godot/pull/49425.diff","patch_url":"https://github.com/godotengine/godot/pull/49425.patch","title":"Set Environment's Ao Channel Affect to 1.0 by default (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-08T14:49:03Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/43960 (no longer useful in `master`).\r\n\r\n\"Ao Channel Affect\" was defaulting to 0, giving unexpected results. This meant that as soon as you set an AO texture on a material, there will no longer be SSAO on that material.\r\n\r\nThis led many users to think that Godot didn't support using SSAO and AO textures at the same time.\r\n\r\nThis is technically a breaking change, but since the default behavior felt broken for a lot of people, I think it makes sense to switch to a more logical behavior.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/43957 for `3.x` (already solved in `master`).","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3609449]},{"id":663998442,"public_id":49411,"url":"https://github.com/godotengine/godot/pull/49411","diff_url":"https://github.com/godotengine/godot/pull/49411.diff","patch_url":"https://github.com/godotengine/godot/pull/49411.patch","title":"fixed conflict between tracks have same name different type in the AnimationTree cache","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-06-07T23:39:16Z","updated_at":"2021-06-09T22:45:59Z","body":"Fixed #48526.\r\n\r\nAn animation will no longer be stuck implicitly as long as the single animation is played in the animation.\r\n\r\nHowever, when some tracks conflict in the one animation, or when blending animations of different track types that will set the same value, only the track with the later iteration order will be played, regardless of the blend value. For example, the blending of `ValueTrack` and `BezierTrack` is not yet working correctly (so it's been like that for a while). This may need to be fixed in the future. See #49431.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":663939279,"public_id":49404,"url":"https://github.com/godotengine/godot/pull/49404","diff_url":"https://github.com/godotengine/godot/pull/49404.diff","patch_url":"https://github.com/godotengine/godot/pull/49404.patch","title":"fix AnimationBlendTree graph update on input count change","state":"open","is_draft":false,"authored_by":{"id":21179655,"user":"kodiwills","avater":"https://avatars.githubusercontent.com/u/21179655?v=4","url":"https://github.com/kodiwills"},"created_at":"2021-06-07T21:55:15Z","updated_at":"2021-06-16T00:48:04Z","body":"Fixes https://github.com/godotengine/godot/issues/45437\r\n\r\nConnects blend tree plugin to the `tree_changed` signal which is emited when set_input is updated. The signal then calls update_graph.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418380]},{"id":663703123,"public_id":49391,"url":"https://github.com/godotengine/godot/pull/49391","diff_url":"https://github.com/godotengine/godot/pull/49391.diff","patch_url":"https://github.com/godotengine/godot/pull/49391.patch","title":"Fix gdscript language server auto completion compatibility with external text editors.","state":"open","is_draft":false,"authored_by":{"id":62728088,"user":"igordreher","avater":"https://avatars.githubusercontent.com/u/62728088?v=4","url":"https://github.com/igordreher"},"created_at":"2021-06-07T16:07:13Z","updated_at":"2021-07-18T17:45:00Z","body":"The gdscript language server changes the content of `insertText` during resolve.\r\nBut, by the [lsp specs](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_completion), that should not happen, as pointed out https://github.com/godotengine/godot-vscode-plugin/issues/142#issuecomment-699625127 (his emphasis):\r\n\r\n>    The request can only delay the computation of the detail and documentation properties. Other properties like sortText, filterText, **insertText**, textEdit and additionalTextEdits must be provided in the textDocument/completion response and **must not be changed during resolve**.\r\n\r\n\r\nBecause of this, bugs in external text editors regarding auto completion happen.\r\nBy removing the changes to `insertText` in the language server, this commit ensures better compatibility with external editors.\r\n\r\nThis commit removes the parenthesis addition to functions in auto complete. This feature should exist in the text editor and **not** in the language server.\r\n\r\nFix for #48436, godotengine/godot-vscode-plugin#184, godotengine/godot-vscode-plugin#142","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":663082072,"public_id":49376,"url":"https://github.com/godotengine/godot/pull/49376","diff_url":"https://github.com/godotengine/godot/pull/49376.diff","patch_url":"https://github.com/godotengine/godot/pull/49376.patch","title":"Make nodes with popups consider camera position","state":"open","is_draft":true,"authored_by":{"id":22862244,"user":"menip","avater":"https://avatars.githubusercontent.com/u/22862244?v=4","url":"https://github.com/menip"},"created_at":"2021-06-07T00:21:22Z","updated_at":"2021-06-20T01:06:33Z","body":"Fixes #48016.\r\n\r\nThe affected nodes I discovered: ColorPicker, MenuButton, OptionButton. \r\nIf there are others, let me know I will update PR.\r\n\r\nProject tested with: [FixTest.zip](https://github.com/godotengine/godot/files/6605192/FixTest.zip)\r\n\r\n---\r\nPushed formatting changes to make CI happy\r\nPushed to update commit email\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":662952458,"public_id":49362,"url":"https://github.com/godotengine/godot/pull/49362","diff_url":"https://github.com/godotengine/godot/pull/49362.diff","patch_url":"https://github.com/godotengine/godot/pull/49362.patch","title":"Refactor main.cpp setup","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2021-06-06T13:24:16Z","updated_at":"2021-08-20T19:09:54Z","body":"This PR refactors the setup code in main.cpp. When looking to contribute to a project, I always start with the program entrypoint. I think main.cpp being a bit of a mess sets off a lot of new contributors. It's easy to get lost in chunks of code with overlapping logic and the dependencies between various singletons isn't conveyed very well. I hope this makes it easier for new users to understand the engine.\r\n\r\nBecause things were so tangled up, it wasn't easy to isolate a specific part and just refactor that. So in the end, most of the setup code has been refactored, but only a few intentional changes have been introduced. That increases the chance of a regression, so it should obviously be tested in as many ways as possible.\r\n\r\n## Main goals\r\n\r\nThe PR mostly restructures and groups code in a way that makes it easier to understand program flow and dependencies between certain classes. I think the code should speak for itself, but a short explanation might help with reviewing, and if we at least agree on these principles, it makes it easier to discuss the implementation.\r\n\r\n### Separating distinct phases.\r\nWhile the interface of main was easy to understand, under the hood all kinds of things were blended together. I have tried to separate the code in Main into the following stages:\r\n\r\n1. Parsing command line\r\n2. Loading project settings\r\n3. Finalizing the configuration\r\n4. Initialization\r\n5. Starting (running tool or creating main loop)\r\n6. Iteration (no changes)\r\n\r\n### Clear setup based on application type.\r\nTo me, I felt that it's important to understand what kind of application we want to run (project, script, editor, project manager, a tool) to understandi the whole initialization process. Currently, it's not clear until the very last moment. It also seems like most code assumes that we are running the editor or project manager, while running a project is somewhat of an afterthought. I have made the application type explicit and it is specified as early as possible.\r\n\r\nImportant here is the ApplicationConfiguration, which holds most of the variables for initializing singletons. It first gets initialized in step 1. Then, after loading project settings, it is manually adjusted in step 3, after which it doesn't have to change anymore. That leaves us with an invariant configuration for the rest of the program, which makes the code much simpler to understand. Not much has fundamentally changed to step 4 (initialization), because I don't have enough knowledge of this part. Step 6 has not changed at all.\r\n\r\n#### Intentional changes\r\nIn the CLI, there were a few arguments that only had meaning in combination with other arguments. They have been changed so that they are optional parameters to those arguments.\r\n- `--export-debug`, `--export-pack` are no longer separate commands. Instead you use `--export <preset> <path> [option]`, where option can be `--export-debug` or `--export-pack`. Options can be combined in any order.\r\n- `--no-docbase` is no longer a separate command. Instead you use `--doc-tool <path> --no-docbase`.\r\n- `--check-only` is no longer a separate command. Instead you use `--script <path> --check-only`.\r\n\r\nEditorSettings is now created in main.cpp instead of duplicated in Editor and PM.\r\n\r\n#### A few open questions\r\n- Default project settings are now grouped in a method, but maybe they should be moved to corresponding singletons/servers.\r\n- Personally, I don't like the conditional automatic chaining between setup and  finish_setup(setup2). I think it would be better to force every platform to call both methods, but I don't know if that is a good solution.\r\n- Display driver project setting defaults to Vulkan, but isn't that supposed to be the rendering driver? It currently always fails and defaults to something else.\r\n\r\n#### Things that are not in this PR, but could be looked into in the future:\r\n- Tools each require a different amount of initialisation. At the moment the engine is fully initialised regardless of which tool you run. This also means a window is created by default. We could set no-window flag, but that seems to be broken on master at the moment. Maybe it should default to headless?\r\n- Exporting through CLI still requires the editor node. Just like other tools, it should run without creating a main loop.\r\n- There are some leftover methods (e.g. is_project_manager) that could be refactored/relocated.\r\n- Currently, physics, navigation etc. is initialized and running when running the Project Manager.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914,4418923]},{"id":662820014,"public_id":49355,"url":"https://github.com/godotengine/godot/pull/49355","diff_url":"https://github.com/godotengine/godot/pull/49355.diff","patch_url":"https://github.com/godotengine/godot/pull/49355.patch","title":"Fix various inconsistencies in shortcut naming","state":"open","is_draft":false,"authored_by":{"id":66915435,"user":"greatmomo","avater":"https://avatars.githubusercontent.com/u/66915435?v=4","url":"https://github.com/greatmomo"},"created_at":"2021-06-06T07:08:02Z","updated_at":"2021-06-21T09:59:02Z","body":"I made the suggested changes from Issue #49299. I think they were all reasonable changes and well explained.\r\n\r\nI don't understand the issue mentioned for the search box though. I think the changed tooltip makes just as much sense as before. \r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542,4418550]},{"id":662680432,"public_id":49352,"url":"https://github.com/godotengine/godot/pull/49352","diff_url":"https://github.com/godotengine/godot/pull/49352.diff","patch_url":"https://github.com/godotengine/godot/pull/49352.patch","title":"[3.x] Add C# .editorconfig and reformat code","state":"open","is_draft":false,"authored_by":{"id":7718100,"user":"neikeq","avater":"https://avatars.githubusercontent.com/u/7718100?v=4","url":"https://github.com/neikeq"},"created_at":"2021-06-06T00:46:35Z","updated_at":"2021-08-06T11:24:32Z","body":"This should make it easier for contributors to follow our code style.\r\n\r\nThe code style is not meant for automatic code cleanup. Attempting to run automatic code style cleanup will result in a lot of undesired changes. For this PR I ran automatic code cleanup with Rider, disabling undesired options, and even then I had to remove or fix lots of undesired changes.\r\n\r\nAutomatic code format should be ok most of the time.\r\n\r\nFields were renamed to follow the naming convention, except in the following cases:\r\n- Fields accessed by the engine via reflection.\r\n- Public fields that would break compat if renamed (e.g.: `x`, `y`, `z`).\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":662545750,"public_id":49340,"url":"https://github.com/godotengine/godot/pull/49340","diff_url":"https://github.com/godotengine/godot/pull/49340.diff","patch_url":"https://github.com/godotengine/godot/pull/49340.patch","title":"Make Decal's `modulate` property affect emission color as well","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-05T18:22:39Z","updated_at":"2021-06-06T13:58:31Z","body":"This can be used to recolor special effects such as fake area fog without having to create separate textures for each color. `emission_energy` can still be used to set the emission intensity independently of the albedo color.\r\n\r\nFrom a logical point of view, I think it makes more sense to make `modulate` affect both albedo and emission (like Node2D's `modulate` affects the whole final rendering of the node). If you need to modulate both albedo and emission independently, you can use two Decal nodes instead.\r\n\r\n- Improve the Decal class documentation.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":661946259,"public_id":49317,"url":"https://github.com/godotengine/godot/pull/49317","diff_url":"https://github.com/godotengine/godot/pull/49317.diff","patch_url":"https://github.com/godotengine/godot/pull/49317.patch","title":"Add shader_cache folder to .gitignore","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-06-04T17:33:35Z","updated_at":"2021-06-07T16:39:59Z","body":" #49050 added shader caching, which creates a `shader_cache` folder, which is not being ignored by git.\r\n\r\nThis PR adds `shader_cache/` to `.gitignore`.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":661552261,"public_id":49301,"url":"https://github.com/godotengine/godot/pull/49301","diff_url":"https://github.com/godotengine/godot/pull/49301.diff","patch_url":"https://github.com/godotengine/godot/pull/49301.patch","title":"Improve xr gdnative","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-06-04T08:08:41Z","updated_at":"2021-07-07T00:31:09Z","body":"Depends on #48207\r\n\r\nThis PR adds additional changes to XRInterfaceGDNative and related structures to enable writing XR plugins for Godot 4.\r\n\r\nBreaking changes (some of these I'm still working on, some coming from 48207):\r\n- Output now based on Vulkan renderer using `commit_views`\r\n- `is_stereo` was replaced by `get_view_count`\r\n- `get_name` now has String as parameter, not return value\r\n- `godot_xr_get_worldscale` will be removed (use `XRServer`)\r\n- 'godot_xr_get_reference_frame` will be removed (use `XRServer`)\r\n- `godot_xr_*_controller*` will be removed (use `XRPositionalTracker`)\r\n\r\nCurrently deprecated but will be re-introduced in another form:\r\n- `get_external_texture_for_eye`\r\n- `get_external_depth_for_eye`\r\n- 'commit_for_eye' (maybe, depends on the requirements of the OpenGL backend)\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":661177708,"public_id":49288,"url":"https://github.com/godotengine/godot/pull/49288","diff_url":"https://github.com/godotengine/godot/pull/49288.diff","patch_url":"https://github.com/godotengine/godot/pull/49288.patch","title":"Improve CollisionObject2D and CollisionObject3D pickable documentation","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-03T19:58:53Z","updated_at":"2021-06-04T18:36:55Z","body":"See https://github.com/godotengine/godot/issues/49286.\r\n\r\nI can make a separate version of this PR for `3.x` once we agree on this one.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":661048093,"public_id":49284,"url":"https://github.com/godotengine/godot/pull/49284","diff_url":"https://github.com/godotengine/godot/pull/49284.diff","patch_url":"https://github.com/godotengine/godot/pull/49284.patch","title":"Display a editor gizmo icon for Listener3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-03T16:22:18Z","updated_at":"2021-06-03T16:28:21Z","body":"The icon was present in `editor/icons/`, but it was never implemented in the editor gizmos code. This gizmo's visibility can be toggled in the 3D viewport's **View** menu as usual.\r\n\r\nThis also removes some unused gizmo drawing code (overridden methods that are no longer called anywhere).\r\n\r\nSee https://github.com/godotengine/godot/pull/49266.\r\n\r\n## Preview\r\n\r\n*ReflectionProbe on the left, Listener3D on the right.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/120678689-a8bd8d80-c498-11eb-94a3-75f38582e506.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,4418550,4418726]},{"id":660462437,"public_id":49266,"url":"https://github.com/godotengine/godot/pull/49266","diff_url":"https://github.com/godotengine/godot/pull/49266.diff","patch_url":"https://github.com/godotengine/godot/pull/49266.patch","title":"Remove unused editor icons","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-06-02T23:46:35Z","updated_at":"2021-06-03T16:28:41Z","body":"This also renames the TextureArray icon to follow its rename to Texture2DArray.\r\n\r\nA stripped editor binary is now 22 KB smaller.\r\n\r\nI've done a quick check to see if there weren't any missing icons, but I'm not 100% certain there are no missing icons anywhere. Please give this PR a try in your daily editor use if you can :slightly_smiling_face:\r\n\r\nThis PR can be remade for the `3.x` branch, but it has to be remade from scratch as the list of unused editor icons is different in `3.x`.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781]},{"id":660067930,"public_id":49255,"url":"https://github.com/godotengine/godot/pull/49255","diff_url":"https://github.com/godotengine/godot/pull/49255.diff","patch_url":"https://github.com/godotengine/godot/pull/49255.patch","title":"[3.x] SpriteFramesEditor Add animation searchbox","state":"open","is_draft":false,"authored_by":{"id":9283098,"user":"kleonc","avater":"https://avatars.githubusercontent.com/u/9283098?v=4","url":"https://github.com/kleonc"},"created_at":"2021-06-02T13:27:29Z","updated_at":"2021-08-06T11:24:32Z","body":"(~will do `master` version after this is approved~) `master` version: #49488\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/2681. Made searchbox toggleable so it won't take any vertical space if not needed.\r\n\r\n|before|after|\r\n|-|-|\r\n|![R3Nxn5k37W](https://user-images.githubusercontent.com/9283098/120486551-771fc600-c3b5-11eb-9a1b-766d39e19797.png)|![aQjtrYwE0v](https://user-images.githubusercontent.com/9283098/120486205-1c866a00-c3b5-11eb-94bb-debcea2ce618.gif)|\r\n\r\n---\r\n\r\nDo I need to add added strings somewhere (for translations)?\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":658006939,"public_id":49215,"url":"https://github.com/godotengine/godot/pull/49215","diff_url":"https://github.com/godotengine/godot/pull/49215.diff","patch_url":"https://github.com/godotengine/godot/pull/49215.patch","title":"GUI: Support for multi touch in _gui_input","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-31T06:24:54Z","updated_at":"2021-05-31T06:25:55Z","body":"This is a forward port of #34383, which was created by @NoFr1ends and who I've made co-author of the commit.\r\n\r\nEnables multi-touch `InputEventScreenTouch` and `InputEventScreenDrag` events in the GUI by storing the `Control` associated with each touch index.\r\n\r\nNote: This only enables multi-touch support in the GUI i.e. it does not solve #24589. Only `InputEventMouseButton` events (which are generated from `InputEventScreenTouch` events when the \"Emulate Mouse From Touch\" setting is on -- the default) will trigger `BaseButton` `button_down` and `button_up` events in the button; so with \"Emulate Mouse From Touch\" on, only the first touch will trigger a `BaseButton` pressed event, and nothing when it's off.\r\n\r\nFixes #29525","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":656609747,"public_id":49169,"url":"https://github.com/godotengine/godot/pull/49169","diff_url":"https://github.com/godotengine/godot/pull/49169.diff","patch_url":"https://github.com/godotengine/godot/pull/49169.patch","title":"[3.x] Ensure RigidBodies only interact with Bodies with layers in their mask","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-28T14:45:18Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #49166.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":656421062,"public_id":49166,"url":"https://github.com/godotengine/godot/pull/49166","diff_url":"https://github.com/godotengine/godot/pull/49166.diff","patch_url":"https://github.com/godotengine/godot/pull/49166.patch","title":"Ensure RigidBodies only interact with Bodies with layers in their mask","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-28T12:41:37Z","updated_at":"2021-07-21T09:30:07Z","body":"The `RigidBody` sister PR to #42268 (`Area`s) and #42641 (`KinematicBody`s).\r\n\r\nCurrently, when a `RigidBody` collides with another `CollisionObject` the `collision_layer`->`collision_mask` combination is checked both ways. This results in unintended and unwanted collisions.\r\n\r\nThis PR ensures that `RigidBody`s only collide with `CollisionObjects` that have one of the `RigidBody`'s `collision_layer` bits in the other `CollisionObject`'s `collision_mask`. It fixes both 2D and 3D Godot physics.\r\n\r\nNote: Unlike #42268 and #42641, this PR does not apply the same fix to Bullet physics.\r\n\r\nThe final part of https://github.com/godotengine/godot-proposals/issues/2775.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":655926196,"public_id":49159,"url":"https://github.com/godotengine/godot/pull/49159","diff_url":"https://github.com/godotengine/godot/pull/49159.diff","patch_url":"https://github.com/godotengine/godot/pull/49159.patch","title":"[3.x] Calculate mouse_focus inverse transform when needed","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-28T06:46:14Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #49158.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":655926017,"public_id":49158,"url":"https://github.com/godotengine/godot/pull/49158","diff_url":"https://github.com/godotengine/godot/pull/49158.diff","patch_url":"https://github.com/godotengine/godot/pull/49158.patch","title":"Calculate the mouse focus inverse transform only when needed","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-28T06:45:58Z","updated_at":"2021-05-28T06:45:59Z","body":"Currently, `gui.focus_inv_xform` is used to determine the location of an event within a `Control`. `Viewport::_gui_find_control()` has the side-effect of updating `gui.focus_inv_xform`. This would be fine if `_gui_find_control()` was just used to assign `gui.mouse_focus`, but it's not. The result is, when a mouse button release event happens, sometimes `gui.focus_inv_xform` does not provide the location of the event inside the `Control` where the mouse button press event happened.\r\n\r\nInstead of calculating the `mouse_focus`'s `Control`'s inverse transform every time `_gui_find_control()` is called and storing the result for later use, this PR calculates the required inverse transform only when it is needed. This will not only prevent the wrong inverse transform sometimes being used, but should result in better performance too.\r\n\r\nFixes #41585.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":655520226,"public_id":49154,"url":"https://github.com/godotengine/godot/pull/49154","diff_url":"https://github.com/godotengine/godot/pull/49154.diff","patch_url":"https://github.com/godotengine/godot/pull/49154.patch","title":"Fix AudioStreamPlayer entering paused tree","state":"open","is_draft":true,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-05-27T23:16:43Z","updated_at":"2021-05-27T23:16:43Z","body":"Fixes #49153\r\n\r\n...except there is audible click when the player enters tree. Not sure how to fix it.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":654171121,"public_id":49115,"url":"https://github.com/godotengine/godot/pull/49115","diff_url":"https://github.com/godotengine/godot/pull/49115.diff","patch_url":"https://github.com/godotengine/godot/pull/49115.patch","title":"GitHub Actions: Comment on pull requests with public link to artifacts","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-26T19:44:24Z","updated_at":"2021-05-29T20:21:09Z","body":"Unlike GitHub itself, [nightly.link](https://nightly.link) offers links to GitHub Actions artifacts that work even for users that are not logged in to GitHub.\r\n\r\nLinks are added to the comment as new artifacts are completed.\r\n\r\nExample: https://github.com/Calinou/godot/pull/4","target_branch":"master","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":653534959,"public_id":49102,"url":"https://github.com/godotengine/godot/pull/49102","diff_url":"https://github.com/godotengine/godot/pull/49102.diff","patch_url":"https://github.com/godotengine/godot/pull/49102.patch","title":"Fix AnimatedTexture inconsistency when setting frame","state":"open","is_draft":false,"authored_by":{"id":52567385,"user":"ANamelessGhoul","avater":"https://avatars.githubusercontent.com/u/52567385?v=4","url":"https://github.com/ANamelessGhoul"},"created_at":"2021-05-26T10:04:33Z","updated_at":"2021-05-26T13:12:23Z","body":"Pull Request to fixing the bug stated in issue #49078 for unexpected behaviour when setting current frame in AnimatedTextures\r\n\r\nAccidentally broke last pull request #49097\r\n\r\nFix #49078\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":653442637,"public_id":49099,"url":"https://github.com/godotengine/godot/pull/49099","diff_url":"https://github.com/godotengine/godot/pull/49099.diff","patch_url":"https://github.com/godotengine/godot/pull/49099.patch","title":"Implemented option to allow or disallow AudioStreamPlayer volume override by AnimationTree","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-05-26T08:53:26Z","updated_at":"2021-08-19T10:02:55Z","body":"https://www.youtube.com/watch?v=0ztTcX7Z-Do\r\n\r\nIn a `BlendTree`, `AudioTrack` will change the volume of the `AudioStreamPlayer` implicitly when blending. This is useful for damping sounds like footsteps, but it can be a problem if you want to play sound effects with `NodeOneshot`, or if you are controlling the volume externally. So I added an option to the `AudioStreamPlayer` to allow or disallow the `BlendTree` to change the volume.\r\n\r\nI've named the option _\"Adjust When Blending\"_ for now, but I couldn't think of a short and clear name to represent this feature, so it's possible to discuss naming it something like _\"Controlled By Blending\"_, _\"Overrided By Animation Tree\"_ or e.t.c.\r\n\r\nSlightly related #48526\r\n\r\n[volume_blend_test.zip](https://github.com/godotengine/godot/files/6545246/volume_blend_test.zip)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418380,4418392,4418718,4418726]},{"id":653235024,"public_id":49092,"url":"https://github.com/godotengine/godot/pull/49092","diff_url":"https://github.com/godotengine/godot/pull/49092.diff","patch_url":"https://github.com/godotengine/godot/pull/49092.patch","title":"Add multiview support to the clustered forward renderer","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-05-26T05:54:04Z","updated_at":"2021-06-14T01:18:16Z","body":"This is split off from #48207\r\n\r\nAs there are a number of things left to finish off and while we focus on making the mobile renderer work properly for VR first, implementing this logic in the clustered forward renderer was moved into this separate PR.\r\n\r\nThings still left to do:\r\n- Fix clustered culling logic to work with the stereo implementation\r\n- Fix volumetric fog and GI\r\n- Fix various post effects\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":652407419,"public_id":49063,"url":"https://github.com/godotengine/godot/pull/49063","diff_url":"https://github.com/godotengine/godot/pull/49063.diff","patch_url":"https://github.com/godotengine/godot/pull/49063.patch","title":"Remove 16× MSAA support due to driver bugs and low performance","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-25T14:29:30Z","updated_at":"2021-07-04T14:51:46Z","body":"In the `master` branch, 16× MSAA caused the entire system to freeze on NVIDIA GPUs. This is likely caused by graphics drivers not actually implementing 16× MSAA, but combining 8× MSAA with 2× SSAA instead. If you need to implement a \"photo mode\" for high quality in-game screenshots, you can combine [2× SSAA](https://github.com/godotengine/godot-demo-projects/tree/master/viewport/3d_scaling) with 8× MSAA manually.\r\n\r\nOn top of that, modern shader complexity makes 16× MSAA very difficult to use while keeping a good framerate. This is especially true when you start using GIProbe or SDFGI. 8× MSAA is hard enough to use as it is, and it's not much of a loss visually compared to 16× MSAA.\r\n\r\nIn the `3.x` branch, there are only minor bugs with 16× MSAA such as https://github.com/godotengine/godot/issues/14727, so I think we can keep it there. Shaders are also not as complex in `3.x`, so higher MSAA values are more usable in practice.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/37917.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418914]},{"id":652121189,"public_id":49058,"url":"https://github.com/godotengine/godot/pull/49058","diff_url":"https://github.com/godotengine/godot/pull/49058.diff","patch_url":"https://github.com/godotengine/godot/pull/49058.patch","title":"Add override keywords to FileAccess and DirAccess derived classes","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-25T09:53:09Z","updated_at":"2021-05-25T16:17:39Z","body":"Adds missing `override` keyword to `FileAccess` and `DirAccess` derived classes' overridden methods.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,3112906,3112909,4418914]},{"id":651903260,"public_id":49053,"url":"https://github.com/godotengine/godot/pull/49053","diff_url":"https://github.com/godotengine/godot/pull/49053.diff","patch_url":"https://github.com/godotengine/godot/pull/49053.patch","title":"Allow to get list of non object methods","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-05-25T06:17:58Z","updated_at":"2021-08-20T15:01:21Z","body":"1/3 of https://github.com/godotengine/godot-proposals/issues/2344\r\n\r\nThis allow to get list of e.g. String methods by using:\r\n```\r\nClassDB.get_variant_method_list(TYPE_STRING)\r\n```\r\n`_ClassDB::get_variant_method_list` is almost 1:1 copy of `_ClassDB::get_method_list`\r\nalso  \r\n`Variant::get_method_list_by_type` is just extracted code from `Variant::get_method_list` to be able not duplicate same code.\r\n\r\n~`get_non_object_methods_list` isn't the best name, so it should be renamed to something better~","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":651859670,"public_id":49052,"url":"https://github.com/godotengine/godot/pull/49052","diff_url":"https://github.com/godotengine/godot/pull/49052.diff","patch_url":"https://github.com/godotengine/godot/pull/49052.patch","title":"Fixes crash on using `ShaderGlobalsOverride.new()._activate()`","state":"open","is_draft":false,"authored_by":{"id":52810607,"user":"Vignesh1-art","avater":"https://avatars.githubusercontent.com/u/52810607?v=4","url":"https://github.com/Vignesh1-art"},"created_at":"2021-05-25T05:04:54Z","updated_at":"2021-08-14T15:07:13Z","body":"Fixed by adding null checker. As get_tree() just returns pointer. So no need of temporary variable to check for nullptr\r\n\r\n<i>Bugsquad edit</i>: Fix #45984","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733,4418914]},{"id":651625500,"public_id":49047,"url":"https://github.com/godotengine/godot/pull/49047","diff_url":"https://github.com/godotengine/godot/pull/49047.diff","patch_url":"https://github.com/godotengine/godot/pull/49047.patch","title":"Fix C# file extension not appearing in Search in File Extensions default","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-24T21:06:09Z","updated_at":"2021-06-02T22:14:17Z","body":"I'm not sure if this is a proper fix, but it seems the code path isn't being triggered correctly according to the proposal.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2766.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":651572749,"public_id":49045,"url":"https://github.com/godotengine/godot/pull/49045","diff_url":"https://github.com/godotengine/godot/pull/49045.diff","patch_url":"https://github.com/godotengine/godot/pull/49045.patch","title":"Hide row for altering custom settings in non-advanced mode","state":"open","is_draft":false,"authored_by":{"id":12120644,"user":"foxydevloper","avater":"https://avatars.githubusercontent.com/u/12120644?v=4","url":"https://github.com/foxydevloper"},"created_at":"2021-05-24T19:33:45Z","updated_at":"2021-07-30T00:36:04Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/2723 (see: https://github.com/godotengine/godot-proposals/issues/2723#issuecomment-841684108)\r\n\r\nWhen advanced settings is disabled you're still able to add custom settings even though they only appear in advanced mode, which is confusing.\r\n\r\nHiding the row for altering custom settings when not in advanced mode used to happen until #45716, the reason for not hiding the row was so that you can still copy them. Copying settings names seems like an advanced concept that should probably be behind advanced mode though. It also takes up vertical space just for one box to copy from.\r\n\r\nhttps://user-images.githubusercontent.com/12120644/119398125-1b628800-bca5-11eb-99f6-e2479af1e76c.mp4\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":651550126,"public_id":49042,"url":"https://github.com/godotengine/godot/pull/49042","diff_url":"https://github.com/godotengine/godot/pull/49042.diff","patch_url":"https://github.com/godotengine/godot/pull/49042.patch","title":"[3.x] Clarify that eof_reached() cannot be used to check if more data is available","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-24T18:50:01Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #49041.\r\n","target_branch":"3.x","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":651549991,"public_id":49041,"url":"https://github.com/godotengine/godot/pull/49041","diff_url":"https://github.com/godotengine/godot/pull/49041.diff","patch_url":"https://github.com/godotengine/godot/pull/49041.patch","title":"Clarify that eof_reached() cannot be used to check if more data is available","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-24T18:49:47Z","updated_at":"2021-05-28T16:10:53Z","body":"Closes https://github.com/godotengine/godot-docs/issues/4085.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":651524443,"public_id":49039,"url":"https://github.com/godotengine/godot/pull/49039","diff_url":"https://github.com/godotengine/godot/pull/49039.diff","patch_url":"https://github.com/godotengine/godot/pull/49039.patch","title":"[3.x] Clarify documentation of Camera.get_camera_transform()","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-24T18:15:37Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #49038.\r\n","target_branch":"3.x","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":651524271,"public_id":49038,"url":"https://github.com/godotengine/godot/pull/49038","diff_url":"https://github.com/godotengine/godot/pull/49038.diff","patch_url":"https://github.com/godotengine/godot/pull/49038.patch","title":"Clarify documentation of Camera3D.get_camera_transform()","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-24T18:15:18Z","updated_at":"2021-05-24T18:15:19Z","body":"Closes https://github.com/godotengine/godot-docs/issues/3407.\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":651465171,"public_id":49035,"url":"https://github.com/godotengine/godot/pull/49035","diff_url":"https://github.com/godotengine/godot/pull/49035.diff","patch_url":"https://github.com/godotengine/godot/pull/49035.patch","title":"[3.x] Update all properties when a property is changed","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-05-24T16:26:03Z","updated_at":"2021-08-06T11:24:32Z","body":"This fixes issues where `property_list_changed_notify` was\r\npreviously used to update properties from tool scripts and causing update problems, because of the full tree rebuild.\r\nCalling said function is not longer necessary for that case.\r\n\r\nThis is an alternative approach to #49032.\r\nFixes #37464\r\nResolves #44354, because `property_list_changed_notify` is not longer necessary in that case\r\n\r\nThis is only relevant in 3.x as 4.0 polls. (Although there is still the old logic present as well. Why though?)","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":651418786,"public_id":49032,"url":"https://github.com/godotengine/godot/pull/49032","diff_url":"https://github.com/godotengine/godot/pull/49032.diff","patch_url":"https://github.com/godotengine/godot/pull/49032.patch","title":"Fix `property_list_changed_notify` causing full inspector rebuild","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-05-24T15:25:23Z","updated_at":"2021-08-06T11:24:32Z","body":"fixes #44354\r\n\r\nInstead of fully rebuilding the inspector only all `EditorProperty`s get updated. This may cause unwanted side effects, if properties get added or removed and relied on `property_list_changed_notify` causing a rebuild. I don't know any use cases for such behaviour. Thinking of it, I may have breaken situations with `_get_property_list`. Tests are welcome.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":651382560,"public_id":49028,"url":"https://github.com/godotengine/godot/pull/49028","diff_url":"https://github.com/godotengine/godot/pull/49028.diff","patch_url":"https://github.com/godotengine/godot/pull/49028.patch","title":"Fix `EditorSpinSlider` not resetting the mouse position correctly when freed","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-05-24T14:35:10Z","updated_at":"2021-05-26T09:44:14Z","body":"This especially important in 3.x and 3.2 as seen in #44354.\r\n\r\n<i>Bugsquad edit</i>: Fix #44354.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":651071849,"public_id":49015,"url":"https://github.com/godotengine/godot/pull/49015","diff_url":"https://github.com/godotengine/godot/pull/49015.diff","patch_url":"https://github.com/godotengine/godot/pull/49015.patch","title":"Un-focusing window during popup timer should not cause a popup to appear","state":"open","is_draft":false,"authored_by":{"id":66915435,"user":"greatmomo","avater":"https://avatars.githubusercontent.com/u/66915435?v=4","url":"https://github.com/greatmomo"},"created_at":"2021-05-24T07:14:13Z","updated_at":"2021-06-15T17:51:09Z","body":"Should fix #48634\r\n\r\nSimply checks if `window->has_focus()` before showing a tooltip.\r\n\r\nThe issue also says \"unfocusing should probably kill existing tooltips.\", but as far as I saw during my testing, this already happens.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":650841220,"public_id":49009,"url":"https://github.com/godotengine/godot/pull/49009","diff_url":"https://github.com/godotengine/godot/pull/49009.diff","patch_url":"https://github.com/godotengine/godot/pull/49009.patch","title":"Fix JSONParseResult error property type","state":"open","is_draft":false,"authored_by":{"id":37783605,"user":"Na-r","avater":"https://avatars.githubusercontent.com/u/37783605?v=4","url":"https://github.com/Na-r"},"created_at":"2021-05-23T19:19:35Z","updated_at":"2021-06-11T12:53:07Z","body":"The registered type of JSONParseResult::error was Variant::OBJECT. This conflicts with the documentation, which describes error as being an integer belonging to the Error enum. This resulted in the editor throwing out parse errors when trying to perform any operation between the error property and an integer, even including other members of the Error enum.\r\n\r\nBy changing the type of the error property to Variant::INT, the expected behavior is achieved. The error property is still recognized as an Error enum (and still gets relevant auto-complete as a result), but can now be operated with other integer types.\r\n\r\nI didn't update the PropertyHint of the property, since that didn't seem relevant for JSONParseResult.\r\n\r\nFixes #48684\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":650826973,"public_id":49002,"url":"https://github.com/godotengine/godot/pull/49002","diff_url":"https://github.com/godotengine/godot/pull/49002.diff","patch_url":"https://github.com/godotengine/godot/pull/49002.patch","title":"[3.x] Only create InputEventMouseMotion event on Windows if mouse moves","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-23T17:35:57Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #49001.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112906]},{"id":650826923,"public_id":49001,"url":"https://github.com/godotengine/godot/pull/49001","diff_url":"https://github.com/godotengine/godot/pull/49001.diff","patch_url":"https://github.com/godotengine/godot/pull/49001.patch","title":"Only create InputEventMouseMotion event on Windows if mouse moves","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-23T17:35:38Z","updated_at":"2021-05-23T19:40:29Z","body":"In Windows, a window can receive `WM_MOUSEMOVE` events even if the mouse coordinates don't change, _\"For example, if the cursor is positioned over a window, and the user hides the window, the window receives WM_MOUSEMOVE messages even if the mouse did not move.\"_[[1](https://docs.microsoft.com/en-us/windows/win32/learnwin32/mouse-movement)]. Similarly, `WM_MOUSEMOVE` events are received when a mouse button is released. This results in unexpected `InputEventMouseMotion` events being generated: see #20357.\r\n\r\nThis PR checks to see if the mouse actually moved before adding an `InputEventMouseMotion` event. Since this was fixed for `WM_INPUT` for when `mouse_mode` is `MOUSE_MODE_CAPTURED` in #22368, this PR applies 33dd2c8de to the the WM_MOUSEMOVE and WM_POINTERUPDATE Windows events as well as the Wacom WT_PACKET event. \r\n\r\nFixes #20357.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112906,4418403]},{"id":650790745,"public_id":48995,"url":"https://github.com/godotengine/godot/pull/48995","diff_url":"https://github.com/godotengine/godot/pull/48995.diff","patch_url":"https://github.com/godotengine/godot/pull/48995.patch","title":"Advance animation after confirming","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-05-23T13:35:44Z","updated_at":"2021-05-23T16:25:28Z","body":"Fixes #33681\r\nI completely forgot about #34885, but my solution doesn't use hacks and includes some bonus refactoring.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":650751100,"public_id":48989,"url":"https://github.com/godotengine/godot/pull/48989","diff_url":"https://github.com/godotengine/godot/pull/48989.diff","patch_url":"https://github.com/godotengine/godot/pull/48989.patch","title":"Properly increase line counter when parsing comments","state":"open","is_draft":false,"authored_by":{"id":1854245,"user":"MarioLiebisch","avater":"https://avatars.githubusercontent.com/u/1854245?v=4","url":"https://github.com/MarioLiebisch"},"created_at":"2021-05-23T08:45:14Z","updated_at":"2021-06-15T15:20:39Z","body":"Currently the variant parser (e.g. used when reading `project.godot`) skips comments until the end of line, but doesn't increase the line counter when doing so.  This breaks the line offset shown in error messages.\r\n\r\nLet's assume the following intentionally broken `project.godot`:\r\n```ini\r\n; Engine configuration file.\r\n; It's best edited using the editor UI and not directly,\r\n; since the parameters that go here are not all obvious.\r\n;\r\n; Format:\r\n;   [section] ; section goes between []\r\n;   param=value ; assign values to parameters\r\n\r\nconfig_version=4\r\n\r\n= broken\r\n\r\n[application]\r\n\r\n# here's the usual contents\r\n```\r\n\r\nListing this project in the Project Manager currently will indicate a parse error on the fourth line (identified as line 3 due to being 0 based):\r\n```txt\r\nERROR: ConfigFile parse error at .../project.godot:3: Unexpected identifier: 'broken'..\r\n   at: ConfigFile::_parse (core\\io\\config_file.cpp:284)\r\n```\r\n\r\nAs you can see above, this actually isn't the third (fourth) line in total. While skipping comments in this file is trivial, it could get tricky in more complex files with multiple comment lines/blocks throughout the file.\r\n\r\nAfter the fix, it correctly reports the tenth (eleventh) line:\r\n```txt\r\nERROR: ConfigFile parse error at .../project.godot:10: Unexpected identifier: 'broken'..\r\n   at: ConfigFile::_parse (core\\io\\config_file.cpp:284)\r\n```\r\n\r\nI don't really think this is intentional, since it's causing somewhat confusing error messages that won't match the actual file structure. If it actually is, let me know and just disregard this PR.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":650726407,"public_id":48987,"url":"https://github.com/godotengine/godot/pull/48987","diff_url":"https://github.com/godotengine/godot/pull/48987.diff","patch_url":"https://github.com/godotengine/godot/pull/48987.patch","title":"Adding more validation checks for UWP exports in can_export()","state":"open","is_draft":false,"authored_by":{"id":22585298,"user":"SLGamesCregg","avater":"https://avatars.githubusercontent.com/u/22585298?v=4","url":"https://github.com/SLGamesCregg"},"created_at":"2021-05-23T04:58:11Z","updated_at":"2021-07-24T22:51:55Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nThis is intended to be a fix for #37959, but I ended up adding more validation checks to make sure the manifest matches the app package manifest specifications. Specifically, on top of enforcing the description to be filled out, I added a min and max length check for the export text boxes and made sure that the unique name fit the requirement of being alphanumeric while also allowing '-' and '.' characters. \r\n\r\nPS: This is my first PR so I'm sure I did something wrong or goofy, but hopefully I can iron that out. 😅 \r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":361780559,"name":"platform:uwp","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":2909900850,"name":"topic:export","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112913]},{"id":650621878,"public_id":48965,"url":"https://github.com/godotengine/godot/pull/48965","diff_url":"https://github.com/godotengine/godot/pull/48965.diff","patch_url":"https://github.com/godotengine/godot/pull/48965.patch","title":"[3.x] Tell rpc target method/property when node is not found","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-05-22T12:38:35Z","updated_at":"2021-08-06T11:24:32Z","body":"When working with RPC calls, I sometimes get node not found errors that are caused by my code. However they are not obvious to debug as you only get the failed node name and not the call/set target.\r\n\r\nThere seems to be some more going on in 4.0 as only an id is sent and the API tries to get the target then. A similar functionality would be nice, but is most likely not possible, because the target is target is fetched on the node script. We could print the id, but idk how helpful that is :D","target_branch":"3.x","labels":[{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":650523200,"public_id":48948,"url":"https://github.com/godotengine/godot/pull/48948","diff_url":"https://github.com/godotengine/godot/pull/48948.diff","patch_url":"https://github.com/godotengine/godot/pull/48948.patch","title":"Remove unused binds","state":"open","is_draft":false,"authored_by":{"id":57882701,"user":"likeich","avater":"https://avatars.githubusercontent.com/u/57882701?v=4","url":"https://github.com/likeich"},"created_at":"2021-05-21T23:58:01Z","updated_at":"2021-05-22T00:00:33Z","body":"Removes unused binds in the project manager class. They were left over after changes to master made them obsolete.\r\n\r\n*4.0 only*\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":649733613,"public_id":48914,"url":"https://github.com/godotengine/godot/pull/48914","diff_url":"https://github.com/godotengine/godot/pull/48914.diff","patch_url":"https://github.com/godotengine/godot/pull/48914.patch","title":"Remove support for legacy bone binds from godot. All skin binds must be named","state":"open","is_draft":false,"authored_by":{"id":39946030,"user":"lyuma","avater":"https://avatars.githubusercontent.com/u/39946030?v=4","url":"https://github.com/lyuma"},"created_at":"2021-05-21T07:26:44Z","updated_at":"2021-08-21T01:08:30Z","body":"@fire informed me that numbered bone binds for Skin are a legacy feature, and that godot is moving in the direction of using named binds for Skins.\r\n\r\nAfter running into the issue leading to PR #48913 , I think that it is error-prone and confusing to support two different Skin systems. Clearly this change should not be made in the 3.x branch as it could break compatibility, but I think 4.x ought to consider removing the legacy system.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":648340772,"public_id":48871,"url":"https://github.com/godotengine/godot/pull/48871","diff_url":"https://github.com/godotengine/godot/pull/48871.diff","patch_url":"https://github.com/godotengine/godot/pull/48871.patch","title":"Fix BaseButton.keep_pressed_outside","state":"open","is_draft":false,"authored_by":{"id":48195604,"user":"Xioor","avater":"https://avatars.githubusercontent.com/u/48195604?v=4","url":"https://github.com/Xioor"},"created_at":"2021-05-20T02:52:26Z","updated_at":"2021-07-11T22:05:19Z","body":"Issue was described here: https://github.com/godotengine/godot-proposals/issues/2645","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":646077706,"public_id":48800,"url":"https://github.com/godotengine/godot/pull/48800","diff_url":"https://github.com/godotengine/godot/pull/48800.diff","patch_url":"https://github.com/godotengine/godot/pull/48800.patch","title":"Check if input marked handled before processing additional CollisionObjects","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-17T18:26:59Z","updated_at":"2021-05-26T09:17:50Z","body":"Currently, when processing picking, all `CollisionObject2D`s under the mouse pointer are processed regardless of whether or not `set_input_as_handled()` was called. This PR checks whether `set_input_as_handled()` has been called before processing additional `CollisionObject2D`s.\r\n\r\nFixes #48788\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":645973740,"public_id":48794,"url":"https://github.com/godotengine/godot/pull/48794","diff_url":"https://github.com/godotengine/godot/pull/48794.diff","patch_url":"https://github.com/godotengine/godot/pull/48794.patch","title":"Set and update the path of the `ViewportTexture` of a `Viewport`","state":"open","is_draft":false,"authored_by":{"id":28286961,"user":"Jummit","avater":"https://avatars.githubusercontent.com/u/28286961?v=4","url":"https://github.com/Jummit"},"created_at":"2021-05-17T15:41:09Z","updated_at":"2021-05-17T17:00:00Z","body":"The `viewport_path` property of `Viewport`'s `ViewportTextures` is empty because the path isn't being set. This can cause problems in some cases. This PR set's the path as soon as the Viewport enters the tree, and when the path changes.\r\n\r\nRelated: #46631\r\n\r\n**Steps to reproduce the issue:**\r\nCreate a viewport and print the path of it's texture:\r\n`print(get_texture().viewport_path))` -> prints `\"\"`, even though the path is something like `/root/Main/Viewport`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":645385962,"public_id":48776,"url":"https://github.com/godotengine/godot/pull/48776","diff_url":"https://github.com/godotengine/godot/pull/48776.diff","patch_url":"https://github.com/godotengine/godot/pull/48776.patch","title":"Use less blur for distant directional shadow splits","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-16T21:48:07Z","updated_at":"2021-05-16T22:37:05Z","body":"This makes the transition between shadow splits less noticeable, specially when the expensive Blend Splits property is disabled. In many scenarios, you no longer need to enable Blend Splits to get good directional shadow appearance.\r\n\r\nFrom empirical benchmarking, this seems to have a small performance cost (average 160.6 FPS over 5 screenshots instead of 163.8 FPS). I'm not sure if this is introduced by benchmarking. It's not very scientific since I carried this out from the editor and its fluctuating frame time information.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2729.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch, since this relies on the per-light shadow blur feature found in the new Vulkan renderer.\r\n\r\n## TODO\r\n\r\n- [ ] Don't hardcode the blur factors. Instead, calculate them based on the effective \"share\".\r\n  - By default, the multipliers would be:\r\n    - `1.0` for the first split.\r\n    - `0.5` for the second split.\r\n    - `0.2` for the third split.\r\n    - `0.1` for the fourth (and last) split.\r\n  - These multipliers should change automatically when the split offsets are adjusted in the DirectionalLight.\r\n- [ ] Adapt the mobile renderer shader code as well.\r\n\r\n## Preview\r\n\r\n***Note:** GI and ambient lighting was disabled to make the difference in shadow rendering more obvious.*\r\n\r\n### Before\r\n\r\n*Distant shadows have less detail. There is a noticeable \"cut\" between splits near the lamp posts in the middle of the image.*\r\n\r\n![Old shadows](https://user-images.githubusercontent.com/180032/118413757-2f086000-b6a1-11eb-8307-7d4bd18437a4.png)\r\n\r\n### After\r\n\r\n*Distant shadows keep a similar level of detail. Despite Blend Splits being disabled, the cut between splits is now much less noticeable.*\r\n\r\n![New shadows](https://user-images.githubusercontent.com/180032/118413754-2d3e9c80-b6a1-11eb-9816-010ef5d9dc27.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":645374073,"public_id":48773,"url":"https://github.com/godotengine/godot/pull/48773","diff_url":"https://github.com/godotengine/godot/pull/48773.diff","patch_url":"https://github.com/godotengine/godot/pull/48773.patch","title":"Fix negative arguments not allowed in @export_range","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-05-16T20:17:12Z","updated_at":"2021-06-04T22:25:38Z","body":"Closes #41183\r\n\r\nIn the PR #47778, the idea was to use the Analyser to computer the expression UNARY_OP (minus), but @ven recommends to fix the issue in the tokenizer instead.\r\n\r\nIn the PR #48745, the idea was to change the Tokenizer to generate a LITERAL when encountering a minus with some numbers. However, the tokenizer do not differentiate when minus is used as an unary or a binary operator, and thus, the PR breaks the simple code `print(2-3*5)`.\r\n\r\nIn **this** PR, the solution is instead of the Parser, since it can detect if minus is used as an unary or a binary operator. In parse_unary_operator, for + and - operators, if the operand is a literal, then the method will directly generate a LITERAL node.\r\n\r\nCode might be imperfect, I will be happy if someone could give some feedback.\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":645354581,"public_id":48769,"url":"https://github.com/godotengine/godot/pull/48769","diff_url":"https://github.com/godotengine/godot/pull/48769.diff","patch_url":"https://github.com/godotengine/godot/pull/48769.patch","title":"Fix Transform(2D) scaled and rotated methods","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-16T18:00:39Z","updated_at":"2021-06-03T13:33:27Z","body":"Currently, `Transform` and `Transform2D`'s `scaled()` and `rotated()` methods perform left matrix multiplication on the transform. This makes sense from a mathematical point of view, but it's not intuitive from a user's point of view, and it prevents these methods from being chained. To make it even more confusing, the `translated()` method does the intuitive, right matrix multiplication on the transform. The result is, there is currently no simply way to recreate an editor's `Transfrom`'s `Translation`, `Rotation` and `Scale` using a series of `translated()`, `rotated()` and `scaled()` methods.\r\n\r\nThis PR makes the `scaled()` and `rotated()` methods right matrix multiplicative; so they behave the same way as `translated()`. This not only makes them more intuitive, but it allows them to be chained.\r\n\r\nBelow are 2D and 3D demo projects showing how, with this PR, an object's `Translation`, `Rotation` and `Scale` can be easily recreated using chained `translated()`, `rotated()` and `scaled()` methods e.g.:\r\n```\r\n\tvar xform = Transform.IDENTITY\r\n\txform = xform.translated(Vector3(-1.5, 0, 0))\r\n\txform = xform.rotated(Vector3(0, 0, 1), deg2rad(20))\r\n\txform = xform.scaled(Vector3(1, 1.5, 1))\r\n\ttransform = xform\r\n```\r\n[2DTransforms.zip](https://github.com/godotengine/godot/files/6489711/2DTransforms.zip)\r\n[3DTransforms.zip](https://github.com/godotengine/godot/files/6489713/3DTransforms.zip)\r\n\r\nProperly fixes #34329\r\nCloses https://github.com/godotengine/godot-proposals/issues/1336\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":645268569,"public_id":48753,"url":"https://github.com/godotengine/godot/pull/48753","diff_url":"https://github.com/godotengine/godot/pull/48753.diff","patch_url":"https://github.com/godotengine/godot/pull/48753.patch","title":"register BulletPhysicsDirectSpaceState for gdnative export","state":"open","is_draft":false,"authored_by":{"id":27040,"user":"geekrelief","avater":"https://avatars.githubusercontent.com/u/27040?v=4","url":"https://github.com/geekrelief"},"created_at":"2021-05-16T05:58:25Z","updated_at":"2021-08-06T11:24:32Z","body":"Fixes #48752","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3377457,4417777]},{"id":645261684,"public_id":48751,"url":"https://github.com/godotengine/godot/pull/48751","diff_url":"https://github.com/godotengine/godot/pull/48751.diff","patch_url":"https://github.com/godotengine/godot/pull/48751.patch","title":"Fix property selector not displaying certain properties/methods","state":"open","is_draft":false,"authored_by":{"id":6376721,"user":"briansemrau","avater":"https://avatars.githubusercontent.com/u/6376721?v=4","url":"https://github.com/briansemrau"},"created_at":"2021-05-16T04:56:34Z","updated_at":"2021-07-17T11:43:45Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #47837\r\nFixes #28136\r\n\r\nThis pull request fixes several issues where PropertySelector was not showing properties/functions that you would reasonably expect to find.\r\n\r\nShould be cherry-pickable for 3.3 and 3.x.\r\n\r\n<i>Bugsquad edit</i>: + Fixes #49062\r\n\r\n---\r\n\r\nUpdate:\r\nHere are screenshots demonstrating these changes. (Shown in 3.x but should be the same in 4.0/master)\r\n\r\n<details>\r\n<summary>Property Selector</summary>\r\nBefore:\r\n\r\n![image](https://user-images.githubusercontent.com/6376721/119894328-7812ac80-bf0a-11eb-8c79-4951bfdcbe99.png)\r\n\r\nAnd after:\r\n![image](https://user-images.githubusercontent.com/6376721/119893073-ef474100-bf08-11eb-8cdd-4bbfa9e4d636.png)\r\n</details>\r\n\r\n<details>\r\n<summary>Select method on variant/basic type</summary>\r\nBefore:\r\n\r\n![image](https://user-images.githubusercontent.com/6376721/119894387-8a8ce600-bf0a-11eb-9dc3-ee6d84281496.png)\r\n\r\nAnd after:\r\n![image](https://user-images.githubusercontent.com/6376721/119893393-4baa6080-bf09-11eb-8c08-427f644d3317.png)\r\n</details>\r\n\r\n<details>\r\n<summary>Visual script property selector</summary>\r\nBefore:\r\n\r\n![image](https://user-images.githubusercontent.com/6376721/119894422-94aee480-bf0a-11eb-8147-14b2a7fe50e0.png)\r\n\r\nAnd after:\r\n![image](https://user-images.githubusercontent.com/6376721/119892970-c8890a80-bf08-11eb-90ce-776db46a86bb.png)\r\n</details>","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417868]},{"id":645169891,"public_id":48734,"url":"https://github.com/godotengine/godot/pull/48734","diff_url":"https://github.com/godotengine/godot/pull/48734.diff","patch_url":"https://github.com/godotengine/godot/pull/48734.patch","title":"Add filter & sort to editor file dialog","state":"open","is_draft":false,"authored_by":{"id":12120644,"user":"foxydevloper","avater":"https://avatars.githubusercontent.com/u/12120644?v=4","url":"https://github.com/foxydevloper"},"created_at":"2021-05-15T15:16:11Z","updated_at":"2021-08-03T10:56:59Z","body":"Closes godotengine/godot-proposals#2721\r\n\r\nInside of the editor file dialog:\r\n- Adds filter box that only shows folders and files in current directory that match\r\n- Adds sort button with same options you find in the sort button in FileSystem\r\n- Adds a shortcut for CTRL+F for selecting the filter box\r\n\r\nIt takes the `FileInfo` & `FileInfo___Comparator` structs from `filesystem_dock.cpp`\r\nThis only changes the editor file dialog. Selecting directory for new projects uses FileDialog instead of EditorFileDialog, so this won't affect selecting project directories. Either selecting project directory could be changed to use editor file dialog or file dialog could also be changed to also add a filter and sort button\r\n\r\nhttps://user-images.githubusercontent.com/12120644/118267617-5b965f00-b48a-11eb-9899-771b6eb4e6bf.mp4","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781]},{"id":644886375,"public_id":48721,"url":"https://github.com/godotengine/godot/pull/48721","diff_url":"https://github.com/godotengine/godot/pull/48721.diff","patch_url":"https://github.com/godotengine/godot/pull/48721.patch","title":"Add a test suite for `Math::` namespace functions","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-14T18:00:38Z","updated_at":"2021-05-19T13:36:59Z","body":"This replaces the legacy Math test suite which was no longer being run with the new doctest setup.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":644614135,"public_id":48717,"url":"https://github.com/godotengine/godot/pull/48717","diff_url":"https://github.com/godotengine/godot/pull/48717.diff","patch_url":"https://github.com/godotengine/godot/pull/48717.patch","title":"Fix display of programmatically created value in remote inspector","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-05-14T10:23:07Z","updated_at":"2021-05-14T10:23:07Z","body":"`4.0` version of #44657.\r\n\r\nCan anyone confirm the fix with a minimal reproduction project?","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418605]},{"id":644353785,"public_id":48709,"url":"https://github.com/godotengine/godot/pull/48709","diff_url":"https://github.com/godotengine/godot/pull/48709.diff","patch_url":"https://github.com/godotengine/godot/pull/48709.patch","title":"[3.x] Optimize raycast with large Heightmap shape data","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-14T00:47:58Z","updated_at":"2021-08-06T11:24:32Z","body":"Port raycast accelerator from Bullet's btHeightfieldTerrainShape (originally made by @Zylann).\r\nAllows raycasting on heightmap shapes to have about the same performance in Godot Physics as in Bullet.\r\n\r\n3.x backport of PR #48708","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":644353403,"public_id":48708,"url":"https://github.com/godotengine/godot/pull/48708","diff_url":"https://github.com/godotengine/godot/pull/48708.diff","patch_url":"https://github.com/godotengine/godot/pull/48708.patch","title":"Optimize raycast with large Heightmap shape data","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-14T00:46:31Z","updated_at":"2021-08-08T15:30:19Z","body":"Port raycast accelerator from Bullet's btHeightfieldTerrainShape (originally made by @Zylann).\r\nAllows raycasting on heightmap shapes to have about the same performance in Godot Physics as in Bullet.\r\n\r\nMore technical details in the original Bullet PR: https://github.com/bulletphysics/bullet3/pull/2062\r\n\r\n---\r\nTested with the 3.x port based on test case from https://github.com/godotengine/godot/pull/47347#issuecomment-807593094.\r\nZylann's terrain demo & add-on: https://github.com/Zylann/godot_hterrain_demo\r\nZylann's collision scanner add-on: https://github.com/Zylann/godot_collision_scanner\r\n\r\nTest configuration:\r\nCPU: AMD Ryzen 9 4900HS with Radeon Graphics, 3000 Mhz, 8 Core(s), 16 Logical Processor(s)\r\nRAM: 16.0 GB\r\nDisplay: GeForce RTX 2060 with Max-Q Design/PCIe/SSE2\r\n\r\nResults:\r\nBullet - ~35s\r\nGodotPhysics - ~30s\r\nGodotPhysics (without the accelerator) - ~90s","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":644215504,"public_id":48700,"url":"https://github.com/godotengine/godot/pull/48700","diff_url":"https://github.com/godotengine/godot/pull/48700.diff","patch_url":"https://github.com/godotengine/godot/pull/48700.patch","title":"Fixed TabContainer/Tabs constants not working","state":"open","is_draft":false,"authored_by":{"id":6361957,"user":"parulina","avater":"https://avatars.githubusercontent.com/u/6361957?v=4","url":"https://github.com/parulina"},"created_at":"2021-05-13T20:02:54Z","updated_at":"2021-08-16T07:23:27Z","body":"The TabContainer/Tabs constants seemed to never have been properly reimplemented, so this PR fixes that and adds documentation. I made Hseparation change the tab spacing (as the original tooltip described) and made another constant, label_margin, change the spacing between label, icon and close button. The label_valign constants now work as well.\r\n\r\nFixes #31851","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828781,1828783,2785428,3112904,3112906,3112907,3112909,3112910,3112912,3112913,3377457,3388402,3609449,4038183,4417777,4417819,4417868,4418376,4418380,4418392,4418403,4418424,4418518,4418542,4418558,4418563,4418605,4418718,4418726,4418733,4418914,4418923]},{"id":643738143,"public_id":48686,"url":"https://github.com/godotengine/godot/pull/48686","diff_url":"https://github.com/godotengine/godot/pull/48686.diff","patch_url":"https://github.com/godotengine/godot/pull/48686.patch","title":"[macOS, 3.x] Prefer .app bundle icon over the default one.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-05-13T06:39:24Z","updated_at":"2021-08-06T11:24:33Z","body":"Same as #48685 for 3.x.\r\n\r\nLoad default (embedded `png`) only when there's no icon (`icns` file) in the app bundle, or running standalone executable. This allows users to change the editor icon without rebuilding it. See https://github.com/godotengine/godot-proposals/issues/1616\r\n","target_branch":"3.x","labels":[{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112904,4418914]},{"id":643731583,"public_id":48685,"url":"https://github.com/godotengine/godot/pull/48685","diff_url":"https://github.com/godotengine/godot/pull/48685.diff","patch_url":"https://github.com/godotengine/godot/pull/48685.patch","title":"[macOS, 4.x] Prefer .app bundle icon over the default one.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-05-13T06:29:18Z","updated_at":"2021-05-13T06:29:20Z","body":"Load default (embedded `png`) only when there's no icon (`icns` file) in the app bundle, or running standalone executable. This allows users to change the editor icon without rebuilding it. See https://github.com/godotengine/godot-proposals/issues/1616","target_branch":"master","labels":[{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,4418914]},{"id":642388201,"public_id":48660,"url":"https://github.com/godotengine/godot/pull/48660","diff_url":"https://github.com/godotengine/godot/pull/48660.diff","patch_url":"https://github.com/godotengine/godot/pull/48660.patch","title":"Add a Python script to create new test suites more quickly","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-12T00:03:01Z","updated_at":"2021-05-12T12:51:45Z","body":"While working on https://github.com/godotengine/godot/pull/48657, I found it a bit annoying to have to create test suite files by hand.\r\n\r\nHopefully, this script should make things a little more seamless :slightly_smiling_face:\r\n\r\n<details>\r\n<summary>Example output (`tests/create_test.py ExampleClass`)</summary>\r\n\r\n```cpp\r\n/*************************************************************************/\r\n/*  test_example_class.h                                                 */\r\n/*************************************************************************/\r\n/*                       This file is part of:                           */\r\n/*                           GODOT ENGINE                                */\r\n/*                      https://godotengine.org                          */\r\n/*************************************************************************/\r\n/* Copyright (c) 2007-2021 Juan Linietsky, Ariel Manzur.                 */\r\n/* Copyright (c) 2014-2021 Godot Engine contributors (cf. AUTHORS.md).   */\r\n/*                                                                       */\r\n/* Permission is hereby granted, free of charge, to any person obtaining */\r\n/* a copy of this software and associated documentation files (the       */\r\n/* \"Software\"), to deal in the Software without restriction, including   */\r\n/* without limitation the rights to use, copy, modify, merge, publish,   */\r\n/* distribute, sublicense, and/or sell copies of the Software, and to    */\r\n/* permit persons to whom the Software is furnished to do so, subject to */\r\n/* the following conditions:                                             */\r\n/*                                                                       */\r\n/* The above copyright notice and this permission notice shall be        */\r\n/* included in all copies or substantial portions of the Software.       */\r\n/*                                                                       */\r\n/* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,       */\r\n/* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF    */\r\n/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.*/\r\n/* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  */\r\n/* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  */\r\n/* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE     */\r\n/* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                */\r\n/*************************************************************************/\r\n\r\n#ifndef TEST_EXAMPLE_CLASS_H\r\n#define TEST_EXAMPLE_CLASS_H\r\n\r\n#include \"tests/test_macros.h\"\r\n\r\nnamespace TestExampleClass {\r\n\r\nTEST_CASE(\"[ExampleClass] Example test case\") {\r\n    // TODO: Remove this comment and write your test code here.\r\n}\r\n\r\n} // namespace TestExampleClass\r\n\r\n#endif // TEST_EXAMPLE_CLASS_H\r\n```\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":641864195,"public_id":48654,"url":"https://github.com/godotengine/godot/pull/48654","diff_url":"https://github.com/godotengine/godot/pull/48654.diff","patch_url":"https://github.com/godotengine/godot/pull/48654.patch","title":"Add Minimum and Maximum blend modes to CanvasItem and Spatial shaders","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-11T21:17:01Z","updated_at":"2021-05-11T21:17:45Z","body":"`master` version of https://github.com/godotengine/godot/pull/48004.\r\n\r\nDifferences from the `3.x` PR:\r\n\r\n- The final result looks different (see https://github.com/godotengine/godot/pull/48004#issuecomment-839146688). Which one is correct?\r\n- The blend mode enum is ordered differently to ensure the \"premultiplied alpha\" and \"disabled\" options are last. This breaks compatibility with existing materials, but is more consistent.\r\n- The enum value and blend mode is named \"Minimum\" and \"Maximum\" instead of \"Min\" and \"Max\". This avoids a conflict with `_MAX` being used within Godot to denote the highest possible value of an enum.\r\n\r\nThese blend modes are useful for some special effects.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2621.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":641308903,"public_id":48652,"url":"https://github.com/godotengine/godot/pull/48652","diff_url":"https://github.com/godotengine/godot/pull/48652.diff","patch_url":"https://github.com/godotengine/godot/pull/48652.patch","title":"Add basis path testing for get_closest_points_between_segments 2D","state":"open","is_draft":false,"authored_by":{"id":17705920,"user":"alexbilledeaux","avater":"https://avatars.githubusercontent.com/u/17705920?v=4","url":"https://github.com/alexbilledeaux"},"created_at":"2021-05-11T18:20:34Z","updated_at":"2021-05-12T11:08:10Z","body":"New tests for the closest_points_between_segments method in Geometry2D, based on basis path testing.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":638565812,"public_id":48627,"url":"https://github.com/godotengine/godot/pull/48627","diff_url":"https://github.com/godotengine/godot/pull/48627.diff","patch_url":"https://github.com/godotengine/godot/pull/48627.patch","title":"Fix reloading of csharpscripts that have orphaned references awaiting gc","state":"open","is_draft":false,"authored_by":{"id":5015415,"user":"dazKind","avater":"https://avatars.githubusercontent.com/u/5015415?v=4","url":"https://github.com/dazKind"},"created_at":"2021-05-10T22:19:11Z","updated_at":"2021-08-13T12:24:48Z","body":"Fix for #48590\r\n\r\nSuccessfully tested in release_debug & debug on 3.3 in several multi-hour long editor-sessions, mostly porting, building and debugging procedural content generation through C# tool-/editorscripts.\r\n\r\nI contribute this for 3.3 and not 3.x/master bc my focus and alloted qa time is on stable. The commit itself is simple and should be easily moved/cherrypicked.\r\n","target_branch":"3.3","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":6551391,"title":"3.3","url":"https://github.com/godotengine/godot/milestone/11"},"teams":[]},{"id":638436118,"public_id":48625,"url":"https://github.com/godotengine/godot/pull/48625","diff_url":"https://github.com/godotengine/godot/pull/48625.diff","patch_url":"https://github.com/godotengine/godot/pull/48625.patch","title":"[3.x] Added Mesh Compression Import Options","state":"open","is_draft":false,"authored_by":{"id":14830461,"user":"The-O-King","avater":"https://avatars.githubusercontent.com/u/14830461?v=4","url":"https://github.com/The-O-King"},"created_at":"2021-05-10T20:58:02Z","updated_at":"2021-08-06T11:24:33Z","body":"Fleshed out the \"Optimize Mesh\" options found in the mesh import UI\r\nGave a checkbox to every vertex attribute that can be compressed\r\n\r\nAlso surfaces the vertex position compression option which previously\r\ninaccessible because the defaults did not compress vertex positions\r\n\r\nSupports all current importers (obj, fbx, collada, gltf)\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":636346670,"public_id":48596,"url":"https://github.com/godotengine/godot/pull/48596","diff_url":"https://github.com/godotengine/godot/pull/48596.diff","patch_url":"https://github.com/godotengine/godot/pull/48596.patch","title":"Fix trimming text input in Find in Files ","state":"open","is_draft":false,"authored_by":{"id":32919777,"user":"brennengreen","avater":"https://avatars.githubusercontent.com/u/32919777?v=4","url":"https://github.com/brennengreen"},"created_at":"2021-05-09T21:28:56Z","updated_at":"2021-06-17T08:32:38Z","body":"find_in_files.cpp previous had a number of calls to strip_edges() this caused a bug where, even if \"whole words\" was not selected, the search would not preserve white-space.\r\n\r\nAs noted by @cptchuckles in #48464 it seems to create an erroneous assumption of what the user wants to find. Instead of just listening to the user.\r\n\r\nThis merge fixes that issue while also maintaining the functionality of the \"whole words\" option by only stripping the whitespace edges of search queries *if* that box is checked.\r\n\r\nFixes #48464 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418558]},{"id":635487646,"public_id":48570,"url":"https://github.com/godotengine/godot/pull/48570","diff_url":"https://github.com/godotengine/godot/pull/48570.diff","patch_url":"https://github.com/godotengine/godot/pull/48570.patch","title":"Tweak the name for new animations in the editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-09T07:10:36Z","updated_at":"2021-05-09T07:10:52Z","body":"- Use snake_case to \"suggest\" the naming that fits the Godot style guide.\n- Fully spell out \"new_animation\" since both editors can fit it in full.\n- Don't internationalize the new animation name to have consistent behavior between both editors.\n  - Since the recommendation is to follow snake_case, special characters should also be avoided in the name to make animations easier to refer to in code.\n\nThis is technically not a breaking change because it only impacts the name of animations added via the editor (not by code). However, it can break user expectations for those who are used to naming their animations *Like This*. Due to this, I'm not sure if this should be cherry-picked to the `3.x` branch (apart of the translation consistency fix).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":634951263,"public_id":48566,"url":"https://github.com/godotengine/godot/pull/48566","diff_url":"https://github.com/godotengine/godot/pull/48566.diff","patch_url":"https://github.com/godotengine/godot/pull/48566.patch","title":"Make LineEdit underlines thinner in the editor theme","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-08T21:47:57Z","updated_at":"2021-05-09T12:03:10Z","body":"This also fixes a typo in the code that disables the bottom rounded corners.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch as this only pertains to the new editor theme.\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n![2021-05-08_23 45 08](https://user-images.githubusercontent.com/180032/117554425-d8bf6f80-b057-11eb-9403-676cf2dd06e8.png)\r\n\r\n### After\r\n\r\n![2021-05-08_23 46 15](https://user-images.githubusercontent.com/180032/117554426-d9580600-b057-11eb-983c-8ee9017cd387.png)\r\n\r\n### Alternative (not included in this PR)\r\n\r\nAlternatively, we may want to keep the rounded corners at the bottom while making underlines thinner. It would look like this:\r\n\r\n![image](https://user-images.githubusercontent.com/180032/117554464-38b61600-b058-11eb-869f-937c67931874.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":634664839,"public_id":48561,"url":"https://github.com/godotengine/godot/pull/48561","diff_url":"https://github.com/godotengine/godot/pull/48561.diff","patch_url":"https://github.com/godotengine/godot/pull/48561.patch","title":"Visually line up the selected tab with the underlying panel with borders","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-08T16:57:42Z","updated_at":"2021-05-09T08:45:40Z","body":"It's not perfect due to the lack of per-border colors in StyleBoxFlat, but it looks good enough at a glance.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/48552.\r\n\r\n**Note:** Not cherry-pickable to the `3.x` branch as this only applies to the new editor theme.\r\n\r\n## Preview\r\n\r\n*Border Size is set to 2 to make the remaining visual discrepancy more noticeable. With Border Size set to 1, the visual discrepancy is hardly visible.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/117547321-4dca7f00-b02f-11eb-9f6a-f6a6157c89ec.png)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":633801122,"public_id":48551,"url":"https://github.com/godotengine/godot/pull/48551","diff_url":"https://github.com/godotengine/godot/pull/48551.diff","patch_url":"https://github.com/godotengine/godot/pull/48551.patch","title":"[3.x] Optimize area detection and intersect_shape queries with concave shapes","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-08T02:32:15Z","updated_at":"2021-08-08T15:29:09Z","body":"Whenever contact points are not needed, collision checks with concave shapes (triangle mesh and heightmap) stop at the first colliding triangle.\r\n\r\nCan lead to massive performance boost with concave shapes.\r\n\r\n3.x backport of #48550.\r\n\r\n---\r\n\r\nTest project:\r\n[physics_tests_area.zip](https://github.com/godotengine/godot/files/6445016/physics_tests_area.zip)\r\n(default scene for area test, will be added to official physics tests after some cleaning)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":633799416,"public_id":48550,"url":"https://github.com/godotengine/godot/pull/48550","diff_url":"https://github.com/godotengine/godot/pull/48550.diff","patch_url":"https://github.com/godotengine/godot/pull/48550.patch","title":"Optimize area detection and intersect_shape queries with concave shapes","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-08T02:30:31Z","updated_at":"2021-08-08T15:30:20Z","body":"Whenever contact points are not needed, collision checks with concave shapes (triangle mesh and heightmap) stop at the first colliding triangle.\r\n\r\nCan lead to massive performance boost with concave shapes.\r\n\r\n---\r\n\r\nTest project:\r\n[physics_tests_area.zip](https://github.com/godotengine/godot/files/6445016/physics_tests_area.zip)\r\n(default scene for area test, will be added to official physics tests after some cleaning)\r\n(3.x only)\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":633583458,"public_id":48548,"url":"https://github.com/godotengine/godot/pull/48548","diff_url":"https://github.com/godotengine/godot/pull/48548.diff","patch_url":"https://github.com/godotengine/godot/pull/48548.patch","title":"Document most editor settings in the class reference","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-07T23:02:02Z","updated_at":"2021-07-25T18:12:01Z","body":"Settings defined in editor plugins are missing (about 100 of them), but all other settings (about 200 of them) are now documented in the EditorSettings class.\r\n\r\nThis PR can be remade for the `3.x` branch once we reach an agreement on its design.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1339 and closes https://github.com/godotengine/godot-docs/issues/395. See also https://github.com/godotengine/godot/pull/49524 and #49525 (can be merged independently).\r\n\r\n## Preview\r\n\r\n*Disregard the black text – it's not a bug related to this PR.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/117516308-0f828080-af99-11eb-9a35-fbc6c479349d.png)\r\n\r\n## TODO\r\n\r\n- [x] Write descriptions for all editor settings currently present in the XML.\r\n- [x] Fix segfault at the end of `--doctool .` run (the XML is still generated fine).\r\n\r\nIn a future PR, I'll move editor setting default declarations to be located as much as possible in `editor/editor_settings.cpp`, so they can all be picked up by doctool and then documented.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":632488759,"public_id":48527,"url":"https://github.com/godotengine/godot/pull/48527","diff_url":"https://github.com/godotengine/godot/pull/48527.diff","patch_url":"https://github.com/godotengine/godot/pull/48527.patch","title":"[macOS] Set fullscreen collection behavior for both hi-DPI and low-DPI mode.","state":"open","is_draft":true,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-05-07T09:55:53Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #45537","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":631018895,"public_id":48498,"url":"https://github.com/godotengine/godot/pull/48498","diff_url":"https://github.com/godotengine/godot/pull/48498.diff","patch_url":"https://github.com/godotengine/godot/pull/48498.patch","title":"[3.x] Deterministic constraint map in Godot Physics solver","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-06T00:48:27Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x backport of #48497\r\n\r\nMakes the physics solver more deterministic for all types of physics objects (areas, rigid bodies, soft bodies) in both 2D and 3D physics.\r\n\r\nThis PR iterates on #44112 by @jordo, which made 2D physics more deterministic, but it doesn't require #44112 to be ported to the 3.x branch.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":631007101,"public_id":48497,"url":"https://github.com/godotengine/godot/pull/48497","diff_url":"https://github.com/godotengine/godot/pull/48497.diff","patch_url":"https://github.com/godotengine/godot/pull/48497.patch","title":"Deterministic constraint map in Godot Physics solver","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-05-06T00:17:35Z","updated_at":"2021-05-06T00:48:40Z","body":"This PR iterates on #44112 by @jordo, which made 2D physics more deterministic. This PR changes the container from a `List` back to a `Map` because it was causing a drop in performance, and applies the same change to all types of physics objects (areas, rigid bodies, soft bodies) in both 2D and 3D physics.\r\n\r\nFixes #48303\r\n\r\nDetailed list of changes:\r\n- Common constraint map in CollisionObjectSW instead of separate containers for rigid body, soft body, area\r\n- Removed index in rigid body constraints (it was only used to test bodies from a constraint against a specific body)\r\n- Added incremental constraint id as key in constraint map (instead of pointer) to help with determinism\r\n- In 2D, this system replaces the previous `List` implementation which was making the solver slower (by 30% in some cases)\r\n\r\n@jordo: Could you please test again with your project on 4.0 to make sure it still works for you?\r\nWith your previous PR, I wasn't seeing any change in determinism in either 3.x or 4.0 (I had tested in debug only).\r\nWith this one, I can see a difference in the 3.x version (debug and release_debug) but not in 4.0.\r\nThere must be something happening with my compiler that might need more investigation later, but I'd like to make sure there's at least no regression.\r\n\r\nTest project:\r\n[physics-2d.zip](https://github.com/godotengine/godot/files/5667459/physics-2d.zip)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":630186669,"public_id":48465,"url":"https://github.com/godotengine/godot/pull/48465","diff_url":"https://github.com/godotengine/godot/pull/48465.diff","patch_url":"https://github.com/godotengine/godot/pull/48465.patch","title":"Fixed InputMap::action_erase_event erasing stick movement in the opposite direction.","state":"open","is_draft":false,"authored_by":{"id":7751182,"user":"jitspoe","avater":"https://avatars.githubusercontent.com/u/7751182?v=4","url":"https://github.com/jitspoe"},"created_at":"2021-05-05T00:28:48Z","updated_at":"2021-08-06T11:24:33Z","body":"This is to fix https://github.com/godotengine/godot/issues/47965 where trying to unbind an action on a joystick axis will unbind it for both the positive and negative movement instead of just the direction specified.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":629517926,"public_id":48438,"url":"https://github.com/godotengine/godot/pull/48438","diff_url":"https://github.com/godotengine/godot/pull/48438.diff","patch_url":"https://github.com/godotengine/godot/pull/48438.patch","title":"Add `editordeps` folder with scons toggle opt and EDITORDEPS_DISABLED macro flag.","state":"open","is_draft":false,"authored_by":{"id":16217563,"user":"willnationsdev","avater":"https://avatars.githubusercontent.com/u/16217563?v=4","url":"https://github.com/willnationsdev"},"created_at":"2021-05-04T05:02:49Z","updated_at":"2021-05-31T19:37:24Z","body":"Lays the foundation for godotengine/godot-proposals#2063. Whether or not it closes the issue depends on whether we want to leave it open for people to suggest things that should be refactored out or delegate that entirely to separate proposals.\r\n\r\n`/editordeps` can now have source code files added to it which can safely be accessed from `/editor` and anything in `/modules`. It is assumed that `/core`, `/servers`, and `/scene` have been loaded prior to `/editordeps` and that `/editordeps` is loaded before `/editor` (at least, to my understanding. Someone should check my SConstruct code since I'm not experienced with it).\r\n\r\nModules that reference it should take care that their code is wrapped in a flag check though since the editor dependencies can be independently added or removed from the build similar to Advanced GUI and 3D features. Example:\r\n\r\n```cpp\r\n#ifndef EDITORDEPS_DISABLED\r\n#include \"editordeps/summator.h\"\r\n#endif\r\n```\r\n\r\nThe SConstruct file prints an error and exits early if users attempt to build with `disable_editordeps=yes tools=yes`.\r\n\r\nIf people want to change the name of the directory/option/macro, that's fine too. I have no preference.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,4417819,4417868,4418424,4418518,4418542,4418550,4418558,4418563,4418605,4418718,4418726,4418733,4418914]},{"id":629392809,"public_id":48431,"url":"https://github.com/godotengine/godot/pull/48431","diff_url":"https://github.com/godotengine/godot/pull/48431.diff","patch_url":"https://github.com/godotengine/godot/pull/48431.patch","title":"Fix property warning when updating inspector","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-05-03T22:00:43Z","updated_at":"2021-05-04T07:30:50Z","body":"Fixes #46289\r\n\r\nThe warning came from here:\r\nhttps://github.com/godotengine/godot/blob/f47c285f678345f5fde6937deb8bd740589beb83/editor/editor_inspector.cpp#L2473-L2481\r\nNow, I don't 100% understand this code, but my assumed cause of the bug is that the inspector was pending update (and presumably the properties were invalid at this time), but the update happened after a cache check on the properties was run. `is_cache_valid()` eventually triggered a warning, because the property didn't exist.\r\n\r\nThis could potentially be fixed by re-arranging the code, but the change I did is safer.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":628769474,"public_id":48395,"url":"https://github.com/godotengine/godot/pull/48395","diff_url":"https://github.com/godotengine/godot/pull/48395.diff","patch_url":"https://github.com/godotengine/godot/pull/48395.patch","title":"Backport nav server to 3.x","state":"open","is_draft":false,"authored_by":{"id":16636969,"user":"Duroxxigar","avater":"https://avatars.githubusercontent.com/u/16636969?v=4","url":"https://github.com/Duroxxigar"},"created_at":"2021-05-03T00:24:44Z","updated_at":"2021-08-06T11:24:33Z","body":"This is the nav server backported as much as I could. There are also a few additional changes that I made that I will be making a PR for in `master` - such as improved error messaging and fixing a race condition.\r\n\r\nDid not implement #47024 because it included some potentially breaking features, such as removing the navigation node and implementing navigation layers. I can backport it - just need the okay to do so. This also means other PRs that fixed things due to this PR, was not implemented either.\r\n\r\nDid not implement #48028 because it kept crashing the engine in the 3.x branch. Even when I tried to do the 3.x equivalent. There may be something that I have overlooked about it.\r\n\r\nOther than these, I'm fairly certain I got everything. I may have missed a PR or two, but all the major ones were implemented. I have tested the new workflow, as well as the old (using `get_simple_path()`) and both work. So this means that people who are relying on the old workflow should not notice a change or anything breaking.\r\n\r\nI also have a Windows [build](https://duroxxigar.itch.io/nav-backport) (x64) people should be able to download and try out. I wasn't able to build for any other platforms, because I lack the tooling to do so. All the documentation should be updated as well.\r\n\r\nThere is a known issue (which exists on `master` as well) in one instance that I've found. If you are trying to command an agent to move to a certain location by mouse click (and do the raycast and all that jazz), when it gets to the final location, the agent oscillates as if they can't actually get to the position. This can be scripted around by slightly increasing the `target_desired_distance` property in the agent. According to Andreas, [this kind of jitter is expected](https://github.com/godotengine/godot/pull/34776#issuecomment-571478281). I did not observe this when utilizing the nav server with AI chasing the player or any other thing of the sort.\r\n\r\nIf the checks fail for formatting - I'll address that when it is pretty much time to merge.","target_branch":"3.x","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418376,4418518,4418718,4418726,4418914]},{"id":628611094,"public_id":48385,"url":"https://github.com/godotengine/godot/pull/48385","diff_url":"https://github.com/godotengine/godot/pull/48385.diff","patch_url":"https://github.com/godotengine/godot/pull/48385.patch","title":"Reorder properties in the Particle node inspectors for better usability","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-02T13:26:18Z","updated_at":"2021-05-10T16:58:05Z","body":"The most \"important\" properties (process material and mesh/texture) are now placed at the top.\r\n\r\nThe GPUParticles3D Draw Passes section folding was removed since it often got in the way (in my experience). This means the new GPUParticles3D inspector will take less space when having 1-2 draw passes, but will take more space if you have more draw passes (which is uncommon).\r\n\r\nThis applies to CPU and GPU particles, in both 2D and 3D.\r\n\r\nSince this change is backwards-compatible, a `3.x` version of this PR can be made once we reach an agreement on this one.\r\n\r\n## Preview\r\n\r\n*All inspectors were fully expanded by clicking the toolbox icon in the top-right corner then choosing **Expand All Properties**.*\r\n\r\n### GPUParticles2D\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![GPUParticles2D Before](https://user-images.githubusercontent.com/180032/116814787-c2e31380-ab5a-11eb-9326-854abae0b0f1.png) | ![GPUParticles2D After](https://user-images.githubusercontent.com/180032/116814781-c1b1e680-ab5a-11eb-900f-7f5c05d069b0.png) |\r\n\r\n\r\n### GPUParticles3D\r\n\r\n***Note:** The \"Before\" screenshot looks more compact because it's missing one property (I was using a build that didn't have particle trails support).*\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![GPUParticles3D Before](https://user-images.githubusercontent.com/180032/116814788-c37baa00-ab5a-11eb-80e5-3d9d3467c6b7.png) | ![GPUParticles3D After](https://user-images.githubusercontent.com/180032/116815015-e195da00-ab5b-11eb-9773-f44e4d47646c.png) |\r\n\r\n### CPUParticles2D\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![CPUParticles2D Before](https://user-images.githubusercontent.com/180032/116814789-c4144080-ab5a-11eb-962c-a73af4863744.png) | ![CPUParticles2D After](https://user-images.githubusercontent.com/180032/116814785-c2e31380-ab5a-11eb-8f79-a386b825ae75.png) |\r\n\r\n### CPUParticles3D\r\n\r\n| Before | After |\r\n|--------|-------|\r\n| ![CPUParticles3D Before](https://user-images.githubusercontent.com/180032/116814791-c4144080-ab5a-11eb-912f-482da4f87512.png) | ![CPUParticles3D After](https://user-images.githubusercontent.com/180032/116814786-c2e31380-ab5a-11eb-8bf9-3dced2f1ff4f.png) |","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542,4418550,4418718,4418726]},{"id":628533478,"public_id":48374,"url":"https://github.com/godotengine/godot/pull/48374","diff_url":"https://github.com/godotengine/godot/pull/48374.diff","patch_url":"https://github.com/godotengine/godot/pull/48374.patch","title":"Add an `use_hdr` property to GradientTexture to allow storing HDR colors","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-02T03:19:09Z","updated_at":"2021-08-13T21:16:46Z","body":"`master` version of https://github.com/godotengine/godot/pull/48372.\r\n\r\nThis is disabled by default to save some memory and preserve the existing behavior of clamping colors.\r\n\r\n**Question:** Should we enable HDR by default in the `master` version of this PR? Most gradients will not require it, but the difference in memory usage is likely quite small anyway (especially if we go forward with https://github.com/godotengine/godot/pull/47410).\r\n\r\nI can't show a preview with glow for `master` because the Canvas Environment mode doesn't behave properly on that branch.\r\n\r\n**Testing project:** [test_gradient_texture_hdr.zip](https://github.com/godotengine/godot/files/6410716/test_gradient_texture_hdr.zip)\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2655.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":628532099,"public_id":48372,"url":"https://github.com/godotengine/godot/pull/48372","diff_url":"https://github.com/godotengine/godot/pull/48372.diff","patch_url":"https://github.com/godotengine/godot/pull/48372.patch","title":"Add an `use_hdr` property to GradientTexture to allow storing HDR colors (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-02T03:02:35Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/48374.\r\n\r\nThis is disabled by default to save some memory and preserve the existing behavior of clamping colors.\r\n\r\n## Preview\r\n\r\n![2021-05-02_04 59 55](https://user-images.githubusercontent.com/180032/116800754-3d347900-ab04-11eb-8fe1-a78e43e94109.png)\r\n\r\n**Testing project:** [test_gradient_texture_hdr_3.x.zip](https://github.com/godotengine/godot/files/6410709/test_gradient_texture_hdr_3.x.zip)\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783]},{"id":628509932,"public_id":48366,"url":"https://github.com/godotengine/godot/pull/48366","diff_url":"https://github.com/godotengine/godot/pull/48366.diff","patch_url":"https://github.com/godotengine/godot/pull/48366.patch","title":"Add a V-Sync editor setting (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-01T23:27:20Z","updated_at":"2021-08-06T11:24:32Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/48364.\n\nThe editor setting makes it possible to tweak V-Sync status independently of the project setting.\n\nUse cases:\n\n- Decrease input lag and increase editor responsiveness when editing a project that has V-Sync enabled.\n- Avoid tearing when editing a project that has V-Sync disabled.\n\nInspired by https://github.com/godotengine/godot/pull/20916, but the default behavior is now to have V-Sync enabled.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":628509444,"public_id":48364,"url":"https://github.com/godotengine/godot/pull/48364","diff_url":"https://github.com/godotengine/godot/pull/48364.diff","patch_url":"https://github.com/godotengine/godot/pull/48364.patch","title":"Add a V-Sync editor setting","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-05-01T23:22:17Z","updated_at":"2021-07-10T15:26:45Z","body":"`master` version of https://github.com/godotengine/godot/pull/48366.\r\n\r\nThe editor setting makes it possible to tweak V-Sync status independently of the project setting.\r\n\r\nUse cases:\r\n\r\n- Decrease input lag and increase editor responsiveness when editing a project that has V-Sync enabled.\r\n- Avoid tearing when editing a project that has V-Sync disabled.\r\n\r\nInspired by https://github.com/godotengine/godot/pull/20916, but the default behavior is now to have V-Sync enabled.\r\n\r\nSee also https://github.com/godotengine/godot-proposals/issues/1923.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":628334216,"public_id":48343,"url":"https://github.com/godotengine/godot/pull/48343","diff_url":"https://github.com/godotengine/godot/pull/48343.diff","patch_url":"https://github.com/godotengine/godot/pull/48343.patch","title":"[3.x] Correctly support multiple events mapped to a single action","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-05-01T05:06:15Z","updated_at":"2021-08-06T11:24:33Z","body":"3.x backport of #47599.\r\n\r\nAlthough this breaks compat, the breaking changes may be considered worth it for 3.4. If not, it at least provides a way of testing the changes in #47599 using current 3.x projects.\r\n\r\nThe breaking changes are:\r\n1. Calls to `InputEvent`'s `get_action_strength()`, `is_action_pressed()` and `is_action_released()` will now update the status of the action. Previously, only actual received events would.\r\n2. `InputMap`'s `event_is_action()` has been removed.\r\n3. `InputEventAction`'s strength property could be 0, while `is_pressed()` returned `true`.\r\n\r\nI don't think any of them are critical, and the changes may actually be considered enhancements.\r\nNote:\r\n1. The `InputEvent` methods have duplicates in [`Input`](https://docs.godotengine.org/en/stable/classes/class_input.html), which I think make more sense to use. I would suggest removing the `InputEvent` versions, but they're used in the engine here:\r\nhttps://github.com/godotengine/godot/blob/4a7679e4dd9f68270b3d27797146f88491f182b8/scene/main/viewport.cpp#L2399-L2430\r\n2. `InputMap` also has `action_has_event()`, which is the same as `event_is_action()` with parameters reversed; except keyboard modifiers are not ignored.\r\n\r\nFinally, as with #47599, I've tested these changes with keyboard keys and mouse buttons, but I've added the `needs testing` label, because I don't have a gamepad to test `JoyButton` or `JoyAxis` events, or confirm that it fixes #39287 and #45628.","target_branch":"3.x","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418403,4418914]},{"id":628322134,"public_id":48340,"url":"https://github.com/godotengine/godot/pull/48340","diff_url":"https://github.com/godotengine/godot/pull/48340.diff","patch_url":"https://github.com/godotengine/godot/pull/48340.patch","title":"Add tangents and normals generation by smoothing for SurfaceTool","state":"open","is_draft":false,"authored_by":{"id":76991284,"user":"sboron","avater":"https://avatars.githubusercontent.com/u/76991284?v=4","url":"https://github.com/sboron"},"created_at":"2021-05-01T03:41:58Z","updated_at":"2021-05-09T17:06:51Z","body":"This PR extends the SurfaceTool by two new methods which make it possible to generate \"Normals\" and \"Tangents\" faster than usual and to smooth them. Which brings more details and is a common practice in 3D applications (such as Blender).\r\n\r\nTo compare the classic methods against the extensions:\r\n\r\n- **test generate_normals_smoothed**\r\n- Generated normals for mesh in 6 ms (758 vertices, 3924 indices)\r\n- **test generate_tangents_smoothed**\r\n- Generated tangents for mesh in 7 ms (758 vertices, 3924 indices)\r\n- **test generate_normals**\r\n- Generated normals for mesh (old) in 10 ms (758 vertices, 3924 indices)\r\n- **test generate_tangents**\r\n- Generated tangents for mesh (old) in 15 ms (758 vertices, 3924 indices)\r\n\r\nIn addition, the long outdated third party tool \"mikktspace\" becomes superfluous. It should therefore be considered whether the standard methods (generate_normals and generate_tangents) are replaced by the new methods.\r\n\r\nThis PR is part of a larger PR which deals with the issues of tangent and normal generations up to the representation in the shader. This is part 1. Each part is an independent part and solves an independent problem.\r\n\r\n\r\nExample image:\r\n\r\n![image](https://user-images.githubusercontent.com/76991284/116769900-ebc2b600-aa3f-11eb-847f-6640a1221ce5.png)\r\n![image](https://user-images.githubusercontent.com/76991284/116769959-5673f180-aa40-11eb-803e-3ba55c815f88.png)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":627597619,"public_id":48332,"url":"https://github.com/godotengine/godot/pull/48332","diff_url":"https://github.com/godotengine/godot/pull/48332.diff","patch_url":"https://github.com/godotengine/godot/pull/48332.patch","title":"Implement reverse playback and ping-pong loop in AnimationPlayer and NodeAnimation","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-04-30T15:31:17Z","updated_at":"2021-08-12T22:58:17Z","body":"For this proposal:\r\n- [#2664](https://github.com/godotengine/godot-proposals/issues/2664) Add to support ping-pong loop in AnimationPlayer and playing backwards and ping-pong loop in NodeAnimation of AnimationTree\r\n\r\n![playmode](https://user-images.githubusercontent.com/61938263/116724994-5104b000-aa1c-11eb-9bcc-780bf1e10da5.png)\r\n\r\nhttps://www.youtube.com/watch?v=mBOkTA4_HZE\r\n\r\n**Note:**\r\nThis PR contains two PRs haven't merged as a prerequisite. One of them has been rejected in the past because its use was unclear, but this PR will require it. If you want to do the merge in stages, I recommend that you start with those PRs merges.\r\n\r\n- [#41728](https://github.com/godotengine/godot/pull/41728) Implement reverse playback for animtree\r\n- [#46346](https://github.com/godotengine/godot/pull/46346) Added pingpong built-in function","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,3857901,4417868,4418380,4418424,4418914]},{"id":627452169,"public_id":48329,"url":"https://github.com/godotengine/godot/pull/48329","diff_url":"https://github.com/godotengine/godot/pull/48329.diff","patch_url":"https://github.com/godotengine/godot/pull/48329.patch","title":"[Net] Fix bogus FileAccessNetwork deconstructor.","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2021-04-30T13:56:30Z","updated_at":"2021-07-16T18:23:51Z","body":"Now correctly erases old instances.\r\nThe code will likely need overhaul anyway to be usable.\r\nIt doesn't apply to editor runs, there's a bunch of inconsistencies on how to clients are handled, and I don't really understand why multiple instances are created for a single client/server.\r\n\r\nFixes #48326 .","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":627268989,"public_id":48327,"url":"https://github.com/godotengine/godot/pull/48327","diff_url":"https://github.com/godotengine/godot/pull/48327.diff","patch_url":"https://github.com/godotengine/godot/pull/48327.patch","title":"[3.x] Fix create skeleton physical bones ","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-04-30T11:11:51Z","updated_at":"2021-08-06T11:24:32Z","body":"Fix issue #39757 but for Godot 3.x\r\n\r\nReuse almost same code at Godot 4.0 to generate skeleton bones position. (see #48310)\r\nCould not cherry-pick since the file name was changed.\r\n\r\nPlease find here the reproduction project containing 6 test cases (3 models, DAE and GLTF)\r\n[testSkeleton-godot3-x.zip](https://github.com/godotengine/godot/files/6404853/testSkeleton-godot3-x.zip)\r\n\r\nJust select the skelon for each and click on Create Physical Skeleton.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6551391,"title":"3.3","url":"https://github.com/godotengine/godot/milestone/11"},"teams":[]},{"id":626529661,"public_id":48310,"url":"https://github.com/godotengine/godot/pull/48310","diff_url":"https://github.com/godotengine/godot/pull/48310.diff","patch_url":"https://github.com/godotengine/godot/pull/48310.patch","title":"Fix create physical bone when up vector is collinear to child origin","state":"open","is_draft":false,"authored_by":{"id":440909,"user":"Blackiris","avater":"https://avatars.githubusercontent.com/u/440909?v=4","url":"https://github.com/Blackiris"},"created_at":"2021-04-29T21:01:17Z","updated_at":"2021-08-21T19:45:33Z","body":"Fix issue #39757 but for Godot 4.0\r\n\r\nWhen generating physical bone, `set_look_at` is used to change the bone direction.\r\n\r\n`body_transform.set_look_at(Vector3(0, 0, 0), child_rest.origin);`\r\n\r\nHowever, if the vector child_rest.origin is collinear with the default up vector =Vector3(0, 1, 0), the cross product cannot generate a third vector (with length > 0) and `set_look_at` fails.\r\nIn order to avoid this issue, we first compute an up vector not collinear:\r\n```\r\n/// Get an up vector not collinear with child rest origin\r\nVector3 up = Vector3(0, 1, 0);\r\nif (up.cross(child_rest.origin).length() == 0) {\r\n\tup = Vector3(0, 0, 1);\r\n}\r\n```\r\n\r\nAnd then use it\r\n\r\n```\r\nbody_transform.set_look_at(Vector3(0, 0, 0), child_rest.origin, up);\r\n```\r\n\r\nPlease find a reproduction project for Godot 4.0 at https://github.com/godotengine/godot/issues/39757#issuecomment-829595289\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380,4418550]},{"id":626497726,"public_id":48307,"url":"https://github.com/godotengine/godot/pull/48307","diff_url":"https://github.com/godotengine/godot/pull/48307.diff","patch_url":"https://github.com/godotengine/godot/pull/48307.patch","title":"Show the 3D transform gizmo in the center when otherwise offscreen","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-04-29T20:23:47Z","updated_at":"2021-08-20T03:14:48Z","body":"Implements and closes https://github.com/godotengine/godot-proposals/issues/2673\r\n\r\nThis is a usability improvement requested by @LillyByte on Discord. This makes it so that the transform gizmo is always on the screen. This can be helpful when trying to position an object when the center isn't on screen. For example, a character whose origin/pivot/etc is in the middle, but your camera is pointing at the feet and you're trying to align it with the ground.\r\n\r\nThe way this is implemented is a little bit weird, if anyone has suggestions feel free to leave a review. Preview video:\r\n\r\nhttps://user-images.githubusercontent.com/1646875/116612981-27f1fb80-a906-11eb-8fe7-a226bcef8ae7.mp4\r\n\r\n![Screenshot from 2021-06-19 20-28-46](https://user-images.githubusercontent.com/1646875/122664151-8cdf0a80-d16d-11eb-8d03-18b3b1772fc1.png)\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":626130852,"public_id":48300,"url":"https://github.com/godotengine/godot/pull/48300","diff_url":"https://github.com/godotengine/godot/pull/48300.diff","patch_url":"https://github.com/godotengine/godot/pull/48300.patch","title":"[3.x] bullet: Sync with upstream 3.17","state":"open","is_draft":true,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2021-04-29T13:58:57Z","updated_at":"2021-08-06T11:24:33Z","body":"Backport of #48299.\r\n\r\nIncrease minimum version for distro packages to 2.90 (this was never released\r\nas the \"next\" version after 2.89 was 3.05... but that covers it too).\r\n\r\n---\r\n\r\nThis *might* change Bullet behavior, so I wouldn't cherry-pick for `3.3` in any case, but this might be a good update for 3.4+? WDYT @pouleyKetchoupp?\r\n\r\nNote that the major version change from 2.89 to 3.05 (and now 3.09) might seem a bit risky... but from what I've seen over the years I can't derive any kind of logic behind Bullet version numbers so we need to assess the API itself I guess, not trust the numbers.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":370471880,"name":"topic:physics","color":"#ffee88"},{"id":370471795,"name":"topic:thirdparty","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112907,4417777,4418518]},{"id":626088684,"public_id":48299,"url":"https://github.com/godotengine/godot/pull/48299","diff_url":"https://github.com/godotengine/godot/pull/48299.diff","patch_url":"https://github.com/godotengine/godot/pull/48299.patch","title":"bullet: Sync with upstream 3.17","state":"open","is_draft":true,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2021-04-29T13:05:47Z","updated_at":"2021-05-21T09:38:35Z","body":"Includes https://github.com/bulletphysics/bullet3/pull/3799.\r\n\r\nFixes #43868.\r\n\r\nThe duplicated comments in bullet code are a partial revert of #48187 since I synced with the unchanged `3.17` upstream code. They should be removed upstream if they matter.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"},{"id":370471795,"name":"topic:thirdparty","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777,4418518]},{"id":624327877,"public_id":48237,"url":"https://github.com/godotengine/godot/pull/48237","diff_url":"https://github.com/godotengine/godot/pull/48237.diff","patch_url":"https://github.com/godotengine/godot/pull/48237.patch","title":"Add Vector2.from_angle() method","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-04-27T13:56:38Z","updated_at":"2021-05-05T12:20:00Z","body":"Resolves 2D part of https://github.com/godotengine/godot-proposals/issues/1719 (someone wanted Vector3 equivalent, but it probably requires some more math so meh)\r\n\r\nWith this you can do\r\n```\r\nVector2.from_angle(PI/2)\r\n```\r\nand it will return `Vector2(0, 1)`\r\n\r\n(or at least it would if static functions weren't bugged, see #48238)","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":622900899,"public_id":48201,"url":"https://github.com/godotengine/godot/pull/48201","diff_url":"https://github.com/godotengine/godot/pull/48201.diff","patch_url":"https://github.com/godotengine/godot/pull/48201.patch","title":"Allow exporting custom resources from/to GDScript, VisualScript, C#, and PluginScript.","state":"open","is_draft":false,"authored_by":{"id":16217563,"user":"willnationsdev","avater":"https://avatars.githubusercontent.com/u/16217563?v=4","url":"https://github.com/willnationsdev"},"created_at":"2021-04-26T02:06:58Z","updated_at":"2021-07-26T04:56:16Z","body":"This is a ~~partial~~ complete 4.0 port of #44879. ~~It does not include the GDScript changes from that PR.~~ (Edit: it now exports GDScript resources in the new parser, and as far as I can tell, NativeScript and PluginScript have been rendered moot by GDNative Extensions)\r\n\r\nThe changes have been split up into digestible chunks as separate commits. That should hopefully make it easier to review.\r\n\r\nWhile I've tested it somewhat in 3.2.x, I have not yet had a chance to test this 4.0 port thoroughly.\r\n\r\nI believe the most controversial set of changes for which I have received limited feedback is \"Make script class editor UX feel like C++ types.\" I recall I wrote it in to help address related proposals, but I can't quite recall now which ones they were. Stuff about making named scripted types having a more authentic feel. Anyway, whether that commit is included really needs more community feedback.\r\n\r\nWhen a final approved version of the PR is ready, I can squash the commits and amend the message.\r\n\r\nAlso related is #48056 which has duplicate/similar code changes for some parts of the C# support section from this PR.\r\n\r\nEdit: Sorry about the 3D nodes reviewers. Accidentally included a previous commit in one of my rebased pushes. Please ignore that.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,3857901,4038183,4417868,4418563,4418726,4418914]},{"id":622796922,"public_id":48193,"url":"https://github.com/godotengine/godot/pull/48193","diff_url":"https://github.com/godotengine/godot/pull/48193.diff","patch_url":"https://github.com/godotengine/godot/pull/48193.patch","title":"Rename `BaseButton` signals to avoid name conflict and reflect event","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-25T16:35:28Z","updated_at":"2021-04-29T01:11:12Z","body":"Currently, `BaseButton` has a name conflict between the property called `pressed` and a signal called `pressed`. This PR renames the signal `pressed` to `button_clicked` to reflect the event that emits this signal. Also, for consistency, renames the `pressed()` and `_pressed()` methods to `clicked()` and `_clicked()` respectively. Finally, to better reflect their events, `button_down` is renamed `button_pressed` and `button_up` is renamed `button_released` to match the names used in `Action Mode`.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":622789141,"public_id":48190,"url":"https://github.com/godotengine/godot/pull/48190","diff_url":"https://github.com/godotengine/godot/pull/48190.diff","patch_url":"https://github.com/godotengine/godot/pull/48190.patch","title":"Add `INT32_MIN`, `INT32_MAX`, `INT64_MIN`, `INT64_MAX` constants","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-25T15:46:54Z","updated_at":"2021-06-22T08:00:02Z","body":"These are available in GDScript, Expression and VisualScript expressions.\r\nSince both PackedInt32Array and PackedInt64Array are exposed to GDScript, it makes sense to have constants for both 32-bit and 64-bit integers.\r\n\r\nThese constants aren't available in VisualScript Math constant nodes because it can only return `double`s, not integers.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2411. This PR can be remade for the `3.x` branch if desired.\r\n\r\n<details>\r\n<summary>Testing code</summary>\r\n\r\n```gdscript\r\nprint(INT32_MIN)\r\nprint(INT32_MAX)\r\nprint(INT64_MIN)\r\nprint(INT64_MAX)\r\n\r\nprint()\r\nprint(-INT32_MIN)\r\nprint(-INT32_MAX)\r\nprint(-INT64_MIN)\r\nprint(-INT64_MAX)\r\n\r\nprint()\r\nprint(2 * INT32_MIN)\r\nprint(2 * INT32_MAX)\r\nprint(2 * INT64_MIN)\r\nprint(2 * INT64_MAX)\r\n\r\nprint()\r\nvar exp = Expression.new()\r\nexp.parse(\"INT64_MAX\")\r\nprint(exp.execute())\r\n```\r\n\r\nShould print:\r\n\r\n```\r\n-2147483648\r\n2147483647\r\n-9223372036854775808\r\n9223372036854775807\r\n\r\n2147483648\r\n-2147483647\r\n-9223372036854775808\r\n-9223372036854775807\r\n\r\n-4294967296\r\n4294967294\r\n0\r\n-2\r\n\r\n9223372036854775807\r\n```\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418914]},{"id":622761915,"public_id":48183,"url":"https://github.com/godotengine/godot/pull/48183","diff_url":"https://github.com/godotengine/godot/pull/48183.diff","patch_url":"https://github.com/godotengine/godot/pull/48183.patch","title":"Generate error if RegEx offset is negative","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-25T12:59:38Z","updated_at":"2021-04-25T12:59:38Z","body":"Currently, if a negative offset is used, `RegEx` may result in undefined behaviour:\r\n```\r\nmodules/regex/regex.cpp:212:41: runtime error: implicit conversion from type 'int' of value -1 (32-bit, signed) to type 'size_t' (aka 'unsigned long') changed the value to 18446744073709551615 (64-bit, unsigned)\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior modules/regex/regex.cpp:212:41 in \r\nthirdparty/pcre2/src/pcre2_match.c:6130:34: runtime error: addition of unsigned offset to 0x60400033f5e0 overflowed to 0x60400033f5dc\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior thirdparty/pcre2/src/pcre2_match.c:6130:34 in \r\nmodules/regex/regex.cpp:307:46: runtime error: implicit conversion from type 'int' of value -1 (32-bit, signed) to type 'size_t' (aka 'unsigned long') changed the value to 18446744073709551615 (64-bit, unsigned)\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior modules/regex/regex.cpp:307:46 in \r\n```\r\nThis PR generates an error if a negative offset is passed to `RegEx`'s [`search()`](https://docs.godotengine.org/en/stable/classes/class_regex.html#class-regex-method-search), [`search_all()`](https://docs.godotengine.org/en/stable/classes/class_regex.html#class-regex-method-search-all) or [`sub()`](https://docs.godotengine.org/en/stable/classes/class_regex.html#class-regex-method-sub) methods.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":622738557,"public_id":48177,"url":"https://github.com/godotengine/godot/pull/48177","diff_url":"https://github.com/godotengine/godot/pull/48177.diff","patch_url":"https://github.com/godotengine/godot/pull/48177.patch","title":"[3.x] Fix PrimitiveMesh surface being unavailable immediately after creation","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-25T10:19:51Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #48176.\r\n\r\nI've added the `cherrypick:3.3` label as #46610 was a regression from 3.2.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2844817080,"name":"cherrypick:3.3","color":"#446699"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":622738525,"public_id":48176,"url":"https://github.com/godotengine/godot/pull/48176","diff_url":"https://github.com/godotengine/godot/pull/48176.diff","patch_url":"https://github.com/godotengine/godot/pull/48176.patch","title":"Fix PrimitiveMesh surface being unavailable immediately after creation","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-25T10:19:38Z","updated_at":"2021-04-27T06:34:55Z","body":"Fixes #46610.\r\n\r\nMakes calls to `PrimitiveMesh::_update()` wait until the `RenderingServer` has finished creating the surface before returning.\r\n\r\nAlso removes the variable `pending_request`, which was unnecessarily delaying the initial call to `update()` until the first call to access the new `PrimitiveMesh`.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":622623138,"public_id":48167,"url":"https://github.com/godotengine/godot/pull/48167","diff_url":"https://github.com/godotengine/godot/pull/48167.diff","patch_url":"https://github.com/godotengine/godot/pull/48167.patch","title":"Refactor import hints parser","state":"open","is_draft":false,"authored_by":{"id":22453358,"user":"Shatur","avater":"https://avatars.githubusercontent.com/u/22453358?v=4","url":"https://github.com/Shatur"},"created_at":"2021-04-24T17:51:23Z","updated_at":"2021-04-28T07:50:00Z","body":"In this PR, I reworked the parsing of import hints. Here is what I did:\r\n\r\n* Material import hints only worked in the following order: `-alpha` `-vcol`. This is a bug. I replaced the parsing with a loop and the order is no longer important.\r\n* Replaced `_fixstr` and `_teststr`, which contained duplicate code, with `_parse_hint` that changes passed name and returns the obtained hint.\r\n* Enhanced the hints detection algorithm. Now it finds a hint and make sure that there are no letters around it. Supersedes #43563.\r\n* Now the hints are enums and they are parsed only once, which speeds up the import. Also, all import hints are now in one place.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":622614582,"public_id":48164,"url":"https://github.com/godotengine/godot/pull/48164","diff_url":"https://github.com/godotengine/godot/pull/48164.diff","patch_url":"https://github.com/godotengine/godot/pull/48164.patch","title":"Add a node configuration warning for `BaseButton.enabled_focus_mode`","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-24T16:52:31Z","updated_at":"2021-08-06T11:24:33Z","body":"This complements the existing run-time deprecation message.\r\n\r\nThis property is deprecated and will be removed in Godot 4.0.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/48160.\r\nUnfortunately, neither `Node.get_name()` nor `Node.get_path()` are functional because the node isn't present in the scene tree at the point where the warning message is emitted. The added node configuration warning should still help people notice this while designing their scene.\r\n\r\n**Update:** Marking as draft because I should update this PR to address https://github.com/godotengine/godot/issues/48199 before it's merged.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418733]},{"id":622587431,"public_id":48157,"url":"https://github.com/godotengine/godot/pull/48157","diff_url":"https://github.com/godotengine/godot/pull/48157.diff","patch_url":"https://github.com/godotengine/godot/pull/48157.patch","title":"[3.x] Fix mouse_over not dropped when mouse leaves window","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-24T13:51:20Z","updated_at":"2021-08-06T11:24:32Z","body":"3.x version of #48156.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":622587395,"public_id":48156,"url":"https://github.com/godotengine/godot/pull/48156","diff_url":"https://github.com/godotengine/godot/pull/48156.diff","patch_url":"https://github.com/godotengine/godot/pull/48156.patch","title":"Fix `mouse_over` not dropped when mouse leaves window","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-24T13:51:02Z","updated_at":"2021-04-24T13:51:03Z","body":"Fixes #46438.\r\n\r\nNote: I've added a variable to monitor whether or not the mouse is inside the window, because `NOTIFICATION_WM_MOUSE_ENTER` and `NOTIFICATION_WM_MOUSE_EXIT` events are processed immediately, but other mouse events are queued and processed later. This means a mouse move event received before a mouse exit event may be processed after the mouse exit event resulting in `mouse_over` being set again when it shouldn't.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":622404195,"public_id":48146,"url":"https://github.com/godotengine/godot/pull/48146","diff_url":"https://github.com/godotengine/godot/pull/48146.diff","patch_url":"https://github.com/godotengine/godot/pull/48146.patch","title":"Fix `PointLight2D.set_texture` crash","state":"open","is_draft":false,"authored_by":{"id":22248849,"user":"mrushyendra","avater":"https://avatars.githubusercontent.com/u/22248849?v=4","url":"https://github.com/mrushyendra"},"created_at":"2021-04-24T02:10:34Z","updated_at":"2021-04-24T10:12:45Z","body":"The program mentioned in the related issue crashes in `RendererStorageRD::_update_decal_atlas()` because the `RID` corresponding to the texture is deemed invalid:\r\nhttps://github.com/godotengine/godot/blob/0bef220f0a7abd5c3b29f9ddbc95e8a7ecf822df/servers/rendering/renderer_rd/renderer_storage_rd.cpp#L7329\r\n\r\nThis happens because the `RID` is associated with a different owner, i.e. `canvas_texture_owner`, not `texture_owner`:\r\nhttps://github.com/godotengine/godot/blob/0bef220f0a7abd5c3b29f9ddbc95e8a7ecf822df/servers/rendering/renderer_rd/renderer_storage_rd.cpp#L1235-L1237\r\n\r\nThe proposed fix checks the RID for validity before adding the corresponding texture to the `decal_atlas`. I'm not very familiar with the newer rendering code, so apologies in advance if this is not the best fix.\r\n\r\nCloses #46828\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":622352169,"public_id":48143,"url":"https://github.com/godotengine/godot/pull/48143","diff_url":"https://github.com/godotengine/godot/pull/48143.diff","patch_url":"https://github.com/godotengine/godot/pull/48143.patch","title":"Fix C# tool script displaying exported variables in the wrong order","state":"open","is_draft":false,"authored_by":{"id":42754303,"user":"devin-liang","avater":"https://avatars.githubusercontent.com/u/42754303?v=4","url":"https://github.com/devin-liang"},"created_at":"2021-04-23T22:08:08Z","updated_at":"2021-08-06T11:24:33Z","body":"Hello all, first time contributor here :)\r\n\r\nPreviously, exported variables in a C# tool script would not appear in\r\nthe order they were exported within the inspector upon rebuilding the\r\nproject solution. The potential cause of this problem is that the\r\nCSharpInstance::get_property_list method was iterating through\r\nthe member_info Map member variable to populate the p_properties\r\nlist argument.\r\n\r\nMaps typically do not give guarantees about the ordering of elements\r\nand I think that Godot's implementation of Map may also shuffle elements\r\naround.\r\n\r\nMy proposed solution is to add a new list within the CSharpScript\r\nclass that contains the keys of the member_info Map in the order\r\nthey were inserted. This list is cleared and gets new elements\r\nwhenever the member_info Map is cleared or updated.\r\n\r\nThis fix causes exported variables in C# tools scripts to appear\r\nin the order they were exported within the inspector after rebuilding\r\nthe project solution just like regular C# scripts.\r\n\r\nFixes #47465\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3857901]},{"id":622278347,"public_id":48138,"url":"https://github.com/godotengine/godot/pull/48138","diff_url":"https://github.com/godotengine/godot/pull/48138.diff","patch_url":"https://github.com/godotengine/godot/pull/48138.patch","title":"Add test suite for Vector3i","state":"open","is_draft":false,"authored_by":{"id":43023347,"user":"JoseTMonagas","avater":"https://avatars.githubusercontent.com/u/43023347?v=4","url":"https://github.com/JoseTMonagas"},"created_at":"2021-04-23T19:20:51Z","updated_at":"2021-05-08T17:20:16Z","body":"* Create `test/test_vector3i.h`\r\n* Add `test_vector3i.h` to `test_main.cpp`\r\n* Add bunch of tests to `test_vector3i.h`\r\n\r\nThis was done in a different file of `test/test_vector3.h`due to it being on it's own file in `math/vector3i.h`\r\n\r\nPart of #43440.\r\nMust be merged after #34668.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":621793404,"public_id":48120,"url":"https://github.com/godotengine/godot/pull/48120","diff_url":"https://github.com/godotengine/godot/pull/48120.diff","patch_url":"https://github.com/godotengine/godot/pull/48120.patch","title":"FBX Add \"all same\" algorithm to drop tracks which contain no net change","state":"open","is_draft":false,"authored_by":{"id":748770,"user":"RevoluPowered","avater":"https://avatars.githubusercontent.com/u/748770?v=4","url":"https://github.com/RevoluPowered"},"created_at":"2021-04-23T05:52:32Z","updated_at":"2021-04-23T13:42:43Z","body":"Meaning: Zero movement, but has a value tracks are now gone.\r\nThey net no difference in the animation, this improves the results you see in the editor considerably.\r\n\r\nOn some file it halved the amount of tracks shown in the editor.\r\n\r\n### Before literally 100+ empty useless tracks doing zilch\r\n<img width=\"1257\" alt=\"Screenshot 2021-04-23 at 06 47 38\" src=\"https://user-images.githubusercontent.com/748770/115824465-dc1fed80-a3ff-11eb-9975-87b89f475136.png\">\r\n\r\n### After the fixes 4-5 times less dead tracks :) 🍰 : \r\n<img width=\"1267\" alt=\"Screenshot 2021-04-23 at 06 50 57\" src=\"https://user-images.githubusercontent.com/748770/115824723-46d12900-a400-11eb-8eae-0bbcf77aa39d.png\">\r\n\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":621211369,"public_id":48099,"url":"https://github.com/godotengine/godot/pull/48099","diff_url":"https://github.com/godotengine/godot/pull/48099.diff","patch_url":"https://github.com/godotengine/godot/pull/48099.patch","title":"[3.x] Add autocompletion for method names (`connect()`, `call()`, `call_deferred()` etc.)","state":"open","is_draft":true,"authored_by":{"id":50304111,"user":"LightningAA","avater":"https://avatars.githubusercontent.com/u/50304111?v=4","url":"https://github.com/LightningAA"},"created_at":"2021-04-22T15:36:07Z","updated_at":"2021-08-06T11:24:32Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nCloses https://github.com/godotengine/godot/issues/47940\r\nOnly applicable for 3.x (see https://github.com/godotengine/godot/issues/47940#issuecomment-820805247)\r\n\r\nhttps://user-images.githubusercontent.com/50304111/115742571-074a0480-a34e-11eb-9a96-05b3debad32f.mp4\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":620438962,"public_id":48066,"url":"https://github.com/godotengine/godot/pull/48066","diff_url":"https://github.com/godotengine/godot/pull/48066.diff","patch_url":"https://github.com/godotengine/godot/pull/48066.patch","title":"[3.x] Reset touch emulated mouse on press release.","state":"open","is_draft":false,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-04-21T18:38:53Z","updated_at":"2021-08-06T11:24:33Z","body":"Same as #48065 for `3.x`\r\n\r\nFixes https://github.com/godotengine/godot/issues/47903\r\n\r\nSends a mouse motion event to move mouse to `(-1, -1)` position when touch is released.\r\n\r\nMight require more testing especially for desktops with touch support or applications with multitouch support.\r\nSince more testing is needed to ensure everything works correctly and hovering issue being present on older versions (`3.2.1`, `3.2.3`) this probably shouldn't be merged into 3.3","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":620438839,"public_id":48065,"url":"https://github.com/godotengine/godot/pull/48065","diff_url":"https://github.com/godotengine/godot/pull/48065.diff","patch_url":"https://github.com/godotengine/godot/pull/48065.patch","title":"[4.0] Reset mouse position emulated from touch","state":"open","is_draft":false,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-04-21T18:38:38Z","updated_at":"2021-04-21T19:57:07Z","body":"Fixes https://github.com/godotengine/godot/issues/47903\r\n\r\nSends a mouse motion event to move mouse to `(-1, -1)` position when touch is released.\r\n\r\nMight require more testing especially for desktops with touch support or iOS/Android applications with multitouch support.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418403]},{"id":620294627,"public_id":48063,"url":"https://github.com/godotengine/godot/pull/48063","diff_url":"https://github.com/godotengine/godot/pull/48063.diff","patch_url":"https://github.com/godotengine/godot/pull/48063.patch","title":"Add test suite for Vector3","state":"open","is_draft":false,"authored_by":{"id":43023347,"user":"JoseTMonagas","avater":"https://avatars.githubusercontent.com/u/43023347?v=4","url":"https://github.com/JoseTMonagas"},"created_at":"2021-04-21T14:59:55Z","updated_at":"2021-05-05T18:37:26Z","body":"* Created test_vector3.h\r\n* Added a bunch of tests to test_vector3.h\r\n* Added test_vector3.h to test_main.cpp\r\nPart of #43440\r\nMust be merged after #34668","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":619786518,"public_id":48056,"url":"https://github.com/godotengine/godot/pull/48056","diff_url":"https://github.com/godotengine/godot/pull/48056.diff","patch_url":"https://github.com/godotengine/godot/pull/48056.patch","title":"Registering Global Script Classes under Mono","state":"open","is_draft":false,"authored_by":{"id":76991284,"user":"sboron","avater":"https://avatars.githubusercontent.com/u/76991284?v=4","url":"https://github.com/sboron"},"created_at":"2021-04-21T01:16:10Z","updated_at":"2021-04-26T00:51:49Z","body":"Registering Editor Plugins, Custom Resources and CustomNodes to _global_script_classes like in all other Scripting Languages (GD, Native..).\r\n\r\nThis PR is neccesary to create as example Custom Nodes from type \"VisualShaderNodeCustom\" to use them inside the Visual Editor under Mono. The reason is because the Visual Shadar Editor is doing a lookup for custom nodes by the attribute \"to _global_script_classes\" of the \"project.godot\" file. This pr is also usefull for godot 3.\r\n\r\nExample:\r\n\r\nC# Script for VisualShaderNodeCustom\r\n![image](https://user-images.githubusercontent.com/76991284/115482912-07fc7100-a250-11eb-9aa6-de025eefe222.png)\r\nVisual Shader Node List\r\n![image](https://user-images.githubusercontent.com/76991284/115482821-d2f01e80-a24f-11eb-908f-f8e7ea19f7d2.png)\r\nVisualShaderNodeCustom attached to the Visual Editor\r\n![image](https://user-images.githubusercontent.com/76991284/115482828-d8e5ff80-a24f-11eb-9ea8-8f0dd7912dc3.png)\r\nProject file with Extensions written in C#\r\n![image](https://user-images.githubusercontent.com/76991284/115482852-e307fe00-a24f-11eb-963f-9e4bc4f74746.png)\r\n\r\nThis PR is not related to any other \r\n\r\nBtw this issue fix also a problem with custom resources which binded under mono to an export array.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3857901]},{"id":619496996,"public_id":48049,"url":"https://github.com/godotengine/godot/pull/48049","diff_url":"https://github.com/godotengine/godot/pull/48049.diff","patch_url":"https://github.com/godotengine/godot/pull/48049.patch","title":"Android pre-rotation in Vulkan","state":"open","is_draft":true,"authored_by":{"id":80777504,"user":"szymonm-google","avater":"https://avatars.githubusercontent.com/u/80777504?v=4","url":"https://github.com/szymonm-google"},"created_at":"2021-04-20T16:58:27Z","updated_at":"2021-08-10T22:04:13Z","body":"The implementation of the proposal https://github.com/godotengine/godot-proposals/issues/1515.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112909]},{"id":618990434,"public_id":48037,"url":"https://github.com/godotengine/godot/pull/48037","diff_url":"https://github.com/godotengine/godot/pull/48037.diff","patch_url":"https://github.com/godotengine/godot/pull/48037.patch","title":"Fix Script editor completion doesn't suggest members of a script after :","state":"open","is_draft":false,"authored_by":{"id":56381255,"user":"ray90514","avater":"https://avatars.githubusercontent.com/u/56381255?v=4","url":"https://github.com/ray90514"},"created_at":"2021-04-20T05:04:11Z","updated_at":"2021-08-06T11:24:33Z","body":"Fix #47720 \r\nresult:\r\n![example](https://user-images.githubusercontent.com/56381255/114200907-3cd31300-9988-11eb-842a-f169c3098162.png)","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":618976220,"public_id":48035,"url":"https://github.com/godotengine/godot/pull/48035","diff_url":"https://github.com/godotengine/godot/pull/48035.diff","patch_url":"https://github.com/godotengine/godot/pull/48035.patch","title":"FBX Parser fixes","state":"open","is_draft":false,"authored_by":{"id":748770,"user":"RevoluPowered","avater":"https://avatars.githubusercontent.com/u/748770?v=4","url":"https://github.com/RevoluPowered"},"created_at":"2021-04-20T04:21:37Z","updated_at":"2021-04-23T23:38:43Z","body":"This will prevent a bunch of crashes, but definitely still contains a few.\r\n\r\n- Prevents invalid files from being loaded\r\n- Fixes global file properties not being loaded correctly or at all\r\n- Fixes regression in UnitScale not being imported\r\n- Prevents crashing by exiting parser in many more cases\r\n- Fixes 2 test files provided by @qarmin\r\n- Fixes token conversion to data being able to crash\r\n- Fixes GetRequiredScope/GetRequiredToken crashing\r\n\r\n\r\nI think this contains a good start for the places to catch errors in the FBX parser.\r\n\r\nTODO:\r\n- [x] check if MSVC compiler will crash with thread_local like it did for doctest due to /MT flag on the static lib.\r\n- [x] make sure all parser types use the IF_FBX_IS_CORRUPT_RETURN logic \r\n- [x] get more corrupt files from @qarmin \r\n- [x] Blender FBX files have the wrong vertex weight data and index count in them this will block skinned FBX meshes until the bug is fixed or the case is handled with a check, this is a good thing though it means we found the source of an issue we have with blender fbx files.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":618671801,"public_id":48029,"url":"https://github.com/godotengine/godot/pull/48029","diff_url":"https://github.com/godotengine/godot/pull/48029.diff","patch_url":"https://github.com/godotengine/godot/pull/48029.patch","title":"Add dozens of new integration tests to the GDScript test suite","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-19T22:58:08Z","updated_at":"2021-04-29T21:34:47Z","body":"This conflicts with https://github.com/godotengine/godot/pull/47958, but I'd be OK with rebasing my PR after that one is merged.\r\n\r\nThis also makes all scripts use tab indentation (except the ones specifically designed to test space indentation or mixed tab/space indentation).\r\n\r\nReviewing tip: Use the file filter to hide `.out` files in the **Files changed** tab:\r\n\r\n![image](https://user-images.githubusercontent.com/180032/115375069-b90df780-a1cd-11eb-8e95-55caed112bd9.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418518]},{"id":617658858,"public_id":48014,"url":"https://github.com/godotengine/godot/pull/48014","diff_url":"https://github.com/godotengine/godot/pull/48014.diff","patch_url":"https://github.com/godotengine/godot/pull/48014.patch","title":"Expose set_surface_material and set_editable_instance methods","state":"open","is_draft":false,"authored_by":{"id":39946030,"user":"lyuma","avater":"https://avatars.githubusercontent.com/u/39946030?v=4","url":"https://github.com/lyuma"},"created_at":"2021-04-19T05:10:54Z","updated_at":"2021-05-05T12:52:07Z","body":"These two methods are required for a custom importer I am building.\r\n\r\n`set_surface_material` was available on MeshInstance3D but not on EditorSceneImportMesh. Having this method available allows importer scripts to mutate the materials (for example, swap a StandardMaterial3D to a custom ShaderMaterial.\r\n\r\n`set_editable_instance` is the best way to make an importer which includes scene references to another file. In my case, I had to create a scene which references a .glb file and adds BoneAttachment / extensions to it. Instancing an editable scene seems like a logical way to do this, but this function is required in GDScript.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424,4418914]},{"id":617655410,"public_id":48013,"url":"https://github.com/godotengine/godot/pull/48013","diff_url":"https://github.com/godotengine/godot/pull/48013.diff","patch_url":"https://github.com/godotengine/godot/pull/48013.patch","title":"Fix size calculation for the ARRAY_CUSTOM_????_FLOAT types.","state":"open","is_draft":false,"authored_by":{"id":39946030,"user":"lyuma","avater":"https://avatars.githubusercontent.com/u/39946030?v=4","url":"https://github.com/lyuma"},"created_at":"2021-04-19T05:03:08Z","updated_at":"2021-05-08T17:20:37Z","body":"Small change: This gets us one step closer to having custom UV channels work on meshes.\r\n\r\nI think this change is correct, but I ran into another separate problem in the rendering server last time I tested this,.,, so there is probably still another bug somewhere else.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":617651208,"public_id":48012,"url":"https://github.com/godotengine/godot/pull/48012","diff_url":"https://github.com/godotengine/godot/pull/48012.diff","patch_url":"https://github.com/godotengine/godot/pull/48012.patch","title":"Expose some missing builtins in light()","state":"open","is_draft":false,"authored_by":{"id":39946030,"user":"lyuma","avater":"https://avatars.githubusercontent.com/u/39946030?v=4","url":"https://github.com/lyuma"},"created_at":"2021-04-19T04:49:53Z","updated_at":"2021-05-05T11:58:38Z","body":"Removes unsupported and mostly unused shadow_attenuation from light function.\r\n\r\nExpose these in the light() shader function:\r\n* specular_amount\r\n* rim and rim tint\r\n* anisotropy\r\n* metallic and roughness.\r\n* clearcoat","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":617535696,"public_id":48006,"url":"https://github.com/godotengine/godot/pull/48006","diff_url":"https://github.com/godotengine/godot/pull/48006.diff","patch_url":"https://github.com/godotengine/godot/pull/48006.patch","title":"Add visibility to CanvasLayer","state":"open","is_draft":true,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-04-18T18:54:57Z","updated_at":"2021-04-19T09:36:22Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/1578\r\n\r\nCanvasLayer is supposed to be used with CanvasItems, so it makes sense that it has visibility too I guess.\r\nThe newly added visibility will affect only CanvasItems, including top-level ones. CanvasLayer won't inherit visibiity from its parent (stacking CanvasLayers doesn't make much sense anyways).\r\n\r\n---\r\n\r\nSubmitting as draft, because I have a bug I don't know how to solve .-.\r\nSetting CanvasLayer to invisible won't properly hide its children (it works when you hide them manually and unhide). Any ideas? :/\r\n![leBug](https://user-images.githubusercontent.com/2223172/115157199-392a4500-a088-11eb-9f66-da331a763540.gif)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":617529190,"public_id":48004,"url":"https://github.com/godotengine/godot/pull/48004","diff_url":"https://github.com/godotengine/godot/pull/48004.diff","patch_url":"https://github.com/godotengine/godot/pull/48004.patch","title":"[WIP][3.x]exposed blend mode min and max to gles3(they don't exist in gles2)","state":"open","is_draft":false,"authored_by":{"id":7917475,"user":"QbieShay","avater":"https://avatars.githubusercontent.com/u/7917475?v=4","url":"https://github.com/QbieShay"},"created_at":"2021-04-18T18:13:29Z","updated_at":"2021-08-06T11:24:33Z","body":"Addresses https://github.com/godotengine/godot-proposals/issues/2621\r\n\r\nI will do 4.0 PR in the future if the feature has interest.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449,4418718]},{"id":617486079,"public_id":48001,"url":"https://github.com/godotengine/godot/pull/48001","diff_url":"https://github.com/godotengine/godot/pull/48001.diff","patch_url":"https://github.com/godotengine/godot/pull/48001.patch","title":"Fix Multi-Threaded Physics 2D crashes","state":"open","is_draft":false,"authored_by":{"id":1554127,"user":"Listwon","avater":"https://avatars.githubusercontent.com/u/1554127?v=4","url":"https://github.com/Listwon"},"created_at":"2021-04-18T13:36:01Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes https://github.com/godotengine/godot/issues/29369, prevents crash in https://github.com/godotengine/godot/issues/29364 (but there are many other errors in log), possible fix for https://github.com/godotengine/godot/issues/35017 and https://github.com/godotengine/godot/issues/47489\r\n\r\nI know I didn't add this to master first, but all test MRPs are for previous versions and privately I need this for 3.x first too.\r\n\r\nI need some guidance how to rework this fix - I'm not sure if it's better to create separate data structures (as I did in `map_mt.h`) and replace them in critical places (`area_2d_sw.h`, `area_2d_sw.cpp`) or directly change existing structures as I did in `self_list.h` (maybe with addition of some directives or template arguments).\r\n\r\nAlso I'll appreciate any help testing this.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":617468284,"public_id":47997,"url":"https://github.com/godotengine/godot/pull/47997","diff_url":"https://github.com/godotengine/godot/pull/47997.diff","patch_url":"https://github.com/godotengine/godot/pull/47997.patch","title":"[3.x] Fix `OS.find_scancode_from_string()` not working with modifiers","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-18T11:31:31Z","updated_at":"2021-08-06T11:24:33Z","body":"3.x version of #47996.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":617468252,"public_id":47996,"url":"https://github.com/godotengine/godot/pull/47996","diff_url":"https://github.com/godotengine/godot/pull/47996.diff","patch_url":"https://github.com/godotengine/godot/pull/47996.patch","title":"Fix `OS.find_scancode_from_string()` not working with modifiers","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-18T11:31:14Z","updated_at":"2021-04-18T11:32:09Z","body":"Fixes #17430.\r\n\r\nTested by converting scancodes to strings using `OS.get_scancode_string()` and converting them back again using `OS.find_scancode_from_string()`:\r\n```\r\n65 -> A -> 65\r\n33554498 -> Shift+B -> 33554498\r\n67108931 -> Alt+C -> 67108931\r\n134217796 -> Meta+D -> 134217796\r\n301989958 -> Shift+Control+F -> 301989958\r\n335544389 -> Alt+Control+E -> 335544389\r\n301989959 -> Shift+Control+G -> 301989959\r\n369098824 -> Shift+Alt+Control+H -> 369098824\r\n```\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":617407012,"public_id":47992,"url":"https://github.com/godotengine/godot/pull/47992","diff_url":"https://github.com/godotengine/godot/pull/47992.diff","patch_url":"https://github.com/godotengine/godot/pull/47992.patch","title":"[3.x] Fix Blendshapes exploding on skinned Mesh replacement","state":"open","is_draft":false,"authored_by":{"id":52464204,"user":"smix8","avater":"https://avatars.githubusercontent.com/u/52464204?v=4","url":"https://github.com/smix8"},"created_at":"2021-04-18T01:49:50Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #37854\r\n\r\nPreviously when a MeshInstance Mesh with Blendshapes was loaded or replaced on an animated Skeleton at runtime it could cause an unrepairable Mesh explosion on the next frame up to an entire (VisualServer) crash under bad circumstances.\r\n\r\nNow when a Mesh is set or replaced any available Blendshape on the new Mesh is reset to default blendvalues AFTER updating Skin and Material Surfaces.\r\n\r\nIssue was that only Skeleton Skins and Material Surfaces were updated on Mesh changes. Existing old blendvalues for the MeshInstance on the VisualServer could set the new Mesh off to a corrupted blending state.\r\n\r\nIn my tests all Blendshape related runtime loading and replacement crashes in Godot 3.x are 100% gone with this change (... and they hunted all my projects for months if not years now).\r\n\r\nGodot 4.x had similar issues a few months back when blendshapes were first added back in. I have no blendshape test setup rightnow that runs on Godot 4.x and will keep it in mind for later.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":617367365,"public_id":47985,"url":"https://github.com/godotengine/godot/pull/47985","diff_url":"https://github.com/godotengine/godot/pull/47985.diff","patch_url":"https://github.com/godotengine/godot/pull/47985.patch","title":"Expose ImportDock and its children","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-04-17T19:14:26Z","updated_at":"2021-08-18T15:10:21Z","body":"Part of godotengine/godot-proposals#2537\r\nIndipendent from #47520\r\n\r\nExpose ImportDock, including a bunch of method for interacting with it.\r\n\r\nConsiderations for docs are the same of #47767.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":617300460,"public_id":47975,"url":"https://github.com/godotengine/godot/pull/47975","diff_url":"https://github.com/godotengine/godot/pull/47975.diff","patch_url":"https://github.com/godotengine/godot/pull/47975.patch","title":"Fix `get_var()` regression, caused by #47811","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-04-17T12:32:45Z","updated_at":"2021-04-17T13:44:39Z","body":"fixes #47971\r\nSee https://github.com/godotengine/godot/issues/47971#issuecomment-821811569 for reasoning","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":617236053,"public_id":47967,"url":"https://github.com/godotengine/godot/pull/47967","diff_url":"https://github.com/godotengine/godot/pull/47967.diff","patch_url":"https://github.com/godotengine/godot/pull/47967.patch","title":"Added webcam support for Linux","state":"open","is_draft":false,"authored_by":{"id":12082018,"user":"Schmetzler","avater":"https://avatars.githubusercontent.com/u/12082018?v=4","url":"https://github.com/Schmetzler"},"created_at":"2021-04-17T02:51:59Z","updated_at":"2021-08-14T19:38:08Z","body":"I added webcam support for Linux.\r\nI used libv4l2 which is dynamically loaded if present. If it is not present the kernel default v4l2 library is used.\r\nIt should be able to grab images even without libv4l2 if the camera supports RGB output directly.\r\nWith libv4l2 the image is always grabbed as RGB8 image.\r\n\r\nI also implemented a simple hotplug feature which just checks the /dev/video* files every second.\r\n\r\nI tested it with the TestCameraServer Project from [https://github.com/BastiaanOlij/godot3_test_projects.git](https://github.com/BastiaanOlij/godot3_test_projects.git)\r\nI could only test for TYPE_IO_MMAP as my camera only supports this, but I implemented also the other types using the information provided by [https://kernel.readthedocs.io/en/latest/media/uapi/v4l/capture.c.html](https://kernel.readthedocs.io/en/latest/media/uapi/v4l/capture.c.html)\r\n","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":617127849,"public_id":47964,"url":"https://github.com/godotengine/godot/pull/47964","diff_url":"https://github.com/godotengine/godot/pull/47964.diff","patch_url":"https://github.com/godotengine/godot/pull/47964.patch","title":"Fix face area calculation in SoftBody 3D","state":"open","is_draft":false,"authored_by":{"id":13093421,"user":"jeffrey-cochran","avater":"https://avatars.githubusercontent.com/u/13093421?v=4","url":"https://github.com/jeffrey-cochran"},"created_at":"2021-04-16T21:13:09Z","updated_at":"2021-04-22T02:29:10Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixed face area calculation in `soft_body_3d_sw.cpp`, which was off by a factor of 0.5: https://github.com/godotengine/godot/blob/49511d439124ab5a71defd22639737f45bd0ff70/servers/physics_3d/soft_body_3d_sw.cpp#L246\r\n\r\n_bugsquad edit:_ Fixes: #47962 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":616345761,"public_id":47935,"url":"https://github.com/godotengine/godot/pull/47935","diff_url":"https://github.com/godotengine/godot/pull/47935.diff","patch_url":"https://github.com/godotengine/godot/pull/47935.patch","title":"Document how to load Images, MP3s and OGG Vorbis files at run-time","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-04-15T20:38:36Z","updated_at":"2021-05-08T17:21:10Z","body":"I put the descriptions everywhere I think somebody could come across, when trying to load an unimported file.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4038183,4418392,4418914]},{"id":616272889,"public_id":47931,"url":"https://github.com/godotengine/godot/pull/47931","diff_url":"https://github.com/godotengine/godot/pull/47931.diff","patch_url":"https://github.com/godotengine/godot/pull/47931.patch","title":"Overhaul inertial scrolling +fixes","state":"open","is_draft":false,"authored_by":{"id":12588584,"user":"threethan","avater":"https://avatars.githubusercontent.com/u/12588584?v=4","url":"https://github.com/threethan"},"created_at":"2021-04-15T18:27:27Z","updated_at":"2021-04-15T22:09:53Z","body":"This is a fix to a previous pull request I made, which ended up getting mangled due to a botched rebase. The original description is as follows:\r\n\r\n## Summary\r\nI made quite a few changes, however all are interlocked so they can't really be split to multiple branches.\r\nI tried to be as thorough as possible with the description below, however, in short: \r\n- Scroll behaves much nicer on mobile\r\n- A bunch of options have been added\r\n\r\n## List of Changes\r\n- New options have been added to project settings under a new gui>scroll section\r\n- Completely rewrote inertial scrolling on touch. This fixes various issues, and make things far more consistent.\r\n     - Various issues involving scroll_deadzone are now fixed. (Resolves godotengine/godot#45402)\r\n     - Inertial scroll now decelerates quadratically instead of linear. This is more accurate to real-life friction, more consistent with other mobile applications, and subjectively feels better. It also fixes an issue where deceleration would be far too much on scaled nodes or windows.\r\n     - The amount of inertia can be configured in project settings  (gui>scroll>intertial_scroll_duration_touch)\r\n- Added a scroll_step parameter. When scrolling with the mouse wheel, each notch will scroll by one page * scroll_step. The default is 1/8, which is the same as the previously hard-coded behavior.\r\n     - The default value of scroll_step can be set in project settings (gui>scroll>default_scroll_step)\r\n- When focus is within a scroll container, ui_page_up and ui_page_down input actions will now work as expected. (Previously they did nothing)\r\n- Added a scroll_smooth parameter. This will enable Windows 10 - style smooth scrolling when scrolling using the mouse wheel, page up & down, or with follow_focus\r\n     - The default value of scroll_smooth can be set in project settings (gui>scroll>default_scroll_smoothed)\r\n     - The duration of the smooth scrolling animation can be set in project settings (gui>scroll>smooth_scroll_duration_button)\r\n\r\n\r\n## Changes to default behavior\r\nI have done my best to make these changes without breaking compatibility or changing default behavior. By default only the following are changed:\r\n- The default focus mode of a scroll_container is not CLICK instead of NONE. This is required for page up & down to work. It can manually be changed back to NONE, which revert page up & down to doing nothing, unless a child element is focused.\r\n- Inertial scrolling will always use the new, fixed physics.\r\n- The default_scroll_deadzone project setting is now under gui>scroll instead of gui>common\r\nAll other new functionality requires settings to be manually changed by the user.\r\n\r\n## Context\r\nTested with:\r\n - 3.2.3:\r\n     - Windows (in editor, exported debug, exported release)\r\n     - Android (debug, release, custom build)\r\n - 4.0.dev:\r\n     - Windows (in editor, debug)\r\n     - Android (debug)\r\n\r\nI previously submitted a similar pull request that only fixed bugs, however I closed it in favor of this one. This pull fixes all of the bugs fixed by the first one and more, by fixing the underlying issues.\r\nThis pull request *does not* include documentation for the new options. If/once it is merged to master, I will submit a second pull with new documentation added.\r\nI have a 3.2 compatible version ready if desired\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot/issues/12965.*\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":616222132,"public_id":47929,"url":"https://github.com/godotengine/godot/pull/47929","diff_url":"https://github.com/godotengine/godot/pull/47929.diff","patch_url":"https://github.com/godotengine/godot/pull/47929.patch","title":"Allow using Ctrl + Y to redo actions in the editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-15T17:11:41Z","updated_at":"2021-06-17T11:45:08Z","body":"This is already possible in TextEdit nodes (including the script editor), but this change allows using <kbd>Ctrl + Y</kbd> in the 2D and 3D editors as well.\r\n\r\nThe existing <kbd>Ctrl + Shift + Z</kbd> shortcut is still available. Both shortcuts will remain supported to avoid breaking user expectations.\r\n\r\nI've done some quick testing and script editor redo still works as expected. Feel free to test this further locally :slightly_smiling_face:\r\n\r\nBefore cherry-picking this to the `3.x` branch, remember that it uses a different shortcut handling system. I'd make sure to test this thoroughly on the `3.x` branch before cherry-picking.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":616213753,"public_id":47928,"url":"https://github.com/godotengine/godot/pull/47928","diff_url":"https://github.com/godotengine/godot/pull/47928.diff","patch_url":"https://github.com/godotengine/godot/pull/47928.patch","title":"[4.x] Fix available Blendshapes not displayed in Mesh Resource Inspector","state":"open","is_draft":false,"authored_by":{"id":52464204,"user":"smix8","avater":"https://avatars.githubusercontent.com/u/52464204?v=4","url":"https://github.com/smix8"},"created_at":"2021-04-15T16:58:23Z","updated_at":"2021-04-25T03:05:22Z","body":"Godot 4.x version of #47927 since Godot 3.x had legacy properties inside block.\r\n\r\nAvailable Blendshapes stored in a Mesh Resource are now displayed as a (read-only) enum property in Editor Inspector.\r\n\r\nPreviously to see available blendshapes on Mesh Resources users had to take extra steps and load Mesh Resources on MeshInstance nodes. Since Blendshapes and their names are already stored inside Mesh Resource files this seemed to be an oversight.\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":616212901,"public_id":47927,"url":"https://github.com/godotengine/godot/pull/47927","diff_url":"https://github.com/godotengine/godot/pull/47927.diff","patch_url":"https://github.com/godotengine/godot/pull/47927.patch","title":"[3.x] Fix available Blendshapes not displayed in Mesh Resource Inspector","state":"open","is_draft":false,"authored_by":{"id":52464204,"user":"smix8","avater":"https://avatars.githubusercontent.com/u/52464204?v=4","url":"https://github.com/smix8"},"created_at":"2021-04-15T16:57:00Z","updated_at":"2021-08-06T11:24:33Z","body":"fixes #43480\r\n\r\nAvailable Blendshapes stored in a Mesh Resource are now displayed as a (read-only) enum property in Editor Inspector.\r\n\r\nPreviously to see available blendshapes on Mesh Resources users had to take extra steps and load Mesh Resources on MeshInstance nodes. Since Blendshapes and their names are already stored inside Mesh Resource files this seemed to be an oversight.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":616173930,"public_id":47925,"url":"https://github.com/godotengine/godot/pull/47925","diff_url":"https://github.com/godotengine/godot/pull/47925.diff","patch_url":"https://github.com/godotengine/godot/pull/47925.patch","title":"Display a warning dialog when using an old browser version for HTML5","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-15T16:02:17Z","updated_at":"2021-06-17T10:37:06Z","body":"Follow-up to #47919.\r\n\r\nOld browser versions don't support the required Web platform features to run Godot exports correctly.\r\n\r\nSee https://github.com/godotengine/godot/issues/47272.\r\n\r\n## TODO\r\n\r\nThese checks are not essential, but would be nice to have. These can be added in a future PR.\r\n\r\n- [ ] Detect and warn for old Safari versions.\r\n- [ ] Detect and warn for EdgeHTML-based Microsoft Edge (since it never supported WebAssembly threads).\r\n- [ ] Detect and warn for Internet Explorer (all versions, since none of them support WebAssembly at all).\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/114901378-06c4e180-9e15-11eb-8c43-a6d9edc879cc.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":616041747,"public_id":47919,"url":"https://github.com/godotengine/godot/pull/47919","diff_url":"https://github.com/godotengine/godot/pull/47919.diff","patch_url":"https://github.com/godotengine/godot/pull/47919.patch","title":"Display a dialog for HTML5 performance issues when using Firefox + Linux","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-15T13:15:17Z","updated_at":"2021-06-17T10:40:02Z","body":"Follow-up to https://github.com/godotengine/godot-docs/pull/4628.\r\n\r\nThere is no way to work around this issue on the developer's side.\r\n\r\nThis dialog only appears once per project (or for the web editor).\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/114875254-67e0bb00-9dfd-11eb-81bf-95793ce210f0.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097455,"name":"platform:html5","color":"#e4e4e4"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112912,4418518]},{"id":614661123,"public_id":47865,"url":"https://github.com/godotengine/godot/pull/47865","diff_url":"https://github.com/godotengine/godot/pull/47865.diff","patch_url":"https://github.com/godotengine/godot/pull/47865.patch","title":"Display the mouse coordinates in the 2D editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-13T18:04:29Z","updated_at":"2021-07-18T08:01:01Z","body":"The label is only updated when the mouse has stopped moving (using debouncing, not throttling).\r\nThis is because updating the label every time the mouse moves would cause the editor to redraw continuously, making it use a lot of power for no good reason. I think preserving battery life on laptops is more important than showing mouse coordinates in real-time :slightly_smiling_face:\r\n\r\nI can add an editor setting to hide the mouse coordinates if desired.\r\n\r\nThis feature was originally requested in https://github.com/godotengine/godot/issues/6224.\r\n\r\n## Preview\r\n\r\nhttps://user-images.githubusercontent.com/180032/114599532-85921100-9c93-11eb-95a6-041d11a2422e.mp4","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":614458840,"public_id":47857,"url":"https://github.com/godotengine/godot/pull/47857","diff_url":"https://github.com/godotengine/godot/pull/47857.diff","patch_url":"https://github.com/godotengine/godot/pull/47857.patch","title":"Add Github CodeQL security checks","state":"open","is_draft":false,"authored_by":{"id":1410597,"user":"jfcg","avater":"https://avatars.githubusercontent.com/u/1410597?v=4","url":"https://github.com/jfcg"},"created_at":"2021-04-13T13:26:02Z","updated_at":"2021-07-26T06:14:51Z","body":"Add Github CodeQL security checks for C++, Python.\r\n\r\nIn my fork under `/security/code-scanning` I see:\r\n\r\n![godot](https://user-images.githubusercontent.com/1410597/114559660-a434df80-9c74-11eb-97a5-235029a7d208.jpg)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":613889584,"public_id":47838,"url":"https://github.com/godotengine/godot/pull/47838","diff_url":"https://github.com/godotengine/godot/pull/47838.diff","patch_url":"https://github.com/godotengine/godot/pull/47838.patch","title":"Add \"process while paused\" option to VideoPlayer","state":"open","is_draft":false,"authored_by":{"id":3101690,"user":"EIREXE","avater":"https://avatars.githubusercontent.com/u/3101690?v=4","url":"https://github.com/EIREXE"},"created_at":"2021-04-12T19:30:47Z","updated_at":"2021-04-14T17:32:38Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nThis adds the possibility of seeking to different parts of the video stream while the VideoPlayer is paused, this is particularly useful for custom tools or games that need to seek to a specific location without having the game continue playing from it, which requires some ugly hacks currently (check https://github.com/EIRTeam/godot-videodecoder/blob/master/src/gdnative_videodecoder.c#L904 for the workarounds necessary to make this happen without this feature).","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":613713973,"public_id":47829,"url":"https://github.com/godotengine/godot/pull/47829","diff_url":"https://github.com/godotengine/godot/pull/47829.diff","patch_url":"https://github.com/godotengine/godot/pull/47829.patch","title":"Improve crash handler message display","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-12T15:10:42Z","updated_at":"2021-06-17T18:05:49Z","body":"Can be merged independently of https://github.com/godotengine/godot/pull/33505.\r\n\r\n- State the Godot version and full hash in the backtrace.\r\n  - Knowing the exact hash is important because source code backtraces depend on the source code version to be accurate.\r\n- Add decoration around the crash backtrace, both to make it stand out from other messages and help the user figure out what they should copy.\r\n\r\nI got the idea to implement this while looking at the comments here: https://github.com/godotengine/godot/issues/47732#issuecomment-817558712\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n```\r\nERROR: Testing crash handler with CRASH_NOW_MSG\r\n   at: ProjectManager (editor/project_manager.cpp:2379)\r\nhandle_crash: Program crashed with signal 4\r\nDumping the backtrace. Please include this when reporting the bug on https://github.com/godotengine/godot/issues\r\n[1] /lib64/libc.so.6(+0x3da60) [0x7fa094eeaa60] (??:0)\r\n[2] ProjectManager::ProjectManager() (/home/hugo/Documents/Git/godotengine/godot/editor/project_manager.cpp:2379)\r\n[3] Main::start() (/home/hugo/Documents/Git/godotengine/godot/main/main.cpp:2363)\r\n[4] bin/godot.linuxbsd.tools.64.llvm(main+0x1b2) [0x4765822] (/home/hugo/Documents/Git/godotengine/godot/platform/linuxbsd/godot_linuxbsd.cpp:57)\r\n[5] /lib64/libc.so.6(__libc_start_main+0xf2) [0x7fa094ed51e2] (??:0)\r\n[6] bin/godot.linuxbsd.tools.64.llvm(_start+0x2e) [0x47655ae] (??:?)\r\n-- END OF BACKTRACE --\r\n[1]    100306 IOT instruction (core dumped)  bin/godot.linuxbsd.tools.64.llvm\r\n```\r\n\r\n### After\r\n\r\n```\r\nERROR: Testing crash handler with CRASH_NOW_MSG\r\n   at: ProjectManager (editor/project_manager.cpp:2379)\r\n\r\n================================================================\r\nhandle_crash: Program crashed with signal 4\r\nEngine version: Godot Engine v4.0.dev.custom_build (4e8b67a0d186e39a8e64366ac05a2d6a3df0c2ff)\r\nDumping the backtrace. Please include this when reporting the bug on https://github.com/godotengine/godot/issues\r\n[1] /lib64/libc.so.6(+0x3da60) [0x7f30fc2e7a60] (??:0)\r\n[2] ProjectManager::ProjectManager() (/home/hugo/Documents/Git/godotengine/godot/editor/project_manager.cpp:2379)\r\n[3] Main::start() (/home/hugo/Documents/Git/godotengine/godot/main/main.cpp:2363)\r\n[4] bin/godot.linuxbsd.tools.64.llvm(main+0x1b2) [0x4765822] (/home/hugo/Documents/Git/godotengine/godot/platform/linuxbsd/godot_linuxbsd.cpp:57)\r\n[5] /lib64/libc.so.6(__libc_start_main+0xf2) [0x7f30fc2d21e2] (??:0)\r\n[6] bin/godot.linuxbsd.tools.64.llvm(_start+0x2e) [0x47655ae] (??:?)\r\n-- END OF BACKTRACE --\r\n================================================================\r\n[1]    95589 IOT instruction (core dumped)  bin/godot.linuxbsd.tools.64.llvm\r\n```","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904]},{"id":613157740,"public_id":47815,"url":"https://github.com/godotengine/godot/pull/47815","diff_url":"https://github.com/godotengine/godot/pull/47815.diff","patch_url":"https://github.com/godotengine/godot/pull/47815.patch","title":"Document how to delay code execution in a non-blocking manner","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-11T22:10:43Z","updated_at":"2021-04-12T14:25:36Z","body":"This closes https://github.com/godotengine/godot-docs/issues/4833.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":613154634,"public_id":47812,"url":"https://github.com/godotengine/godot/pull/47812","diff_url":"https://github.com/godotengine/godot/pull/47812.diff","patch_url":"https://github.com/godotengine/godot/pull/47812.patch","title":"Add a FPS limit applied when the project window is unfocused or minimized","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-11T21:49:07Z","updated_at":"2021-05-05T20:41:59Z","body":"This helps decrease power usage while the project window is unfocused or minimized.\r\n\r\nThe default FPS limit is 10*. It can be disabled by setting the `application/run/max_fps_when_unfocused` project setting to 0.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2001.\r\n\r\n*: I've decided to go with 10 instead of 20 because 20 doesn't result in sufficient power savings on low-end machines that already struggle with rendering projects at 30-40 FPS.\r\n\r\nThis PR can be remade for the `3.x` branch if we reach an agreement on it.\r\n\r\n**Testing project:** [test_fps_limit.zip](https://github.com/godotengine/godot/files/6292835/test_fps_limit.zip)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":613088241,"public_id":47799,"url":"https://github.com/godotengine/godot/pull/47799","diff_url":"https://github.com/godotengine/godot/pull/47799.diff","patch_url":"https://github.com/godotengine/godot/pull/47799.patch","title":"Add colors to TextureRegion editor guide lines","state":"open","is_draft":true,"authored_by":{"id":11782833,"user":"pycbouh","avater":"https://avatars.githubusercontent.com/u/11782833?v=4","url":"https://github.com/pycbouh"},"created_at":"2021-04-11T14:51:35Z","updated_at":"2021-07-27T23:01:24Z","body":"Currently TextureRegion editor allows guide lines to be swapped, so that left line is to the right of the right one and top line is to the bottom of the bottom line. This can happen accidentally and quite easily as you drag to draw the shape for the region. Due to the use of only a single, white color the problem is impossible to determine at a glance. It is only evident that something is wrong from the fact that the resulting texture is broken:\r\n\r\n[Here's how it looks now](https://user-images.githubusercontent.com/11782833/114308785-a3be0c80-9aed-11eb-8982-3863660ffb2a.png)\r\n\r\nThis PR adds color to horizontal and vertical guide lines, matching X and Y axis colors, with top and left lines being a bit lighter than their counterparts. The colors from the dashed guides much the colors of the region box, so this can hopefully demonstrate the user where exactly the problem lies and help them to quickly fix it.\r\n\r\n[Here's how it may look](https://user-images.githubusercontent.com/11782833/114308828-d10aba80-9aed-11eb-96c0-01f991a89a7a.png)\r\n\r\n-----\r\n*Edit: Made \"begin\" and \"end\" lines use different length dashes as proposed, see below.*\r\n\r\n~This may still provide a challenge for colorblind folk. To that end I can propose making dashed lines use different dash lengths. Or maybe there is some other solution. But as the current state of the editor is not colorblind friendly anyway, this can be fixed with a later PR with a bit more thought put into it.~","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781]},{"id":612972523,"public_id":47784,"url":"https://github.com/godotengine/godot/pull/47784","diff_url":"https://github.com/godotengine/godot/pull/47784.diff","patch_url":"https://github.com/godotengine/godot/pull/47784.patch","title":"Edit text after double-clicking a Control in the 2D editor","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-10T22:22:41Z","updated_at":"2021-04-21T14:19:37Z","body":"This operates on the CanvasItem node's `text` property.\r\n\r\nThis works with most built-in Controls such as Label, BaseButton, RichTextLabel, etc. This will also work on user-defined nodes that have a `text` property.\r\n\r\nFor RichTextLabel, the `bbcode_text` property will be edited if BBCode is enabled.\r\n\r\nThis partially addresses https://github.com/godotengine/godot-proposals/issues/1542.\r\n\r\n## TODO\r\n\r\n- [ ] Implement undo/redo support while keeping real-time preview.\r\n- [ ] Implement clicking outside to confirm and hide the TextEdit.\r\n- [ ] Remove references to \"Control\" in the code to replace them with \"CanvasItem\"? This editor actually works on all CanvasItems, but no default node that inherits from Node2D has a `text` property. User-defined nodes could have such a property, though.\r\n\r\n## Preview\r\n\r\nhttps://user-images.githubusercontent.com/180032/114286087-11215d00-9a5c-11eb-93fd-6fc08af79897.mp4\r\n\r\n**Edit:** Now using a bold font for greater readability:\r\n\r\n![image](https://user-images.githubusercontent.com/180032/115569118-36646580-a2bd-11eb-9a0f-52c827c1da9a.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":612970087,"public_id":47782,"url":"https://github.com/godotengine/godot/pull/47782","diff_url":"https://github.com/godotengine/godot/pull/47782.diff","patch_url":"https://github.com/godotengine/godot/pull/47782.patch","title":"Use different icons for revertable instanced properties in the inspector","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-10T21:59:36Z","updated_at":"2021-04-12T09:54:08Z","body":"Properties modified from their default value (but otherwise unmodified from the instanced/inherited scene) will display a non-clickable asterisk icon as well.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2581.\r\n\r\nSome questions:\r\n\r\n- Should the instanced revert icon have a different icon color? It's not that easy to distinguish at a glance right now. I made it have a \"dashed\" appearance to mimic the PackedScene's \"movie clap\" icon.\r\n- Should the asterisk icon be slightly faded out? It can't be clicked after all (I already disabled the hover feedback for it).\r\n\r\n## Preview\r\n\r\n### Base scene\r\n\r\n![image](https://user-images.githubusercontent.com/180032/114285625-f0a3d380-9a58-11eb-8289-75375ffa5fff.png)\r\n\r\n### Inherited scene\r\n\r\n*Flip H was manually unchecked.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/114285612-d1a54180-9a58-11eb-9a04-e9d969c7ede6.png)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781]},{"id":612962803,"public_id":47779,"url":"https://github.com/godotengine/godot/pull/47779","diff_url":"https://github.com/godotengine/godot/pull/47779.diff","patch_url":"https://github.com/godotengine/godot/pull/47779.patch","title":"Enable `contact_monitor` in RigidBody by default","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-10T20:58:33Z","updated_at":"2021-04-12T17:25:25Z","body":"This results in better usability out of the box at a small performance cost.\r\n\r\n`max_contacts_reported` was also increased to 1 by default to make the contact monitor useful out of the box.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1019.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777,4418718,4418726]},{"id":612862698,"public_id":47767,"url":"https://github.com/godotengine/godot/pull/47767","diff_url":"https://github.com/godotengine/godot/pull/47767.diff","patch_url":"https://github.com/godotengine/godot/pull/47767.patch","title":"Expose NodeDock and its children","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-04-10T08:48:40Z","updated_at":"2021-08-19T23:43:14Z","body":"Part of godotengine/godot-proposals#2537\r\nIndipendent from #47520\r\n\r\nExpose NodeDock, ConnectionDock and GroupsEditor. NodeDock was refactored to allow an arbitrary number of tabs that can be added by plugins (no more show_* methods).\r\nConnectionDock and GroupsEditor exposes their main subcomponents (both trees). Dialogs are not exposed.\r\nAlso, I did some little unrelated changes (including a bugfix).\r\n\r\nDocs for newly exposed classes are added, but I'm not sure about the quality of them, especially the descriptions. \r\nIMO the brief description should state what component is and where it is, and the description should explain in short how it is structured and how a plugin can modify it.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,4418563]},{"id":612375958,"public_id":47748,"url":"https://github.com/godotengine/godot/pull/47748","diff_url":"https://github.com/godotengine/godot/pull/47748.diff","patch_url":"https://github.com/godotengine/godot/pull/47748.patch","title":"[WIP] Initialize all members with in-class field initializers (`core`)","state":"open","is_draft":true,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2021-04-09T11:20:25Z","updated_at":"2021-04-10T05:18:49Z","body":"Done in part using clang-tidy 12's `cppcoreguidelines-pro-type-member-init`\r\ncheck, though it made a lot of invalid changes (such as initializing multiple\r\nmembers of a union), so I had to review all files manually, and did further\r\nchanges where I saw non-static uninitialized fields.\r\n\r\n---\r\n\r\nExtracted from #47723 and with a few extra hours of manual cleanup and review.\r\n\r\n\r\n## Notes\r\n\r\nThere are a few things we need to decide how we want to solve them (if at all):\r\n\r\n### 1. Initializing unions\r\n\r\nWe use a number of unions in the core, either to be able to repurpose a chunk of memory for different users, or to have aliases for a given memory chunk (possibly with different types and I guess some conversion done).\r\n\r\nThis seems to be [undefined behavior](https://en.cppreference.com/w/cpp/language/union) which we rely extensively upon (most prominently in `Variant::_data`, see below), so I guess it's UB which happens to be implemented in a convenient way everywhere?\r\n\r\nEither, we have things like this:\r\n```cpp\r\nstruct Color {\r\n...\r\n\tunion {\r\n\t\tstruct {\r\n\t\t\tfloat r;\r\n\t\t\tfloat g;\r\n\t\t\tfloat b;\r\n\t\t\tfloat a;\r\n\t\t};\r\n\t\tfloat components[4] = { 0.0, 0.0, 0.0, 1.0 };\r\n\t};\r\n```\r\n```cpp\r\nstruct Vector2i {\r\n...\r\n\tunion {\r\n\t\tint32_t x = 0;\r\n\t\tint32_t width;\r\n\t};\r\n```\r\n```cpp\r\nclass StringName {\r\n...\r\n\tunion _HashUnion {\r\n\t\t_Data *ptr = nullptr;\r\n\t\tuint32_t hash;\r\n\t};\r\n```\r\n\r\n`clang-tidy` complains about those being uninitialized, yet I don't see what would be a valid way to initialize them (value initializing several union members is invalid).\r\n\r\nIt seems like *instances* of anonymous unions can be value-initialized like this:\r\n```cpp\r\n\t\tunion {\r\n\t\t\tuint64_t u;\r\n\t\t\tdouble f;\r\n\t\t} ieee754{};\r\n\t\tieee754.f = p_val;\r\n```\r\nWhat this does to `u` and `f`, I have no idea.\r\n\r\n### 2. `Variant::_data`\r\n\r\nThe most pathological case for the above is `Variant::_data`:\r\n\r\n```cpp\r\nclass Variant {\r\n...\r\n\tunion {\r\n\t\tbool _bool;\r\n\t\tint64_t _int;\r\n\t\tdouble _float;\r\n\t\tTransform2D *_transform2d;\r\n\t\t::AABB *_aabb;\r\n\t\tBasis *_basis;\r\n\t\tTransform *_transform;\r\n\t\tPackedArrayRefBase *packed_array;\r\n\t\tvoid *_ptr; //generic pointer\r\n\t\tuint8_t _mem[sizeof(ObjData) > (sizeof(real_t) * 4) ? sizeof(ObjData) : (sizeof(real_t) * 4)];\r\n\t} _data alignas(8);\r\n```\r\n\r\nWhat can we do here? Leave it as is and keep passing uninitialized Variants around, or zeroize `_mem`?\r\n\r\n`clang-tidy` spouts *tons* of warnings about this (basically on every single it processes which uses Variants, i.e. the whole codebase).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":612316961,"public_id":47744,"url":"https://github.com/godotengine/godot/pull/47744","diff_url":"https://github.com/godotengine/godot/pull/47744.diff","patch_url":"https://github.com/godotengine/godot/pull/47744.patch","title":"Allow to change the Stop shortcut used at runtime","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-04-09T09:43:25Z","updated_at":"2021-04-10T14:31:40Z","body":"Fixes #23929\r\n\r\nHere's how it works:\r\n1. User plays a scene\r\n2. Editor will serialize the `editor/stop` shortcut to a string using VariantWriter\r\n3. The shortcut string is sent as a launch argument `--stop-shortcut`\r\n4. `Main` will read this string and save it as metadata inside ProjectSettings singleton\r\n5. In runtime when EngineDebugger is active, Window will check if `debugger_stop_shortcut` variable is valid\r\n6. If it's not, it will try to get the shortcut metadata and use VariantParser to get a shortcut\r\n7. If it fails, a default F8 shortcut is created\r\n8. Window will check if the pressed event matches the shortcut\r\n\r\nPoint 4 feels like a hack, but not sure if there is a better way to pass the string. Hope it's acceptable >_>","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":611497418,"public_id":47724,"url":"https://github.com/godotengine/godot/pull/47724","diff_url":"https://github.com/godotengine/godot/pull/47724.diff","patch_url":"https://github.com/godotengine/godot/pull/47724.patch","title":"Tweak the default project path to use a dedicated folder in Documents","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-08T12:04:06Z","updated_at":"2021-07-10T11:33:44Z","body":"- Set the autoscan path to match the default project path. This way, projects can be manually extracted to it and detected on launch.\r\n- Disallow creating new projects at the root of the default project path to avoid clutter. Instead, projects must be created in subfolders.\r\n\r\nOne downside is that a `$HOME/Documents/Godot` folder will be created even if the user never creates any projects in it. However, I believe it encourages better organization (it's something I always do personally), so I'd say the tradeoff is worth it. This tradeoff is also shared by other software such as Premiere Pro, so we wouldn't be the only software to do this.\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/114023535-4c146c80-9873-11eb-8484-4628241ffddf.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":610516461,"public_id":47695,"url":"https://github.com/godotengine/godot/pull/47695","diff_url":"https://github.com/godotengine/godot/pull/47695.diff","patch_url":"https://github.com/godotengine/godot/pull/47695.patch","title":"Display Gradle's standard output/error to the console when exporting …","state":"open","is_draft":false,"authored_by":{"id":3391850,"user":"myood","avater":"https://avatars.githubusercontent.com/u/3391850?v=4","url":"https://github.com/myood"},"created_at":"2021-04-07T09:47:09Z","updated_at":"2021-04-07T12:21:14Z","body":"Implementation proposal for https://github.com/godotengine/godot-proposals/issues/2559 (Sorry maintainers - I don't know how to properly link this PR to the proposal)\r\n\r\nif verbose is set, then print command invoked during export\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/2559.*","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":610339543,"public_id":47690,"url":"https://github.com/godotengine/godot/pull/47690","diff_url":"https://github.com/godotengine/godot/pull/47690.diff","patch_url":"https://github.com/godotengine/godot/pull/47690.patch","title":"[3.x] Fix TextEdit cursor update when adding or deleting text","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-04-07T05:23:04Z","updated_at":"2021-08-06T11:24:33Z","body":"Updating the viewport while setting the line index before the column is set could wrongly cause the text to be scrolled down.\r\n\r\n3.x backport of PR #47689\r\nCherry-pick from master causes conflicts due to refactoring in `TextEdit`.\r\n\r\nFixes #47688","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418733]},{"id":609997186,"public_id":47670,"url":"https://github.com/godotengine/godot/pull/47670","diff_url":"https://github.com/godotengine/godot/pull/47670.diff","patch_url":"https://github.com/godotengine/godot/pull/47670.patch","title":"Document how to set up UPnP in a non-blocking manner","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-06T16:37:56Z","updated_at":"2021-05-01T19:16:23Z","body":"See https://github.com/godotengine/godot/issues/32160. Thanks @Faless for providing the code sample which I modified a bit :slightly_smiling_face: ","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":609934569,"public_id":47665,"url":"https://github.com/godotengine/godot/pull/47665","diff_url":"https://github.com/godotengine/godot/pull/47665.diff","patch_url":"https://github.com/godotengine/godot/pull/47665.patch","title":"WIP: Add the button pressed to some signals in Tree","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-04-06T15:11:57Z","updated_at":"2021-04-06T18:01:01Z","body":"Supersedes #46588\r\nBased on [this comment](https://github.com/godotengine/godot/pull/46588#issuecomment-803377510)\r\n\r\nThis PR replaces most `rmb` (some can't be changed due to dependencies with key events) signals with a `button_index` parameter.\r\n\r\nChanges:\r\n\r\n- button_pressed(TreeItem item, int column, int id) -> button_pressed(int button_index, TreeItem item, int column, int id)\r\n- empty_rmb() -> empty_click(int button_index)\r\n- empty_tree_rmb_selected(Vector2 position)\r\n- empty_tree_selected(int button_index, Vector2 position)\r\n- item_rmb_edited() -> item_click_edited(int button_index)\r\n\r\nNote: I prefer to wait a review on the signal changes before changing the affected editor code (and fix docs).","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":609886693,"public_id":47663,"url":"https://github.com/godotengine/godot/pull/47663","diff_url":"https://github.com/godotengine/godot/pull/47663.diff","patch_url":"https://github.com/godotengine/godot/pull/47663.patch","title":"Improvements for UndoRedo class","state":"open","is_draft":false,"authored_by":{"id":40196601,"user":"deakcor","avater":"https://avatars.githubusercontent.com/u/40196601?v=4","url":"https://github.com/deakcor"},"created_at":"2021-04-06T14:11:22Z","updated_at":"2021-08-06T11:24:33Z","body":"Added some improvements for UndoRedo class :\r\n\r\n- Added `has_uncommitted_action()` method to check if there is an uncommitted action.\r\n- Added `get_action_count()` and `get_action_name()` methods to make additionnal checks. (For example, if you need to check for a specific panel if there still are some unmodified inputs when undo)\r\n- Added `apply_redo` optional parameter for `commit_action` to be able to have a different function for do() and redo().","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":609352163,"public_id":47653,"url":"https://github.com/godotengine/godot/pull/47653","diff_url":"https://github.com/godotengine/godot/pull/47653.diff","patch_url":"https://github.com/godotengine/godot/pull/47653.patch","title":"Add methods to vector2i for consistency with vector2","state":"open","is_draft":false,"authored_by":{"id":57882701,"user":"likeich","avater":"https://avatars.githubusercontent.com/u/57882701?v=4","url":"https://github.com/likeich"},"created_at":"2021-04-05T23:50:32Z","updated_at":"2021-04-06T22:32:59Z","body":"Implements the Vector2i side of proposal # [2297](https://github.com/godotengine/godot-proposals/issues/2297) by adding the following methods to Vector2i that already exist in Vector2 and exposing them to GDScript:\r\n\r\nangle\r\nangle_to\r\nangle_to_point\r\ncross\r\ndistance_to\r\ndistance_squared_to\r\ndot\r\nlength\r\nlength_squared\r\nposmodv\r\nsnapped\r\n\r\nThese methods were chosen based on discussions in proposal https://github.com/godotengine/godot-proposals/issues/2297\r\n\r\nBelow is a project that I used for testing.\r\n\r\n[Vector2iTest.zip](https://github.com/godotengine/godot/files/6261106/Vector2iTest.zip)\r\n\r\n\r\nIf this PR is accepted then I will start work on the Vector3i portion of this.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":608676475,"public_id":47635,"url":"https://github.com/godotengine/godot/pull/47635","diff_url":"https://github.com/godotengine/godot/pull/47635.diff","patch_url":"https://github.com/godotengine/godot/pull/47635.patch","title":"Display a matrix for Node2D and don't display a duplicate origin","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-04-05T03:38:31Z","updated_at":"2021-08-16T02:53:58Z","body":"This is a subset of #32068 because it's taking a long time to be merged and some have asked for a smaller PR.\r\n\r\nThis PR only changes the code for Node2D and Node3D, without changing the inspector code. For 2D, the matrix is displayed, while previously it just wasn't displayed at all. For 3D, \"Matrix\" is now \"Raw Matrix\", and it displays the Basis instead of Transform.\r\n\r\nBefore/after pic (left is before, right is after):\r\n\r\n![Untitled](https://user-images.githubusercontent.com/1646875/113534311-5a763600-959e-11eb-9457-4671a261eb8e.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418550,4418726]},{"id":608581749,"public_id":47628,"url":"https://github.com/godotengine/godot/pull/47628","diff_url":"https://github.com/godotengine/godot/pull/47628.diff","patch_url":"https://github.com/godotengine/godot/pull/47628.patch","title":"Remove constrained view in the 2D editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-04T17:30:39Z","updated_at":"2021-04-06T12:10:12Z","body":"We initially [added an option to disable constraining the 2D editor view](https://github.com/godotengine/godot/pull/30041). This setting was still enabled by default to avoid confusing users who end up scrolling too far away from their current scene (which is a problem if you don't know about the <kbd>F</kbd> key to focus on the selection).\r\n\r\nHowever, it's probably a better choice to unconstrain the 2D editor view by default because:\r\n\r\n- Lots of people don't know about this setting and wonder how they can scroll far away from the scene. This feels really limiting for them, and it can even lead to some people thinking Godot intentionally limits scene sizes.\r\n- The 3D editor doesn't have such a contrain mechanism. This makes the 2D editor more consistent with the 3D editor.\r\n\r\nSee also https://github.com/godotengine/godot/issues/25616.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":608545233,"public_id":47619,"url":"https://github.com/godotengine/godot/pull/47619","diff_url":"https://github.com/godotengine/godot/pull/47619.diff","patch_url":"https://github.com/godotengine/godot/pull/47619.patch","title":"Use the `APPLE_STYLE_KEYS` define consistently for macOS shortcuts","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-04T13:21:48Z","updated_at":"2021-04-04T15:11:23Z","body":"While working on https://github.com/godotengine/godot/pull/47618, I noticed that `APPLE_STYLE_KEYS` is always defined when `OSX_ENABLED` is defined (and vice versa). The point of that define is to semantically distinguish between alternate codepaths for shortcuts from alternate codepaths for other purposes (such as code signing).\r\n\r\nAlternatively, if we deem that doing this separation isn't important, we could remove `APPLE_STYLE_KEYS` entirely and replace all its existing uses with `OSX_ENABLED`.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904]},{"id":608542498,"public_id":47618,"url":"https://github.com/godotengine/godot/pull/47618","diff_url":"https://github.com/godotengine/godot/pull/47618.diff","patch_url":"https://github.com/godotengine/godot/pull/47618.patch","title":"Use Option+Cmd+Left/Right for script editor history navigation on macOS","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-04T13:00:45Z","updated_at":"2021-07-13T20:11:59Z","body":"The default shortcuts were conflicting with TextEdit shortcuts on macOS.\n\n**Note that I haven't tested this.** I'd like someone on macOS to test this to make sure it works as expected.\n\nThis can be trivially cherry-picked to the `3.x` branch.\n\nThis closes https://github.com/godotengine/godot/issues/44858.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418558]},{"id":608416951,"public_id":47601,"url":"https://github.com/godotengine/godot/pull/47601","diff_url":"https://github.com/godotengine/godot/pull/47601.diff","patch_url":"https://github.com/godotengine/godot/pull/47601.patch","title":"Always allow using the arrow keys (+ Space/Ctrl) for editor freelook movement","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-03T17:21:26Z","updated_at":"2021-04-03T17:22:31Z","body":"This provides a suitable configuration for left-handed users out of the box. These shortcuts are only used while freelook mode is active.\n\nSee discussion here: https://www.reddit.com/r/godot/comments/mitig2/any_way_to_remap_wasd_keys_for_3d_viewport/","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":608414881,"public_id":47600,"url":"https://github.com/godotengine/godot/pull/47600","diff_url":"https://github.com/godotengine/godot/pull/47600.diff","patch_url":"https://github.com/godotengine/godot/pull/47600.patch","title":"Enable mono editor build in CI","state":"open","is_draft":true,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2021-04-03T17:05:03Z","updated_at":"2021-08-15T20:45:15Z","body":"Depends on #47414 which removes partial editor mono compilation instructions\r\n\r\nIt would allow to get from CI fully working Godot mono build exactly as in 3.2 branch","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":608412824,"public_id":47599,"url":"https://github.com/godotengine/godot/pull/47599","diff_url":"https://github.com/godotengine/godot/pull/47599.diff","patch_url":"https://github.com/godotengine/godot/pull/47599.patch","title":"Correctly support multiple events mapped to a single action","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-04-03T16:48:53Z","updated_at":"2021-05-01T04:10:26Z","body":"Currently, when multiple events are mapped to a single action, the state of the action is based on the last event that changed. This PR stores the state of each event to enable determining the correct state of the action regardless of which event last changed. This ensures that when two or more events are mapped to a single action, the Input `is_action_pressed()` reports true if any of the events are still pressed, and `get_action_strength()` returns the maximum value provided by all the events.\r\n\r\nProperly fixes #30888 (reverts #30890).\r\nFixes #39287\r\nFixes #45628\r\n\r\nNote: I've tested this with keys and mouse buttons, but I've marked this as `needs testing`, because I don't have a joystick, so I can't test the `JoyButton` or `JoyAxis` events, specifically the combination of WASD keys and a joystick described in #39287 and #45628.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418403]},{"id":608351114,"public_id":47589,"url":"https://github.com/godotengine/godot/pull/47589","diff_url":"https://github.com/godotengine/godot/pull/47589.diff","patch_url":"https://github.com/godotengine/godot/pull/47589.patch","title":"Fix Camera2D's editor rectangles flicker","state":"open","is_draft":false,"authored_by":{"id":28705694,"user":"floppyhammer","avater":"https://avatars.githubusercontent.com/u/28705694?v=4","url":"https://github.com/floppyhammer"},"created_at":"2021-04-03T08:18:53Z","updated_at":"2021-05-08T17:22:01Z","body":"Fixes #47542. Except for the screen rectangle, the flicker also happens to the limits rectangle and margin rectangle. The solution is to simply set the line width to one even when the camera is set current. The color contrast between the rectangles at the current and non-current state is increased a bit to compensate the loss of the line width difference. This PR can act as a makeshift solution before some changes are done to the rendering backend about how lines are drawn.\r\n\r\nBefore:\r\n\r\n![camera2d_outline_before](https://user-images.githubusercontent.com/28705694/113472818-21539e00-9498-11eb-9b75-f83a477e18dc.gif)\r\n\r\nAfter:\r\n\r\n![camera2d_outline_after](https://user-images.githubusercontent.com/28705694/113472810-1a2c9000-9498-11eb-80c5-de4dd832b542.gif)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718]},{"id":608140526,"public_id":47574,"url":"https://github.com/godotengine/godot/pull/47574","diff_url":"https://github.com/godotengine/godot/pull/47574.diff","patch_url":"https://github.com/godotengine/godot/pull/47574.patch","title":"Add ability to automatically choose a joystick button or axis...","state":"open","is_draft":false,"authored_by":{"id":2986044,"user":"BuzzBurrowes","avater":"https://avatars.githubusercontent.com/u/2986044?v=4","url":"https://github.com/BuzzBurrowes"},"created_at":"2021-04-02T17:28:06Z","updated_at":"2021-08-06T11:24:33Z","body":"... when modifying a project's input settings\r\n\r\n![image](https://user-images.githubusercontent.com/2986044/113438765-3a385280-93b7-11eb-8a47-2a1079caf397.png)\r\n\r\nIf you click the CheckButton \"capture\", you can then wiggle a joystick (or press a button) and the selection will automatically change to that axis (or button).","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":608034026,"public_id":47568,"url":"https://github.com/godotengine/godot/pull/47568","diff_url":"https://github.com/godotengine/godot/pull/47568.diff","patch_url":"https://github.com/godotengine/godot/pull/47568.patch","title":"Add a project setting to disable the boot splash image (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-02T13:38:24Z","updated_at":"2021-08-06T11:24:33Z","body":"`3.x` version of https://github.com/godotengine/godot/pull/47567.\n\nThis allows disabling the boot splash image while keeping the background color.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":608033847,"public_id":47567,"url":"https://github.com/godotengine/godot/pull/47567","diff_url":"https://github.com/godotengine/godot/pull/47567.diff","patch_url":"https://github.com/godotengine/godot/pull/47567.patch","title":"Add a project setting to disable the boot splash image","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-04-02T13:37:58Z","updated_at":"2021-04-06T12:14:04Z","body":"`master` version of https://github.com/godotengine/godot/pull/47568.\r\n\r\nThis allows disabling the boot splash image while keeping the background color.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1445.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":607898027,"public_id":47563,"url":"https://github.com/godotengine/godot/pull/47563","diff_url":"https://github.com/godotengine/godot/pull/47563.diff","patch_url":"https://github.com/godotengine/godot/pull/47563.patch","title":"An option to exclude addons in Quick Open dialog","state":"open","is_draft":false,"authored_by":{"id":29497869,"user":"hilfazer","avater":"https://avatars.githubusercontent.com/u/29497869?v=4","url":"https://github.com/hilfazer"},"created_at":"2021-04-02T08:11:28Z","updated_at":"2021-07-04T13:01:40Z","body":"One of the features requested in https://github.com/godotengine/godot-proposals/issues/25.\r\nA video with the feature working in 3.3:\r\n\r\nhttps://user-images.githubusercontent.com/29497869/113396134-49110c00-939b-11eb-8230-f7e4698d2ab6.mp4\r\n\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":606051307,"public_id":47532,"url":"https://github.com/godotengine/godot/pull/47532","diff_url":"https://github.com/godotengine/godot/pull/47532.diff","patch_url":"https://github.com/godotengine/godot/pull/47532.patch","title":"fix: 5+ LGTM warnings/alerts","state":"open","is_draft":false,"authored_by":{"id":51391473,"user":"Panquesito7","avater":"https://avatars.githubusercontent.com/u/51391473?v=4","url":"https://github.com/Panquesito7"},"created_at":"2021-03-31T17:25:59Z","updated_at":"2021-03-31T18:55:58Z","body":"Things added/changed:\r\n\r\n- Fixed 5+ [LGTM](https://lgtm.com/projects/g/godotengine/godot/alerts/) similar warnings/alerts.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":605777852,"public_id":47526,"url":"https://github.com/godotengine/godot/pull/47526","diff_url":"https://github.com/godotengine/godot/pull/47526.diff","patch_url":"https://github.com/godotengine/godot/pull/47526.patch","title":"set StartupWMClass in linux `.desktop` file","state":"open","is_draft":false,"authored_by":{"id":289746,"user":"backwardspy","avater":"https://avatars.githubusercontent.com/u/289746?v=4","url":"https://github.com/backwardspy"},"created_at":"2021-03-31T13:46:33Z","updated_at":"2021-03-31T13:48:28Z","body":"this allows linux app launchers and docks to correctly associate the godot project selector & editor windows with the icon used to launch godot.\r\nit prevents this problem specifically: https://askubuntu.com/questions/1144214/why-does-my-custom-launcher-file-create-two-icons-on-the-launcher-bar","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":605748177,"public_id":47524,"url":"https://github.com/godotengine/godot/pull/47524","diff_url":"https://github.com/godotengine/godot/pull/47524.diff","patch_url":"https://github.com/godotengine/godot/pull/47524.patch","title":"[macOS, sandbox] Add export option to embed and sign helper executables.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-03-31T13:27:52Z","updated_at":"2021-08-13T04:50:21Z","body":"- Adds export option to embed helper executables.\r\n- Adds notes to the `OS.execute` and `OS.create_process` method documentation.\r\n\r\n<img width=\"1034\" alt=\"macos_helpers\" src=\"https://user-images.githubusercontent.com/7645683/113150887-341e6680-923d-11eb-8181-3c47e2dc1c42.png\">\r\n\r\nmacOS sandboxed apps are limited to run only \"helper executables\" embedded into the app bundle, and signed with special [sandbox entitlement keys](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW15).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904]},{"id":605660453,"public_id":47522,"url":"https://github.com/godotengine/godot/pull/47522","diff_url":"https://github.com/godotengine/godot/pull/47522.diff","patch_url":"https://github.com/godotengine/godot/pull/47522.patch","title":"Rename Project Settings, Display, Window width and height, and test_width and test_height settings to match their function","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-03-31T12:30:48Z","updated_at":"2021-07-08T14:02:29Z","body":"As originally identified by @leonkrause [here](https://github.com/godotengine/godot/issues/16863#issuecomment-412308210), the Project Settings `display/window/size/test_width` and `test_height` should be renamed to `window_width` and `window_height` to reflect their function. To avoid confusion, this PR also renames `display/window/size/width` and `height` to `viewport_width` and `viewport_height` to reflect their function too.\r\n\r\nPart of #16863\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418550,4418718,4418733,4418914]},{"id":605529546,"public_id":47520,"url":"https://github.com/godotengine/godot/pull/47520","diff_url":"https://github.com/godotengine/godot/pull/47520.diff","patch_url":"https://github.com/godotengine/godot/pull/47520.patch","title":"Add editor singletons to expose more editor UI components","state":"open","is_draft":true,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-03-31T11:02:51Z","updated_at":"2021-06-03T13:04:08Z","body":"Part of godotengine/godot-proposals#2537\r\n\r\nThis PR exposes every editor component (only the main ones, not subcomponents) through dedicated singletons.\r\nThe naming scheme follows [this section](https://docs.godotengine.org/en/latest/community/contributing/docs_writing_guidelines.html#common-vocabulary-to-use-in-godot-s-documentation), including the use of \"workspace\" instead of \"main screen\".\r\n\r\nI took the opportunity to move some methods from EditorPlugin and EditorInterface to dedicated singletons to clean up that classes. As I pointed out in godotengine/godot-proposals#2537, the Godot editor is too big and complex to expose its API mostly through 2 classes.\r\n\r\nSingletons:\r\n\r\n- [x] EditorDocks\r\n- [x] EditorBottomPanels\r\n- [x] EditorWorkspaces\r\n- [x] EditorTopBars\r\n- [x] EditorPluginInterfaces (I don't like this name)\r\n- [x] EditorScenes (may require a better name)\r\n- [x] EditorInterface\r\n\r\nNotes for reviewers: \r\n- Since this is going to be a big PR, I'd be verbose with commits and squash them when this became stable enough.\r\n- Docs are not done yet because I prefer that we agree on the new API.","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":604426042,"public_id":47508,"url":"https://github.com/godotengine/godot/pull/47508","diff_url":"https://github.com/godotengine/godot/pull/47508.diff","patch_url":"https://github.com/godotengine/godot/pull/47508.patch","title":"Fix Bullet Physics Server","state":"open","is_draft":false,"authored_by":{"id":76991284,"user":"sboron","avater":"https://avatars.githubusercontent.com/u/76991284?v=4","url":"https://github.com/sboron"},"created_at":"2021-03-30T20:53:45Z","updated_at":"2021-07-06T08:32:45Z","body":"Bullet2 physics compatibility for to new rendering server api in godot 4. Only small changes were necessary.\r\n\r\n![image](https://user-images.githubusercontent.com/76991284/113055336-c590c880-91aa-11eb-9ff6-f831799ea302.png)\r\n\r\nNext step: PhysX Integration (in progress)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":603992573,"public_id":47502,"url":"https://github.com/godotengine/godot/pull/47502","diff_url":"https://github.com/godotengine/godot/pull/47502.diff","patch_url":"https://github.com/godotengine/godot/pull/47502.patch","title":"Always add decimal when printing float","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-03-30T15:54:52Z","updated_at":"2021-07-27T11:53:27Z","body":"So that\r\n```\r\nvar a: float = 1\r\nprint(a)\r\n```\r\nprints\r\n```\r\n1.0\r\n```\r\nMakes working with numbers less confusing. I remember someone mentioned it around https://github.com/godotengine/godot-proposals/issues/1866","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914,4418923]},{"id":603950350,"public_id":47500,"url":"https://github.com/godotengine/godot/pull/47500","diff_url":"https://github.com/godotengine/godot/pull/47500.diff","patch_url":"https://github.com/godotengine/godot/pull/47500.patch","title":"NaN, INF read/write bug fixed (rebased, 3.x)","state":"open","is_draft":false,"authored_by":{"id":6376721,"user":"briansemrau","avater":"https://avatars.githubusercontent.com/u/6376721?v=4","url":"https://github.com/briansemrau"},"created_at":"2021-03-30T15:27:22Z","updated_at":"2021-08-06T11:24:33Z","body":"3.x version of #47497.\r\n\r\nFixes #40589\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":603918414,"public_id":47499,"url":"https://github.com/godotengine/godot/pull/47499","diff_url":"https://github.com/godotengine/godot/pull/47499.diff","patch_url":"https://github.com/godotengine/godot/pull/47499.patch","title":"[macOS, sandbox] Implement optional native file selection dialog support for sandboxed apps.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-03-30T15:03:33Z","updated_at":"2021-08-18T18:48:08Z","body":"Alternative to #47056, implements https://github.com/godotengine/godot-proposals/issues/1123 on macOS.\r\n\r\nAdds ability to access arbitrary folders for macOS sandboxed apps (`Entitlements` → `App Sandbox` → `Enabled` is selected during export).\r\n\r\n- Adds `files.user-selected` entitlement support to the export dialog.\r\n- Adds `OS.is_sandboxed()` to detect running in the macOS sandbox.\r\n- Adds `DisplayServer.file_dialog_show()` to display native file selection dialog. Which also saves security-scoped bookmarks for selected files/folders, to automatically gain access in the next session.\r\n- Adds `FileDialog.use_native_dialog` property to seamlessly integrate native dialog to existing apps, disabled by default, used automatically when sandboxed app is accessing file system.\r\n- Implements `OS_OSX::get_granted_permissions()` to get list of accessible folders/files.\r\n- Adds `OS.revoke_granted_permissions()` to clear list of accessible folders/files.\r\n- Can be used in non-sandboxed apps.\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,4418733,4418914]},{"id":603892914,"public_id":47497,"url":"https://github.com/godotengine/godot/pull/47497","diff_url":"https://github.com/godotengine/godot/pull/47497.diff","patch_url":"https://github.com/godotengine/godot/pull/47497.patch","title":"NaN, INF read/write bug fixed (rebased)","state":"open","is_draft":false,"authored_by":{"id":6376721,"user":"briansemrau","avater":"https://avatars.githubusercontent.com/u/6376721?v=4","url":"https://github.com/briansemrau"},"created_at":"2021-03-30T14:44:56Z","updated_at":"2021-03-30T15:18:16Z","body":"Fix: #40589, supersedes #40619.\r\n\r\nThis is a rebase of #40619 due to inactivity on that PR.\r\n\r\nThis was tested on Windows 10 with Visual Studio 2019.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":602888346,"public_id":47461,"url":"https://github.com/godotengine/godot/pull/47461","diff_url":"https://github.com/godotengine/godot/pull/47461.diff","patch_url":"https://github.com/godotengine/godot/pull/47461.patch","title":"Bind METHOD_FLAG_VARARG as an Enum Constant in Core Constants","state":"open","is_draft":false,"authored_by":{"id":62471966,"user":"sps1112","avater":"https://avatars.githubusercontent.com/u/62471966?v=4","url":"https://github.com/sps1112"},"created_at":"2021-03-29T16:04:44Z","updated_at":"2021-03-30T14:48:13Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #47449 .\r\nBind the `METHOD_FLAG_VARARG` as `BIND_CORE_ENUM_CONSTANT(METHOD_FLAG_VARARG);` in core_constants.cpp\r\n\r\nNote: This commit should also be added to `global_constants.cpp` which exists in the `3.x` branch, not in `master`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":602680233,"public_id":47455,"url":"https://github.com/godotengine/godot/pull/47455","diff_url":"https://github.com/godotengine/godot/pull/47455.diff","patch_url":"https://github.com/godotengine/godot/pull/47455.patch","title":"[WIP] [3.4] Changes in support of AR support on Android","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2021-03-29T11:22:28Z","updated_at":"2021-08-06T11:24:33Z","body":"This is an updated version of #41026 changed to work on the latest 3.x branch. Basically all of Fredias changes as they were with a couple split out into #47451 and a few texture lookup changes on hold (have to have a discussion with @reduz whether this is the correct approach). This thus replaces 41026 completely. Once 47451 is merged I will make the required changes in https://github.com/godotvr/godot_arcore and see if we can finally make this mergeable. \r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":602273313,"public_id":47442,"url":"https://github.com/godotengine/godot/pull/47442","diff_url":"https://github.com/godotengine/godot/pull/47442.diff","patch_url":"https://github.com/godotengine/godot/pull/47442.patch","title":"Fix CONNECT_REFERENCE_COUNTED","state":"open","is_draft":false,"authored_by":{"id":22453358,"user":"Shatur","avater":"https://avatars.githubusercontent.com/u/22453358?v=4","url":"https://github.com/Shatur"},"created_at":"2021-03-28T17:04:03Z","updated_at":"2021-05-08T21:56:08Z","body":"`CONNECT_REFERENCE_COUNTED` requires 1 more `disconnect` call than `connect` calls. The PR fixes this behavior.\r\n\r\nMinimal reproduction project:\r\n\r\n[TestConnect.zip](https://github.com/godotengine/godot/files/6217692/TestConnect.zip)\r\n\r\n_(just try to uncomment line 14)_\r\n\r\nCloses #44584.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":602151319,"public_id":47427,"url":"https://github.com/godotengine/godot/pull/47427","diff_url":"https://github.com/godotengine/godot/pull/47427.diff","patch_url":"https://github.com/godotengine/godot/pull/47427.patch","title":"Implement bsearch for Vector","state":"open","is_draft":false,"authored_by":{"id":1059099,"user":"mashumafi","avater":"https://avatars.githubusercontent.com/u/1059099?v=4","url":"https://github.com/mashumafi"},"created_at":"2021-03-27T22:42:57Z","updated_at":"2021-03-28T00:40:11Z","body":"Implement `Vector::bsearch` so that it can be exposed with `Pool*Aarray`. This would avoid needing to copy data to an `Array` just to do bsearch.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":602135466,"public_id":47422,"url":"https://github.com/godotengine/godot/pull/47422","diff_url":"https://github.com/godotengine/godot/pull/47422.diff","patch_url":"https://github.com/godotengine/godot/pull/47422.patch","title":"Add note that for _gui_input(event) event position is relative to the control origin","state":"open","is_draft":false,"authored_by":{"id":6080368,"user":"skyace65","avater":"https://avatars.githubusercontent.com/u/6080368?v=4","url":"https://github.com/skyace65"},"created_at":"2021-03-27T20:23:20Z","updated_at":"2021-03-27T20:38:36Z","body":"Does what the title says. Closes https://github.com/godotengine/godot-docs/issues/4433","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":602135034,"public_id":47421,"url":"https://github.com/godotengine/godot/pull/47421","diff_url":"https://github.com/godotengine/godot/pull/47421.diff","patch_url":"https://github.com/godotengine/godot/pull/47421.patch","title":"Array::insert consistent with Pool*Array::insert","state":"open","is_draft":false,"authored_by":{"id":1059099,"user":"mashumafi","avater":"https://avatars.githubusercontent.com/u/1059099?v=4","url":"https://github.com/mashumafi"},"created_at":"2021-03-27T20:19:14Z","updated_at":"2021-03-28T00:40:09Z","body":"There were some inconsistencies with  `Array` and `Pool*Array` that were resolved a few months ago such as exposing new methods. Another difference is the return value of the `insert` function. This change adds an `Error` response to the `Array::insert` function similar to how `Pool*Array` have `Error` on their insert.\r\n\r\nmaster PR here: https://github.com/godotengine/godot/pull/47406","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":602083653,"public_id":47412,"url":"https://github.com/godotengine/godot/pull/47412","diff_url":"https://github.com/godotengine/godot/pull/47412.diff","patch_url":"https://github.com/godotengine/godot/pull/47412.patch","title":"Fix VehicleWheel sinks into other colliders","state":"open","is_draft":false,"authored_by":{"id":8739690,"user":"MrMinimal","avater":"https://avatars.githubusercontent.com/u/8739690?v=4","url":"https://github.com/MrMinimal"},"created_at":"2021-03-27T15:33:30Z","updated_at":"2021-07-07T11:29:46Z","body":"Fixes #45339.\r\n\r\nTested in [truck town](https://github.com/godotengine/godot-demo-projects/tree/master/3d/truck_town) and my simple \r\n[demo.zip](https://github.com/godotengine/godot/files/6217491/demo.zip).\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":602001708,"public_id":47406,"url":"https://github.com/godotengine/godot/pull/47406","diff_url":"https://github.com/godotengine/godot/pull/47406.diff","patch_url":"https://github.com/godotengine/godot/pull/47406.patch","title":"Array::insert consistent with Pool*Array::insert","state":"open","is_draft":false,"authored_by":{"id":1059099,"user":"mashumafi","avater":"https://avatars.githubusercontent.com/u/1059099?v=4","url":"https://github.com/mashumafi"},"created_at":"2021-03-27T04:55:39Z","updated_at":"2021-08-13T07:17:58Z","body":"There were some inconsistencies with  `Array` and `Pool*Array` that were resolved a few month sago such as exposing new methods. Another difference is the return value of the `insert` function. This change adds an `Error` response to the `Array::insert` function similar to how `Pool*Array` have `Error` on their insert..","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":601945072,"public_id":47401,"url":"https://github.com/godotengine/godot/pull/47401","diff_url":"https://github.com/godotengine/godot/pull/47401.diff","patch_url":"https://github.com/godotengine/godot/pull/47401.patch","title":"Add support for contrast-adaptive sharpening in 3D","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-26T22:56:32Z","updated_at":"2021-08-18T15:24:53Z","body":"This is an older, easier to implement variant of CAS as a pure fragment shader. It doesn't support upscaling, but we won't make use of it (at least for now).\r\n\r\nThe sharpening intensity can be adjusted on a per-Viewport basis. For the root viewport, it can be adjusted in the Project Settings.\r\n\r\nThis can likely be backported to the GLES3 renderer, but I don't know whether this can work in GLES2.\r\n**Edit:** Done for GLES3 in https://github.com/godotengine/godot/pull/47416. It can't be implemented in GLES2 due to `textureLodOffset()` not being available.\r\n\r\n**Test project:** https://github.com/Calinou/test_contrast_adaptive_sharpening\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1519.\r\n\r\n## Preview\r\n\r\n*FXAA is enabled on both screenshots.*\r\n\r\n[Slider comparison](https://imgsli.com/NDYzODk)\r\n\r\n### Sharpening disabled\r\n\r\n![Disabled](https://user-images.githubusercontent.com/180032/112700683-f01f1080-8e8e-11eb-8d8d-2b22da426d50.png)\r\n\r\n### Sharpening enabled (intensity 1.0)\r\n\r\n![Enabled](https://user-images.githubusercontent.com/180032/112700678-eeede380-8e8e-11eb-90d4-a98d9b7dc834.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418550,4418914]},{"id":601784129,"public_id":47394,"url":"https://github.com/godotengine/godot/pull/47394","diff_url":"https://github.com/godotengine/godot/pull/47394.diff","patch_url":"https://github.com/godotengine/godot/pull/47394.patch","title":"Don't hardcode the documentation version in URLs","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-26T17:10:42Z","updated_at":"2021-04-21T14:28:15Z","body":"This makes it possible to change the version of the documentation URLs are pointing to without having to modify all class reference files. In the XML class reference, the `$DOC_VERSION` placeholder should be used.\n\nThe documentation version string is set in `version.py`.\n\nA similar change can be applied to the `3.x` branch in a separate pull request if needed.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417819,4418518]},{"id":601674663,"public_id":47391,"url":"https://github.com/godotengine/godot/pull/47391","diff_url":"https://github.com/godotengine/godot/pull/47391.diff","patch_url":"https://github.com/godotengine/godot/pull/47391.patch","title":"Make platform feature tag names lowercase","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-26T14:51:37Z","updated_at":"2021-08-13T07:18:46Z","body":"Feature tag names are still case-sensitive, but this makes built-in feature tags more consistent.\r\n\r\n- `Windows` -> `windows`\r\n- `OSX` -> `osx`\r\n- `Linux` -> `linux` (also applies to FreeBSD, NetBSD, and BSD)\r\n- `Android` -> `android`\r\n- `iOS` -> `ios`\r\n- `HTML5` -> `html5`\r\n- `JavaScript` -> `javascript`\r\n- `UWP` -> `uwp`\r\n- `Server` -> `server`\r\n\r\nThis also hides the \"X11\" feature tag in the project settings editor's override list and adds Linux and BSD manually. Ideally, this should be fixed properly but I don't know how to do it right now. I think we should have a single `linuxbsd` feature tag as there's not much reason to have separate feature tags for Linux and *BSD.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2492.\r\n\r\n## Preview\r\n\r\nUsing `print(ProjectSettings.get_setting(\"application/config/hello\"))` will display `hello from Linux` on Linux, and `hello world` on all other platforms.\r\n\r\n*The correct name to use is `linux`, the others are present just for testing.*\r\n\r\n![image](https://user-images.githubusercontent.com/180032/112649966-3a7e9e00-8e4b-11eb-8018-8c2c50ad5bdb.png)\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112912,4418914]},{"id":601634743,"public_id":47389,"url":"https://github.com/godotengine/godot/pull/47389","diff_url":"https://github.com/godotengine/godot/pull/47389.diff","patch_url":"https://github.com/godotengine/godot/pull/47389.patch","title":"Refactor WAV file loading, allow loading WAV files at run-time","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-26T13:54:47Z","updated_at":"2021-08-06T11:24:33Z","body":"This is @SaracenOne's [pull request](https://github.com/godotengine/godot/pull/42524) reopened to allow working on it and merging it again.\r\n\r\nJudging by the original description, the implementation isn't complete and won't work as it is right now.\r\n\r\nWe'll also have to make a version for `master`, but conflicts have to be resolved first.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/732.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418424]},{"id":600927420,"public_id":47363,"url":"https://github.com/godotengine/godot/pull/47363","diff_url":"https://github.com/godotengine/godot/pull/47363.diff","patch_url":"https://github.com/godotengine/godot/pull/47363.patch","title":"_block() and _unblock() instead of increment and decrement","state":"open","is_draft":false,"authored_by":{"id":29497869,"user":"hilfazer","avater":"https://avatars.githubusercontent.com/u/29497869?v=4","url":"https://github.com/hilfazer"},"created_at":"2021-03-25T17:26:49Z","updated_at":"2021-03-26T05:48:30Z","body":"This change aids debugging, so you can place 1 breakpoint instead of 11 or 2 instead of 22.\r\n\r\nBTW i wonder if `data.blocked` ever goes above 1. And if it needs to be `int` in case it does.\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":600895764,"public_id":47361,"url":"https://github.com/godotengine/godot/pull/47361","diff_url":"https://github.com/godotengine/godot/pull/47361.diff","patch_url":"https://github.com/godotengine/godot/pull/47361.patch","title":"Tweak renderer selection messages in the Project Manager (3.x)","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-25T16:42:27Z","updated_at":"2021-08-06T11:24:33Z","body":"- Check the GLES2 option automatically if GLES3 is unavailable.\r\n- Mention the WebGL version corresponding to each renderer.\r\n- Mention that OpenGL ES 3.0 support may be unavailable due to not using supported hardware (instead of drivers).\r\n- Use bullet points for list items.\r\n- Use a string constant for the `driver_name` metadata name.\r\n- Backport cosmetic changes from the `master` branch.\r\n\r\n(Someone asked on Discord which renderer they should pick to target WebGL 1.0.)\r\n\r\n## Preview\r\n\r\n### GLES3 available\r\n\r\n![Project manager](https://user-images.githubusercontent.com/180032/127378735-1bce6b8f-5572-4c26-a6f1-8b480cdf296a.png)\r\n\r\n### GLES3 unavailable\r\n\r\n![Project manager](https://user-images.githubusercontent.com/180032/127378739-390ad080-c0e4-446c-a638-fd9471f76397.png)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":600346781,"public_id":47346,"url":"https://github.com/godotengine/godot/pull/47346","diff_url":"https://github.com/godotengine/godot/pull/47346.diff","patch_url":"https://github.com/godotengine/godot/pull/47346.patch","title":"[3.x] Draw triangles for HeightMapShape debug collision","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-03-25T01:15:34Z","updated_at":"2021-08-06T11:24:33Z","body":"Helps with ambiguous cases where it's not possible to tell which diagonal is used for collision in quads.\r\n\r\nBefore (can't tell if it's convex or concave):\r\n<img src=\"https://user-images.githubusercontent.com/1075032/112403545-d5506e80-8ccb-11eb-91c2-9fc764574a81.png\" width=\"200\" />\r\n\r\nAfter (added edge for clarification):\r\n<img src=\"https://user-images.githubusercontent.com/1075032/112403584-ebf6c580-8ccb-11eb-9ed5-830b9d87f1b5.png\" width=\"200\" />\r\n\r\n3.x backport of #47345","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":598898203,"public_id":47297,"url":"https://github.com/godotengine/godot/pull/47297","diff_url":"https://github.com/godotengine/godot/pull/47297.diff","patch_url":"https://github.com/godotengine/godot/pull/47297.patch","title":"Improve call_group documentation","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-03-23T14:18:56Z","updated_at":"2021-03-23T14:18:57Z","body":"- Mentions that `call_group` is deferred.\r\n- Adds code example to `call_group_flags`.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":598870090,"public_id":47295,"url":"https://github.com/godotengine/godot/pull/47295","diff_url":"https://github.com/godotengine/godot/pull/47295.diff","patch_url":"https://github.com/godotengine/godot/pull/47295.patch","title":"Fix race condition on `script_binding` in C#","state":"open","is_draft":false,"authored_by":{"id":3409836,"user":"omegachysis","avater":"https://avatars.githubusercontent.com/u/3409836?v=4","url":"https://github.com/omegachysis"},"created_at":"2021-03-23T13:44:12Z","updated_at":"2021-03-23T14:21:21Z","body":"Fixes #37652, replicates changes from #43889 into `master` branch. Protects the script binding map in the C# scripting system from getting corrupted during multithreaded allocation.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3857901]},{"id":598831635,"public_id":47294,"url":"https://github.com/godotengine/godot/pull/47294","diff_url":"https://github.com/godotengine/godot/pull/47294.diff","patch_url":"https://github.com/godotengine/godot/pull/47294.patch","title":"allow variant construction in expressions","state":"open","is_draft":false,"authored_by":{"id":7891178,"user":"sebastian-heinz","avater":"https://avatars.githubusercontent.com/u/7891178?v=4","url":"https://github.com/sebastian-heinz"},"created_at":"2021-03-23T12:52:22Z","updated_at":"2021-03-23T13:28:48Z","body":"This code has been removed here: \r\nhttps://github.com/godotengine/godot/commit/5288ff538d75d2ddab257a9e1e40050c9b8fa1cb#diff-38f5f835b7be8d6d97fcdc68ee97e34c8161292e7ca9bb55c80ee4c399a4f3d5L1095\r\n\r\npreviously (godot-3.2) evaluating an expression like \"Vector2(0, 0)\" would return the Vector2 as Variant, after I ported my project to godot-4.0 this stopped working. \r\n\r\nYou can also notice that the `TK_BASIC_TYPE`-token is available in the switch case, but nowhere is it ever assigned, so in its current state the `TK_BASIC_TYPE` can not be constructed.\r\n\r\nWe can also see that the same code is used for `visual_script_expression.cpp` \r\nhttps://github.com/godotengine/godot/blob/cd05653e308c2263e23debd45211c48af134040d/modules/visual_script/visual_script_expression.cpp#L544\r\nwhich is not removed there.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":598726929,"public_id":47290,"url":"https://github.com/godotengine/godot/pull/47290","diff_url":"https://github.com/godotengine/godot/pull/47290.diff","patch_url":"https://github.com/godotengine/godot/pull/47290.patch","title":"Give bone attachments in the GLTF importer stable and proper names, and deduplicate.","state":"open","is_draft":false,"authored_by":{"id":80684659,"user":"mortarroad","avater":"https://avatars.githubusercontent.com/u/80684659?v=4","url":"https://github.com/mortarroad"},"created_at":"2021-03-23T10:18:01Z","updated_at":"2021-06-14T13:32:12Z","body":"Same as #47270, but for master.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":598499028,"public_id":47282,"url":"https://github.com/godotengine/godot/pull/47282","diff_url":"https://github.com/godotengine/godot/pull/47282.diff","patch_url":"https://github.com/godotengine/godot/pull/47282.patch","title":"[3.x] Add a get_as_bulk_array method to multimesh","state":"open","is_draft":false,"authored_by":{"id":48544263,"user":"puchik","avater":"https://avatars.githubusercontent.com/u/48544263?v=4","url":"https://github.com/puchik"},"created_at":"2021-03-23T02:39:21Z","updated_at":"2021-08-06T11:24:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nAdded a `get_as_bulk_array` method to multimesh.\r\n\r\nNeither `get` nor `set` of bulk arrays for multimeshes exists in 4.0/master right now so I don't think it can be implemented for those and cherry picked down.\r\n\r\nCloses #47158 \r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":598391057,"public_id":47279,"url":"https://github.com/godotengine/godot/pull/47279","diff_url":"https://github.com/godotengine/godot/pull/47279.diff","patch_url":"https://github.com/godotengine/godot/pull/47279.patch","title":"[3.x] Remove hardcoded names in generated objects","state":"open","is_draft":false,"authored_by":{"id":22453358,"user":"Shatur","avater":"https://avatars.githubusercontent.com/u/22453358?v=4","url":"https://github.com/Shatur"},"created_at":"2021-03-22T22:55:49Z","updated_at":"2021-08-06T11:24:33Z","body":"This is a 3.x version of #47271.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418424]},{"id":598369267,"public_id":47275,"url":"https://github.com/godotengine/godot/pull/47275","diff_url":"https://github.com/godotengine/godot/pull/47275.diff","patch_url":"https://github.com/godotengine/godot/pull/47275.patch","title":"Use snake_case by default for filenames","state":"open","is_draft":false,"authored_by":{"id":22453358,"user":"Shatur","avater":"https://avatars.githubusercontent.com/u/22453358?v=4","url":"https://github.com/Shatur"},"created_at":"2021-03-22T22:03:47Z","updated_at":"2021-03-23T00:06:40Z","body":"The guideline from #3694 states that `snake_case` should be used for filenames. But the automatically-chosen names currently don't follow this guideline. @Calinou mentioned that this should be changed in the editor code itself.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":598085485,"public_id":47258,"url":"https://github.com/godotengine/godot/pull/47258","diff_url":"https://github.com/godotengine/godot/pull/47258.diff","patch_url":"https://github.com/godotengine/godot/pull/47258.patch","title":"Buffered access to log output","state":"open","is_draft":false,"authored_by":{"id":3738264,"user":"Tugsav","avater":"https://avatars.githubusercontent.com/u/3738264?v=4","url":"https://github.com/Tugsav"},"created_at":"2021-03-22T15:01:49Z","updated_at":"2021-04-07T14:37:36Z","body":"This is an attempt at implementing the feature proposed in https://github.com/godotengine/godot-proposals/issues/536 as we need this for a project\r\n\r\nAdded support for buffered log access from game scripts. This can be enabled from the project settings.\r\n\r\nThe log buffer can be accessed from the Engine singleton, via the `get_log_buffer()` method. The Engine singleton will also emit a signal when a new message is logged.\r\n\r\nIf messages are not handled a warning will be logged when the buffer is full (and some log messages in the buffer will be deleted).\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/536.*","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":598061552,"public_id":47257,"url":"https://github.com/godotengine/godot/pull/47257","diff_url":"https://github.com/godotengine/godot/pull/47257.diff","patch_url":"https://github.com/godotengine/godot/pull/47257.patch","title":"Adds proxy support for HTTPClient","state":"open","is_draft":false,"authored_by":{"id":372476,"user":"timothyqiu","avater":"https://avatars.githubusercontent.com/u/372476?v=4","url":"https://github.com/timothyqiu"},"created_at":"2021-03-22T14:32:04Z","updated_at":"2021-07-16T18:18:12Z","body":"This PR adds HTTP(s) proxy support for `HTTPClient`.\r\n\r\n* `core/io/http_client.{h,cpp}`:\r\n    * Added `set_http{,s}_proxy(host, port)` methods to set/unset proxy. They are not pure virtual functions, the default implementation does nothing and emits warnings about proxy not implemented.\r\n* `core/io/http_client_tcp.{h,cpp}`:\r\n    * what HTTP proxy does:\r\n        1. connect to proxy server instead of target server\r\n        2. use full URL in request line\r\n    * what HTTPS proxy does:\r\n        1. connect to proxy server instead of target server\r\n        2. send a `CONNECT` request to setup the tunnel to target server\r\n        3. do SSL handshakes and other things as usual\r\n* `doc/classes/HTTPClient.xml`: added corresponding doc for new methods\r\n\r\nSome notes:\r\n\r\n* Common HTTP proxy servers can send requests to different target servers. This implementation always closes and reconnects to the proxy server for each `connect_to_host()` since simple HTTP connections are seldom used nowadays and reusing the connection complicates the code.\r\n* Only proxy servers that uses HTTP protocol are supported (i.e. no HTTP-on-HTTPS or HTTPS-on-HTTPS). It's hard to find such proxy servers.\r\n* Basic authentication is not currently implemented.\r\n\r\n<details>\r\n<summary>Here is a messy test code.</summary>\r\n\r\n```gdscript\r\nextends SceneTree\r\n\r\nfunc _init():\r\n    var err = 0\r\n    var http = HTTPClient.new() # Create the Client.\r\n\r\n    http.set_http_proxy(\"localhost\", 8123)\r\n    http.set_https_proxy(\"127.0.0.1\", 8123)\r\n\r\n    print(\"----- http with proxy -----\")\r\n    err = http.connect_to_host(\"httpbin.org\", -1, false) # Connect to host/port.\r\n    assert(err == OK) # Make sure connection was OK.\r\n    await do_http(http)\r\n    http.close()\r\n\r\n    print(\"----- https with proxy -----\")\r\n    err = http.connect_to_host(\"httpbin.org\", -1, true) # Connect to host/port.\r\n    assert(err == OK) # Make sure connection was OK.\r\n    await do_http(http)\r\n    http.close()\r\n\r\n    http.set_http_proxy(\"127.0.0.1\", -1)\r\n    http.set_https_proxy(\"127.0.0.1\", -1)\r\n\r\n    print(\"----- http without proxy -----\")\r\n    err = http.connect_to_host(\"httpbin.org\", -1, false) # Connect to host/port.\r\n    assert(err == OK) # Make sure connection was OK.\r\n    await do_http(http)\r\n    http.close()\r\n\r\n    print(\"----- https without proxy -----\")\r\n    err = http.connect_to_host(\"httpbin.org\", -1, true) # Connect to host/port.\r\n    assert(err == OK) # Make sure connection was OK.\r\n    await do_http(http)\r\n    http.close()\r\n\r\n    quit()\r\n\r\n\r\nfunc do_http(http):\r\n    var err = 0\r\n    # Wait until resolved and connected.\r\n    while http.get_status() == HTTPClient.STATUS_CONNECTING or http.get_status() == HTTPClient.STATUS_RESOLVING:\r\n        http.poll()\r\n        print(\"Connecting...\")\r\n        if not OS.has_feature(\"web\"):\r\n            OS.delay_msec(500)\r\n        else:\r\n            await (Engine.get_main_loop().idle_frame)\r\n\r\n    assert(http.get_status() == HTTPClient.STATUS_CONNECTED) # Could not connect\r\n\r\n    # Some headers\r\n    var headers = [\r\n        \"User-Agent: Pirulo/1.0 (Godot)\",\r\n        \"Accept: */*\"\r\n    ]\r\n\r\n    err = http.request(HTTPClient.METHOD_GET, \"/get\", headers) # Request a page from the site (this one was chunked..)\r\n    assert(err == OK) # Make sure all is OK.\r\n\r\n    while http.get_status() == HTTPClient.STATUS_REQUESTING:\r\n        # Keep polling for as long as the request is being processed.\r\n        http.poll()\r\n        print(\"Requesting...\")\r\n        if not OS.has_feature(\"web\"):\r\n            OS.delay_msec(500)\r\n        else:\r\n            # Synchronous HTTP requests are not supported on the web,\r\n            # so wait for the next main loop iteration.\r\n            await (Engine.get_main_loop().idle_frame)\r\n\r\n    assert(http.get_status() == HTTPClient.STATUS_BODY or http.get_status() == HTTPClient.STATUS_CONNECTED) # Make sure request finished well.\r\n\r\n    print(\"response? \", http.has_response()) # Site might not have a response.\r\n\r\n    if http.has_response():\r\n        # If there is a response...\r\n\r\n        headers = http.get_response_headers_as_dictionary() # Get response headers.\r\n        print(\"code: \", http.get_response_code()) # Show response code.\r\n        print(\"**headers:\\\\n\", headers) # Show headers.\r\n\r\n        # Getting the HTTP Body\r\n\r\n        if http.is_response_chunked():\r\n            # Does it use chunks?\r\n            print(\"Response is Chunked!\")\r\n        else:\r\n            # Or just plain Content-Length\r\n            var bl = http.get_response_body_length()\r\n            print(\"Response Length: \", bl)\r\n\r\n        # This method works for both anyway\r\n\r\n        var rb = PackedByteArray() # Array that will hold the data.\r\n\r\n        while http.get_status() == HTTPClient.STATUS_BODY:\r\n            # Get a chunk.\r\n            var chunk = http.read_response_body_chunk()\r\n            if chunk.size() == 0:\r\n                if not OS.has_feature(\"web\"):\r\n                    # Got nothing, wait for buffers to fill a bit.\r\n                    OS.delay_usec(1000)\r\n                else:\r\n                    await (Engine.get_main_loop().idle_frame)\r\n            else:\r\n                rb = rb + chunk # Append to read buffer.\r\n            # While there is body left to be read\r\n            http.poll()\r\n        # Done!\r\n\r\n        print(\"bytes got: \", rb.size())\r\n        var text = rb.get_string_from_ascii()\r\n        print(\"Text: \", text)\r\n```\r\n\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,2785428,4418914]},{"id":597829840,"public_id":47249,"url":"https://github.com/godotengine/godot/pull/47249","diff_url":"https://github.com/godotengine/godot/pull/47249.diff","patch_url":"https://github.com/godotengine/godot/pull/47249.patch","title":"Fix embedded subwindow drag in single window mode","state":"open","is_draft":false,"authored_by":{"id":6378569,"user":"pcvonz","avater":"https://avatars.githubusercontent.com/u/6378569?v=4","url":"https://github.com/pcvonz"},"created_at":"2021-03-22T09:16:57Z","updated_at":"2021-03-23T06:21:28Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixes #47244\r\n\r\nThe problem was that it was using the position of the last dragged sub window. So, I added a new drag state `SUB_WINDOW_DRAG_START`. When the drag starts, the `drag_from` and `drag_pos` variables are set to the initial position of the sub window and the mouse.\r\n\r\nhttps://user-images.githubusercontent.com/6378569/111965647-32250c80-8ab3-11eb-98f5-72acc3a04b77.mp4\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":597785287,"public_id":47248,"url":"https://github.com/godotengine/godot/pull/47248","diff_url":"https://github.com/godotengine/godot/pull/47248.diff","patch_url":"https://github.com/godotengine/godot/pull/47248.patch","title":"Rename Control getters and setters to match properties","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-03-22T08:18:26Z","updated_at":"2021-05-01T10:40:57Z","body":"Part of #16863, originally identified by @AlexHolly [here](https://github.com/godotengine/godot/issues/16863#issuecomment-381420942).\r\n\r\nIncludes renaming some properties to match the getters and setters where appropriate.\r\n\r\nMethod renames:\r\n\r\nProperty | Method Before | Method After\r\n-- | -- | --\r\nmouse_default_cursor_shape | set_default_cursor_shape | set_mouse_default_cursor_shape\r\n\" | get_default_cursor_shape | get_mouse_default_cursor_shape\r\n-- | get_cursor_shape | get_mouse_cursor_shape\r\ngrow_horizontal | set_h_grow_direction | set_grow_horizontal\r\n\" | get_h_grow_direction | get_grow_horizontal\r\ngrow_vertical | set_v_grow_direction | set_grow_vertical\r\n\" | get_v_grow_direction | get_grow_vertical\r\nrect_clip_contents | set_clip_contents | set_rect_clip_contents\r\n\" | is_clipping_contents | is_rect_clipping_contents\r\nrect_global_position | set_global_position | set_rect_global_position\r\n\" | get_global_position | get_rect_global_position\r\nrect_position | set_position | set_rect_position\r\n\" | get_position | get_rect_position\r\nrect_rotation | set_rotation | set_rect_rotation\r\n\" | get_rotation | get_rect_rotation\r\nrect_rotation_degrees | set_rotation_degrees | set_rect_rotation_degrees\r\n\" | get_rotation_degrees | get_rect_rotation_degrees\r\nrect_minimum_size | set_custom_minimum_size | set_rect_minimum_size\r\n\" | get_custom_minimum_size | get_rect_minimum_size\r\nrect_pivot_offset | set_pivot_offset | set_rect_pivot_offset\r\n\" | get_pivot_offset | get_rect_pivot_offset\r\nrect_scale | set_scale | set_rect_scale\r\n\" | get_scale | get_rect_scale\r\nrect_size | set_size | set_rect_size\r\n\" | get_size | get_rect_size\r\nsize_flags_horizontal | set_h_size_flags | set_size_flags_horizontal\r\n\" | get_h_size_flags | get_size_flags_horizontal\r\nsize_flags_stretch_ratio | set_stretch_ratio | set_size_flags_stretch_ratio\r\n\" | get_stretch_ratio | get_size_flags_stretch_ratio\r\nsize_flags_vertical | set_v_size_flags | set_size_flags_vertical\r\n\" | get_v_size_flags | get_size_flags_vertical\r\n\r\nProperty renames:\r\n\r\nBefore | After\r\n-- | --\r\nrect_clip_content | rect_clip_contents\r\nrect_min_size | rect_minimum_size\r\nhint_tooltip | tooltip\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,4417819,4417868,4418424,4418542,4418550,4418558,4418563,4418605,4418726,4418733,4418914,4418923]},{"id":597610255,"public_id":47246,"url":"https://github.com/godotengine/godot/pull/47246","diff_url":"https://github.com/godotengine/godot/pull/47246.diff","patch_url":"https://github.com/godotengine/godot/pull/47246.patch","title":"Add screen_get_refresh_rate to DisplayServer","state":"open","is_draft":true,"authored_by":{"id":12436824,"user":"summertimejordi","avater":"https://avatars.githubusercontent.com/u/12436824?v=4","url":"https://github.com/summertimejordi"},"created_at":"2021-03-22T01:42:23Z","updated_at":"2021-04-03T00:03:27Z","body":"Closes godotengine/godot-proposals#1284.\r\n\r\nAllows you to get the Screen's refresh rate by using `DisplayServer.screen_get_refresh_rate()`\r\n\r\n![image](https://user-images.githubusercontent.com/12436824/111929672-0a1eb480-8a85-11eb-857b-6a5ac86534f3.png)\r\n![image](https://user-images.githubusercontent.com/12436824/111929688-173ba380-8a85-11eb-9b52-3fd571a3867e.png)\r\n\r\nSince 3.2 doesn't use DisplayServer, I would imagine this can't be cherry-picked. I've already made a 3.x version that uses OS instead. I will make a separate PR for the 3.x branch if this gets merged.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":597510613,"public_id":47235,"url":"https://github.com/godotengine/godot/pull/47235","diff_url":"https://github.com/godotengine/godot/pull/47235.diff","patch_url":"https://github.com/godotengine/godot/pull/47235.patch","title":"Fix DynamicFont breaking mouse grab in inspector spinners","state":"open","is_draft":false,"authored_by":{"id":4833621,"user":"opl-","avater":"https://avatars.githubusercontent.com/u/4833621?v=4","url":"https://github.com/opl-"},"created_at":"2021-03-21T15:45:56Z","updated_at":"2021-08-06T11:24:33Z","body":"This was caused by DynamicFont not specifying which property was edited, resulting in the whole inspector being recreated\r\n\r\nFixes #25046. Same as #40701 but targeting the 3.x branch.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":597504532,"public_id":47232,"url":"https://github.com/godotengine/godot/pull/47232","diff_url":"https://github.com/godotengine/godot/pull/47232.diff","patch_url":"https://github.com/godotengine/godot/pull/47232.patch","title":"Remove redundant thread sync counter draw_pending, 3.x version","state":"open","is_draft":false,"authored_by":{"id":24513485,"user":"zmanuel","avater":"https://avatars.githubusercontent.com/u/24513485?v=4","url":"https://github.com/zmanuel"},"created_at":"2021-03-21T15:11:31Z","updated_at":"2021-08-06T11:24:33Z","body":"The functions that used it already use a threadsafe FIFO queue\r\nto communicate between threads and a sync to have the main thread\r\nwait for the render thread.\r\n\r\nCherry-Picked from #35718, which is the same fix against the master branch (there have been renames)\r\n\r\nFixes #35718","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":597484474,"public_id":47223,"url":"https://github.com/godotengine/godot/pull/47223","diff_url":"https://github.com/godotengine/godot/pull/47223.diff","patch_url":"https://github.com/godotengine/godot/pull/47223.patch","title":"Implement more ProgressBar progress label formats","state":"open","is_draft":false,"authored_by":{"id":26509794,"user":"wingedadventurer","avater":"https://avatars.githubusercontent.com/u/26509794?v=4","url":"https://github.com/wingedadventurer"},"created_at":"2021-03-21T13:21:38Z","updated_at":"2021-03-26T11:28:01Z","body":"The PR refactors ProgressBar's `percent_visible` property into an enumeration, and adds 2 more formats to display progress label: decimal and fraction.\r\n\r\nResolves godotengine/godot-proposals#2399.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418733]},{"id":597432794,"public_id":47215,"url":"https://github.com/godotengine/godot/pull/47215","diff_url":"https://github.com/godotengine/godot/pull/47215.diff","patch_url":"https://github.com/godotengine/godot/pull/47215.patch","title":"Fix anchor dragging (part 2)","state":"open","is_draft":false,"authored_by":{"id":72765293,"user":"knightofiam","avater":"https://avatars.githubusercontent.com/u/72765293?v=4","url":"https://github.com/knightofiam"},"created_at":"2021-03-21T07:14:29Z","updated_at":"2021-03-29T17:17:21Z","body":"- Fixes a regression from df0a69bbaca690e1954d5048cc238acc8adeddb8 that was only partially fixed by #42371.\r\n\r\nProblem:\r\n\r\n- The following error occurs when attempting to drag anchors when the parent has no size (i.e., no Control node parent but anchor icon is enabled, causing `\"_edit_use_anchors_\": true` in tscn file):\r\n\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x = 0.0\" is true.\r\n\r\nSolution:\r\n\r\n- Set the anchors to zero in this special case, which allows dragging the Node to a new position instead of failing with a C++ error message. I see no reason to disallow this behavior, and the current behavior is unexpected and unfriendly to newcomers (I'm not a Godot expert by any means but I've been using it for about 6 months and it was no easy task to decipher what was going on here).\r\n\r\nSteps to Reproduce:\r\n\r\n- Select a Node in a scene, say a RichTextField.\r\n\r\n- Click the green anchor symbol in the scene window toolbar so that it changes to blue. (The tooltip says \"When active, moving Control nodes changes their anchors instead of their margins.\")\r\n\r\n- Attempt to drag the node to a new position.\r\n\r\n- The editor's Output window will spam the following error in red:\r\n\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n      scene/gui/control.cpp:1800 - Condition \"parent_rect_size.x == 0.0\" is true.\r\n\r\nEnvironment:\r\n\r\n- Godot_mono 3.3 RC 6\r\n- macOS 11.2.2 (Big Sur)\r\n- .NET 5 \r\n\r\nTesting:\r\n\r\n- Confirmed the fix works in Godot 4. It allows a Node without a Control node as a parent to be dragged to a new position without any error, even with the anchor icon enabled.\r\n\r\nRelated to #41212.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":597430149,"public_id":47214,"url":"https://github.com/godotengine/godot/pull/47214","diff_url":"https://github.com/godotengine/godot/pull/47214.diff","patch_url":"https://github.com/godotengine/godot/pull/47214.patch","title":"Don't add degenerate triangles to trimesh shape","state":"open","is_draft":false,"authored_by":{"id":79001820,"user":"e344fde6bf","avater":"https://avatars.githubusercontent.com/u/79001820?v=4","url":"https://github.com/e344fde6bf"},"created_at":"2021-03-21T06:49:42Z","updated_at":"2021-08-20T16:53:15Z","body":"Degenerate triangles can cause errors in collision detection as they\r\nhave no normal.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":597429490,"public_id":47212,"url":"https://github.com/godotengine/godot/pull/47212","diff_url":"https://github.com/godotengine/godot/pull/47212.diff","patch_url":"https://github.com/godotengine/godot/pull/47212.patch","title":"Fix: .gitignore files ignore part of the repo.","state":"open","is_draft":false,"authored_by":{"id":160754,"user":"zorbathut","avater":"https://avatars.githubusercontent.com/u/160754?v=4","url":"https://github.com/zorbathut"},"created_at":"2021-03-21T06:43:15Z","updated_at":"2021-05-08T17:26:29Z","body":"At the moment, if you download the Godot release .zip, decompress it into a new git repo, add the entire contents, clean the git repo, and try to build Godot, the build is broken. Turns out Godot has several critical files (and a few less-critical files) included in its .gitignore.\r\n\r\n----\r\n\r\nFrom my perspective, the most important ones are the entire `modules/mono/editor/GodotTools/GodotTools/Build/` directory, which breaks the Mono build if they don't exist. These are filtered out due to the `build/` entry. As near as I can tell, that entry is part of the .gitignore template, and Godot does not actually use any directory named `build/`. So I just took that line out. This may have been the wrong decision if Godot's build process is markedly different on other operating systems.\r\n\r\n----\r\n\r\nThe second most important ones are a bunch of Vulkan files for various Apple operating systems:\r\n\r\nmisc/dist/ios_xcode/godot_ios/vulkan/icd.d\r\nmisc/dist/osx_template.app/Contents/Resources/vulkan/icd.d\r\nmisc/dist/osx_tools.app/Contents/Resources/vulkan/icd.d\r\n\r\nIn all of these cases it's the .d suffix causing problems. I added a .gitignore in misc/dist to cover `icd.d`, mostly because it was easy, but it's possible this should be three separate .gitignore's in the exact relevant directory. Alternatively: does Godot even use the .d extension? If it does, it's probably on Linux, and I don't have a good way to do a Linux build right now. But if it doesn't, that could probably just be removed from the .gitignore.\r\n\r\n----\r\n\r\nThe last was the `updown.png` file in the default theme, removed because it happens to match gcov/lcov code coverage files, change added in 5b4d74ed. I just unfiltered all the .png files in that directory. This is the fix I like the least - this really *should* be filtering out gcov/lcov in some other way, not ignoring a pile of generically-named files throughout the entire repository - but I have no idea what directory names gcov/lcov uses.\r\n\r\n----\r\n\r\nObviously I am dissatisfied with these fixes.\r\n\r\nOn the other hand, now I can build Godot in a fresh Git repo. So . . . it's better, at least.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":597386885,"public_id":47205,"url":"https://github.com/godotengine/godot/pull/47205","diff_url":"https://github.com/godotengine/godot/pull/47205.diff","patch_url":"https://github.com/godotengine/godot/pull/47205.patch","title":"FBX Importer: Support `Limb` class tag","state":"open","is_draft":false,"authored_by":{"id":328798,"user":"W4RH4WK","avater":"https://avatars.githubusercontent.com/u/328798?v=4","url":"https://github.com/W4RH4WK"},"created_at":"2021-03-20T23:40:13Z","updated_at":"2021-03-23T02:39:06Z","body":"ref #47184\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":597350095,"public_id":47202,"url":"https://github.com/godotengine/godot/pull/47202","diff_url":"https://github.com/godotengine/godot/pull/47202.diff","patch_url":"https://github.com/godotengine/godot/pull/47202.patch","title":"Add test suite for Vector2","state":"open","is_draft":false,"authored_by":{"id":43023347,"user":"JoseTMonagas","avater":"https://avatars.githubusercontent.com/u/43023347?v=4","url":"https://github.com/JoseTMonagas"},"created_at":"2021-03-20T19:55:28Z","updated_at":"2021-05-08T17:27:04Z","body":"- Creates `test_vector2.h`\r\n- Adds `test_vector2.h` to `test_main.cpp`\r\n- Adds a whole bunch of tests in `test_vector2.h`\r\n\r\nPart of https://github.com/godotengine/godot/issues/43440","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":596813608,"public_id":47170,"url":"https://github.com/godotengine/godot/pull/47170","diff_url":"https://github.com/godotengine/godot/pull/47170.diff","patch_url":"https://github.com/godotengine/godot/pull/47170.patch","title":"print_stray_nodes() also prints node's script","state":"open","is_draft":false,"authored_by":{"id":29497869,"user":"hilfazer","avater":"https://avatars.githubusercontent.com/u/29497869?v=4","url":"https://github.com/hilfazer"},"created_at":"2021-03-19T19:12:18Z","updated_at":"2021-08-06T11:24:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\n\r\nIt makes print_stray_nodes() a bit more useful by also printing their scripts if any are attached.\r\n\r\n![printStrayNodesWithScript](https://user-images.githubusercontent.com/29497869/111830922-eb86b500-88ee-11eb-9868-6a882a031610.png)\r\nOn the screenshot we can see an unnamed node of type Node. It can be difficult to track where it was created. Knowing its script helps with that.\r\n\r\nThe PR is for 3.x only because on master branch  Godot hangs* if any of the stray nodes has a script. I wasn't able to determine what causes this. \r\n\r\n*Godot hangs in case print_stray_nodes() is called by a tool script in the editor. Otherwise only the game hangs.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":596810458,"public_id":47169,"url":"https://github.com/godotengine/godot/pull/47169","diff_url":"https://github.com/godotengine/godot/pull/47169.diff","patch_url":"https://github.com/godotengine/godot/pull/47169.patch","title":"Better error messages when parsing CSV translation files.","state":"open","is_draft":false,"authored_by":{"id":40731413,"user":"AndyBarcia","avater":"https://avatars.githubusercontent.com/u/40731413?v=4","url":"https://github.com/AndyBarcia"},"created_at":"2021-03-19T19:05:37Z","updated_at":"2021-03-20T08:44:45Z","body":"I think that this completely solves #46682 \r\n\r\nIf you forget to add a closing \" in the CSV file now there is a warning. And if there is an incorrect number of lang values, it shows a helpful error instead of silently continuing. \r\n\r\nNote: should the closing \" thing give an error instead of a warning? I think that it should, but then I suppose that ResourceImporterCSVTranslation::import should also return an error, and that would mean that there would be two errors messages. I don't know if that's more confusing. \r\n\r\nEdit: upsi, my editor suggested me to change `key != \"\"` to `!key.empty()` and I didn't check if it compiled :p","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424,4418914]},{"id":596553111,"public_id":47165,"url":"https://github.com/godotengine/godot/pull/47165","diff_url":"https://github.com/godotengine/godot/pull/47165.diff","patch_url":"https://github.com/godotengine/godot/pull/47165.patch","title":"Fix asserts take only constant strings","state":"open","is_draft":false,"authored_by":{"id":56381255,"user":"ray90514","avater":"https://avatars.githubusercontent.com/u/56381255?v=4","url":"https://github.com/ray90514"},"created_at":"2021-03-19T13:10:54Z","updated_at":"2021-05-17T23:06:00Z","body":"fix #47157\r\nthe `reduce_expression()` will check `nullptr` thus I removed the if statement, and edited the wrong method of getting type","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":595818734,"public_id":47138,"url":"https://github.com/godotengine/godot/pull/47138","diff_url":"https://github.com/godotengine/godot/pull/47138.diff","patch_url":"https://github.com/godotengine/godot/pull/47138.patch","title":"Allow disabling low-processor mode on headless platforms","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-03-18T18:12:23Z","updated_at":"2021-03-22T17:51:51Z","body":"This can be used when you want processing to happen as fast as possible (at the cost of high CPU usage). This is generally not what you want for a dedicated game server, so low processor-mode is still enabled by default on headless platforms.\n\n- Enable low-processor mode by default on headless platforms (mimics the previous behavior).\n- Use a 60 FPS limit on headless mode by default (down from 144 FPS). This can be overridden by changing the Server override for `application/run/low_processor_mode_sleep_usec`. This allows effectively changing the server's `_process()` tick rate, balancing CPU usage and network bandwidth usage with latency.\n\nThis closes https://github.com/godotengine/godot/issues/32404.\n\n**Question:** Can someone check if [feature tags](https://docs.godotengine.org/en/stable/getting_started/workflow/export/feature_tags.html) are actually case-sensitive? The documentation claims they are, but I noticed the Windows pen driver code uses `.windows` instead of `.Windows` to override the default setting. cc @bruvzg","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828782,1828783,4418914]},{"id":593792894,"public_id":47054,"url":"https://github.com/godotengine/godot/pull/47054","diff_url":"https://github.com/godotengine/godot/pull/47054.diff","patch_url":"https://github.com/godotengine/godot/pull/47054.patch","title":"Allow disabling 2D when compiling export templates","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-03-16T10:58:29Z","updated_at":"2021-08-18T00:32:41Z","body":"Implements and closes https://github.com/godotengine/godot-proposals/issues/1653.\r\n\r\nThis PR allows disabling 2D when compiling export templates. The 2D rendering stuff isn't disabled as it's needed for Control nodes, but all of the nodes under `scene/2d` are disabled (except for one), as well as 2D physics and many 2D-only resources.\r\n\r\nWith optimized `production=yes` builds of export templates, with 2D enabled the file size is 56.4 MB, and with 2D disabled the file size is 50.8 MB. This is a reduction of 5.6 MB, about 9.9%.\r\n\r\nDisabling 2D with this PR actually gives even better gains than the current `disable_3d=yes` option for 3D, which optimized `production=yes` builds of export templates, with `disable_3d=yes`, the size is 52.4 MB (a reduction of 4.0 MB or 7.1%).\r\n\r\nThis PR is split into 2 commits:\r\n\r\n* The first commit moves 2D-only resources to their own folder. This change really only makes sense when combined with the second commit, but I split it into its own commit because this was a large part of the changes.\r\n\r\n* The second commit adds the `#ifndef`s and SCons code to add support for disabling 2D when compiling export templates. When compiling with `disable_2d=yes`, `_2D_DISABLED` is defined. Everything is disabled in `scene/2d` (except `VisibilityNotifier2D`), `scene/resources/2d`, and `servers/physics_2d`.\r\n\r\n  * For `VisibilityNotifier2D`, we need this for `World2D` which is needed for 2D rendering (Control nodes), but when 2D is disabled, we can get away with making this node a `CanvasItem`, so we don't need to depend on Node2D (with 2D enabled, we need this to be a `Node2D`).\r\n\r\nThis PR has two main use cases: 3D games (which only need 3D and UI, not 2D), and UI-only projects (which only need UI, not 2D or 3D, and 3D can already be disabled), which helps solve https://github.com/godotengine/godot-proposals/issues/190.\r\n\r\nThis will almost certainly conflict with @groud's TileMap work, so I'm marking this as draft for now. Once @groud has merged his TileMap stuff, I will rebase this PR and un-mark it as a draft. Or we can do it the other way around if @groud wants.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777,4418376,4418380,4418424,4418518,4418542,4418718,4418726,4418914]},{"id":592736520,"public_id":47017,"url":"https://github.com/godotengine/godot/pull/47017","diff_url":"https://github.com/godotengine/godot/pull/47017.diff","patch_url":"https://github.com/godotengine/godot/pull/47017.patch","title":"FIX : Range min,max check by deferred call & page fix","state":"open","is_draft":false,"authored_by":{"id":70578657,"user":"Bhu1-V","avater":"https://avatars.githubusercontent.com/u/70578657?v=4","url":"https://github.com/Bhu1-V"},"created_at":"2021-03-15T05:10:18Z","updated_at":"2021-03-15T17:22:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixed : #46778\r\nFixed : #46863\r\n\r\nOriginal PR : https://github.com/godotengine/godot/pull/46825\r\n\r\nResults after Fixing :\r\n![](https://user-images.githubusercontent.com/70578657/110485870-18c6ac80-8112-11eb-918d-f3a028625067.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":592602581,"public_id":47006,"url":"https://github.com/godotengine/godot/pull/47006","diff_url":"https://github.com/godotengine/godot/pull/47006.diff","patch_url":"https://github.com/godotengine/godot/pull/47006.patch","title":"Move Add Track buttons direclty to Timeline","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2021-03-14T19:28:12Z","updated_at":"2021-03-15T15:13:15Z","body":"That's my follow-up to https://github.com/godotengine/godot/pull/46938\r\n\r\nAdding multiple animation tracks can be cumbersome, if we always repeat the same, unnecessary steps.\r\nWhat I've found (and probably - the others too) tedious - is requirement to always click on \"Add Track\" button to reveal types of tracks to choose.\r\n\r\nWhat this PR brings - is Quality Of Life improvement - moving aforementioned track types buttons, directly to Timeline, very easily accesible out-of-the box, reducing amount of redundant clicks dramatically :)\r\n\r\n(please, do not attach to whashed-up colors in the second GIF, my recording tool seems to be a bit wonky)\r\n\r\nOld behavior:\r\n\r\n![old](https://user-images.githubusercontent.com/1110337/111081356-37a6b380-8503-11eb-9a3b-d5f8dd800e88.gif)\r\n\r\nNew behavior:\r\n\r\n![new](https://user-images.githubusercontent.com/1110337/111081363-3d03fe00-8503-11eb-8be4-4e3aad22044d.gif)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":592586683,"public_id":47002,"url":"https://github.com/godotengine/godot/pull/47002","diff_url":"https://github.com/godotengine/godot/pull/47002.diff","patch_url":"https://github.com/godotengine/godot/pull/47002.patch","title":"Add an editor actions API","state":"open","is_draft":true,"authored_by":{"id":38469823,"user":"firststef","avater":"https://avatars.githubusercontent.com/u/38469823?v=4","url":"https://github.com/firststef"},"created_at":"2021-03-14T17:47:56Z","updated_at":"2021-03-15T15:57:46Z","body":"Closes [#70](https://github.com/godotengine/godot-proposals/issues/70)\r\nRelated to [#1444](https://github.com/godotengine/godot-proposals/issues/1444)\r\n---\r\nThis PR adds a class that can control the editor from plugins or from the engine itself with a simplified API.\r\nFor each interaction in the editor, an entry in the API can be created, and for each execution of this action, user-stored callbacks can be triggered.\r\n\r\nAs an example, if I wanted to toggle the visibility of a node:\r\n\r\n![image](https://user-images.githubusercontent.com/38469823/111071575-70349600-84df-11eb-8f0e-8fbb2fcf6e49.png)\r\n\r\nThe code that does this is in [scene_tree_editor.cpp](https://github.com/firststef/godot/blob/d3ac102c2ce58a907958c86529d23763fd3f025b/editor/scene_tree_editor.cpp#L1180):\r\n\r\n![image](https://user-images.githubusercontent.com/38469823/111071597-92c6af00-84df-11eb-8fc9-29e18e5c2ab2.png)\r\n\r\nNow if we want to react to the action of pressing the hide button, a good way to do this would be by making editor actions listen to the signal for this function and execute its callbacks and the function itself:\r\n\r\n![image](https://user-images.githubusercontent.com/38469823/111071688-fa7cfa00-84df-11eb-8773-67607f591e08.png)\r\n\r\nThe EditorActions class enables you to bind StringNames to Callables as an \"EditorAction\". It also allows users to bind methods to be executed before or after each EditorAction using the `add_on_action_executing` and `add_on_action_executed` methods respectively. These EditorActions are accessible to both C++ Editor code and scripted tools with access to the EditorInterface.\r\n\r\nTo illustrate how could someone use the API from a plugin, for example for making a history plugin for activated actions, I have created a project [here](https://github.com/firststef/GodotEditorHistoryPlugin).\r\n\r\n![image](https://user-images.githubusercontent.com/38469823/111071991-52683080-84e1-11eb-9eca-5c0bbac5bb47.png)\r\n\r\n![image](https://user-images.githubusercontent.com/38469823/111072241-5cd6fa00-84e2-11eb-9d65-81917db540c4.png)\r\n\r\nFeatures:\r\n1. Ability to add/remove callbacks to new/existing actions.\r\n2. Ability to add/remove callbacks that execute before or after an existing action.\r\n3. Ability to access the API both from inside the C++ engine and from the scripting API.\r\n4. Ability to bind N number of arguments to methods bound to the EditorActions API.\r\n\r\nTODOs:\r\n- it would be useful to add a description and tag for every action\r\n- also we should consider having submitted executing/executed bindings include a priority integer value that defaults to 0. And on update they are sorted by priority.\r\n---\r\nI have to mention that this was based on the work of @willnationsdev.\r\n\r\nUnfortunately I won't have much time due to strict schedule until August of this year, so someone else, if interested, should continue this work. We are currently discussing with @Bhu1-V if he will be able to use this for his command pallette functionality ([#1444](https://github.com/godotengine/godot-proposals/issues/1444)) but nothing is set in stone, he might not choose this way of implementing.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":592541192,"public_id":46997,"url":"https://github.com/godotengine/godot/pull/46997","diff_url":"https://github.com/godotengine/godot/pull/46997.diff","patch_url":"https://github.com/godotengine/godot/pull/46997.patch","title":"Rename AudioStreamPlayer to AudioPlayer","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-03-14T13:20:21Z","updated_at":"2021-03-21T10:09:06Z","body":"Also renames:\r\n- AudioStreamPlayer2D to AudioPlayer2D\r\n- AudioStreamPlayer3D to AudioPlayer3D\r\n\r\nOriginally suggested by @dalexeev in [#16863](https://github.com/godotengine/godot/issues/16863#issuecomment-766173614).\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4418392,4418550,4418718,4418726]},{"id":592529759,"public_id":46994,"url":"https://github.com/godotengine/godot/pull/46994","diff_url":"https://github.com/godotengine/godot/pull/46994.diff","patch_url":"https://github.com/godotengine/godot/pull/46994.patch","title":"Allowing viewport_container to contain viewports with handle_input_locally = true","state":"open","is_draft":false,"authored_by":{"id":761911,"user":"kuhnchris","avater":"https://avatars.githubusercontent.com/u/761911?v=4","url":"https://github.com/kuhnchris"},"created_at":"2021-03-14T12:02:27Z","updated_at":"2021-08-06T11:24:33Z","body":"Commented the affected code and commented line out.\r\nNot sure if this fits the guidelines, please check, thanks!\r\nTested locally and works (for me) now.\r\n\r\n```\r\nRunning: /home/kuhnchris/dev/godot/bin/godot.x11.tools.64\r\nGodot Engine v3.2.4.rc.custom_build.1d0929a99 - https://godotengine.org\r\nOpenGL ES 3.0 Renderer: AMD RENOIR (DRM 3.40.0, 5.11.2-arch1-1, LLVM 11.1.0)\r\nOpenGL ES Batching: ON\r\n```\r\n\r\nFixes #46982 \r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418733]},{"id":592354680,"public_id":46964,"url":"https://github.com/godotengine/godot/pull/46964","diff_url":"https://github.com/godotengine/godot/pull/46964.diff","patch_url":"https://github.com/godotengine/godot/pull/46964.patch","title":"Optionally disable srgb decode gles3 feature (globally or per vendor)","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2021-03-13T12:22:25Z","updated_at":"2021-08-06T11:24:33Z","body":"This fixes dark textures on android+mali devices. closes #39279, closes #43342\r\n\r\nActually, Mali devices don't like mipmaps + internal srgb based format. I dive into some research but did not find anything directly related to the problem. I've tested on iPhone6, Xiaomi Redmi 5 (Adreno) and Kindle Fire HDX (Mali).\r\n\r\n<details>\r\n  <summary>Extensions per device may be useful for diving in:</summary>\r\n\r\n```\r\n# iPhone 6s\r\nGL_APPLE_clip_distance\r\nGL_APPLE_color_buffer_packed_float\r\nGL_APPLE_copy_texture_levels\r\nGL_APPLE_rgb_422\r\nGL_APPLE_texture_format_BGRA8888\r\nGL_EXT_color_buffer_half_float\r\nGL_EXT_debug_label\r\nGL_EXT_debug_marker\r\nGL_EXT_pvrtc_sRGB\r\nGL_EXT_read_format_bgra\r\nGL_EXT_separate_shader_objects\r\nGL_EXT_shader_framebuffer_fetch\r\nGL_EXT_shader_texture_lod\r\nGL_EXT_shadow_samplers\r\nGL_EXT_texture_filter_anisotropic\r\nGL_IMG_read_format\r\nGL_IMG_texture_compression_pvrtc\r\nGL_KHR_texture_compression_astc_ldr\r\nGL_OES_standard_derivatives\r\n```\r\n\r\n```\r\n# Xiaomi Redmi 5 (Adreno)\r\nGL_AMD_compressed_ATC_texture\r\nGL_ANDROID_extension_pack_es31a\r\nGL_ARM_shader_framebuffer_fetch_depth_stencil\r\nGL_EXT_EGL_image_array\r\nGL_EXT_YUV_target\r\nGL_EXT_blit_framebuffer_params\r\nGL_EXT_buffer_storage\r\nGL_EXT_clip_cull_distance\r\nGL_EXT_color_buffer_float\r\nGL_EXT_color_buffer_half_float\r\nGL_EXT_copy_image\r\nGL_EXT_debug_label\r\nGL_EXT_debug_marker\r\nGL_EXT_discard_framebuffer\r\nGL_EXT_disjoint_timer_query\r\nGL_EXT_draw_buffers_indexed\r\nGL_EXT_external_buffer\r\nGL_EXT_geometry_shader\r\nGL_EXT_gpu_shader5\r\nGL_EXT_memory_object\r\nGL_EXT_memory_object_fd\r\nGL_EXT_multisampled_render_to_texture\r\nGL_EXT_multisampled_render_to_texture2\r\nGL_EXT_primitive_bounding_box\r\nGL_EXT_protected_textures\r\nGL_EXT_robustness\r\nGL_EXT_sRGB\r\nGL_EXT_sRGB_write_control\r\nGL_EXT_shader_framebuffer_fetch\r\nGL_EXT_shader_io_blocks\r\nGL_EXT_shader_non_constant_global_initializers\r\nGL_EXT_tessellation_shader\r\nGL_EXT_texture_border_clamp\r\nGL_EXT_texture_buffer\r\nGL_EXT_texture_cube_map_array\r\nGL_EXT_texture_filter_anisotropic\r\nGL_EXT_texture_format_BGRA8888\r\nGL_EXT_texture_norm16\r\nGL_EXT_texture_sRGB_R8\r\nGL_EXT_texture_sRGB_decode\r\nGL_EXT_texture_type_2_10_10_10_REV\r\nGL_KHR_blend_equation_advanced\r\nGL_KHR_blend_equation_advanced_coherent\r\nGL_KHR_debug\r\nGL_KHR_no_error\r\nGL_KHR_texture_compression_astc_hdr\r\nGL_KHR_texture_compression_astc_ldr\r\nGL_NV_shader_noperspective_interpolation\r\nGL_OES_EGL_image\r\nGL_OES_EGL_image_external\r\nGL_OES_EGL_image_external_essl3\r\nGL_OES_EGL_sync\r\nGL_OES_compressed_ETC1_RGB8_texture\r\nGL_OES_depth24\r\nGL_OES_depth_texture\r\nGL_OES_depth_texture_cube_map\r\nGL_OES_element_index_uint\r\nGL_OES_framebuffer_object\r\nGL_OES_get_program_binary\r\nGL_OES_packed_depth_stencil\r\nGL_OES_rgb8_rgba8\r\nGL_OES_sample_shading\r\nGL_OES_sample_variables\r\nGL_OES_shader_image_atomic\r\nGL_OES_shader_multisample_interpolation\r\nGL_OES_standard_derivatives\r\nGL_OES_surfaceless_context\r\nGL_OES_texture_3D\r\nGL_OES_texture_compression_astc\r\nGL_OES_texture_float\r\nGL_OES_texture_float_linear\r\nGL_OES_texture_half_float\r\nGL_OES_texture_half_float_linear\r\nGL_OES_texture_npot\r\nGL_OES_texture_stencil8\r\nGL_OES_texture_storage_multisample_2d_array\r\nGL_OES_vertex_array_object\r\nGL_OES_vertex_half_float\r\nGL_OVR_multiview\r\nGL_OVR_multiview2\r\nGL_OVR_multiview_multisampled_render_to_texture\r\nGL_QCOM_alpha_test\r\nGL_QCOM_shader_framebuffer_fetch_noncoherent\r\nGL_QCOM_texture_foveated\r\nGL_QCOM_tiled_rendering\r\n```\r\n```\r\n# Kindle Fire HDX (Mali)\r\nGL_ANDROID_extension_pack_es31a\r\nGL_ARM_mali_program_binary\r\nGL_ARM_mali_shader_binary\r\nGL_ARM_rgba8\r\nGL_ARM_shader_framebuffer_fetch\r\nGL_ARM_shader_framebuffer_fetch_depth_stencil\r\nGL_EXT_EGL_image_array\r\nGL_EXT_YUV_target\r\nGL_EXT_blend_minmax\r\nGL_EXT_buffer_storage\r\nGL_EXT_color_buffer_float\r\nGL_EXT_color_buffer_half_float\r\nGL_EXT_copy_image\r\nGL_EXT_debug_marker\r\nGL_EXT_discard_framebuffer\r\nGL_EXT_disjoint_timer_query\r\nGL_EXT_draw_buffers_indexed\r\nGL_EXT_draw_elements_base_vertex\r\nGL_EXT_geometry_shader\r\nGL_EXT_gpu_shader5\r\nGL_EXT_multisampled_render_to_texture\r\nGL_EXT_multisampled_render_to_texture2\r\nGL_EXT_occlusion_query_boolean\r\nGL_EXT_primitive_bounding_box\r\nGL_EXT_protected_textures\r\nGL_EXT_read_format_bgra\r\nGL_EXT_robustness\r\nGL_EXT_sRGB\r\nGL_EXT_sRGB_write_control\r\nGL_EXT_shader_io_blocks\r\nGL_EXT_shader_non_constant_global_initializers\r\nGL_EXT_shader_pixel_local_storage\r\nGL_EXT_shadow_samplers\r\nGL_EXT_tessellation_shader\r\nGL_EXT_texture_border_clamp\r\nGL_EXT_texture_buffer\r\nGL_EXT_texture_cube_map_array\r\nGL_EXT_texture_filter_anisotropic\r\nGL_EXT_texture_format_BGRA8888\r\nGL_EXT_texture_rg\r\nGL_EXT_texture_sRGB_R8\r\nGL_EXT_texture_sRGB_RG8\r\nGL_EXT_texture_sRGB_decode\r\nGL_EXT_texture_storage\r\nGL_EXT_texture_type_2_10_10_10_REV\r\nGL_KHR_blend_equation_advanced\r\nGL_KHR_blend_equation_advanced_coherent\r\nGL_KHR_debug\r\nGL_KHR_robust_buffer_access_behavior\r\nGL_KHR_robustness\r\nGL_KHR_texture_compression_astc_hdr\r\nGL_KHR_texture_compression_astc_ldr\r\nGL_KHR_texture_compression_astc_sliced_3d\r\nGL_OES_EGL_image\r\nGL_OES_EGL_image_external\r\nGL_OES_EGL_image_external_essl3\r\nGL_OES_EGL_sync\r\nGL_OES_compressed_ETC1_RGB8_texture\r\nGL_OES_compressed_paletted_texture\r\nGL_OES_copy_image\r\nGL_OES_depth24\r\nGL_OES_depth_texture\r\nGL_OES_depth_texture_cube_map\r\nGL_OES_draw_buffers_indexed\r\nGL_OES_draw_elements_base_vertex\r\nGL_OES_element_index_uint\r\nGL_OES_fbo_render_mipmap\r\nGL_OES_geometry_shader\r\nGL_OES_get_program_binary\r\nGL_OES_gpu_shader5\r\nGL_OES_mapbuffer\r\nGL_OES_packed_depth_stencil\r\nGL_OES_primitive_bounding_box\r\nGL_OES_required_internalformat\r\nGL_OES_rgb8_rgba8\r\nGL_OES_sample_shading\r\nGL_OES_sample_variables\r\nGL_OES_shader_image_atomic\r\nGL_OES_shader_io_blocks\r\nGL_OES_shader_multisample_interpolation\r\nGL_OES_standard_derivatives\r\nGL_OES_surfaceless_context\r\nGL_OES_tessellation_shader\r\nGL_OES_texture_3D\r\nGL_OES_texture_border_clamp\r\nGL_OES_texture_buffer\r\nGL_OES_texture_compression_astc\r\nGL_OES_texture_cube_map_array\r\nGL_OES_texture_npot\r\nGL_OES_texture_stencil8\r\nGL_OES_texture_storage_multisample_2d_array\r\nGL_OES_vertex_array_object\r\nGL_OES_vertex_half_float\r\nGL_OVR_multiview\r\nGL_OVR_multiview2\r\nGL_OVR_multiview_multisampled_render_to_texture\r\n```\r\n</details>\r\n\r\nAs far as this PR is only about GLES3 backend, there is nothing to do with master.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":591468232,"public_id":46928,"url":"https://github.com/godotengine/godot/pull/46928","diff_url":"https://github.com/godotengine/godot/pull/46928.diff","patch_url":"https://github.com/godotengine/godot/pull/46928.patch","title":"fix allocation of compressed texture array on mobile","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2021-03-12T08:20:20Z","updated_at":"2021-08-06T11:24:33Z","body":"This fixes #46927.  \r\nI guess this PR has nothing to do with the master branch as far as there is no gles3.\r\n\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":591194745,"public_id":46911,"url":"https://github.com/godotengine/godot/pull/46911","diff_url":"https://github.com/godotengine/godot/pull/46911.diff","patch_url":"https://github.com/godotengine/godot/pull/46911.patch","title":"UWP: Incorporate toolchain for building ANGLE using Ninja","state":"open","is_draft":true,"authored_by":{"id":17108460,"user":"Xrayez","avater":"https://avatars.githubusercontent.com/u/17108460?v=4","url":"https://github.com/Xrayez"},"created_at":"2021-03-11T21:44:51Z","updated_at":"2021-08-06T11:24:33Z","body":"Microsoft ANGLE sources are outdated as noted in the documentation for [compiling for UWP](https://docs.godotengine.org/en/latest/development/compiling/compiling_for_uwp.html).\r\n\r\nThis PR aims to add a front-end to https://chromium.googlesource.com/angle/angle project. You are expected to setup necessary toolchains for building ANGLE itself: https://chromium.googlesource.com/angle/angle/+/HEAD/doc/DevSetup.md. Once this is done, SCons will call `autoninja` to compile ANGLE along with Godot.\r\n\r\nHave to compile with `scons angle_toolchain=ninja`. I've preserved the previous build toolchain using MSVC, but I don't guarantee it to still work (not being able to compile ANGLE using MSVC is one of the motivations behind making this PR).\r\n\r\n~~Even though I've managed to build ANGLE and some Godot export templates that way, I have no way to actually test this due to export/signing issues, see #30558, even with official builds of Godot, so I'm losing motivation in working on this further.~~ Seems like there's a way at the end of the day: https://github.com/godotengine/godot/issues/30558#issuecomment-797831794.\r\n\r\n`arm` does not seem to be available in ANGLE master branch, only `arm64`.\r\n\r\nNote that this was done purely out of personal interest/educational purpose, there's a lot of thing I don't even understand, but since there's no active UWP maintainers, I decided to submit this PR. Perhaps @vnen could find something useful from this. 🙂\r\n\r\nSome useful snippets:\r\n```bat\r\nset ANGLE_SRC_PATH=d:/src/angle\r\nvcvarsall.bat x64\r\nscons platform=uwp tools=no target=release_debug angle_toolchain=ninja\r\n```\r\n\r\n## To-do\r\n- [ ] Figure out how to compile for `arm64` (host/target args).\r\n- [ ] Add concurrent job option to ANGLE.\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":361780559,"name":"platform:uwp","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":591004785,"public_id":46903,"url":"https://github.com/godotengine/godot/pull/46903","diff_url":"https://github.com/godotengine/godot/pull/46903.diff","patch_url":"https://github.com/godotengine/godot/pull/46903.patch","title":"Remove DEFVAL","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-03-11T16:37:51Z","updated_at":"2021-06-20T11:32:48Z","body":"It doesn't do anything and gives false impression that it's needed.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428,3112912,3609449,4038183,4417777,4417868,4418376,4418380,4418392,4418403,4418424,4418550,4418718,4418726,4418733,4418914]},{"id":589609115,"public_id":46868,"url":"https://github.com/godotengine/godot/pull/46868","diff_url":"https://github.com/godotengine/godot/pull/46868.diff","patch_url":"https://github.com/godotengine/godot/pull/46868.patch","title":"Fix crash when allocation exceeds uint max range fix 46842","state":"open","is_draft":false,"authored_by":{"id":6397893,"user":"fabriceci","avater":"https://avatars.githubusercontent.com/u/6397893?v=4","url":"https://github.com/fabriceci"},"created_at":"2021-03-10T13:19:20Z","updated_at":"2021-06-22T09:18:38Z","body":"Fix #46842\r\n\r\nWhen Godot resize an array, it calculates the memory allocation needed by calling `next_power_of_2`, but when the value is greater than `INT_MAX`, the value returned by `next_power_of_2` is `0` because the value exceeds the maximum of `unsigned int` (by 1).\r\n\r\nThis lead to crash in the loop as the pointer on `get_size()` is `nullptr`\r\n\r\n`for (int i = *_get_size(); i < p_size; i++) {`\r\n\r\nThis fix check after the allocation if the value is `0` while `p_size` is not `0` (the check could be added in `_get_alloc_size_checked` but that prevent to have a custom message)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":589052309,"public_id":46854,"url":"https://github.com/godotengine/godot/pull/46854","diff_url":"https://github.com/godotengine/godot/pull/46854.diff","patch_url":"https://github.com/godotengine/godot/pull/46854.patch","title":"Enhance RasterizerStorageGLES3 to support software skeleton fallback","state":"open","is_draft":false,"authored_by":{"id":482282,"user":"sjhennion","avater":"https://avatars.githubusercontent.com/u/482282?v=4","url":"https://github.com/sjhennion"},"created_at":"2021-03-10T04:56:49Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes https://github.com/godotengine/godot/issues/46715\r\n\r\nOn iOS 12.5.1, devices that had supported hardware skinning will no longer support it.  Given that iOS 12 brought the deprecation of OpenGL, I suspect that the initial implementation of the OpenGL -> Metal layer had a bug that didn't allow the \"GL_OES_texture_float_linear\" extension to be used/exposed.\r\n\r\nSimilar to RasterizerStorageGLES2's check for float textures, this performs a check for linear float textures, which in testing seems to be the necessary extension for skeleton software, and allows for the GLES3 version to support the \"skinning_fallback\" `has_os_feature`.\r\n\r\n\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":589043235,"public_id":46853,"url":"https://github.com/godotengine/godot/pull/46853","diff_url":"https://github.com/godotengine/godot/pull/46853.diff","patch_url":"https://github.com/godotengine/godot/pull/46853.patch","title":"Added word wrap shortcut Functionality.","state":"open","is_draft":false,"authored_by":{"id":70578657,"user":"Bhu1-V","avater":"https://avatars.githubusercontent.com/u/70578657?v=4","url":"https://github.com/Bhu1-V"},"created_at":"2021-03-10T04:46:57Z","updated_at":"2021-03-31T16:42:21Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nEnhancement made for proposal :  [#1548](https://github.com/godotengine/godot-proposals/issues/1548)\r\nAdded a Word Wrap short-cut (`Alt + Z`) same as Visual Studio Code.\r\n\r\nalso added a popup Item in the Edit menu of the Script Editor.\r\n\r\nSorry for not discussing in the  [#1548](https://github.com/godotengine/godot-proposals/issues/1548) before PR because this took really less changes to get desired result. But I'm open for suggestions.\r\n\r\nResult : \r\n![54dXl0kpNv](https://user-images.githubusercontent.com/70578657/110577752-4e5aac80-8189-11eb-9444-c8df358cc643.gif)\r\n\r\n\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418558]},{"id":587868163,"public_id":46819,"url":"https://github.com/godotengine/godot/pull/46819","diff_url":"https://github.com/godotengine/godot/pull/46819.diff","patch_url":"https://github.com/godotengine/godot/pull/46819.patch","title":"[3.x] Improved GLES2 errors in shaders","state":"open","is_draft":false,"authored_by":{"id":47313600,"user":"Duddino","avater":"https://avatars.githubusercontent.com/u/47313600?v=4","url":"https://github.com/Duddino"},"created_at":"2021-03-09T11:57:30Z","updated_at":"2021-08-06T11:24:33Z","body":"When calling functions that have overloads that are only available\r\nin GLES3, Godot would throw `Built-in function \"$name\" is only supported\r\non high-end platform` instead of `invalid arguments for built-in function:\r\n$name`\r\nFixes #46744.\r\n\r\nShould I also check if the arguments are the same of the GLES3 overload, in which case throw `Built-in function \"$name\" is only supported on high-end platform`?","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":587199801,"public_id":46806,"url":"https://github.com/godotengine/godot/pull/46806","diff_url":"https://github.com/godotengine/godot/pull/46806.diff","patch_url":"https://github.com/godotengine/godot/pull/46806.patch","title":"wrap xml parser cursor","state":"open","is_draft":false,"authored_by":{"id":328798,"user":"W4RH4WK","avater":"https://avatars.githubusercontent.com/u/328798?v=4","url":"https://github.com/W4RH4WK"},"created_at":"2021-03-08T23:39:31Z","updated_at":"2021-03-09T00:38:07Z","body":"- Add additional index checks to COLLADA importer\r\n- Wrap the XML parser's cursor with bounds checking\r\n\r\nfix #46548","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424,4418914]},{"id":587107484,"public_id":46804,"url":"https://github.com/godotengine/godot/pull/46804","diff_url":"https://github.com/godotengine/godot/pull/46804.diff","patch_url":"https://github.com/godotengine/godot/pull/46804.patch","title":"Fixed a crash where godot would try to access `Script::get_language()` when it was null","state":"open","is_draft":false,"authored_by":{"id":47313600,"user":"Duddino","avater":"https://avatars.githubusercontent.com/u/47313600?v=4","url":"https://github.com/Duddino"},"created_at":"2021-03-08T21:12:31Z","updated_at":"2021-03-09T09:59:10Z","body":"Fixes #46566","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417836,4418558]},{"id":586772247,"public_id":46791,"url":"https://github.com/godotengine/godot/pull/46791","diff_url":"https://github.com/godotengine/godot/pull/46791.diff","patch_url":"https://github.com/godotengine/godot/pull/46791.patch","title":"Added a check to see if the image is valid before creating the resource","state":"open","is_draft":false,"authored_by":{"id":47313600,"user":"Duddino","avater":"https://avatars.githubusercontent.com/u/47313600?v=4","url":"https://github.com/Duddino"},"created_at":"2021-03-08T13:29:45Z","updated_at":"2021-04-02T09:52:40Z","body":"Fixes #46720 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424]},{"id":586726217,"public_id":46789,"url":"https://github.com/godotengine/godot/pull/46789","diff_url":"https://github.com/godotengine/godot/pull/46789.diff","patch_url":"https://github.com/godotengine/godot/pull/46789.patch","title":"Add a Note in Project Settings for the Default Environment being Editor Only","state":"open","is_draft":false,"authored_by":{"id":62471966,"user":"sps1112","avater":"https://avatars.githubusercontent.com/u/62471966?v=4","url":"https://github.com/sps1112"},"created_at":"2021-03-08T12:13:26Z","updated_at":"2021-03-13T17:17:27Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nfixes #46478. Update documentation as listed in the issue.\r\nAdded a Note in Project Settings that the Default Environement is Editor-only. This will not be present in when running the project. A fix can be adding a `World Environment` Node with an `Environment` Resource.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":586418380,"public_id":46780,"url":"https://github.com/godotengine/godot/pull/46780","diff_url":"https://github.com/godotengine/godot/pull/46780.diff","patch_url":"https://github.com/godotengine/godot/pull/46780.patch","title":"Fix resize collision shape for tile when vertex outside of tilesheet","state":"open","is_draft":false,"authored_by":{"id":28615299,"user":"DashCell","avater":"https://avatars.githubusercontent.com/u/28615299?v=4","url":"https://github.com/DashCell"},"created_at":"2021-03-08T03:50:00Z","updated_at":"2021-03-15T13:00:36Z","body":"Complements pull request #42150 which did not completely resolve the issue.\r\n![34970](https://user-images.githubusercontent.com/28615299/110271664-43482680-7fa7-11eb-8e51-54c68380eb4b.gif)\r\n\r\n**Version:** _v3.2.4.rc.custom_build.4f891b706_\r\n\r\n<i>Bugsquad edit</i>: Fix #34970","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":586298586,"public_id":46767,"url":"https://github.com/godotengine/godot/pull/46767","diff_url":"https://github.com/godotengine/godot/pull/46767.diff","patch_url":"https://github.com/godotengine/godot/pull/46767.patch","title":"[mono] handle marshalling of nullable types","state":"open","is_draft":true,"authored_by":{"id":437025,"user":"paulloz","avater":"https://avatars.githubusercontent.com/u/437025?v=4","url":"https://github.com/paulloz"},"created_at":"2021-03-07T18:03:35Z","updated_at":"2021-03-19T23:10:27Z","body":"Hey 🙂 \r\n\r\nAt the moment, the following code will throw a marshalling error because of `Vector2?`. This PR makes sure the marshaller actually uses the underlying type instead of the nullable generics instance.\r\n```csharp\r\npublic class Foo\r\n{\r\n    public void SomeMethod(Vector2? vector)\r\n    {\r\n    }\r\n\r\n    public override void _Ready()\r\n    {\r\n        CallDeferred(\"SomeMethod\", new object[] { new Vector2(1f, 1f); });\r\n    }\r\n}\r\n```\r\n\r\nI'm not a big fan of the recursive call to `variant_to_mono_object` because `variant_to_mono_object_of_genericinst` could also be called from `variant_to_managed_unboxed` 🤔 but that last function has been introduced in Godot 4, and I'm not 100% sure about how to handle this situation. Please feel free to chime in on that.\r\n\r\nI can make another PR for 3.2 if that's needed (this one probably can't be cherry-picked directly).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":586253472,"public_id":46757,"url":"https://github.com/godotengine/godot/pull/46757","diff_url":"https://github.com/godotengine/godot/pull/46757.diff","patch_url":"https://github.com/godotengine/godot/pull/46757.patch","title":"Update Polygon2D documentation for Anti-aliasing","state":"open","is_draft":false,"authored_by":{"id":62471966,"user":"sps1112","avater":"https://avatars.githubusercontent.com/u/62471966?v=4","url":"https://github.com/sps1112"},"created_at":"2021-03-07T13:31:12Z","updated_at":"2021-05-09T12:19:45Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nfixes #46465. Update Documentation as listed in the issue.\r\nAdded a Note under Anti-Aliasing that it doesn't automatically work. For it to work HDR must be turned off in GLES3. Also AA doesn't work for HTML5 as listed in #10241.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449]},{"id":586034949,"public_id":46721,"url":"https://github.com/godotengine/godot/pull/46721","diff_url":"https://github.com/godotengine/godot/pull/46721.diff","patch_url":"https://github.com/godotengine/godot/pull/46721.patch","title":"[Text Server] Add support for user defined punctuation list, used for word breaking.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2021-03-06T09:56:16Z","updated_at":"2021-07-18T11:14:21Z","body":"Adds support for user defined punctuation list, used for word breaking. This PR does not affect spaces and dictionary based breaking, or change any defaults and therefor is not superseding #46691.\r\n\r\nUsage example:\r\n```gdscript\r\nvar a = TextParagraph.new()\r\na.custom_punctuation = \"R\"\r\na.add_string(\"test.test_testRtest test\", get_theme_font(\"font\"), 16)\r\nprint(\"A: \", TextServerManager.get_primary_interface().shaped_text_get_word_breaks(a.get_rid()))\r\n#A: [(0, 14), (15, 19), (20, 24)]\r\n\r\nvar b = TextParagraph.new()\r\nb.add_string(\"test.test_testRtest test\", get_theme_font(\"font\"), 16)\r\nprint(\"B: \", TextServerManager.get_primary_interface().shaped_text_get_word_breaks(b.get_rid()))\r\n#B: [(0, 4), (5, 9), (10, 19), (20, 24)]\r\n```\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot/issues/29789.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,4418733]},{"id":585572777,"public_id":46689,"url":"https://github.com/godotengine/godot/pull/46689","diff_url":"https://github.com/godotengine/godot/pull/46689.diff","patch_url":"https://github.com/godotengine/godot/pull/46689.patch","title":"push error if @onready not used with get_node outside a function","state":"open","is_draft":false,"authored_by":{"id":54415525,"user":"angad-k","avater":"https://avatars.githubusercontent.com/u/54415525?v=4","url":"https://github.com/angad-k"},"created_at":"2021-03-05T12:43:13Z","updated_at":"2021-05-13T09:15:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nfixes #46382","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":585020037,"public_id":46671,"url":"https://github.com/godotengine/godot/pull/46671","diff_url":"https://github.com/godotengine/godot/pull/46671.diff","patch_url":"https://github.com/godotengine/godot/pull/46671.patch","title":"Fix missing ImageTexture::create_from_image call in GPUParticles3DEditor::_generate_emission_points","state":"open","is_draft":false,"authored_by":{"id":328798,"user":"W4RH4WK","avater":"https://avatars.githubusercontent.com/u/328798?v=4","url":"https://github.com/W4RH4WK"},"created_at":"2021-03-04T18:24:37Z","updated_at":"2021-03-04T22:40:49Z","body":"From my understand, the texture for emission particles is create in this function. Additionally, there is the option to also generate a normal map, enabling the use of _direct emission points_.\r\n\r\nIt is likely that the `create_from_image` call got lost during some refactoring as mentioned in the related issue. While I have not tested this feature, it does not look like dead code to me, and the difference might be hard to notice for very bright, small particles. The code looks _more correct_ to me with this patch.\r\n\r\n- - -\r\n\r\nImages for emission point texture and normals were created, but not\r\ntransferred to textures.\r\n\r\nfix #43643\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":584856718,"public_id":46656,"url":"https://github.com/godotengine/godot/pull/46656","diff_url":"https://github.com/godotengine/godot/pull/46656.diff","patch_url":"https://github.com/godotengine/godot/pull/46656.patch","title":"Improve documentation for Thread","state":"open","is_draft":false,"authored_by":{"id":1850856,"user":"zaksnet","avater":"https://avatars.githubusercontent.com/u/1850856?v=4","url":"https://github.com/zaksnet"},"created_at":"2021-03-04T14:36:38Z","updated_at":"2021-03-04T15:57:13Z","body":"An attempt to improve the documentation for **Thread**\r\n- Adds documentation on how and when the `wait_to_finish` should be used\r\n- Adds a note on what to be careful about when using `wait_to_finish`\r\n\r\nI spent **AN HOUR** trying to figure how to reset my local master on the upstream master (i wouldn't accept giving up again. Its not that complicated, it was just my fear of messing up with your branches that kept me back)! Hopefully everything is good (@akien-mga i tried being as descriptive as possible with my commit! 👼).\r\n\r\nYou can also check the conversation at #46414 for more info.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":584312893,"public_id":46638,"url":"https://github.com/godotengine/godot/pull/46638","diff_url":"https://github.com/godotengine/godot/pull/46638.diff","patch_url":"https://github.com/godotengine/godot/pull/46638.patch","title":"Hide .gdignore'd folders","state":"open","is_draft":false,"authored_by":{"id":6501975,"user":"Ev1lbl0w","avater":"https://avatars.githubusercontent.com/u/6501975?v=4","url":"https://github.com/Ev1lbl0w"},"created_at":"2021-03-03T22:33:34Z","updated_at":"2021-03-03T23:28:59Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nHide `.gdignore`'d folders in the file dialog.\r\n\r\nFixes #37758","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":584142506,"public_id":46625,"url":"https://github.com/godotengine/godot/pull/46625","diff_url":"https://github.com/godotengine/godot/pull/46625.diff","patch_url":"https://github.com/godotengine/godot/pull/46625.patch","title":"Documented that mutexes are implemented recursively","state":"open","is_draft":false,"authored_by":{"id":8750135,"user":"mbrlabs","avater":"https://avatars.githubusercontent.com/u/8750135?v=4","url":"https://github.com/mbrlabs"},"created_at":"2021-03-03T17:37:43Z","updated_at":"2021-03-03T17:56:42Z","body":"Closes #46084\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":583260576,"public_id":46598,"url":"https://github.com/godotengine/godot/pull/46598","diff_url":"https://github.com/godotengine/godot/pull/46598.diff","patch_url":"https://github.com/godotengine/godot/pull/46598.patch","title":"Implemented limiter with logistics curve","state":"open","is_draft":false,"authored_by":{"id":70238376,"user":"Tony-Goat","avater":"https://avatars.githubusercontent.com/u/70238376?v=4","url":"https://github.com/Tony-Goat"},"created_at":"2021-03-02T18:55:19Z","updated_at":"2021-03-25T18:14:00Z","body":"This is in reference to the original ([Pull request #41551](https://github.com/godotengine/godot/pull/41551#issue-474233488)) who's commit got orphaned and I couldn't rebase it for testing.\r\n\r\n> Implemented to address issue #36631\r\n> \r\n> This is more of a soft-clipper than a true audio limiter, however, it corrects the clipping issue at hand until a true limiter can be implemented.\r\n> \r\n> I couldn't tell why the old code was acting up, so given the parameters, I completely reimplemented the audio limiter effect using a logistics curve and documented everything well.\r\n> \r\n> I chose the logistics curve because it provides a smooth, semi-linear transition up to a maximum point, which perfectly fits the description of what was needed for this limiter effect.\r\n> \r\n> ![Old](https://user-images.githubusercontent.com/70238376/91362344-871bd100-e7b7-11ea-8245-1192577817d0.png)\r\n> This is the old waveform that I captured in Audacity\r\n> \r\n> ![New](https://user-images.githubusercontent.com/70238376/91362368-94d15680-e7b7-11ea-88b8-60a50507818a.png)\r\n> And this is the new one with the logistics curve soft clipping.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":582689936,"public_id":46583,"url":"https://github.com/godotengine/godot/pull/46583","diff_url":"https://github.com/godotengine/godot/pull/46583.diff","patch_url":"https://github.com/godotengine/godot/pull/46583.patch","title":"Improve height limit of PopupMenu of OptionButton/MenuButton","state":"open","is_draft":false,"authored_by":{"id":28705694,"user":"floppyhammer","avater":"https://avatars.githubusercontent.com/u/28705694?v=4","url":"https://github.com/floppyhammer"},"created_at":"2021-03-02T04:32:32Z","updated_at":"2021-07-17T04:43:28Z","body":"Fixes #46545. The issue has been there for a while (since I started using Godot 4.0 actually). I solved the issue by adding an additional property `extra_height_limit` to PopupMenu (not exposed to users). I don't know if this is acceptable or if there are more appropriate solutions, so any suggestions are welcome.\r\n\r\nResult:\r\n![popup_menu_3](https://user-images.githubusercontent.com/28705694/109596892-154f8600-7b52-11eb-8d6f-30c78ce2c6cf.gif)\r\n![popup_menu_4](https://user-images.githubusercontent.com/28705694/109596894-15e81c80-7b52-11eb-9064-803fdbee7b38.gif)\r\n\r\nAlong the way I made this fix, I found another bug related to PopupMenu in Project Settings and Editor Settings when Single Window Mode is enabled. But that isn't caused by this PR.\r\n![popup_menu_5](https://user-images.githubusercontent.com/28705694/109597237-cf46f200-7b52-11eb-95d5-d898f7d0c4b0.gif)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":582087776,"public_id":46557,"url":"https://github.com/godotengine/godot/pull/46557","diff_url":"https://github.com/godotengine/godot/pull/46557.diff","patch_url":"https://github.com/godotengine/godot/pull/46557.patch","title":"Remove impossible condition in RenderingServer::mesh_surface_make_offsets_from_format","state":"open","is_draft":false,"authored_by":{"id":391371,"user":"asmaloney","avater":"https://avatars.githubusercontent.com/u/391371?v=4","url":"https://github.com/asmaloney"},"created_at":"2021-03-01T14:06:23Z","updated_at":"2021-03-01T15:13:24Z","body":"sizeof(float) cannot be less than 4, so the condition is impossible.\r\n\r\n(Also remove extra blank lines in case statements for consistency.)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":582074736,"public_id":46555,"url":"https://github.com/godotengine/godot/pull/46555","diff_url":"https://github.com/godotengine/godot/pull/46555.diff","patch_url":"https://github.com/godotengine/godot/pull/46555.patch","title":"Check if the line pointer goes away from the image buffer's EOF in the BMP importer","state":"open","is_draft":false,"authored_by":{"id":13400398,"user":"gongpha","avater":"https://avatars.githubusercontent.com/u/13400398?v=4","url":"https://github.com/gongpha"},"created_at":"2021-03-01T13:49:13Z","updated_at":"2021-03-09T08:06:07Z","body":"Fixes #46542.\r\n\r\nI wish there is a better way to handle this.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":581583806,"public_id":46525,"url":"https://github.com/godotengine/godot/pull/46525","diff_url":"https://github.com/godotengine/godot/pull/46525.diff","patch_url":"https://github.com/godotengine/godot/pull/46525.patch","title":"[FBX - WIP] Various improvements for blender FBX specifically.","state":"open","is_draft":false,"authored_by":{"id":748770,"user":"RevoluPowered","avater":"https://avatars.githubusercontent.com/u/748770?v=4","url":"https://github.com/RevoluPowered"},"created_at":"2021-02-28T20:04:05Z","updated_at":"2021-03-29T22:25:00Z","body":"Added a sanity check test, because I saw a bug on my PC which seems very rare, can be removed when this pr is ready I don't mind.\r\n\r\nFixes:\r\n- normal data is now working from blender fbx files\r\n- skinned meshes work more of the time from blender.\r\n- blender fbx's *only* will reparent the mesh to the skeleton.\r\n- blender has no support for pivots in an fbx.\r\n- kenny character model skin is fixed.\r\n\r\n:) 🍰 \r\n<img width=\"1133\" alt=\"Screenshot 2021-02-28 at 18 33 26\" src=\"https://user-images.githubusercontent.com/748770/109431905-b1697800-7a00-11eb-9b84-4cf42e38ac19.png\">\r\n\r\nTODO:\r\n- Fix animation time basis\r\n- Remove pivots for blender fbx keyframes \r\n- default keys for blender fbx tracks probably need disabled\r\n\r\nBugs in engine:\r\n- aabb's of skinned meshes are of the mesh without the skin (orientation then for the aabb is wrong, but maybe we can fix this?)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":581548569,"public_id":46515,"url":"https://github.com/godotengine/godot/pull/46515","diff_url":"https://github.com/godotengine/godot/pull/46515.diff","patch_url":"https://github.com/godotengine/godot/pull/46515.patch","title":"Fix viewports not inheriting their embedding state","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-02-28T16:42:47Z","updated_at":"2021-02-28T23:44:41Z","body":"If a parent viewport embeds windows then any child window will do it too.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":581541988,"public_id":46514,"url":"https://github.com/godotengine/godot/pull/46514","diff_url":"https://github.com/godotengine/godot/pull/46514.diff","patch_url":"https://github.com/godotengine/godot/pull/46514.patch","title":"fixed script_data_error with comments","state":"open","is_draft":false,"authored_by":{"id":27040,"user":"geekrelief","avater":"https://avatars.githubusercontent.com/u/27040?v=4","url":"https://github.com/geekrelief"},"created_at":"2021-02-28T16:02:31Z","updated_at":"2021-03-01T14:58:28Z","body":"Added comments for the fix to script_data error, rebased to latest master, replacing #43312 which was accidentally closed.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3377457]},{"id":581232876,"public_id":46464,"url":"https://github.com/godotengine/godot/pull/46464","diff_url":"https://github.com/godotengine/godot/pull/46464.diff","patch_url":"https://github.com/godotengine/godot/pull/46464.patch","title":"Fix main window getting unfocused, when adding subwindows","state":"open","is_draft":true,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2021-02-27T02:24:42Z","updated_at":"2021-07-31T16:09:10Z","body":"It is an enhanced rebase of my previous attempt at fixing this problem in #38340 and therefore supersedes it. In order to achieve that, you have to tell the OS to not activate the window, but at the same time ensure, that the Input still gets to the window. \r\n\r\nsupersedes #38340\r\nfixes #37531\r\n\r\n**Edit:** I am currently investigating different approaches. My notes: https://gist.github.com/HaSa1002/807444cc7334850a814a34251dff9af7","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,3112906,3112907,4418733,4418914]},{"id":580547894,"public_id":46435,"url":"https://github.com/godotengine/godot/pull/46435","diff_url":"https://github.com/godotengine/godot/pull/46435.diff","patch_url":"https://github.com/godotengine/godot/pull/46435.patch","title":"Fix mesh library remove selected item menu option","state":"open","is_draft":false,"authored_by":{"id":25291631,"user":"Hassan-A","avater":"https://avatars.githubusercontent.com/u/25291631?v=4","url":"https://github.com/Hassan-A"},"created_at":"2021-02-26T02:41:22Z","updated_at":"2021-03-03T15:02:55Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixes #45969. The \"Remove Selected Item\" in the Mesh Library menu now removes the selected item from the MeshLibrary item list inspector list.\r\n\r\n![image](https://user-images.githubusercontent.com/25291631/109247403-dd42ee80-77b1-11eb-96b0-428477c64cd4.png)\r\n![image](https://user-images.githubusercontent.com/25291631/109247461-f9df2680-77b1-11eb-8ae4-130d609f9468.png)\r\n![image](https://user-images.githubusercontent.com/25291631/109247524-154a3180-77b2-11eb-9c5e-6759495627f8.png)\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":579876552,"public_id":46407,"url":"https://github.com/godotengine/godot/pull/46407","diff_url":"https://github.com/godotengine/godot/pull/46407.diff","patch_url":"https://github.com/godotengine/godot/pull/46407.patch","title":"Update Vector2's angle method descriptions","state":"open","is_draft":false,"authored_by":{"id":15977859,"user":"mechPenSketch","avater":"https://avatars.githubusercontent.com/u/15977859?v=4","url":"https://github.com/mechPenSketch"},"created_at":"2021-02-25T07:29:22Z","updated_at":"2021-02-27T05:49:14Z","body":"Following https://github.com/godotengine/godot-docs/pull/4678, this request updates the affected method descriptions to include illustrated graphs.\r\n\r\nThis is in continuation of https://github.com/godotengine/godot-docs/issues/4676#issuecomment-784288436.\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":579484412,"public_id":46390,"url":"https://github.com/godotengine/godot/pull/46390","diff_url":"https://github.com/godotengine/godot/pull/46390.diff","patch_url":"https://github.com/godotengine/godot/pull/46390.patch","title":"Improved CollisionPolygon2D debug draw","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-02-24T17:35:07Z","updated_at":"2021-07-06T10:11:56Z","body":"Draw polygon shapes with the same colors as other 2D shapes to make it more consistent, and alternate values instead of hues when drawing the different convex shapes from decomposition to make it easier to read.\r\n\r\nBefore:\r\n<img width=\"400\" src=\"https://user-images.githubusercontent.com/1075032/108545308-dfceb100-72a4-11eb-9595-ec99e3889807.png\">\r\n\r\nAfter:\r\n<img width=\"400\" src=\"https://user-images.githubusercontent.com/1075032/108545371-efe69080-72a4-11eb-8b9c-2bd5509b5d4b.png\">","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":577924534,"public_id":46330,"url":"https://github.com/godotengine/godot/pull/46330","diff_url":"https://github.com/godotengine/godot/pull/46330.diff","patch_url":"https://github.com/godotengine/godot/pull/46330.patch","title":"[3.x] Shader goodies: async. compilation + caching","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-02-22T20:38:50Z","updated_at":"2021-08-08T15:29:20Z","body":"The main goal of this PR is to reduce stalling in games.\r\n\r\n![image](https://user-images.githubusercontent.com/11797174/108766876-f8192700-7555-11eb-9d0a-7932a39c7c28.png)\r\n\r\nCurrent limitations:\r\n- Async. compilation is only implemented for spatial shaders (it wouldn't be very difficult to extend it to canvas shaders).\r\n- The current implementation is for GL ES 3 only.\r\n\r\n**DISCLAIMER:** This implementation has been used in a project where it actually helped reducing stalling caused by shader compilation. However, this can be considered experimental and some testing would be very welcome. Also, the code itself may be better in how some values are made available to the different pieces of the renderer. Ideas welcome!\r\n\r\n# Shader caching\r\n\r\nAs long as the target platform supports the program binary GL extension, this is just enable and forget.\r\n\r\nSome remarks:\r\n- Writes to the cache are async. to prevent stalling the render thread as much as possible.\r\n- If async. shader compilation is enabled in addition to caching, shader \"reconstruction\" from its cache file is also potentially done asynchronously.\r\n- Whether caching is enabled affects both the project and the editor. It'd be nice to separate them so the editor has its own setting for caching, but I couldn't find a reasonable way to do that in the time I could spend on this, because the rasterizer is initialized before the editor settings singleton is ready.\r\n\r\n# Asynchronous compilation of shaders\r\n\r\nIt will work if enabled and supported by the GL driver. If native parallel compilation is supported, that's used, which is the most efficient. Otherwise, asynchronicity is achieved via a secondary GL context (and another thread) that sends the compiled shader back to the main one in its binary form, which means the program binary extension must be supported. If both fail, async. compilation is effectively disabled.\r\n\r\nThree fallback modes are added to both manually created shaders (either codey or visual) and `SpatialMaterial`s: _none_, _simple_ and _no render_. Please check the diff where these are explained in the built-in documentation.\r\n\r\nThe default mode is _simple_. You can explicitly set a more conservative mode for any shader/material.\r\n\r\nThe simple fallback is a shadeless shader that is able to transfer to itself the following stuff from the original shader:\r\n- Albedo uniform: it must be called `albedo` or `albedo_color`.\r\n- Texture scaling uniforms: called `uv1_scale` and `uv1_offset`.\r\n- Albedo texture: the first texture uniform in the original material with any `hint_*_albedo`; else, the first 2D texture used in the material, according to the order of uniforms.\r\n\r\n![image](https://user-images.githubusercontent.com/11797174/108765871-a9b75880-7554-11eb-900b-30269203941d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/11797174/108765938-c2c00980-7554-11eb-8988-1b2548e15cb7.png)\r\n\r\n![image](https://user-images.githubusercontent.com/11797174/108765994-d9666080-7554-11eb-8810-dc65eb302a44.png)\r\n\r\nPlease also see the diff for an explanation of the different project settings.\r\n\r\n---\r\n**This code is generously donated by IMVU.**","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112904,3112906,3112907,3112909,4418518,4418914]},{"id":576975944,"public_id":46258,"url":"https://github.com/godotengine/godot/pull/46258","diff_url":"https://github.com/godotengine/godot/pull/46258.diff","patch_url":"https://github.com/godotengine/godot/pull/46258.patch","title":"Allow to use CSG without nodes","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-02-20T17:12:08Z","updated_at":"2021-03-19T16:51:06Z","body":"Helps godotengine/godot-proposals#182, godotengine/godot-proposals#1920, #39706\r\n\r\nThis PR exposes to scripting a SurfaceTool like workflow for CSG, and migrate CSG nodes to use that workflow.\r\nIn particular, this PR exposes a bunch of CSG shapes (resources) similar to PrimitiveMesh, where each type holds a specific shape (Box, Cylinder, Sphere, ...); and a dedicated class for doing CSG operations called CSGTool.\r\n\r\nHere is a GDScript example of CSGTool:\r\n```gdscript\r\nvar ct := CSGTool.new()\r\nvar box := CSGBoxShape3D.new()\r\nvar box2 := CSGBoxShape3D.new()\r\nbox2.size = Vector3(1, 1, 2)\r\n  \r\nct.add_primitive(box)\r\nct.add_primitive(box2, CSGTool.OPERATION_SUBTRACTION, Transform().translated(Vector3(0,0,1)))\r\nmesh = ct.commit(null, true)\r\n```\r\nAnd the result:\r\n![image](https://user-images.githubusercontent.com/33117082/108602453-471e5b00-73a2-11eb-8538-1f117714eb48.png)\r\n\r\nChanges in the code side:\r\n\r\n- Move CSGBrush creation from CSG nodes to CSG shapes.\r\n- Cache the CSGBrush into the shape instance. The cache will be invalidated when at least one property changes. This should speed up CSG operation a bit.\r\n- Now CSGPrimitive3D subclasses holds a CSG shape, instead of storing fields directly in the class.\r\n- CSG operations in nodes are now done using CSGTool, including mesh, collision shape, tangents, and AABB generation.\r\n- Make CSGTool::Operation compatible with CSGBrushOperation::Operation.\r\n- Move material and smooth_faces to CSGPrimitive3D.\r\n- Add aliases for CSGTool::Operation, CSGPrimitiveShape3D::Mode and CSGPrimitiveShape3D::PathRotation in the nodes counterparts for compat.\r\n- Use less memallocs for CSGBrush.\r\n\r\nTODO:\r\n\r\n- [x] Create a dedicated resource for CSGPolygon and expose CSGPolygon3D again.\r\n- [x] Add documentation.\r\n- [x] Make icons for CSG shapes (they are the same of the node ones, except that they are yellow)\r\n- [ ] Fill documentation (I'll do that at the end to write it only once).\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418726]},{"id":576941601,"public_id":46249,"url":"https://github.com/godotengine/godot/pull/46249","diff_url":"https://github.com/godotengine/godot/pull/46249.diff","patch_url":"https://github.com/godotengine/godot/pull/46249.patch","title":"[3.2] Fix out of bounds access into empty image data","state":"open","is_draft":true,"authored_by":{"id":68759527,"user":"nmrkr","avater":"https://avatars.githubusercontent.com/u/68759527?v=4","url":"https://github.com/nmrkr"},"created_at":"2021-02-20T13:41:49Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #46189.\r\n\r\nThis is the same as #46247 but for 3.2.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":576911225,"public_id":46247,"url":"https://github.com/godotengine/godot/pull/46247","diff_url":"https://github.com/godotengine/godot/pull/46247.diff","patch_url":"https://github.com/godotengine/godot/pull/46247.patch","title":"Fix out of bounds access into empty image data","state":"open","is_draft":false,"authored_by":{"id":68759527,"user":"nmrkr","avater":"https://avatars.githubusercontent.com/u/68759527?v=4","url":"https://github.com/nmrkr"},"created_at":"2021-02-20T10:30:06Z","updated_at":"2021-02-22T14:43:28Z","body":"Fixes #46189.\r\n\r\nThis issue only affects X11.\r\n\r\nCherry-picking this does not seem possible due to restructuring. I have submitted #46249 to apply this fix to the 3.2 branch.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828782]},{"id":576820453,"public_id":46241,"url":"https://github.com/godotengine/godot/pull/46241","diff_url":"https://github.com/godotengine/godot/pull/46241.diff","patch_url":"https://github.com/godotengine/godot/pull/46241.patch","title":"Improve error messages for invalid property access/calls in GDScript","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-02-20T00:50:56Z","updated_at":"2021-03-09T18:33:44Z","body":"**Marking as draft since I haven't had time to test this yet (especially the `null` check).**\r\n\r\nThe reversed order of the messages now matches Python.\r\n\r\nSee #46214.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":576783827,"public_id":46235,"url":"https://github.com/godotengine/godot/pull/46235","diff_url":"https://github.com/godotengine/godot/pull/46235.diff","patch_url":"https://github.com/godotengine/godot/pull/46235.patch","title":"Switch to pre-commit for Git hooks","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-02-19T22:55:05Z","updated_at":"2021-03-06T18:46:28Z","body":"**Marking as a draft since this needs to be tested on Windows and macOS.**\r\n\r\nThis replaces our custom Git hook solution for pre-commit, a framework for pre-commit hooks written in Python.\r\n\r\nIt should have better Windows support than our existing implementation, on top of being able to handle CI situations and partial commits nicely. By default, it will only run on files modified since the last commit.\r\n\r\nThe minimum required version is Python 3.6.\r\n\r\nSee https://pre-commit.com/ for more information.\r\n\r\n**Note:** Java and Objective-C++ files won't be formatted by this hook until https://github.com/pocc/pre-commit-hooks/pull/25 is merged and a release of the clang-format pre-commit hooks is tagged.\r\n\r\nThis closes https://github.com/godotengine/godot/issues/46224.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":576211271,"public_id":46208,"url":"https://github.com/godotengine/godot/pull/46208","diff_url":"https://github.com/godotengine/godot/pull/46208.diff","patch_url":"https://github.com/godotengine/godot/pull/46208.patch","title":"Add more fill modes to ProgressBar","state":"open","is_draft":false,"authored_by":{"id":28705694,"user":"floppyhammer","avater":"https://avatars.githubusercontent.com/u/28705694?v=4","url":"https://github.com/floppyhammer"},"created_at":"2021-02-19T06:10:41Z","updated_at":"2021-03-26T14:32:14Z","body":"Add more fill modes to ProgressBar, as TextureProgressBar already has many. Currently, only `FILL_RIGHT_TO_LEFT`, `FILL_TOP_TO_BOTTOM`, and `FILL_BOTTOM_TO_TOP` were implemented besides the default `FILL_LEFT_TO_RIGHT` mode.\r\n![progress-bar](https://user-images.githubusercontent.com/28705694/108464741-b66d4f80-72bb-11eb-97d4-0c579a1956bb.gif)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":576167388,"public_id":46204,"url":"https://github.com/godotengine/godot/pull/46204","diff_url":"https://github.com/godotengine/godot/pull/46204.diff","patch_url":"https://github.com/godotengine/godot/pull/46204.patch","title":"Silence AudioPlayer2D if transform NaNs would poison audio system.","state":"open","is_draft":false,"authored_by":{"id":2786867,"user":"jjmontesl","avater":"https://avatars.githubusercontent.com/u/2786867?v=4","url":"https://github.com/jjmontesl"},"created_at":"2021-02-19T04:31:49Z","updated_at":"2021-07-06T10:11:30Z","body":"This cheap check prevents using NaN values for panning and volume in AudioStreamPlayer2D, which would result in NaN values being mixed as a result of multiplying samples by those values.\r\n\r\nThis NaN volume and panning would appear if the Transform has NaN values (this should not happen, but if it does it may poison the audio system through effects).\r\n\r\nI thought of adding `ERR_PRINT_ONCE` to inform about this, but I'm not sure if that's appropriate. If so, please feel free to add a message (showing the offending node path might be interesting too but might potentially create a lot of output).\r\n\r\nI think this is a safe and useful fix to backport to 3.2, especially now that other audio fixes are being applied.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418392]},{"id":575853246,"public_id":46176,"url":"https://github.com/godotengine/godot/pull/46176","diff_url":"https://github.com/godotengine/godot/pull/46176.diff","patch_url":"https://github.com/godotengine/godot/pull/46176.patch","title":"set up undo-redo action for animation player seek","state":"open","is_draft":false,"authored_by":{"id":54415525,"user":"angad-k","avater":"https://avatars.githubusercontent.com/u/54415525?v=4","url":"https://github.com/angad-k"},"created_at":"2021-02-18T17:20:02Z","updated_at":"2021-02-19T16:58:25Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nfixes #46123","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":575018389,"public_id":46125,"url":"https://github.com/godotengine/godot/pull/46125","diff_url":"https://github.com/godotengine/godot/pull/46125.diff","patch_url":"https://github.com/godotengine/godot/pull/46125.patch","title":"add null check in set_script method of Object.cpp","state":"open","is_draft":false,"authored_by":{"id":54415525,"user":"angad-k","avater":"https://avatars.githubusercontent.com/u/54415525?v=4","url":"https://github.com/angad-k"},"created_at":"2021-02-17T15:50:01Z","updated_at":"2021-02-17T19:08:49Z","body":"\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nfixes #46120\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":573729354,"public_id":46061,"url":"https://github.com/godotengine/godot/pull/46061","diff_url":"https://github.com/godotengine/godot/pull/46061.diff","patch_url":"https://github.com/godotengine/godot/pull/46061.patch","title":"\"pixelperfect\" window aspect.","state":"open","is_draft":false,"authored_by":{"id":2116566,"user":"bfloch","avater":"https://avatars.githubusercontent.com/u/2116566?v=4","url":"https://github.com/bfloch"},"created_at":"2021-02-15T18:25:05Z","updated_at":"2021-02-24T12:37:10Z","body":"This mode makes sure that only integers are used as multiplier or divisor\r\nfor the viewport size, hence achieving \"pixel perfect\" scaling.\r\nThis works best with the `viewport` stretch mode.\r\n\r\nAs opposed to the other aspects this mode will allow for black borders\r\non all sides to satisfy the requirement.\r\n\r\nIt achieves a setup similar to https://alvarber.gitlab.io/pixel-perfection-in-godot.html\r\nbut just with a single setting as shown:\r\n![pixelperfect aspect](https://i.imgur.com/SElAFQ9.png)\r\n\r\nSince the godot build is broken for me in master/4.0 as reported by others in #43714 and #42348 I was not able to test this on master.\r\n\r\nBut I do have a sister patch for 3.2 in case you prefer this small, but useful feature for 3.x here:\r\nhttps://github.com/StateOff/godot/commit/a63c016777f8b6aafcdc1a2ee7f2f08d59f4741c\r\n\r\nVideo showcasing the effect in 3.2:\r\nhttps://i.imgur.com/kBb3Y49.mp4\r\n\r\nhttps://user-images.githubusercontent.com/8281454/107992676-88b6ab00-701c-11eb-990d-467f8f346870.mp4\r\n\r\n\r\n\r\nFor convenience here is a stable 3.2.3 + patch Windows build for the curious without access to a compiler:\r\nhttps://github.com/StateOff/godot/releases/tag/3.2.3-pixelperfect-0.1\r\n\r\nSince I have limited access to platforms beyond Linux let me know if the patch needs more love.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1666.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":573717447,"public_id":46057,"url":"https://github.com/godotengine/godot/pull/46057","diff_url":"https://github.com/godotengine/godot/pull/46057.diff","patch_url":"https://github.com/godotengine/godot/pull/46057.patch","title":"Revert to defaults when switching off \"Editable Children\" + Undo/Redo","state":"open","is_draft":false,"authored_by":{"id":2472835,"user":"revilo","avater":"https://avatars.githubusercontent.com/u/2472835?v=4","url":"https://github.com/revilo"},"created_at":"2021-02-15T17:55:21Z","updated_at":"2021-03-01T20:01:10Z","body":"Fixes #45915.\r\n\r\nThis PR implements immediate reset to defaults when \"Editable Children\" gets turned ```OFF```.\r\n\r\nFurthermore it implements **Undo/Redo** for the following operations:\r\n1. Turn ```ON``` \"Editable Children\" (with implicitly turning off \"Load As Placeholder\")\r\n2. Turn ```OFF``` \"Editable Children\" (with explicitly reverting all changes to default)\r\n3. Turn ```ON``` \"Load As Placeholder\" (with explicitly turning off \"Editable Children\" + reset to defaults)\r\n4. Turn ```OFF``` \"Load As Placeholder\"","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418563]},{"id":573036322,"public_id":45993,"url":"https://github.com/godotengine/godot/pull/45993","diff_url":"https://github.com/godotengine/godot/pull/45993.diff","patch_url":"https://github.com/godotengine/godot/pull/45993.patch","title":"Make Reference functional at predelete","state":"open","is_draft":true,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2021-02-14T04:33:05Z","updated_at":"2021-02-14T11:12:42Z","body":"This is written as a quick & dirty proof of concept for an approach to fix #31166 I've come up with.\r\n\r\nIn short:\r\n- Public instance IDs of `Object`s always have the MSB to 0 (the MSB is the one that indicates if it's a `Reference`).\r\n- On predelete of `Reference`, the MSB is set to 0 so `Variant` doesn't check or touch the ref count.\r\n\r\nUsing `1 << 63` in the code just to avoid the refactoring that a production-quality implementation would need (to use `OBJECTDB_REFERENCE_BIT`).","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":572949677,"public_id":45960,"url":"https://github.com/godotengine/godot/pull/45960","diff_url":"https://github.com/godotengine/godot/pull/45960.diff","patch_url":"https://github.com/godotengine/godot/pull/45960.patch","title":"Allow to use a Reference during NOTIFICATION_PREDELETE","state":"open","is_draft":false,"authored_by":{"id":33117082,"user":"trollodel","avater":"https://avatars.githubusercontent.com/u/33117082?v=4","url":"https://github.com/trollodel"},"created_at":"2021-02-13T15:15:08Z","updated_at":"2021-02-24T11:59:13Z","body":"Fixes #31166\r\n\r\nThe issue happens because the refcount can't be incremented during the predelete, so objects that require to increment it (e.g. Variant) will fail.\r\nThis PR workaround the issue by setting the refcount to 1 before calling notification, so the reference seems valid during the predelete.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":569663900,"public_id":45833,"url":"https://github.com/godotengine/godot/pull/45833","diff_url":"https://github.com/godotengine/godot/pull/45833.diff","patch_url":"https://github.com/godotengine/godot/pull/45833.patch","title":"Open error in dominant script when checked","state":"open","is_draft":false,"authored_by":{"id":10531103,"user":"MaxStgs","avater":"https://avatars.githubusercontent.com/u/10531103?v=4","url":"https://github.com/MaxStgs"},"created_at":"2021-02-08T17:58:55Z","updated_at":"2021-05-02T12:49:00Z","body":"Fix [#5646](https://github.com/godotengine/godot/issues/5646).\r\nLooks like that there is no `owner.filename` and needs proper handling.\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418605,4418914]},{"id":569596122,"public_id":45830,"url":"https://github.com/godotengine/godot/pull/45830","diff_url":"https://github.com/godotengine/godot/pull/45830.diff","patch_url":"https://github.com/godotengine/godot/pull/45830.patch","title":"[4.0] [tvOS] Basic tvOS Support","state":"open","is_draft":true,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-02-08T16:22:13Z","updated_at":"2021-06-17T12:36:57Z","body":"Same as #45829 for `master` and basic Metal Support (via MoltenVK)\r\n\r\n> \r\n> Added **basic** tvOS support.  \r\n> Implements already closed but not implemented proposal: https://github.com/godotengine/godot-proposals/issues/224\r\n> \r\n> Platform code is based on iOS platform code with minor changes (some iOS stuff isn't available on tvOS). \r\n> Audio interruption was also removed - AppleTV don't seem post interruption notification correctly or in right order, which results in game freezing after application loses focus. \r\n> Keyboard input backed was changed so keyboard input actually works.\r\n> Input is handled by controllers. Apple/Siri Remote are also considered controller (micro)\r\n> \r\n> Export code (including plugins) is also based on iOS platform since both of them export into Xcode project. \r\n> But export is also simpler: \r\n> * Launch screen is storyboard based (no need for launch images)\r\n> * tvOS project supports empty Apple Team ID\r\n> * Icons, Signatures and certificates are handled by Xcode project\r\n> \r\n> Core code has been modified to address tvOS unsupported features - no `fork` and `execvp`.\r\n> Rendering code has been modified for tvOS to use same paths/methods as iOS's. \r\n> \r\n> Mono haven't been ported.\r\n> GDNative uses same configuration as iOS platform.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,3609449,4418392,4418518,4418914]},{"id":569591817,"public_id":45829,"url":"https://github.com/godotengine/godot/pull/45829","diff_url":"https://github.com/godotengine/godot/pull/45829.diff","patch_url":"https://github.com/godotengine/godot/pull/45829.patch","title":"[3.4] [tvOS] Basic tvOS Support","state":"open","is_draft":true,"authored_by":{"id":3750083,"user":"naithar","avater":"https://avatars.githubusercontent.com/u/3750083?v=4","url":"https://github.com/naithar"},"created_at":"2021-02-08T16:16:19Z","updated_at":"2021-08-06T11:24:33Z","body":"Added **basic** tvOS support.  \r\nImplements already closed but not implemented proposal: https://github.com/godotengine/godot-proposals/issues/224\r\n\r\nPlatform code is based on iOS platform code with minor changes (some iOS stuff isn't available on tvOS). \r\nAudio interruption was also removed - AppleTV don't seem post interruption notification correctly or in right order, which results in game freezing after application loses focus. \r\nKeyboard input backed was changed so keyboard input actually works.\r\nInput is handled by controllers. Apple/Siri Remote are also considered controller (micro)\r\n\r\nExport code (including plugins) is also based on iOS platform since both of them export into Xcode project. \r\nBut export is also simpler: \r\n* Launch screen is storyboard based (no need for launch images)\r\n* tvOS project supports empty Apple Team ID\r\n* Icons, Signatures and certificates are handled by Xcode project\r\n\r\nCore code has been modified to address tvOS unsupported features - no `fork` and `execvp`.\r\nRendering code has been modified for tvOS to use same paths/methods as iOS's. \r\n\r\nMono haven't been ported.\r\nGDNative uses same configuration as iOS platform.\r\n\r\n- [x] Exports correctly\r\n- [x] Runs correctly\r\n- [x] Handles input\r\n- [x] Plugins support (example https://github.com/naithar/godot-ios-plugins/tree/feature/tvos-support)\r\n- [x] GDNative support (https://github.com/godotengine/godot_headers/pull/85 https://github.com/godotengine/godot-cpp/pull/512)\r\n- [x] App Store upload\r\n\r\nBuild container and script PRs: https://github.com/godotengine/build-containers/pull/71, https://github.com/godotengine/godot-build-scripts/pull/21\r\n\r\nSince linux-compiled binaries are required to use `use_lto` to pass App Store checks, I'll place macOS built tvOS templates and binaries here: [unofficial tvOS templates](https://s3.eu-central-1.wasabisys.com/naithar/godot/godot_templates/list.html)","target_branch":"3.x","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3112910,3609449,4418392,4418518,4418914]},{"id":568962215,"public_id":45793,"url":"https://github.com/godotengine/godot/pull/45793","diff_url":"https://github.com/godotengine/godot/pull/45793.diff","patch_url":"https://github.com/godotengine/godot/pull/45793.patch","title":"Cap the Light Attenuation","state":"open","is_draft":false,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2021-02-07T12:01:59Z","updated_at":"2021-02-16T11:00:18Z","body":"* Given an inverse function is now used, light can reach near-infinity levels.\r\n* This causes problems with auto exposure, volumetric fog, etc.\r\n* Added a new max energy parameter to cap the light to this, used in forward pass as well as volumetric fog.\r\n* GI does not need it because it's capped by design.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":568958929,"public_id":45792,"url":"https://github.com/godotengine/godot/pull/45792","diff_url":"https://github.com/godotengine/godot/pull/45792.diff","patch_url":"https://github.com/godotengine/godot/pull/45792.patch","title":"AnimationPlayer: Handle \"started\" event for animations of TYPE_AUDIO","state":"open","is_draft":false,"authored_by":{"id":2472835,"user":"revilo","avater":"https://avatars.githubusercontent.com/u/2472835?v=4","url":"https://github.com/revilo"},"created_at":"2021-02-07T11:37:05Z","updated_at":"2021-02-22T09:52:51Z","body":"Fixes #45759.\r\n\r\nWith this PR the animation process for Animation::TYPE_AUDIO has been slightly changed to not only \"reconsider\" and updating the current playing position on a \"seek\" event, but also when the animation gets (re-)started.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":568791542,"public_id":45764,"url":"https://github.com/godotengine/godot/pull/45764","diff_url":"https://github.com/godotengine/godot/pull/45764.diff","patch_url":"https://github.com/godotengine/godot/pull/45764.patch","title":"Update all AnimationTree's editors when editing","state":"open","is_draft":false,"authored_by":{"id":13400398,"user":"gongpha","avater":"https://avatars.githubusercontent.com/u/13400398?v=4","url":"https://github.com/gongpha"},"created_at":"2021-02-06T13:42:00Z","updated_at":"2021-02-08T21:29:46Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #45528.\n\nAnimationTree's editor looks weird. When I make new any AnimationNode or its children. The editor appears normally. But when removing it or select another animation free, it sometimes does not change to a new target.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":567431895,"public_id":45699,"url":"https://github.com/godotengine/godot/pull/45699","diff_url":"https://github.com/godotengine/godot/pull/45699.diff","patch_url":"https://github.com/godotengine/godot/pull/45699.patch","title":"Implement Skeleton Editor Gizmo","state":"open","is_draft":true,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2021-02-04T08:24:31Z","updated_at":"2021-08-17T22:07:52Z","body":"Skeleton's TreeEditor was implemented in #36409, but the gizmo for editing was not (ref: [584](https://github.com/godotengine/godot-proposals/issues/584) and [#1767](https://github.com/godotengine/godot-proposals/issues/1767)). So, the gizmo in `SkeletonEditor`, which was developed in the 3.2.x branch, is now complete tentatively. This is a draft PR for porting to 4.0.\r\n\r\nhttps://www.youtube.com/watch?v=RjJiEo8uqPw\r\n\r\nDev branch for 3.2.x is [here](https://github.com/TokageItLab/godot/tree/pose-edit-mode).\r\n\r\n## Features\r\n\r\n![pr1](https://user-images.githubusercontent.com/61938263/106864740-a119f200-670d-11eb-949e-035335f65b48.png)\r\n\r\nWhen you select skeleton and bone edit tool, marker circles will appear on the joints. If you select a marker, a transform gizmo will appear, which looks the same as `SpatialTransformGizmo` but behaves a bit differently. Basically, in character animation, there is no editing other than rotate. So to make the editing process smoother, you can make selections in all `Move/Rotate/Scale` modes. Instead, there is no free transform mode, which I may implement somewhere else.\r\n\r\n![pr2](https://user-images.githubusercontent.com/61938263/106864763-a6773c80-670d-11eb-8030-edd671b8c634.gif)\r\n\r\nThere is a `PoseMode` and a `RestMode`; during `RestMode`, `Pose` and `CustomPose` are temporarily disabled, and `RestMode` will be canceled when you exit the `SkeletonEditor`. However, there is no `CustomPoseMode`, because there is no way to disable only the `Pose` while the `CustomPose` is enabled.\r\n\r\n![pr3](https://user-images.githubusercontent.com/61938263/106864775-a9722d00-670d-11eb-8b28-a71f596c5db6.png)\r\n\r\nAdd the following options to `SkeletonButton`'s popups in toolber\r\n\r\n- Init pose\r\n- Insert key of all bone poses\r\n- Insert key of bone poses already exist track\r\n- Apply current pose to rest\r\n\r\nAll of these are basically applied to all bones. *Init pose* initializes the Pose, but not the `CustomPose`. *Insert key* is activated when the animation player has a track, similar to `Spatial`'s `KeyButton`. Be careful with *Apply current pose to rest*. It initializes the current `Pose` and `CustomPose`, and changes `Rest`.\r\n\r\n## Changes/Bugfixes\r\n\r\n### Skeleton\r\n- Added `int selected_bone`\r\n\r\n### SkeletonEditor\r\n- Removed the *Pose Enabled* checkbox in `SkeletonBoneEditor` to prevent conflicts in `RestMode`\r\n\r\n### SpatialEditorGizmo\r\n- Skeleton's gizmo is now at the front of the screen when skeleton is selected\r\n- Show the local axis of the bones when selecting a skeleton\r\n- Highlight the currently selected bone\r\n- Added *selected bone color* and *bone axis length* to `EditorSettings`\r\n\r\n### SpatialEditorPlugin\r\n- Added `Vector<Transform> external`\r\n- Added `ToolExternal` to `ToolMode`\r\n- `forward_spatial_gui_input()` passes the id of the Viewport\r\n- Some private functions changed to public\r\n\r\n### AnimationTrackEditor\r\n- Added `has_transform_key()`\r\n\r\n## Todo\r\n\r\n- [x] Porting for 4.0\r\n- [x] Fix depth drawing order in gizmo\r\n- [x] Consider the size and shape of the joint marker\r\n- [x] Adopt SubGizmos\r\n- [ ] Fix some function (inserting multiple tracks has been broken)\r\n\r\n## Other Issues\r\n- Octahedron as bone gizmo in `SpatialEditorGizmo` weight assignment and updated timing are strange\r\n- `SkeletonEditor` does not support multiple selection\r\n- Behavior for negative scales is not ensured\r\n- Need independent bone handling (without binding skin) in rest mode for adjust initial rest\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4418563,4418726]},{"id":565714124,"public_id":45655,"url":"https://github.com/godotengine/godot/pull/45655","diff_url":"https://github.com/godotengine/godot/pull/45655.diff","patch_url":"https://github.com/godotengine/godot/pull/45655.patch","title":"Bug Fixed: Node rename dialog no longer pops up inside of the viewport","state":"open","is_draft":false,"authored_by":{"id":59111455,"user":"JonasKorte","avater":"https://avatars.githubusercontent.com/u/59111455?v=4","url":"https://github.com/JonasKorte"},"created_at":"2021-02-02T06:55:17Z","updated_at":"2021-02-07T06:13:12Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixed Bug: \nWhen renaming or right-clicking a node, the dialog pops up somewhere else in the editor (In my case in the top-left of the viewport). This is now fixed, and both the rename dialog and the right-click context menu pop up where they should.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":565232423,"public_id":45632,"url":"https://github.com/godotengine/godot/pull/45632","diff_url":"https://github.com/godotengine/godot/pull/45632.diff","patch_url":"https://github.com/godotengine/godot/pull/45632.patch","title":"Don't pass mouse gui events if mouse is captured","state":"open","is_draft":true,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-02-01T14:37:18Z","updated_at":"2021-02-26T01:40:50Z","body":"Fixes #31821\r\nMOUSE_MODE_CAPTURED is not intended for gui interactions anyways.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418403]},{"id":563802445,"public_id":45553,"url":"https://github.com/godotengine/godot/pull/45553","diff_url":"https://github.com/godotengine/godot/pull/45553.diff","patch_url":"https://github.com/godotengine/godot/pull/45553.patch","title":"Fix tile origin = bottom left for isometric tiles","state":"open","is_draft":false,"authored_by":{"id":1177068,"user":"DrMoriarty","avater":"https://avatars.githubusercontent.com/u/1177068?v=4","url":"https://github.com/DrMoriarty"},"created_at":"2021-01-29T07:41:17Z","updated_at":"2021-01-29T20:07:54Z","body":"In compatibility mode tile origin was calculated without regards of sprite height.\r\n\r\nBefore:\r\n![2021-01-29-101223](https://user-images.githubusercontent.com/1177068/106245817-2c7f1900-621e-11eb-935b-09294a71882b.gif)\r\n\r\n\r\nAfter:\r\n![2021-01-29-095924](https://user-images.githubusercontent.com/1177068/106245841-3a349e80-621e-11eb-86f6-0d4c65b86145.gif)\r\n\r\nFixes: https://github.com/godotengine/godot/issues/45533\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542]},{"id":560687760,"public_id":45426,"url":"https://github.com/godotengine/godot/pull/45426","diff_url":"https://github.com/godotengine/godot/pull/45426.diff","patch_url":"https://github.com/godotengine/godot/pull/45426.patch","title":"Update PR template with a link to the docs","state":"open","is_draft":false,"authored_by":{"id":6080368,"user":"skyace65","avater":"https://avatars.githubusercontent.com/u/6080368?v=4","url":"https://github.com/skyace65"},"created_at":"2021-01-24T21:46:00Z","updated_at":"2021-01-26T03:27:12Z","body":"As someone who contributes to the docs there's too many features that get added with no documentation. I understand that we can't require people to document their features, but we should at least encourage it.\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":560341573,"public_id":45383,"url":"https://github.com/godotengine/godot/pull/45383","diff_url":"https://github.com/godotengine/godot/pull/45383.diff","patch_url":"https://github.com/godotengine/godot/pull/45383.patch","title":"[3.x] 'Editor Settings','Project Settings','Property Name' display translation","state":"open","is_draft":false,"authored_by":{"id":14800320,"user":"magian1127","avater":"https://avatars.githubusercontent.com/u/14800320?v=4","url":"https://github.com/magian1127"},"created_at":"2021-01-23T07:44:24Z","updated_at":"2021-08-06T11:24:33Z","body":"\r\n<i>Bugsquad edit</i>: Backport #45365","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418518]},{"id":560341151,"public_id":45382,"url":"https://github.com/godotengine/godot/pull/45382","diff_url":"https://github.com/godotengine/godot/pull/45382.diff","patch_url":"https://github.com/godotengine/godot/pull/45382.patch","title":"Go To Method for external editor","state":"open","is_draft":false,"authored_by":{"id":14800320,"user":"magian1127","avater":"https://avatars.githubusercontent.com/u/14800320?v=4","url":"https://github.com/magian1127"},"created_at":"2021-01-23T07:40:14Z","updated_at":"2021-07-07T13:28:01Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n(English from Google Translate)\r\nOperation error, re PR, sorry .\r\n\r\nThis is a temporary code\r\n\r\nmono maybe should use\r\n`mono_debug_method_lookup_location`\r\n\r\nTry to use 'mono_debug_method_lookup_location' in 'gd_mono_class->fetch_methods_with_godot_api_checks'.\r\nNot familiar with MONO, so I failed.\r\n\r\n\r\n![effect](https://user-images.githubusercontent.com/14800320/105317052-b74b8c80-5bfc-11eb-97fd-2085d90355a9.gif)\r\n\r\n Closed #45344\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":560210059,"public_id":45372,"url":"https://github.com/godotengine/godot/pull/45372","diff_url":"https://github.com/godotengine/godot/pull/45372.diff","patch_url":"https://github.com/godotengine/godot/pull/45372.patch","title":"[3.x] Prevent use of Opaque Pre-Pass's threshold on top of Alpha Scissor","state":"open","is_draft":false,"authored_by":{"id":29317321,"user":"Firepal","avater":"https://avatars.githubusercontent.com/u/29317321?v=4","url":"https://github.com/Firepal"},"created_at":"2021-01-22T21:03:45Z","updated_at":"2021-08-06T11:24:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nIn SpatialMaterials and ShaderMaterials, both Alpha Scissor and Opaque Pre-Pass can discard fragments (== create fully-transparent pixels), but Opaque Pre-Pass has a hardcoded threshold of 0.1 that the end-developer cannot modify.\r\n\r\nThis PR makes SpatialMaterials use the alpha scissor threshold instead of Opaque Pre-Pass's own threshold whenever Alpha Scissor is in use. This prevents the strange behavior where any fragment with an ALPHA value under 0.1 would be discarded, no matter what Alpha Scissor value you set.\r\n\r\nUsing blue noise for ALPHA_SCISSOR and a radial gradient:\r\n\r\n![image](https://user-images.githubusercontent.com/29317321/105544760-a2095780-5cfb-11eb-8ed4-898d677ff83c.png)\r\n![image](https://user-images.githubusercontent.com/29317321/105544829-b0f00a00-5cfb-11eb-9be2-78ceeeb66d90.png)\r\n\r\nScene in image: [PrepassTesting.zip](https://github.com/godotengine/godot/files/5858488/PrepassTesting.zip)\r\n\r\nRelated: [#45288](https://github.com/godotengine/godot/pull/45288)\r\n\r\n**Do tell me if this breaks the intent of Opaque Pre-Pass.**","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":560092695,"public_id":45365,"url":"https://github.com/godotengine/godot/pull/45365","diff_url":"https://github.com/godotengine/godot/pull/45365.diff","patch_url":"https://github.com/godotengine/godot/pull/45365.patch","title":"'Editor Settings','Project Settings','Property Name' display translation","state":"open","is_draft":false,"authored_by":{"id":14800320,"user":"magian1127","avater":"https://avatars.githubusercontent.com/u/14800320?v=4","url":"https://github.com/magian1127"},"created_at":"2021-01-22T17:00:55Z","updated_at":"2021-01-27T16:05:18Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n![Attribute](https://user-images.githubusercontent.com/14800320/105520477-b8bca800-5d15-11eb-8459-ddd5f4ed866c.png)\r\n\r\n(English from Google Translate)\r\n\r\n'Editor Settings','Project Settings','Property Name' display translation\r\n.po add msg\r\n\r\n'set_tooltip' is added to show the original text\r\n\r\n\r\n把原来没翻译的地方,让其可以翻译.\r\n添加了几个set_tooltip,用来显示英文原文\r\n编辑器设置中添加了'property_name_translation'属性,用来开启是否翻译这些英文\r\nextract.py现在可以提取 _initial_set 和  GLOBAL_DEF 的文本了\r\n 3.2 #45383","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":557140398,"public_id":45303,"url":"https://github.com/godotengine/godot/pull/45303","diff_url":"https://github.com/godotengine/godot/pull/45303.diff","patch_url":"https://github.com/godotengine/godot/pull/45303.patch","title":"Modify float values to display with trailing .0 for clarity","state":"open","is_draft":false,"authored_by":{"id":61564136,"user":"NoahGori","avater":"https://avatars.githubusercontent.com/u/61564136?v=4","url":"https://github.com/NoahGori"},"created_at":"2021-01-19T03:25:05Z","updated_at":"2021-01-22T21:32:27Z","body":"Added toggle to keep a trailing zero when displaying whole number floats so that in\r\ncertain circumstances they can be differentiated from integers such as in\r\nexported variables or when printing arrays\r\n![Before](https://user-images.githubusercontent.com/61564136/104983965-76246400-59d3-11eb-8524-66433ef55a29.png)\r\nMade to resolve godotengine/godot-proposals#1693\r\n\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":557008543,"public_id":45294,"url":"https://github.com/godotengine/godot/pull/45294","diff_url":"https://github.com/godotengine/godot/pull/45294.diff","patch_url":"https://github.com/godotengine/godot/pull/45294.patch","title":"VisualScript Modules","state":"open","is_draft":false,"authored_by":{"id":19930870,"user":"swarnimarun","avater":"https://avatars.githubusercontent.com/u/19930870?v=4","url":"https://github.com/swarnimarun"},"created_at":"2021-01-18T19:48:01Z","updated_at":"2021-06-22T16:29:33Z","body":"I am not quite sure about its mergeability yet, my first rebase had issues because I tried rebasing with all the commits originally(even this one had issues likely due to formatting changes in the refactor PR before merge), and the current commit history needs clean up as well.\r\n\r\nSo I believe it needs a bit more of testing and fixes if there is an issue, also because of the changes to the Window GUI which might not need some of the old changes anymore. Will make it a proper PR as soon as I can say it's mergeable.\r\n\r\nCreated this so we can start reviewing.\r\n\r\nFixes: https://github.com/godotengine/godot-proposals/issues/7#event-4300420653","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":556477375,"public_id":45273,"url":"https://github.com/godotengine/godot/pull/45273","diff_url":"https://github.com/godotengine/godot/pull/45273.diff","patch_url":"https://github.com/godotengine/godot/pull/45273.patch","title":"Add rule of thirds guides to the Camera3D editor preview","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-01-18T03:06:26Z","updated_at":"2021-02-05T14:19:17Z","body":"Rule of thirds guides are often used to help with visual composition.\r\n\r\nThis also darkens the area outside the defined project aspect ratio to help with cutscene design.\r\n\r\nCamera guides and darkening can be disabled in the Editor Settings by unchecking **Editors > 3d > Show Camera Preview Guides**.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2136.\r\n\r\n## Preview\r\n\r\n*Click to view at full size. Even though lines are drawn to be visible on all backgrounds, they're still quite subtle and are invisible in the preview.*\r\n\r\n![Rule of third guides](https://user-images.githubusercontent.com/180032/106402783-8c96da80-642b-11eb-8c7b-443194d95291.png)\r\n\r\n<details>\r\n<summary>Older revision of this PR</summary>\r\n\r\n### Viewport aspect ratio is less wide than the project aspect ratio (the Camera3D uses Keep Height)\r\n\r\n![rule_of_thirds_narrow](https://user-images.githubusercontent.com/180032/104868060-a839b580-5942-11eb-8ac9-f096b08bf563.png)\r\n\r\n### Viewport aspect ratio is wider than the project aspect ratio (the Camera3D uses Keep Height)\r\n\r\n![rule_of_thirds_wide](https://user-images.githubusercontent.com/180032/104868059-a7088880-5942-11eb-8458-c970c499808e.png)\r\n</details>","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":556454726,"public_id":45269,"url":"https://github.com/godotengine/godot/pull/45269","diff_url":"https://github.com/godotengine/godot/pull/45269.diff","patch_url":"https://github.com/godotengine/godot/pull/45269.patch","title":"Rework how the 3D editor viewport's resolution scale is changed","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-01-18T01:24:57Z","updated_at":"2021-05-05T20:16:57Z","body":"- Removed the Half Resolution per-viewport setting in favor of an editor setting that applies to all 3D viewports in all projects.\r\n- Use an automatic rendering scale by default that's set to 100% on loDPI displays and 50% on hiDPI displays (editor scale >= 1.667).\r\n- Add 25% and 33% scaling options in the Editor Settings. This is useful for low-end hardware with hiDPI displays (such as 4K laptops).\r\n\r\nThe rendering scale is updated when the editor setting changes, so no restart is required to apply rendering scale changes (as before).\r\n\r\nThis pull request can be remade for the `3.x` branch if we agree on this one.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/2125.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":556421951,"public_id":45263,"url":"https://github.com/godotengine/godot/pull/45263","diff_url":"https://github.com/godotengine/godot/pull/45263.diff","patch_url":"https://github.com/godotengine/godot/pull/45263.patch","title":"Change some macros to constexpr","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-01-17T22:12:33Z","updated_at":"2021-01-17T22:25:36Z","body":"Inspired by this piece of code\r\nhttps://github.com/godotengine/godot/blob/49b5776e8bd62b4bfb6511cca770611b6a3062e4/core/string/ustring.cpp#L4315-L4322\r\nI decided to change some macros to constexpr. I changed the math function macros (ABS/MAX etc.) and some editor #define variables. From a trivial change it grew into a pretty gargantuan PR 😕 The reason for this is that I used templates and, unlike macros that take literally anything, the new `constexpr` methods require that both types are explicitly the same. So I spent *some time* fixing types until it eventually all compiled.\r\n\r\nThe affected code should be as fast or sometimes faster (e.g. the piece above). Also the binary somehow got 110 kB smaller \\o/\r\nNot sure if there was a smarter way to do this that wouldn't require changing literally every file in the codebase, but I'd be sad if my changes were unnecessary :I","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":556226426,"public_id":45241,"url":"https://github.com/godotengine/godot/pull/45241","diff_url":"https://github.com/godotengine/godot/pull/45241.diff","patch_url":"https://github.com/godotengine/godot/pull/45241.patch","title":"[3.x] Add a reference to function state during `resume()`","state":"open","is_draft":false,"authored_by":{"id":43494664,"user":"arrowinaknee","avater":"https://avatars.githubusercontent.com/u/43494664?v=4","url":"https://github.com/arrowinaknee"},"created_at":"2021-01-16T20:06:16Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #44863. The function state is now referenced during the function execution in `resume()` call.\r\nThe deletion of the function state object during it's method execution slightly worries me. Seems to work fine but I would like to get a comment on that from a more experienced developer.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":556214542,"public_id":45239,"url":"https://github.com/godotengine/godot/pull/45239","diff_url":"https://github.com/godotengine/godot/pull/45239.diff","patch_url":"https://github.com/godotengine/godot/pull/45239.patch","title":"renamed .*spatial.* to .*node_3d.* for consistency","state":"open","is_draft":false,"authored_by":{"id":57700147,"user":"lahouaridc","avater":"https://avatars.githubusercontent.com/u/57700147?v=4","url":"https://github.com/lahouaridc"},"created_at":"2021-01-16T18:28:45Z","updated_at":"2021-01-16T18:48:59Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nRenamed methods names in EditorPlugins and EditorGizmoPlugins etc... that where still using spatial to use node_3d for consistency with rest of godot 4.0.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":556209607,"public_id":45237,"url":"https://github.com/godotengine/godot/pull/45237","diff_url":"https://github.com/godotengine/godot/pull/45237.diff","patch_url":"https://github.com/godotengine/godot/pull/45237.patch","title":"Add a Preview Bake button for quick iteration with BakedLightmap","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2021-01-16T17:51:54Z","updated_at":"2021-08-06T11:24:33Z","body":"When using the **Preview Bake** button instead of **Bake Lightmaps**, low quality settings will be used instead of settings from the BakedLightmap node. A node configuration warning will be displayed besides the BakedLightmap node to inform the user that the bake was done in preview mode. This preview bake warning is persisted to storage to make teamwork easier.\r\n\r\n![Editor top bar](https://user-images.githubusercontent.com/180032/104819367-48051f80-582d-11eb-988a-dc40022c90fe.png)\r\n\r\n![Node configuration warning](https://user-images.githubusercontent.com/180032/104820646-a1258100-5836-11eb-8a99-c6a81a42dbeb.png)\r\n\r\nThis helps iterate quicker on a scene's lighting since you don't need to wait as much time to see results.\r\n\r\nOn a [simple test project](https://github.com/godotengine/godot/files/5824856/test_lightmap.zip), Preview Bake (0:00:38) was about 3 times faster than a \"final\" bake (0:01:48) with the default BakedLightmap settings.\r\n\r\n\r\nBy default, Preview Bake uses:\r\n\r\n- Low quality for baking.\r\n- 1 bounce, unless the BakedLightmap node is set to 0 bounces (in which case it uses 0 bounces as well).\r\n- Low quality for dynamic object capture.\r\n  - You can disable dynamic object capture entirely in the Project Settings if you don't need it for previewing purposes.\r\n\r\nThe preview bake settings above can be adjusted in the Project Settings. These are project settings so that different team members always use the same preview settings for consistency.\r\n\r\n[**Comparison between Preview Bake and \"final\" bake**](https://imgsli.com/Mzc4NDA)\r\n\r\nThis addresses https://github.com/godotengine/godot-proposals/issues/2029 for the `3.2` branch. I couldn't make this change on `master` so far as the lightmapper was always crashing for me there. Once I can get the lightmapper to work in `master` (and we agree on the design of this PR), I'll open a similar PR for `master`.\r\n\r\n@JFonS Do you think I should increase the BakedLightmapData energy slightly (+15% or so) to compensate for the lower amount of bounces? Right now, the preview bake is quite dark compared to the final bake.\r\n\r\nAlso, do you have any pointers to make preview bakes even faster? Disabling the denoiser makes the result too grainy to be usable :slightly_frowning_face: ","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828781,1828783,4418726,4418914]},{"id":554628690,"public_id":45176,"url":"https://github.com/godotengine/godot/pull/45176","diff_url":"https://github.com/godotengine/godot/pull/45176.diff","patch_url":"https://github.com/godotengine/godot/pull/45176.patch","title":"[3.x] Fix KinematicBody having a duplicate locked_axis variable","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-01-14T04:08:57Z","updated_at":"2021-08-06T11:24:33Z","body":"Simply put, KinematicBody had two different `locked_axis` variables, which caused incorrect behavior any time they were out of sync. It's a much better idea to only have one variable to track this (like RigidBody does), so I deleted the duplicate one.\r\n\r\nThis fixes #25798 in 3.2, and is the 3.2 version of #45175.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":554628599,"public_id":45175,"url":"https://github.com/godotengine/godot/pull/45175","diff_url":"https://github.com/godotengine/godot/pull/45175.diff","patch_url":"https://github.com/godotengine/godot/pull/45175.patch","title":"Fix KinematicBody3D having a duplicate locked_axis variable","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2021-01-14T04:08:36Z","updated_at":"2021-08-01T16:51:37Z","body":"Simply put, KinematicBody3D had two different `locked_axis` variables, which caused incorrect behavior any time they were out of sync. It's a much better idea to only have one variable to track this (like RigidBody3D does), so I deleted the duplicate one.\r\n\r\nThis fixes #25798 in master, and is the master version of #45176.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":554006433,"public_id":45152,"url":"https://github.com/godotengine/godot/pull/45152","diff_url":"https://github.com/godotengine/godot/pull/45152.diff","patch_url":"https://github.com/godotengine/godot/pull/45152.patch","title":"PulseAudio: Remove get_latency() caching","state":"open","is_draft":false,"authored_by":{"id":5397662,"user":"Birdulon","avater":"https://avatars.githubusercontent.com/u/5397662?v=4","url":"https://github.com/Birdulon"},"created_at":"2021-01-13T08:17:17Z","updated_at":"2021-03-01T11:57:43Z","body":"Removes the caching on `AudioDriverPulseAudio::get_latency()` and slightly renames variable name `palat` to `pa_lat` to slightly improve readability.\r\n\r\n# Rationale #\r\nAs mentioned over at https://github.com/godotengine/godot/issues/38215#issuecomment-753456581 the API call `pa_stream_get_latency` returns different values at different times. Being able to sample it only once per program execution is a severe handicap when doing any profiling or using it for things such as latency compensation in rhythm games, as it can be wildly out if sampled under some load conditions.\r\n\r\nAs a somewhat hyperbolic analogy - what if you could only measure frame time once per program execution? What impact would that have on debugging and optimising your game?\r\nPersonally, I was about ready to tear apart my initialization routines when I noticed that my output latency number went from ~50ms to ~30ms on runs where I had breakpoints in initialization. Had I not investigated the engine source code I would have wasted considerable time chasing a dead end because of this cached value under the impression that Pulse was giving me conservative settings under certain start conditions!\r\n\r\n# Knock-on effects #\r\nMost of my testing has been on the 3.2 branch (Birdulon/godot/PAlatency) and all I've done on master is verify that it compiles and prints sensible values in a minimal project as I can't port my actual game to master due to unimplemented mesh rendering etc. (made this branch entirely because the default PR text told me to!)\r\nIn 3.2 I've observed no degraded performance with the Debugger's Monitors showing Audio Output Latency continuously during gameplay, however I noticed small bits of lag when I also had a label calling it 60 times a second in addition to the monitor. The documentation might need a small note to reflect that `AudioServer.get_output_latency()` and by extension `Performance.get_monitor(Performance.AUDIO_OUTPUT_LATENCY)` are potentially costly calls that should be used sparingly.\r\nIn master none of the performance monitors seem to draw for me, but I confirmed behavior with a label changing in `_process`.\r\nI stress again that it should be preferable for this function to return what it says it does, even at cost, even if approximate, rather than lie to the programmer for the sake of saving cycles.\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112907,4418392]},{"id":552526362,"public_id":45093,"url":"https://github.com/godotengine/godot/pull/45093","diff_url":"https://github.com/godotengine/godot/pull/45093.diff","patch_url":"https://github.com/godotengine/godot/pull/45093.patch","title":"Implemented switch from SCons to Meson to improve Godot's build performance","state":"open","is_draft":false,"authored_by":{"id":5601015,"user":"marstaik","avater":"https://avatars.githubusercontent.com/u/5601015?v=4","url":"https://github.com/marstaik"},"created_at":"2021-01-11T06:47:00Z","updated_at":"2021-08-07T21:21:32Z","body":"Proposal: https://github.com/godotengine/godot-proposals/issues/1797\r\n# Meson build for Godot\r\nThis is the initial implementation of the meson build system for godot.\r\n\r\n## Features\r\n* Out-of-source builds\r\n* Zero-second null builds on every platform\r\n* compile_commands.json\r\n  *  Use your favorite IDE/editor and get full intellisense/code linting\r\n* Windows ninja and vcproj file support\r\n* Thirdparty libraries cleanup\r\n* Revamped build code\r\n* Module database\r\n* Modifying (and in some cases rewritten) python build scripts\r\n* many other things...\r\n\r\n## Intro\r\nHow is meson different from scons? Scons is a Turing-complete build system built around python. It both controls *configuration* and *building*.\r\n\r\nMeson, on the other hand, is a *buildfile/makefile/ninja/vcproj* generator.\r\nIt assembles the appropriate files needed to run ninja, Visual Studio, make, and delegates the responsibility of building to system appropriate tooling.\r\n\r\n## Changes\r\nThe port to meson was an opportunity to not only move to a newer more supported build system, but also served as an opportunity to really clean up the build.\r\n\r\nThirdparty libraries are now built into their own static libraries, instead of being directly injected into godot's build files.\r\nDependencies are now tracked appropriately.\r\n\r\nBuild system cleanup has occured, centralizing/cleaning up as many `#defines` as possible.\r\n\r\nA ModuleDb file has been created, which holds all enabled modules, dependency information, and additional information.\r\nThis can also lead to even more flexibility in the future.\r\n\r\nThis has set up the future for potential dynamic linking for development speed. Once the main libraries such as *core, scene, editor* are isolated, we can begin `dllspec`'ing code and move towards dynamic linking.\r\n\r\n## Build Instructions\r\nHead over and download meson on your system. You will also need python3.\r\n\r\nGenerally, from the project root, you can initiate a build structure by typing: `meson ./build`, substituting `build` with your desired folder. Then, from your build folder, execute `meson compile`.\r\n\r\nYou can change build types by specifying `-Dbuildtype=[plain,debug,debugoptimized,release]`. The current default build is `debugoptimized`.\r\n\r\nAll of the available options can be found in `meson_options.txt`.\r\n\r\nI recommend reading through https://mesonbuild.com/SimpleStart.html for more information.\r\n\r\nHere is a quick example block:\r\n```bash\r\n~/godot$ meson ./build -Dbuildtype=debug\r\n~/godot$ cd ./build\r\n~/godot/build$ meson compile\r\n```\r\n\r\n### Windows\r\nFor now, you will need to run meson from an `Developer Command Prompt` (MSVC) to be able to use the msvc compilers.\r\nThere are plans to build in msvc detection for meson.\r\n\r\nDue to a bug in meson adding `/ZI` as a default option for debug, launching the editor/binary on windows debug is excruciatingly slow. I have worked around this for now by making the `plain` buildtype into `debug`, so just use `plain` for now. This should be fixed in meson master soon.\r\nExample: `meson ./build -Dbuildtype=plain`\r\n\r\n### Linux to Windows Cross Compile\r\nThere is a cross-file specified in `cross/` called `linux-mingw-win64`. Assuming you have mingw64 installed, you simply have to specify the cross file in your meson configuration step.\r\nExample: `meson ./build --cross-file cross/linux-mingw-wing64 -Dbuildtype=debug`\r\n\r\n## Things left to do...\r\n* Support for the other platforms\r\n* Modules `mono` and `webm` setup\r\n* Fixing the build-ci scripts\r\n  * this should be done using native-files or cross-files.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":552377738,"public_id":45085,"url":"https://github.com/godotengine/godot/pull/45085","diff_url":"https://github.com/godotengine/godot/pull/45085.diff","patch_url":"https://github.com/godotengine/godot/pull/45085.patch","title":"Allow multiple contextual editors opened at once","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2021-01-11T00:43:07Z","updated_at":"2021-03-31T13:24:59Z","body":"Godot has a known limitation that allows only one editor active at a time, which means you can't e.g. edit TextureRegion and ItemList items at the same time or TileMap and Shader etc. Main reason is that when you select a new node/resource, all previously opened editors are closed, because Godot focuses solely on that single item.\r\n\r\nThe biggest problem in solving this is ensuring that unused editors are closed. The approach I came up with is besides storing the list of currently used editors, store their owners. So e.g. you edit a Shader then the shader editor is opened, with the property as owner. If the property gets folded or removed from the inspector, shader editor's owner is no longer \"valid\" and it gets closed. \r\nOtherwise it remains opened. This way you can have opened any combination of editors at the same time and they properly get closed if not needed anymore.\r\n\r\n(That's the theory anyways. Submitting as draft, because closing editors doesn't fully work yet and I even managed to cause crash in `Object::cast_to()`. Hopefully I'll be able to finish this properly)\r\n\r\nFixes #28211\r\nFixes #32002\r\nFixes #28341\r\nFixes #47514\r\nAnd other similar issues if there are any.\r\n\r\nEDIT:\r\nAlso screenshot for hype\r\n![image](https://user-images.githubusercontent.com/2223172/104139886-a43fed80-53ae-11eb-912a-6ee4408fda7e.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418563]},{"id":552334289,"public_id":45080,"url":"https://github.com/godotengine/godot/pull/45080","diff_url":"https://github.com/godotengine/godot/pull/45080.diff","patch_url":"https://github.com/godotengine/godot/pull/45080.patch","title":"Add X509CertificateMbedTLS string save and string load.","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2021-01-10T19:23:46Z","updated_at":"2021-07-16T18:03:18Z","body":"The fingerprint RFCs for WebRTC are non-standard and make my head hurt. Read 4 sections and stopped.\r\n\r\nUse case:\r\n\r\n1. generate a rsa key cert \r\n2. send to signaling server the cert as a string\r\n3. start dltsl server\r\n4. have clients load from signaling server the cert from a string\r\n\r\nLoading from the file system makes no sense.\r\n\r\nTest project.\r\n\r\n[Crypto Key Project.zip](https://github.com/godotengine/godot/files/5793275/Crypto.Key.Project.zip)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":551948005,"public_id":45028,"url":"https://github.com/godotengine/godot/pull/45028","diff_url":"https://github.com/godotengine/godot/pull/45028.diff","patch_url":"https://github.com/godotengine/godot/pull/45028.patch","title":"[3.x] Fix Rayshape not working properly in move_and_slide","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-01-08T20:37:18Z","updated_at":"2021-08-06T11:24:33Z","body":"Adding a 3.2 version for PR #45005 because of `space_sw` renamed to `space_3d_sw` and `collision_solver_sw` renamed to `collision_solver_3d_sw`.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":550729679,"public_id":44982,"url":"https://github.com/godotengine/godot/pull/44982","diff_url":"https://github.com/godotengine/godot/pull/44982.diff","patch_url":"https://github.com/godotengine/godot/pull/44982.patch","title":"Handle inspector partial tree update on changed properties","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2021-01-06T23:44:00Z","updated_at":"2021-03-20T21:03:04Z","body":"Adds a cache to the inspector in order to update only modified properties when the property list changes and keep the previous controls whenever possible.\r\n\r\nThis allows calls to `property_list_changed_notify` to trigger inspector updates without resetting all properties.\r\n\r\n~Fixes #44854 (regression from #44326)~\r\nFixes #43238 (re-applies #44326, reverted because of regression #44854)\r\n\r\nAlso fixes change signal emission for multiline string properties (same as #44326 but for multiline strings).\r\n\r\nNote: The case with multiline string property when editing the string in the big popup window will require further changes. It currently closes and re-opens the popup when the inspector is updated (before this PR it was just closing it).","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":550392993,"public_id":44964,"url":"https://github.com/godotengine/godot/pull/44964","diff_url":"https://github.com/godotengine/godot/pull/44964.diff","patch_url":"https://github.com/godotengine/godot/pull/44964.patch","title":"Fix AnimationNodeStateMachinePlayback start() on nonexistent node","state":"open","is_draft":false,"authored_by":{"id":11162205,"user":"Dragoncraft89","avater":"https://avatars.githubusercontent.com/u/11162205?v=4","url":"https://github.com/Dragoncraft89"},"created_at":"2021-01-06T12:11:54Z","updated_at":"2021-01-20T11:21:15Z","body":"It's possible to get the AnimationNodeStateMachine into an invalid state, by calling `start()` with an invalid node name.\r\n\r\nThis floods the console with errors and I even managed to get crashes in my project, because it accessed invalid parameters (e.g. \"parameters/invalid_animation\").\r\n\r\nI couldn't reproduce the crashes in a minimal example project. Maybe there's a more complicated setup for the crash to appear. I confirmed with gdb that the crash happens when the code accesses invalid parameters.\r\n\r\nTest project: \r\n[anim_tree_bug.zip](https://github.com/godotengine/godot/files/5775673/anim_tree_bug.zip)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":547848739,"public_id":44885,"url":"https://github.com/godotengine/godot/pull/44885","diff_url":"https://github.com/godotengine/godot/pull/44885.diff","patch_url":"https://github.com/godotengine/godot/pull/44885.patch","title":"Clarify that duplicate only copies exported members and fails with a constructor","state":"open","is_draft":false,"authored_by":{"id":28286961,"user":"Jummit","avater":"https://avatars.githubusercontent.com/u/28286961?v=4","url":"https://github.com/Jummit"},"created_at":"2021-01-03T08:30:53Z","updated_at":"2021-01-05T15:53:52Z","body":"These are some quirks about `Resource.duplicate` I wish I knew before I used it. If one or both of these behaviors are a bug, I'll modify the PR and open an issue.\r\n\r\nI can't decide what the most helpful and informative sentence is, so here are some I came up with:\r\n\r\nMore concise, but also vague about if it works with default values:\r\n\r\n> Fails if the constructor has parameters without default values.\r\n\r\nProbably more helpful, but long (this is what the PR uses):\r\n\r\n> Copies correctly if there is no constructor or the constructor has default values, otherwise it fails.\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":547787022,"public_id":44879,"url":"https://github.com/godotengine/godot/pull/44879","diff_url":"https://github.com/godotengine/godot/pull/44879.diff","patch_url":"https://github.com/godotengine/godot/pull/44879.patch","title":"Allow exporting custom resources from/to any scripting language (GDScript, VisualScript, C#, NativeScript, PluginScript).","state":"open","is_draft":false,"authored_by":{"id":16217563,"user":"willnationsdev","avater":"https://avatars.githubusercontent.com/u/16217563?v=4","url":"https://github.com/willnationsdev"},"created_at":"2021-01-02T19:01:40Z","updated_at":"2021-08-18T07:10:53Z","body":"This PR adds the ability to export custom resources and arrays of custom resources of any language's type *from* an exported property defined in any language.\r\n\r\nCloses godotengine/godot-proposals#18, at least, in Godot 3.2.\r\n\r\n~~This builds on top of the commit in #44796, so that would have to be merged first.~~ This now includes the PR content of #44796 as of the 3.x rebase. For a detailed breakdown of the features commit-by-commit, see the 4.0 version (without GDScript changes) at #48201.\r\n\r\nThis is a continuation of work started by me and @JFonS and would replace his 3.2 PR which deals exclusively with GDScript (#41264).\r\n\r\nIt includes editor changes to support script classes as valid resource exports.\r\n\r\nBecause the definition of PropertyInfo objects is manual in VisualScript, NativeScript, and PluginScript, the feature works out-of-the-box for those languages.\r\n\r\nGDScript support was already implemented by JFonS's PR, but I've incorporated those changes and more.\r\n\r\nC# support is added as well. The `[Export]` attribute now supports the following forms...\r\n\r\n```cs\r\n// Infer hint and hint string (no changes)\r\n[Export]\r\n\r\n// Manually define hint and hint string. Only applies if valid hint cannot be calculated (no changes).\r\n[Export(PropertyHint.None, \"\")]\r\n\r\n// Applies custom resource name if applicable to the member's data type (new!).\r\n// Only necessary when exporting a Resource or List<Resource> for a non-C# resource type.\r\n[Export(\"ClassName\")]\r\n```\r\n\r\nDemo Project:\r\n[Demo_GP22_3_2_Resources.zip](https://github.com/godotengine/godot/files/5760748/Demo_GP22_3_2_Resources.zip)\r\n\r\nScreenshots:\r\n\r\nGDScript usage, exported properties contracted:\r\n![contracted_resources_gd_usage](https://user-images.githubusercontent.com/16217563/103464545-2159cb80-4cfa-11eb-8c22-e126ab81df31.png)\r\n\r\nGDScript usage, exported properties expanded:\r\n![expanded_resources_gd_usage](https://user-images.githubusercontent.com/16217563/103464551-2c146080-4cfa-11eb-8f69-8938eabfc8f7.png)\r\n\r\nNote I also have `export var gd_data: GDData` syntax supported as well (so you can infer the export type from the GDScript type hint).\r\n\r\nC# usage doing the same thing:\r\n![csharp_export_resources_gdlist](https://user-images.githubusercontent.com/16217563/103464559-3a627c80-4cfa-11eb-96ee-06cda26c2549.png)\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3377457,3857901,4038183,4417868,4418424,4418563,4418914]},{"id":547783848,"public_id":44876,"url":"https://github.com/godotengine/godot/pull/44876","diff_url":"https://github.com/godotengine/godot/pull/44876.diff","patch_url":"https://github.com/godotengine/godot/pull/44876.patch","title":"Fix properties still using a slash delimiter","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2021-01-02T18:27:29Z","updated_at":"2021-05-01T11:15:14Z","body":"As identified in #17558, there are a number of properties that are still using a slash `/` as a delimiter (Godot 2 style). Many of these properties appear in the inspector, but are difficult to access via scripts, and, in general, are not documented. However, most importantly, it's not even currently possible to create standard getters and setters for them.\r\n\r\nThis PR converts all(?) of the remaining properties that still use the old slash delimiter to use the underscore delimiter `_`, and includes updating some of the relevant documentation. It has been divided into two commits:\r\n1. Properties that already use the `ADD_PROPERTY` macros: see https://github.com/godotengine/godot/issues/17558#issue-305898418\r\n2. Properties that are built via code: see https://github.com/godotengine/godot/issues/17558#issuecomment-373709536\r\n\r\nThey are best reviewed separately, because they use different approaches. The first renames properties, but also sometimes renames the getters and setters and includes the necessary documentation updates. The second also involves creating the necessary groupings for the inspector and also updating the old style getters and setters.\r\n\r\nCloses #17558.\r\nPrerequisite for https://github.com/godotengine/godot-proposals/issues/2000 and for creating standard getters and setters for the other properties identified in https://github.com/godotengine/godot/issues/17558#issuecomment-373709536.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4038183,4417819,4417868,4418376,4418380,4418392,4418424,4418550,4418718,4418726,4418733]},{"id":547700690,"public_id":44867,"url":"https://github.com/godotengine/godot/pull/44867","diff_url":"https://github.com/godotengine/godot/pull/44867.diff","patch_url":"https://github.com/godotengine/godot/pull/44867.patch","title":"Type generic interface","state":"open","is_draft":false,"authored_by":{"id":9929531,"user":"SirPaws","avater":"https://avatars.githubusercontent.com/u/9929531?v=4","url":"https://github.com/SirPaws"},"created_at":"2021-01-02T02:01:29Z","updated_at":"2021-05-13T18:13:33Z","body":"I had originally posted this pull request to the godot_headers repository so now I'm (hopefully) posting this in the right place.\r\n\r\nI have added a type generic to both variant and pool arrays.\r\nThis is to makes it easier to use when running in c11 or newer standards.\r\n\r\nIt's a type generic interface so a bit like a template in c++ but it's c11 instead\r\nhttps://en.cppreference.com/w/c/language/generic\r\n```c \r\ngodot_variant ret;\r\n// instead of this\r\ngodot_variant_new_int(&ret, 10);\r\n// you can just say (in c11 and up)\r\ngodot_variant_new(&ret, 10);\r\n```\r\nI have only made interfaces where I think it would be most useful but there are a lot of other places where this could also help.\r\nlike for instance all the different vector types could have a common interface, but I think this would need further discussion","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3377457]},{"id":547531324,"public_id":44847,"url":"https://github.com/godotengine/godot/pull/44847","diff_url":"https://github.com/godotengine/godot/pull/44847.diff","patch_url":"https://github.com/godotengine/godot/pull/44847.patch","title":"Add ability to collapse animation track groups in AnimationTrackEditor","state":"open","is_draft":false,"authored_by":{"id":28285686,"user":"auderer","avater":"https://avatars.githubusercontent.com/u/28285686?v=4","url":"https://github.com/auderer"},"created_at":"2021-01-01T00:41:01Z","updated_at":"2021-01-14T18:57:45Z","body":"This PR allows the user to fold and unfold animation track groups, similar to functionality seen in other areas of the UI (Node tree, Inspector, Code Editor).\r\n\r\nThis was proposed as one part of this proposal: https://github.com/godotengine/godot-proposals/issues/1908\r\n\r\nIt's easy to end up with an unruly amount of animation tracks that are daunting to scroll through; I believe this feature greatly improves UX for navigating the animation editor.\r\n\r\nhttps://user-images.githubusercontent.com/28285686/103431509-edb65e80-4b9e-11eb-9675-6cd9fe9064f3.mp4\r\n\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":547504759,"public_id":44845,"url":"https://github.com/godotengine/godot/pull/44845","diff_url":"https://github.com/godotengine/godot/pull/44845.diff","patch_url":"https://github.com/godotengine/godot/pull/44845.patch","title":"Add optional ANGLE support for Windows desktop.","state":"open","is_draft":false,"authored_by":{"id":3101690,"user":"EIREXE","avater":"https://avatars.githubusercontent.com/u/3101690?v=4","url":"https://github.com/EIREXE"},"created_at":"2020-12-31T20:39:56Z","updated_at":"2021-08-06T11:24:33Z","body":"\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nThis commits adds an optional support for ANGLE in 3.2, this can be used by placing the angle source tree at `thirdparty/angle`, building it in release mode (with `out/Release` as the output) and using the `use_angle=yes` option when building.\r\n\r\nThe rationale behind this is that usage of ANGLE (particularly with the vulkan backend) gives a considerable performance boost on Windows in most cases, and in some cases (NVIDIA Optimus for example) might even stabilize frametimes and make games playable that weren't before.\r\n\r\nThe likely reason behind this is that OpenGL drivers on windows are just in a very bad shape, from my own experimentation my game gets an over 300-400 FPS boost (up from ~200) during gameplay, and many users (again, particularly those on mobile platforms) have reported very big improvements in speed and frametime.\r\n\r\nThe code has been written in such a way that it will try to fallback through different backends, in order:\r\n\r\n- Vulkan\r\n- D3D11\r\n- OpenGL\r\n\r\nThis is done unless the `--angle-backend` paremeter is specified.\r\n\r\nIn my opinion this is a very important for those games that will remain on 3.2 and might never jump to 4.0.\r\n\r\nMany OpenGL games (and software) use ANGLE in production successfully (see https://en.wikipedia.org/wiki/ANGLE_(software)#Software_utilizing_ANGLE).\r\n\r\nThe reason why this commit is done against the 3.2 branch specifically is because it's unecessary in 4.0, as that already runs on Vulkan natively.\r\n\r\nThis effort was started by me, with some improvements done by @fire , I finished the job by making it fully optional.\r\n\r\nHappy new year!\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1725.*","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112906,3609449,4418518]},{"id":547504558,"public_id":44844,"url":"https://github.com/godotengine/godot/pull/44844","diff_url":"https://github.com/godotengine/godot/pull/44844.diff","patch_url":"https://github.com/godotengine/godot/pull/44844.patch","title":"Add Listener2D","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-12-31T20:38:22Z","updated_at":"2021-03-19T00:23:53Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/49\r\n\r\nLast semi-big feature of this year, hehe\r\n\r\nHere's some test scene:\r\n[Listener2DTest.zip](https://github.com/godotengine/godot/files/5758234/Listener2DTest.zip)\r\n\r\nThis is simpler than Listener3D. When you add Listener3D, it's added to some listener list and when you remove it, the next one is made as current. With 2D listener there's only one and you set it as current and only then it's active. If there's no active listener, center of screen is used as before.\r\n\r\n~~Still needs docs and probably some tests/cleanup, so submitting as draft for now.~~","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4418550,4418718,4418726,4418914]},{"id":547088324,"public_id":44827,"url":"https://github.com/godotengine/godot/pull/44827","diff_url":"https://github.com/godotengine/godot/pull/44827.diff","patch_url":"https://github.com/godotengine/godot/pull/44827.patch","title":"Zero-initialize new elements when resizing Vector","state":"open","is_draft":false,"authored_by":{"id":17316999,"user":"Demindiro","avater":"https://avatars.githubusercontent.com/u/17316999?v=4","url":"https://github.com/Demindiro"},"created_at":"2020-12-30T21:10:34Z","updated_at":"2021-01-01T21:39:51Z","body":"Related: https://github.com/godotengine/godot-proposals/issues/2023\r\n\r\nI decided to zero-initialize elements in `resize()` instead as it requires the least changes. I'm not sure if it has any noticeable impact on performance though.\r\n\r\nTest code:\r\n\r\n```gdscript\r\nextends MainLoop\r\n\r\nfunc _process(_delta: float) -> bool:\r\n\tvar arr := PackedByteArray()\r\n\tarr.resize(10)\r\n\tprintt(\"A\", var2str(arr))\r\n\tfor i in 10:\r\n\t\tarr[i] = i\r\n\tprintt(\"B\", var2str(arr))\r\n\tarr.resize(20)\r\n\tprintt(\"C\", var2str(arr))\r\n\tfor i in 10:\r\n\t\tarr[i + 10] = i + 10\r\n\tprintt(\"D\", var2str(arr))\r\n\treturn true\r\n```\r\n\r\nOutput before (may vary):\r\n```\r\nA\tPackedByteArray( 218, 164, 1, 94, 15, 84, 92, 10, 136, 52 )\r\nB\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 )\r\nC\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 239, 16, 248, 205, 155, 46, 0, 0, 0, 0 )\r\nD\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 )\r\n```\r\n\r\nOutput after:\r\n```\r\nA\tPackedByteArray( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )\r\nB\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 )\r\nC\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )\r\nD\tPackedByteArray( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 )\r\n```\r\n\r\nCloses: #43033","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":547002329,"public_id":44813,"url":"https://github.com/godotengine/godot/pull/44813","diff_url":"https://github.com/godotengine/godot/pull/44813.diff","patch_url":"https://github.com/godotengine/godot/pull/44813.patch","title":"Initialize class variables with default values in servers/","state":"open","is_draft":false,"authored_by":{"id":39989901,"user":"valdaarhun","avater":"https://avatars.githubusercontent.com/u/39989901?v=4","url":"https://github.com/valdaarhun"},"created_at":"2020-12-30T16:10:50Z","updated_at":"2021-05-06T09:30:37Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nPart of #43636 \r\n\r\nAs of now, I have only finished working on the files in the `servers/audio/` directory.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112910,3112912,3388402,3609449,4417777,4418392,4418726,4418923]},{"id":546713225,"public_id":44803,"url":"https://github.com/godotengine/godot/pull/44803","diff_url":"https://github.com/godotengine/godot/pull/44803.diff","patch_url":"https://github.com/godotengine/godot/pull/44803.patch","title":"Fix overwriting of Node3D's local space transform","state":"open","is_draft":false,"authored_by":{"id":22248849,"user":"mrushyendra","avater":"https://avatars.githubusercontent.com/u/22248849?v=4","url":"https://github.com/mrushyendra"},"created_at":"2020-12-30T03:38:55Z","updated_at":"2021-02-22T20:35:19Z","body":"Currently, when the `DIRTY_LOCAL` flag is set and a new transform is supplied using `set_transform`, the new transform may be overwritten the next time it is read, because the transform is reset using the Node3D's previous rotation and scale, even though the new transform should supersede those.\r\n\r\nThis PR modifies when the `DIRTY_LOCAL` flag is set to prevent a transform applied using `set_transform` being overwritten by any previous calls that changed the node's rotation, translation or scale.\r\n\r\nCloses #43130\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":546360035,"public_id":44783,"url":"https://github.com/godotengine/godot/pull/44783","diff_url":"https://github.com/godotengine/godot/pull/44783.diff","patch_url":"https://github.com/godotengine/godot/pull/44783.patch","title":"Add `OS.get_hostname()` method to get the machine's hostname","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-29T07:07:48Z","updated_at":"2021-02-12T12:17:52Z","body":"This closes https://github.com/godotengine/godot-proposals/issues/2027.\r\n\r\n## TODO\r\n\r\n- [x] Test on Linux.\r\n- [ ] Test on Windows.\r\n- [ ] Test on macOS.\r\n\r\nTesting is welcome :slightly_smiling_face:\r\nYou can use the builds on the [Checks](https://github.com/godotengine/godot/pull/44783/checks) tab for testing.\r\n\r\n## Test script\r\n\r\n```gdscript\r\nfunc _ready():\r\n\tprint(OS.get_hostname())\r\n````","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":546239409,"public_id":44772,"url":"https://github.com/godotengine/godot/pull/44772","diff_url":"https://github.com/godotengine/godot/pull/44772.diff","patch_url":"https://github.com/godotengine/godot/pull/44772.patch","title":"Add multi-channel SDF font generation and rendering support.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2020-12-28T21:11:52Z","updated_at":"2021-08-19T15:25:10Z","body":"Support for M(T)SDF font rendering. Font texture is generated using https://github.com/Chlumsky/msdfgen.\r\n\r\n<details>\r\n  <summary>Zoom video</summary>\r\n\r\nhttps://user-images.githubusercontent.com/7645683/109620721-debe3f00-7b42-11eb-870b-c2207812a03f.mov\r\n\r\n</details>\r\n\r\n<img width=\"1112\" alt=\"Screenshot 2021-03-02 at 12 06 49\" src=\"https://user-images.githubusercontent.com/7645683/109632554-d28cae80-7b4f-11eb-83c7-35aeaf87a0ab.png\">\r\n\r\n*Logos on background are rendered from 128x128 custom MSDF image.*\r\n\r\n- Added caching for multiple font variations.\r\n- Added font importing, with character range pre-rendering option, font are imported to `.fontdata` (and set of textures) which store all its properties (see file description below). It's still possible to load any of `.ttf` / `.otf` / `.font` / `.fnt` files directly.\r\n- Adds option to convert dynamic fonts to bitmap (removes source font file from import, which will disable advanced shaping and OpenType features for the font, and limits it to pre-rendered glyphs only).\r\n- Adds option to override global oversampling value (set to 0 to restore default behavior).\r\n- Adds M(T)SDF glyph and outline font support using combined multi-channel and true signed distance textures:\r\n![Screenshot 2021-02-25 at 15 14 05](https://user-images.githubusercontent.com/7645683/109277471-0ef29e80-7820-11eb-9b00-13ad2aeaa712.png)\r\n\r\n### Import options:\r\n\r\n`antialiased` - ignored for MSDF and bitmap fonts, if selected uses 8-bit greyscale rendering, otherwise uses 1-bit rendering.\r\n`force_autohinter` - if selected prefers FreeType autohinter over font built-in hinter.\r\n`msdf` - enables MSDF generation for dynamic fonts (or indicates that source is MSDF for bitmap fonts). MSDF generation is slow, but allows to use same texture for all fonts sizes, with almost no extra rendering cost.\r\n`msdf_px_range` - MSDF pixel range (range around the shape between the minimum and maximum representable distance).\r\n`oversampling` - font oversampling factor, ignored for MSDF and bitmap, if set to 0 global value is used.\r\n`hintinhg` - ignored for bitmap fonts.\r\n`base_variation` - default font size and variation, comma separated list of \"size\", \"outline_size\" or OpenType variation tags.\r\n`convert_to_bitmap` - ignored for bitmap fonts, removes dynamic font source file form import (disables OpenType features, and limits font to pre-rendered glyphs only).\r\n`extra_spacing_*` - extra spacing for glyphs and spaces.\r\n`preload\\ranges` - list of character ranges to preload in `'A'-'Z'`, `U+0000-U+0000` or `0x0000-0x0000` format, or glyph ranges in `G+0000-G+0000` format.\r\n`support_overrides` - list of overrides of language and scripts, can be used to increase or decrease font fallback usage priority for specific language or script.\r\n\r\n### Supported import variants:\r\n\r\nTrueType / OpenType source -> pre-renders glyphs and outlines for each size, original font file is preserved in cache and used for OpenType features, shaping and rendering missing glyphs.\r\nTrueType / OpenType source + `msdf` selected -> Same as above but pre-renders glyphs as MSDF for one size only. Outlines are generated from the same MSDF. Generating MSDF require outline and will not work with bitmap fonts (e.g. emoji fonts).\r\nTrueType / OpenType source + `convert_to_bitmap` selected -> Same as above, removes original font file from cache (font have no OpenType features and limited to pre-rendered glyphs only).\r\nAngelCode bitmap font -> font is copied to cache as is (`msdf` flag should be set manually, if source image is MSDF or M(T)SDF).\r\n\r\n### \".fontdata\" file format:\r\n\r\n```\r\n==============================================================================================================================================\r\ntype                         name                         description / values\r\n==============================================================================================================================================\r\nU32                          magic                        ASCII \"GDFT\"\r\nU8                           version_major                1\r\nU8                           version_minor                0\r\nU32                          font_type                    ASCII \"BMP0\" - bitmap font, \"DYN0\" - dynamic font\r\nU32                          font_data_size               size of dynamic font data in memory (always 0 for bitmap fonts)\r\nif font_data_size > 0:\r\n    U32                      font_comp_size               size of dynamic font data in file\r\n    U8[font_comp_size]       font_data                    ZSTD compressed dynamic font data (source ttf/otf file)\r\nU8                           hinting                      0 - none, 1 - light, 2 - full (ignored for bitmap fonts)\r\nU8                           msdf                         0 - non MSDF, 1 - MSDF\r\nU8                           autohinter                   0 - use font built-in hinting, 1 - use auto hinter (ignored for bitmap fonts)\r\nU8                           antialiased                  0 - 1-bit rendering, 1 - 8-bit rendering (ignored for MSDF and bitmap fonts)\r\nU8                           spacing_glyph                extra glyph spacing in pixels\r\nU8                           spacing_space                extra space spacing in pixels\r\nF32                          oversampling                 oversampling factor (if <= 0 - global value is used, ignored for MSDF and bitmap fonts)\r\nU32                          lang_support_overrides       number of language support overrides\r\n\"lang_support_overrides\" records:\r\n    U32                      lang_size                    length of language code string\r\n    U8[lang_size]            lang_code                    language ISO code as UTF-8 string\r\n    U8                       lang_enable                  0 - language not supported, 1 - language supported\r\nU32                          script_support_overrides     number of script support overrides\r\n\"script_support_overrides\" records:\r\n    U32                      script_size\r\n    U8[script_size]          script_code                  script ISO code as UTF-8 string\r\n    U8                       script_enable                0 - script not supported, 1 - script supported\r\nF32                          rect_margin                  extra spacing between glyphs in texture (ignored for bitmap fonts)\r\nF32                          px_range                     MSDF pixel range (ignored for non MSDF fonts)\r\nU32                          base_variation_tags          number of variation tags in base variation\r\n\"base_variation_tags\" records:\r\n    U32                      variation_tag                OpenType variation tag\r\n    F64                      variation_value              value for variation tag\r\nU16                          base_size                    base font size\r\nU32                          cached_variations            number of cached font variants (always 1 for bitmap fonts)\r\n\"cached_variations\" records:\r\n    U32                      variation_tags               number of variation tags in this variation\r\n    \"variation_tags\" records:\r\n        U32                  variation_tag                OpenType variation tag\r\n        F64                  variation_value              value for variation tag\r\n    U32                      cached_sizes                 number of cached font sizes for this variation (always 1 for bitmap and MSDF fonts)\r\n    \"cached_sizes\" records:\r\n        U32                  size                         font size (always equal to base_size for bitmap fonts)\r\n        F32                  ascent                       font ascent\r\n        F32                  descent                      font descent\r\n        F32                  height                       font height\r\n        F32                  underline_position           font underline position\r\n        F32                  underline_thickness          font underline thickness\r\n        U32                  textures                     number of textures\r\n        \"textures\" records:\r\n            U32              width                        texture width\r\n            U32              height                       texture height\r\n            U32              offsets                      number of texture offsets\r\n            U16[offsets]     offset_value                 texture offset values\r\n            U32              name_size\r\n            U8[name_size]    texture_name                 name of texture file\r\n        U32                  glyphs                       number of cached glyphs\r\n        \"glyph\" records:\r\n            U32              index                        glyph index (for dynamic fonts) or UTF-32 code (for bitmap fonts)\r\n            U8               found                        0 - glyph is not in the font (rest of the glyph data ignored) , 1 - glyph is in the font\r\n            U16              texture_idx                  index of texture in the \"textures\" array\r\n            F32              rect_pos_x\r\n            F32              rect_pos_y                   glyph offset from the baseline\r\n            F32              rect_size_x\r\n            F32              rect_size_x                  glyph size\r\n            F32              uv_pos_x\r\n            F32              uv_pos_y\r\n            F32              uv_size_x\r\n            F32              uv_size_x                    glyph position and size in the texture\r\n            F32              advance_x                    glyph advance for horizontal layout\r\n            F32              advance_y                    glyph advance for vertical layout\r\n        U32                  kerning_size                 number of kerning pairs (always 0 for dynamic fonts)\r\n        \"kerning_size\" records:\r\n            U32              glyph_index_a                first character UTF-32 code\r\n            U32              glyph_index_b                second character UTF-32 code\r\n            U32              value                        kerning offset value\r\n==============================================================================================================================================\r\n```\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/2021 and https://github.com/godotengine/godot/issues/28045 (by implementing per-font oversampling override).*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3377457,3609449,4418518,4418733,4418914,4418923]},{"id":545812726,"public_id":44727,"url":"https://github.com/godotengine/godot/pull/44727","diff_url":"https://github.com/godotengine/godot/pull/44727.diff","patch_url":"https://github.com/godotengine/godot/pull/44727.patch","title":"Rect2: Fix has_point on bottom and right borders","state":"open","is_draft":false,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2020-12-27T14:12:36Z","updated_at":"2020-12-28T05:39:33Z","body":"Improve documentation to clarify things, and improve tests.\r\n\r\n`has_point` still breaks with negative sized rectangles (#37617).\r\n\r\nFixes #44723.\r\n\r\n-----\r\n\r\nSo I just spent an hour improving tests and documentation, and then when writing the commit message I realized that this might not have been a bug in the first place, and that this change is possibly wrong (yet the improved tests and docs can still be salvaged).\r\n\r\nThe main issue with this change is that multiple Rect2's can contain the same points, which might have implications in rendering/batching and tilemaps (CC @groud @lawnjelly). That's the case already with AABB so I thought it's good to make it behave the same, but it might be more problematic in 2D.\r\n\r\nSo this should be discussed, and if we think it's better to include all borders (and not just top and left), this can be merged. Otherwise this should be clarified further in the documentation.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":545810697,"public_id":44726,"url":"https://github.com/godotengine/godot/pull/44726","diff_url":"https://github.com/godotengine/godot/pull/44726.diff","patch_url":"https://github.com/godotengine/godot/pull/44726.patch","title":"Ignore Bullet collision contact points with distance = 0","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-27T13:54:25Z","updated_at":"2020-12-27T18:23:46Z","body":"Currently, Godot processes all Bullet collision manifolds as long as the distance is less than or equal to 0 i.e. a collision has occurred. When CCD is enabled, Bullet creates an additional collision manifold with the CCD results. This manifold sets the collision point distance to 0 if a collision occurs. Therefore, when a CCD collision is detected, this manifold is processed too, when it shouldn't.\r\n\r\nThis PR ensures that Godot doesn't process Bullet collision manifolds' contact points with a distance of 0; so it won't process the additional collision manifold created by CCD.\r\n\r\nFixes #44644.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":545803970,"public_id":44725,"url":"https://github.com/godotengine/godot/pull/44725","diff_url":"https://github.com/godotengine/godot/pull/44725.diff","patch_url":"https://github.com/godotengine/godot/pull/44725.patch","title":"Delete the implicitly created CharProxy<T> copy constructor","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-27T12:51:39Z","updated_at":"2021-02-25T17:29:07Z","body":"As identified by [lgtm](https://lgtm.com/projects/g/godotengine/godot/?mode=tree&ruleFocus=2165180572&id=cpp%2Frule-of-two), `CharProxy` has an assignment operator, but no copy constructor. To avoid differences in behaviour, which would be unexpected, they should either both be created or deleted.\r\n\r\nHowever, `CharProxy` is just a helper class to manipulate underlying data. The assignment operator is used to specifically change an element in the underlying data, but not the reference to the underlying data. There is no default constructor, and neither would a copy constructor make sense. So this PR explicitly deletes the copy constructor to ensure a compiler created one can never be used.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":545750657,"public_id":44716,"url":"https://github.com/godotengine/godot/pull/44716","diff_url":"https://github.com/godotengine/godot/pull/44716.diff","patch_url":"https://github.com/godotengine/godot/pull/44716.patch","title":"Add an `OS.get_processor_name()` method","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-27T01:09:39Z","updated_at":"2021-05-20T16:49:53Z","body":"This method can be used to get the CPU model name. It can be used in conjunction with `RenderingServer.get_video_adapter_name()` and `RenderingServer.get_video_adapter_vendor()` for annotating benchmarks and automatic graphics quality configuration.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1660.\r\n\r\n**Test project:** [test_processor_name.zip](https://github.com/godotengine/godot/files/6053148/test_processor_name.zip) (`master` branch only)\r\n\r\n## Example\r\n\r\n```gdscript\r\nfunc _ready():\r\n    print(OS.get_processor_name())\r\n```\r\n\r\nOn my Linux machine, this results in:\r\n\r\n```\r\nIntel(R) Core(TM) i7-6700K CPU @ 4.00GHz\r\n```\r\n\r\n## TODO\r\n\r\n- [ ] Implement `OS.get_processor_name()` on Android and HTML5 (if possible). This can be done in a future PR.\r\n\r\nVolunteers are welcome for those tasks :slightly_smiling_face: ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,3112906,3112907,3112910,4418914]},{"id":545734856,"public_id":44708,"url":"https://github.com/godotengine/godot/pull/44708","diff_url":"https://github.com/godotengine/godot/pull/44708.diff","patch_url":"https://github.com/godotengine/godot/pull/44708.patch","title":"Improve area method descriptions","state":"open","is_draft":false,"authored_by":{"id":6080368,"user":"skyace65","avater":"https://avatars.githubusercontent.com/u/6080368?v=4","url":"https://github.com/skyace65"},"created_at":"2020-12-26T21:11:56Z","updated_at":"2020-12-29T16:40:40Z","body":"Improves the description of the methods `get_overlapping_areas()` and `get_overlapping_bodies()` for Area2D and Area3D. It now specifies that it only returns nodes in the same collision layer or collision mask. Closes https://github.com/godotengine/godot-docs/issues/4446\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":545512416,"public_id":44670,"url":"https://github.com/godotengine/godot/pull/44670","diff_url":"https://github.com/godotengine/godot/pull/44670.diff","patch_url":"https://github.com/godotengine/godot/pull/44670.patch","title":"Add unit tests for Translation and implement override of get_message","state":"open","is_draft":false,"authored_by":{"id":397177,"user":"o01eg","avater":"https://avatars.githubusercontent.com/u/397177?v=4","url":"https://github.com/o01eg"},"created_at":"2020-12-25T04:27:29Z","updated_at":"2021-07-01T23:10:46Z","body":"This PR switches `Translation::get_message` and `Translation::get_plural_message` virtual call to GDScript compatible call. Also it introduces unit test for translations.\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/1926","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":545464646,"public_id":44667,"url":"https://github.com/godotengine/godot/pull/44667","diff_url":"https://github.com/godotengine/godot/pull/44667.diff","patch_url":"https://github.com/godotengine/godot/pull/44667.patch","title":"fix gdscript code completion crash","state":"open","is_draft":false,"authored_by":{"id":748770,"user":"RevoluPowered","avater":"https://avatars.githubusercontent.com/u/748770?v=4","url":"https://github.com/RevoluPowered"},"created_at":"2020-12-24T21:15:14Z","updated_at":"2021-08-06T06:42:35Z","body":"Fixes GDScript crashing engine when you try to use completion with invalid characters.\r\n\r\nreproduction of bug:\r\n\r\nput this in one of your GDScript scripts.\r\n\r\n```gdscript\r\n@export var something = $./\r\n```\r\n\r\nThe PR fixes the behaviour.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":545398510,"public_id":44654,"url":"https://github.com/godotengine/godot/pull/44654","diff_url":"https://github.com/godotengine/godot/pull/44654.diff","patch_url":"https://github.com/godotengine/godot/pull/44654.patch","title":"Improve EditorSpinSlider dragging with more precision on demand","state":"open","is_draft":false,"authored_by":{"id":13400398,"user":"gongpha","avater":"https://avatars.githubusercontent.com/u/13400398?v=4","url":"https://github.com/gongpha"},"created_at":"2020-12-24T14:57:47Z","updated_at":"2021-07-20T19:11:21Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nRelated [godotengine/godot-proposals#1506](https://github.com/godotengine/godot-proposals/issues/1506)\r\n\r\nInspired from Garry's Mod. This made default inspector sliders to have more control of precision and scale.\r\n\r\nDepend on each slider option. If they allowed value to be greater and lesser, Steps and using rounded value.\r\n\r\n![ภาพ](https://user-images.githubusercontent.com/13400398/103095206-62831900-4632-11eb-8bc4-b45f6a0be987.gif)\r\n\r\n![ภาพ](https://user-images.githubusercontent.com/13400398/103095139-2354c800-4632-11eb-9016-4cdc4231c97f.png)\r\n![ภาพ](https://user-images.githubusercontent.com/13400398/103095132-19cb6000-4632-11eb-8164-d6a1e0197c5e.png)\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1506.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":544344764,"public_id":44596,"url":"https://github.com/godotengine/godot/pull/44596","diff_url":"https://github.com/godotengine/godot/pull/44596.diff","patch_url":"https://github.com/godotengine/godot/pull/44596.patch","title":"Cleanup unused engine code v2","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-12-22T20:15:49Z","updated_at":"2020-12-23T00:12:52Z","body":"Part of #26780\r\nFollow-up to #44128\r\n\r\nI was less careful in this PR, but even if method seems \"useful\", shouldn't hurt to remove it if it was never used or it's not used anymore.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":544340553,"public_id":44594,"url":"https://github.com/godotengine/godot/pull/44594","diff_url":"https://github.com/godotengine/godot/pull/44594.diff","patch_url":"https://github.com/godotengine/godot/pull/44594.patch","title":"Add command-line parser class","state":"open","is_draft":false,"authored_by":{"id":22453358,"user":"Shatur","avater":"https://avatars.githubusercontent.com/u/22453358?v=4","url":"https://github.com/Shatur"},"created_at":"2020-12-22T20:07:54Z","updated_at":"2021-08-14T13:03:01Z","body":"Continuation of #26213.\r\n\r\nThank you a lot to @lupoDharkael for the initial work! I updated the code to the latest master and heavily redone the previous implementation. What I added:\r\n\r\n* Usage generation (can be disabled).\r\n* Support for positional arguments (it's better to support it instead of manually checking for scene / script).\r\n* Multiply arguments support.\r\n* Support for default values.\r\n* Support for required arguments (checked automatically after calling `notify()`)\r\n* Support for compound arguments (`-abc`), sticky arguments (`-dvalue`), adjacent arguments (`-d=value`) (all this things can be disabled).\r\n* The ability to specify allowed values lists (syntactic sugar for checkers).\r\n* Support for any number of flags in a single command.\r\n* Support for use with different prefixes (e.g. `/command`, `+command`, `-command`, etc, this can be useful for chat commands parsing, for example). \r\n* Custom actions on parsing via `parsed` signal.\r\n* Support for arguments that can be specified multiply times.\r\n* The ability to configure help message padding / size.\r\n* Tests.\r\n* General API improvements.\r\n\r\nSimple demo project: [TestParser.zip](https://github.com/godotengine/godot/files/5731737/TestParser.zip)\r\n\r\nCurrent API looks similar to [Qt](https://doc.qt.io/qt-5/qcommandlineparser.html) (API) and [Boost.program_options](https://www.boost.org/doc/libs/1_75_0/doc/html/program_options.html) (features).\r\n\r\nBut I haven't made any changes to `main.cpp`. I think it will be better to agree on API first and merge it as a class for GDScript because it can be used as is. Then, I will send a separate PR with changes to `main.cpp` and then another PR with the ability to disable engine arguments to override with custom one. I think that this approach will simplify review process.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112907,3112909,3112912,3609449,4417819,4418392,4418403,4418518,4418558,4418733,4418914]},{"id":543853618,"public_id":44583,"url":"https://github.com/godotengine/godot/pull/44583","diff_url":"https://github.com/godotengine/godot/pull/44583.diff","patch_url":"https://github.com/godotengine/godot/pull/44583.patch","title":"XBUTTON1 and XBUTTON2 to switch between scripts","state":"open","is_draft":false,"authored_by":{"id":49965612,"user":"finalwarp","avater":"https://avatars.githubusercontent.com/u/49965612?v=4","url":"https://github.com/finalwarp"},"created_at":"2020-12-22T04:12:55Z","updated_at":"2020-12-24T20:11:10Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nXBUTTON1 and XBUTTON2 can be used in the script editor, method overview item list and scripts list.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":543140280,"public_id":44557,"url":"https://github.com/godotengine/godot/pull/44557","diff_url":"https://github.com/godotengine/godot/pull/44557.diff","patch_url":"https://github.com/godotengine/godot/pull/44557.patch","title":"updating toggle comment behaviour","state":"open","is_draft":false,"authored_by":{"id":9964886,"user":"iwek7","avater":"https://avatars.githubusercontent.com/u/9964886?v=4","url":"https://github.com/iwek7"},"created_at":"2020-12-20T22:17:42Z","updated_at":"2020-12-28T23:44:37Z","body":"Draft implementation for https://github.com/godotengine/godot-proposals/issues/2005. Not sure if using is_line_comment method of `text_edit` is proper (it breaks if line begins with /) but I like idea of encapsulating idea of checking if line is comment in `text_edit` - so I can either use this method or write new one.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":542933271,"public_id":44519,"url":"https://github.com/godotengine/godot/pull/44519","diff_url":"https://github.com/godotengine/godot/pull/44519.diff","patch_url":"https://github.com/godotengine/godot/pull/44519.patch","title":"Initialize shader uniforms by default","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2020-12-19T14:24:50Z","updated_at":"2020-12-20T15:48:33Z","body":"Fix #44454","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":542566369,"public_id":44498,"url":"https://github.com/godotengine/godot/pull/44498","diff_url":"https://github.com/godotengine/godot/pull/44498.diff","patch_url":"https://github.com/godotengine/godot/pull/44498.patch","title":"Implemented microsoft media foundation on Camera_win.cpp","state":"open","is_draft":false,"authored_by":{"id":7234222,"user":"choonway","avater":"https://avatars.githubusercontent.com/u/7234222?v=4","url":"https://github.com/choonway"},"created_at":"2020-12-18T14:12:11Z","updated_at":"2021-08-06T11:24:33Z","body":"Proof of concept for webcam on windows on media foundation based on their examples (MFCaptureD3D)\r\nquality is Frankenstein.\r\nnot able to test on master branch due to bugs (texture related?)\r\ntest files can be obtained from https://github.com/choonway/godot-camera_win-test\r\n\r\ntested to work on camera on HTC Vive.\r\nIf camera can't be accessed by camera app on windows, chances are that it won't work.\r\n\r\nlimitations:\r\nvirtual cameras and some webcams don't work (HTC Vive Pro Eye cameras)\r\nhotplug not working/implemented\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3388402]},{"id":542462425,"public_id":44492,"url":"https://github.com/godotengine/godot/pull/44492","diff_url":"https://github.com/godotengine/godot/pull/44492.diff","patch_url":"https://github.com/godotengine/godot/pull/44492.patch","title":"Added a test suite for the Plane object.","state":"open","is_draft":false,"authored_by":{"id":20531258,"user":"cabinboy1031","avater":"https://avatars.githubusercontent.com/u/20531258?v=4","url":"https://github.com/cabinboy1031"},"created_at":"2020-12-18T10:45:44Z","updated_at":"2021-01-05T00:10:15Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nSome parts are not implemented as I don't know how to test for the Variant bindings. This is also my first go at contributing as well, and i am not quite sure if the values i chose as test inputs and outputs are useful for the context of the class. It definitely needs tweaking and finishing up by someone with knowledge in vector math to give more helpful values.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":542261880,"public_id":44483,"url":"https://github.com/godotengine/godot/pull/44483","diff_url":"https://github.com/godotengine/godot/pull/44483.diff","patch_url":"https://github.com/godotengine/godot/pull/44483.patch","title":"Correctly handle null characters if the length is known","state":"open","is_draft":false,"authored_by":{"id":17316999,"user":"Demindiro","avater":"https://avatars.githubusercontent.com/u/17316999?v=4","url":"https://github.com/Demindiro"},"created_at":"2020-12-18T03:22:54Z","updated_at":"2020-12-21T13:09:08Z","body":"Closes #44478","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":541532104,"public_id":44441,"url":"https://github.com/godotengine/godot/pull/44441","diff_url":"https://github.com/godotengine/godot/pull/44441.diff","patch_url":"https://github.com/godotengine/godot/pull/44441.patch","title":"Disallow integer vector multiplication/division with floats","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-12-17T00:58:18Z","updated_at":"2021-08-10T20:31:25Z","body":"Fixes-ish #44408 by disallowing the operation and requiring users to be explicit. Instead of this:\r\n\r\n```gdscript\r\nprint(Vector2i(256, 256) * 0.9) # In master prints (0, 0), which may not be intentional.\r\n```\r\n\r\nYou can do this:\r\n\r\n```gdscript\r\nprint(Vector2i(Vector2(256, 256) * 0.9)) # Prints (230, 230)\r\n```\r\n\r\nOr this:\r\n\r\n```gdscript\r\nprint(Vector2(256, 256) * 0.9) # Prints (230.4, 230.4), actually 230.399994 due to imprecision.\r\n```\r\n\r\nOr this:\r\n\r\n```gdscript\r\nprint(Vector2i(256, 256) * int(0.9)) # Prints (0, 0)\r\n```","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":541520802,"public_id":44440,"url":"https://github.com/godotengine/godot/pull/44440","diff_url":"https://github.com/godotengine/godot/pull/44440.diff","patch_url":"https://github.com/godotengine/godot/pull/44440.patch","title":"Use `int64_t` instead of `long` for consistency across platforms","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-17T00:29:08Z","updated_at":"2021-02-12T12:15:59Z","body":"`long` means different things on Windows and UNIX. It's equal to `int32_t` on Windows and `int64_t` on UNIX.\n\nThis closes #25652.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":540952024,"public_id":44420,"url":"https://github.com/godotengine/godot/pull/44420","diff_url":"https://github.com/godotengine/godot/pull/44420.diff","patch_url":"https://github.com/godotengine/godot/pull/44420.patch","title":"Added ability to have Tabs in TabContainer at bottom","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-12-16T07:18:56Z","updated_at":"2020-12-16T08:21:36Z","body":"Exposed this functionality to GD Script (as expected).\r\nImages for the \"bottom\" tabs were added to the default theme. The editor theme was also changed to have the option of using bottom-aligned tabs. The textures added are just the existing textures flipped upside down.\r\nAlso simplified some logic to remove unnecessary duplication of code and nested if/else statements.\r\n\r\n![tab_container_bottom_tabs](https://user-images.githubusercontent.com/41730826/102317066-afc41280-3fc2-11eb-90a6-4a6535a46998.gif)\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/1986","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":540411722,"public_id":44399,"url":"https://github.com/godotengine/godot/pull/44399","diff_url":"https://github.com/godotengine/godot/pull/44399.diff","patch_url":"https://github.com/godotengine/godot/pull/44399.patch","title":"[WIP] Godot 4 GLES2 2D renderer + linux display manager","state":"open","is_draft":true,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2020-12-15T16:57:46Z","updated_at":"2021-01-15T20:07:27Z","body":"First implementation with linux display manager\r\n\r\nCo-authored-by:clayjohn <claynjohn@gmail.com>\r\nCo-authored-by:Fabio Alessandrelli <fabio.alessandrelli@gmail.com>\r\n\r\n## Explanation\r\nThe GLES backends consist of 3 modules:\r\n1) Middle layer (must be written for each platform). Handles GL contexts and windows. Common to both APIs.\r\n2) GLES2 renderer.\r\n3) GLES3 renderer.\r\n\r\nThe middle layers are rewritten compared to 3.2, notably they should handle multiple windows and context sharing, although they share some code with 3.2. They act as a middle man between the display module (x11, windows etc) and the renderer, and get the API into the correct state for everything to work.\r\n\r\nAs such there will be a certain amount of writing / debugging / alpha testing middle layers. The main priority at first is getting some usable middle layers for linux and windows, the other platforms can be added at leisure.\r\n\r\nThe 2D is bare bones to get the basics working, and batching is commented out for now. 3D is just stubs so will not display.\r\n\r\n## Notes\r\n* Loads still not working yet\r\n* I've just done the linux middle layer, clayjohn is working on windows and fales HTML5\r\n* This requires periodic resyncing with changes reduz is making to the renderer base classes (which is causing some pushes to not compile).\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":539958248,"public_id":44387,"url":"https://github.com/godotengine/godot/pull/44387","diff_url":"https://github.com/godotengine/godot/pull/44387.diff","patch_url":"https://github.com/godotengine/godot/pull/44387.patch","title":"More object unit tests","state":"open","is_draft":false,"authored_by":{"id":58991318,"user":"rmarco3e8","avater":"https://avatars.githubusercontent.com/u/58991318?v=4","url":"https://github.com/rmarco3e8"},"created_at":"2020-12-15T04:02:01Z","updated_at":"2020-12-15T13:49:39Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nHello, this is my first pull request so any suggested changes or constructive criticism will be much-appreciated. I tried building off of the existing unit tests for the object class.\r\n\r\nI added two test cases. One is a brief test of the setter and getter methods of the script interface of the Object class. The second runs through some tests of a number of methods including setters and getters in the IAPI interface of the Object class. One missing case regarding the get_indexed() and set_indexed() methods is for Vector<StringName> arguments of size greater than 1. I had some trouble getting the methods to update r_valid to true in this case.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":539826365,"public_id":44382,"url":"https://github.com/godotengine/godot/pull/44382","diff_url":"https://github.com/godotengine/godot/pull/44382.diff","patch_url":"https://github.com/godotengine/godot/pull/44382.patch","title":"Remove Array `append()` alias for `push_back()` to improve consistency","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-14T21:59:12Z","updated_at":"2021-01-31T10:45:52Z","body":"This removes the `append()` alias, both internally and in the scripting/GDNative API. Most projects should be convertable easily by searching \"append(\" and replacing it with \"push_back(\".\n\nSee https://github.com/godotengine/godot/issues/16863#issuecomment-743298531.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":539636496,"public_id":44369,"url":"https://github.com/godotengine/godot/pull/44369","diff_url":"https://github.com/godotengine/godot/pull/44369.diff","patch_url":"https://github.com/godotengine/godot/pull/44369.patch","title":"Implement AnimatedSprite pause() and resume()","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-14T16:15:25Z","updated_at":"2021-04-05T17:27:09Z","body":"As originally identified by in #31168,\r\n> Right now, the method stop() in `AnimatedSprite` is working as a pause (it is even stated in the documentation saying it doesn't reset the frame counter)\r\n\r\nAs suggested in [godotengine/godot-proposals/issues/#287](https://github.com/godotengine/godot-proposals/issues/287#issuecomment-562984738), to make `AnimatedSprite2D` and `AnimatedSprite3D` interfaces the same as `AnimationPlayer` (and ideally `AudioStreamPlayer`, `VideoPlayer` and `Tween`) this PR implements `pause()` and `resume()`, and updates the `play()` and `resume()` methods in `AnimatedSprite2D` and `AnimatedSprite3D` to be consistent with the changes made to `AnimationPlayer` in #44345 including:\r\n\r\n- Ensuring that play() always plays the specified (or current animation) from the beginning (or end if playing backwards) regardless of whether or not the requested animation is the same as the current animation\r\n- Ensuring that stop() also resets the animation\r\n- Updating the relevant documentation\r\n\r\nPart of #16863\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418726]},{"id":539035493,"public_id":44352,"url":"https://github.com/godotengine/godot/pull/44352","diff_url":"https://github.com/godotengine/godot/pull/44352.diff","patch_url":"https://github.com/godotengine/godot/pull/44352.patch","title":"Add Delete All button to ItemList editor","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-12-13T22:44:47Z","updated_at":"2021-03-20T01:49:45Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/1975\r\n![chUdP56gyn](https://user-images.githubusercontent.com/2223172/102026264-1d8ef500-3d9d-11eb-9a18-0d73de897934.gif)\r\n\r\nLoosely depends on #33300, which loosely depends on #43872","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":538959574,"public_id":44345,"url":"https://github.com/godotengine/godot/pull/44345","diff_url":"https://github.com/godotengine/godot/pull/44345.diff","patch_url":"https://github.com/godotengine/godot/pull/44345.patch","title":"Implement AnimationPlayer pause() and resume()","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-13T14:23:12Z","updated_at":"2021-04-05T18:06:48Z","body":"As originally identified in #34125 and elaborated on in https://github.com/godotengine/godot-proposals/issues/287, in `AnimationPlayer`:\r\n> Currently play() method doesn't adhere to single responsibility principle. If user calls play() while there is no animation playing it acts as start_animation() where as when user calls it when animation is already playing it acts as resume_animation(). This dual behaviour is not desired by users as it requires a condition statement in order to use start_animation functionality of play(). It is also inconstant across the engine as for example AudioStreamPlayer method play() method has only singular functionality of start_playing(). This is confusing to understand and breaks intuitiveness of the engine.\r\n\r\nSimilarly, `AnimationPlayer:stop()` has a parameter that defaults to `true` to either stop and reset the animation or just pause the animation. However, as identified in #27499, although `stop(true)` resets the playback position it doesn't reset the animation.\r\n\r\nThis PR:\r\n- Implements two new functions in `AnimationPlayer`: `pause()` and `resume()`. `pause()` will pause a currently playing animation, and `resume()` will resume a `paused()` animation.\r\n- Ensures that play() always plays the specified (or current animation) from the beginning regardless of whether or not the requested animation is the same as the current animation\r\n- Ensures that stop() also resets the animation\r\n- Updates the relevant documentation\r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/287\r\nFixes #27499\r\nFixes #36279\r\nSupersedes #33733\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418726]},{"id":538957365,"public_id":44344,"url":"https://github.com/godotengine/godot/pull/44344","diff_url":"https://github.com/godotengine/godot/pull/44344.diff","patch_url":"https://github.com/godotengine/godot/pull/44344.patch","title":"Fixed issue #39299","state":"open","is_draft":false,"authored_by":{"id":44978871,"user":"RexMaHaoXuan","avater":"https://avatars.githubusercontent.com/u/44978871?v=4","url":"https://github.com/RexMaHaoXuan"},"created_at":"2020-12-13T14:08:56Z","updated_at":"2021-03-25T19:26:10Z","body":"It appears that the issue is simply caused by the misuse of element dereference.\r\nAlso included some relevant test cases.\r\n\r\n*Bugsquad edit: This closes #39299.*","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":537621530,"public_id":44310,"url":"https://github.com/godotengine/godot/pull/44310","diff_url":"https://github.com/godotengine/godot/pull/44310.diff","patch_url":"https://github.com/godotengine/godot/pull/44310.patch","title":"Check if either are STRING/STRING_NAME in hash_compare","state":"open","is_draft":false,"authored_by":{"id":17316999,"user":"Demindiro","avater":"https://avatars.githubusercontent.com/u/17316999?v=4","url":"https://github.com/Demindiro"},"created_at":"2020-12-12T01:12:25Z","updated_at":"2021-08-06T03:59:56Z","body":"From my understanding, STRING_NAME is effectively the same as a regular STRING except it is optimized for lookup speed and they produce the same hashes, so no conversion from/to STRING is necessary when comparing hashes.\r\n\r\nCloses #44241","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":536778908,"public_id":44292,"url":"https://github.com/godotengine/godot/pull/44292","diff_url":"https://github.com/godotengine/godot/pull/44292.diff","patch_url":"https://github.com/godotengine/godot/pull/44292.patch","title":"[Tests] Add easing functions test.","state":"open","is_draft":false,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2020-12-11T10:24:02Z","updated_at":"2021-03-30T22:26:52Z","body":"Tests results of easing functions are compared to some known results.\r\nNew expected values can be printed to stdout by changing the `#if 0`.\r\n\r\nTo confirm that #44197 did not introduce regression, I created this simple regression test to compare the results before and after the patch (confirming it did not introduce a regression).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":535744999,"public_id":44257,"url":"https://github.com/godotengine/godot/pull/44257","diff_url":"https://github.com/godotengine/godot/pull/44257.diff","patch_url":"https://github.com/godotengine/godot/pull/44257.patch","title":"[Docs] adds to Control API -- describe when C++ Viewport::gui.mouse_focus blocks other Controls from receiving signals and events [undocumented]","state":"open","is_draft":false,"authored_by":{"id":65138515,"user":"gamepad-coder","avater":"https://avatars.githubusercontent.com/u/65138515?v=4","url":"https://github.com/gamepad-coder"},"created_at":"2020-12-10T08:09:11Z","updated_at":"2021-01-08T01:49:34Z","body":"API clarification, doc-bug fixes, & added undocumented features.\r\n------\r\nCloses https://github.com/godotengine/godot-docs/issues/4266\r\n\r\n**Changes :**\r\nSpecified how holding mouse button down blocks other controls until release.\r\nCorrected 2 false statements in `_gui_input()`.\r\nAdded more precise details to\r\n- `_gui_input()`,\r\n- signal `mouse_entered`,\r\n- signal `mouse_exited`,\r\n- `enum MouseFilter`.\r\n\r\nAdded InputEvent tutorial to Tutorial section.\r\n\r\n**Why is this Pull Request so detailed? :**\r\n\r\nThe commit itself is not very long, but this is my first contribution. So I thought it would be nice to detail my thought processes and to show my research to justify these additions. Perhaps this is unnecessary, but I figure revealing too much of the backstory here is better than explaining too little. \r\n\r\nFeel free to skip any detailed meta-descriptions, unless you plan to revise or add to these sections. I mainly wish to show that these changes are needed, and that the additions are correct. (Also, being a new contributor, I wanted to prove that I am not recklessly altering the API docs =). \r\n\r\n**Conversely, about the changes I'm submitting :**\r\nI've tried very hard to keep the actual changes brief, comprehensive, and correct. I've gone through several revisions to condense it into something that should make sense in as few words as possible. I have verified each added line of text by experimenting with projects in Godot, and I've traced the C++ code for all the changes to make sure (1) what I describe is correct (2) there is nothing vital (within scope) which I've omitted.\r\n\r\nThematically most of the changes in this Pull Request are related to mouse events and mouse filters. However there are a few things out of scope I fixed and corrected while I was in the area (particularly, this Pull Request fixes 2 inaccurate descriptions in `Control._gui_input`, and there were 2 minor typos elsewhere). \r\n\r\n<hr>\r\n\r\nWhat API will look like after this commit : \r\n-----\r\n![no commentary](https://user-images.githubusercontent.com/65138515/101724354-02a64300-3a74-11eb-847d-c716a9500e0b.png)\r\n\r\n<br><br><br>\r\n\r\n<hr>\r\n\r\nExplanation & points changed : \r\n-----\r\n**enum MouseFilter**\r\n\r\n![3-enum MouseFilter](https://user-images.githubusercontent.com/65138515/101724443-341f0e80-3a74-11eb-86ad-d550e9a3a1b6.png)\r\n\r\n- Now describes why signals sometimes fail to emit and why events fail to fire (when another control is hogging mouse input by design) even though the `MouseFilter` is set up to recognize mouse entry.\r\nIt is intuitive based on the current API that `MOUSE_FILTER_IGNORE` will result in no signals being emitted, however it is not apparent that `MOUSE_FILTER_PASS` and `MOUSE_FILTER_STOP` do not guarantee that mouse motion events will always be routed to the Control.<br>\r\nFor the following, assume a setup where a Control has `mouse_filter` set to `MOUSE_FILTER_STOP` or `MOUSE_FILTER_PASS` and assume that it normally receives events and signals and _gui_input() when the mouse clicks, enters, or exits it.<br>\r\nThese signals will not emit and `func _gui_input()` will not fire if the mouse was clicked on another Control (which can receive mouse input) and has not been released yet. This applies to signals `mouse_entered` and `mouse_exited`, signal `gui_event(e)`, and virtual `_gui_input()`, all will be blocked and all events are routed up through the clicked Control instead.<br>\r\nSee ~line 1809 in `viewport.cpp` function `Viewport::_gui_input_event(..)` which is called when regular `Node._input()` calls do not handle an event. All gui input signals and scripted `func _gui_input(event)` events originate here.<br> \r\nNow look at ~lines 1821, 1872, 1897 in `viewport.cpp` function `Viewport::_gui_input_event(..)` <br>\r\n`1821 -- if (gui.mouse_focus_mask) {`\r\n`1872 -- if (mb->get_button_index() == BUTTON_LEFT) { //assign focus`\r\n`1897 -- if (gui.mouse_focus && gui.mouse_focus->can_process()) {`<br>\r\nWhen a Control which can receive mouse input is clicked, it remains in mouse focus until release. Even when the mouse hovers over other Controls, the event will be passed to the Control which the mouse initially clicked via (Control *control) `gui.mouse_focus`. <br>See `viewport.cpp`'s same `_gui_input_event(..)` in the branch for InputEventMouseMotion around lines 2009, 2057, and 2063 to see why events are called on the Control which was clicked (and not released) instead of the Control which is now under the mouse:<br>\r\n`2009 -- if (!gui.drag_attempted && gui.mouse_focus && mm->get_button_mask() & ..`\r\n`2057 -- if (gui.mouse_focus) {`\r\n`2063 -- if (over != gui.mouse_over) {`<br><br><br>\r\n- Also added detail emphasizing that `MOUSE_FILTER_PASS` passes the event straight up, whereas `MOUSE_FILTER_IGNORE` will look for nodes outside of ancestor branches.<br>\r\nWhen looking for the Control under the mouse, Godot will find any node in the Viewport which is visually below (aka higher in the tree than) the one with `MOUSE_FILTER_IGNORE`, it doesn't have to be a parent or a parent of a parent; Godot searches whole tree in reverse order. <br>\r\nSee  `viewport.cpp` the functions `Viewport::_gui_find_control(..)` and `Viewport::_gui_find_control_at_pos(..)` around ~line 1703 to see it in the code.<br><br>\r\n\r\n<br><br><br>\r\n\r\n<hr>\r\n\r\nExplanation & points changed : \r\n-----\r\n**signal mouse_entered**\r\n**signal mouse_exited**\r\n\r\n![4-signals mouse_entered mouse_exited](https://user-images.githubusercontent.com/65138515/101725910-27e88080-3a77-11eb-9679-c32a1ff2f43d.png)\r\n\r\nThese signals were minimally documented. \r\n\r\nI spent a lot of time debugging a personal project until I discovered that the unexpected behavior of my GDScripts was due to the mouse-hogging behavior of clicked Controls, and not due to a bug in my code. Then I discovered that this mouse-hogging behavior was undocumented (see my previous section of this Pull Request for more details, also see doc bug report @ https://github.com/godotengine/godot-docs/issues/4266).\r\n\r\n_Note: this is desired functionality. When you click and drag on a scroll bar's handle, it's standard that other Controls will not display a hover animation, and will similarly be blocked until mouse button release._\r\n\r\nThis was my entry point in researching everything that led to this Pull Request.\r\n\r\nFun fact.\r\n\r\nChanges to `mouse_entered` and `mouse_exited` :\r\n- Added links to `Control.has_point()` and `Control.get_rect()`, as `Rect` has its own section in the Inspector Dock, but it does not have a dedicated section in the API. Referring the reader to `Control.get_rect()` will make it apparent what this line is referencing with the word `Rect` (and exactly where to read more).<br><br>\r\n- Added undocumented detail : if you parent a `Button` control under another `Button` control, then set the child's `mouse_filter` to `MOUSE_FILTER_PASS`:<br>hovering on the child will hover the parent (and emit `mouse_entered` for the child then the parent) and clicking the child `Button` will click the child and the parent `Button`. <br>\r\nYou can do this with any Control type and `MOUSE_FILTER_PASS`, but this is the simplest example to visualize.<br>\r\nThis is not intuitive (unless you look at the code for `viewport.cpp`) and I thought it aught to be documented. Look in `viewport.cpp` around line 1604 for the method `Viewport._gui_call_input(..)`. This is called for all gui events (mouse button, mouse motion, touch, drag, gesture) which are not keypress and joypad events from `Viewport::_gui_input_event(..)`'s c++ code. All gui mouse events flow through here. <br><br>\r\n- Added details about how a control will hog mouse focus and hog signals/events/_gui_input until mouse release. Upon mouse button release, if the mouse is now under a `Control` different than the one that was clicked, the clicked control will emit `mouse_exited` and the `Control` actually under the mouse will emit `mouse_entered` and propagate the signal upwards if appropriate (these will both happen during the same `InputEventMouseButton` or `InputEventMouseMotion` event in `Viewport::_gui_input_event()`<br>\r\n`1983 -- _gui_call_notification(gui.mouse_over, Control::NOTIFICATION_MOUSE_EXIT);`\r\n`2065 -- _gui_call_notification(gui.mouse_over, Control::NOTIFICATION_MOUSE_EXIT);`<br><br>\r\n- For this Pull Request's additions to these signals,<br> `mouse_entered` uses `[code]mouse_entered[/code]` and `[signal mouse_exited]` and<br>`mouse_exited` uses `[code]mouse_exited[/code]` and `[signal mouse_entered]`<br>so they do not link to themselves. (Also this gives a visual cue which one you are currently reading; Not the main reason, but a fun side-effect).\r\n\r\n<br><br><br>\r\n\r\nExplanation & points changed : \r\n-----\r\n**func _gui_input(e)**\r\n\r\n- Added reference to the InputEvent tutorial : https://docs.godotengine.org/en/3.2/tutorials/inputs/inputevent.html<br> I added this to the tutorials section at the top of the Control API page (see the first picture in this post). But I also wanted to refer the reader to it here specifically. It's vitally important to understand that tutorial in conjunction with the following description of `_gui_input()` in Control's API. <br>\r\nI am unaware of a way to directly link to this tutorial's webpage in the online docs from the XML file. Further, I am unaware if this addition this breaches any conventions. This is the one non-strictly-technical point I've added which I'm unsure about, feel free to accept it or not, but I think it would be very beneficial to many.<br><br>\r\n- The existing documentation for `_gui_input()` made it seem possible that keypress events were dependent on `mouse_filter`. I added a bullet point that keypress events and joypad events will only fire for the Control with key focus. This is briefly mentioned in the Intro section of Control's current API, but this section is not comprehensive without mentioning it.<br><br>\r\n- Likewise, I added a phrase specifying that Control gui events are dependent on `mouse_filter` if they are mouse or touch events. <br><br>\r\n- **[DOC-BUG FIX]** The current API for Godot 3 and Godot 4 both incorrectly state that parents pass events down to children unless they have `MOUSE_FILTER_STOP`. The current implementation passes all events (which are not joypad nor keypress events) up through the tree (see the while loop where this happens in the picture below). I corrected this phrase. See the first red outline in the picture below.<br><br>\r\n- **[DOC-BUG FIX]** `rect_clip_content` does not clip input. Specified this, but largely left this line untouched. <br><br>Demonstration :\r\n- - Add a `Button` to a `Panel`, \r\n- - clip input in the panel (you can do this from the Inspector Dock), \r\n- - don't override `_clips_input()` in a script, \r\n- - offset the `Button` to where part of it is invisible\r\n- - run the scene and observe that you can still click <br>the invisible parts of the `Button`\r\n- - add a script, add `func _clips_input(){ return true }`\r\n- - run scene, observe that you can no longer click<br>the invisible parts of the `Button`.<br><br>\r\n- Added details about mouse-hogging behavior (see the previous section of this Pull Request)<br><br>\r\n- Added an important nuance : `_gui_input()` is not called if a node marks an event as handled in `func _input()`. This is outlined in the InputEvent tutorial, but will not be apparent without a lot of cross-referencing for beginners. This is an effort to make this method's documentation complete. Perhaps out of scope, but it's brief + more important than my main scope.\r\n\r\n![5-_gui_input](https://user-images.githubusercontent.com/65138515/101727601-629fe800-3a7a-11eb-90a4-0404ef04cfa7.png)\r\n\r\n<br><br><br>\r\n\r\n<hr>\r\n\r\n**Concluding remarks :**\r\nAgain, the changes are much smaller than these explanations.\r\n\r\nIf in the future anyone wants to reword or expand on this contribution, I wanted to lay out all the details in one place. Hopefully someday this will help someone who is exploring this area of the API + engine code for the first time. \r\n\r\nI plan on contributing fairly regularly to the Documentation. But since I haven't issued a Pull Request before, I wanted to back up my work with reasons.\r\n\r\nI took notes on several other changes which were out of scope, and will submit bug reports to the godot-docs project and issue Pull Requests for those separately in the future.\r\n\r\nIf I need to issue multiple Pull Requests for the changes in this one, feel free to let me know and I will break it up into chunks. \r\n\r\nI'll rebase my fork every 12 hours or so to keep it up to date. \r\n\r\nThanks to all who contribute their time and efforts to Godot.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":535638479,"public_id":44251,"url":"https://github.com/godotengine/godot/pull/44251","diff_url":"https://github.com/godotengine/godot/pull/44251.diff","patch_url":"https://github.com/godotengine/godot/pull/44251.patch","title":"Refuse to use a dictionary as a key for itself","state":"open","is_draft":true,"authored_by":{"id":17316999,"user":"Demindiro","avater":"https://avatars.githubusercontent.com/u/17316999?v=4","url":"https://github.com/Demindiro"},"created_at":"2020-12-10T04:55:43Z","updated_at":"2021-03-26T14:44:17Z","body":"The cause of the null pointer dereference from #44195 lies here:\r\n\r\nhttps://github.com/godotengine/godot/blob/31d0f8ad8d5cf50a310ee7e8ada4dcdb4510690b/core/ordered_hash_map.h#L216-L218\r\n\r\nNote that the key in the Pair is set to null first, then updated when the pair has been added to the map. However, to hash the map itself the key needs to be derefenced too but since it's null the engine crashes.\r\n\r\nhttps://github.com/godotengine/godot/blob/31d0f8ad8d5cf50a310ee7e8ada4dcdb4510690b/core/dictionary.cpp#L196\r\n\r\nhttps://github.com/godotengine/godot/blob/31d0f8ad8d5cf50a310ee7e8ada4dcdb4510690b/core/variant.cpp#L2739\r\n\r\nI tried a (naive) fix by replacing `NULL` with `&p_key` but this results in a stack overflow because the dictionary keeps hashing the key (which is itself too) ad infinitum, so instead I believe it is best to prevent using a dictionary as a key for itself (since the hash can't be calculated anyways)\r\n\r\nThis patch doesn't catch all possible causes for cyclic references though, such as the one below, but I'm not sure what the best way is to fix that.\r\n\r\n```gdscript\r\nextends MainLoop\r\n\r\n\r\nfunc _init():\r\n\tvar a = {}\r\n\tvar b = {}\r\n\tb[a] = 0\r\n\ta[b] = 0\r\n```\r\n\r\nI've also considered preventing `OrderedHashMap` from being accessed while an insertion is in progress but I don't know how to do that without (potentially) breaking a lot of things.\r\n\r\nCloses #44195","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":535570731,"public_id":44249,"url":"https://github.com/godotengine/godot/pull/44249","diff_url":"https://github.com/godotengine/godot/pull/44249.diff","patch_url":"https://github.com/godotengine/godot/pull/44249.patch","title":" Removed unused code from EditorSelection and added documentation.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-12-10T01:21:11Z","updated_at":"2021-03-20T21:12:45Z","body":"A continuation of #44222\r\n\r\n* `_get_transformable_selected_nodes` must have been a remnant of a previous implementation. It was not used anymore.\r\n* `get_selected_nodes` moved lower to be with other `get_selected` methods\r\n* Added documentation in the header to make it clear that in the `Map<Node *, Object *>`, the Object* is metadata provided by an editor plugin, which can then be accessed later by `get_node_editor_data()`.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":535298256,"public_id":44228,"url":"https://github.com/godotengine/godot/pull/44228","diff_url":"https://github.com/godotengine/godot/pull/44228.diff","patch_url":"https://github.com/godotengine/godot/pull/44228.patch","title":"Fix inspector and gradient editor don't update when editing gradient","state":"open","is_draft":false,"authored_by":{"id":13400398,"user":"gongpha","avater":"https://avatars.githubusercontent.com/u/13400398?v=4","url":"https://github.com/gongpha"},"created_at":"2020-12-09T16:21:01Z","updated_at":"2020-12-09T16:35:37Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixes #33265","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":535248805,"public_id":44224,"url":"https://github.com/godotengine/godot/pull/44224","diff_url":"https://github.com/godotengine/godot/pull/44224.diff","patch_url":"https://github.com/godotengine/godot/pull/44224.patch","title":"Use C++14 number separators for large numbers, lowercase for hexadecimal","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-09T15:11:07Z","updated_at":"2020-12-09T20:54:10Z","body":"This makes large numbers easier to read.\n\nDecimal numbers are split starting from 7 digits (in groups of 3). Hexadecimal numbers are split starting from 8 characters (in groups of 4, except ASCII characters which are split in groups of 2).\n\nHexadecimal numbers were also converted to lowercase for better readability when mixed with numbers.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":535206996,"public_id":44222,"url":"https://github.com/godotengine/godot/pull/44222","diff_url":"https://github.com/godotengine/godot/pull/44222.diff","patch_url":"https://github.com/godotengine/godot/pull/44222.patch","title":"Refactored EditorHistory, removed unused code, added documentation.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-12-09T14:09:21Z","updated_at":"2020-12-09T14:49:26Z","body":"Trying to document and refactor a bit of the editor so it is easier for people to work with.\r\n\r\nStarting small, with the EditorHistory.\r\n\r\n* `HISTORY_MAX` enum was never used\r\n* `EditorHistory::PropertyData` struct was never used\r\n* `add_object` method variants with `p_level_change` were never used, and `level` property never changes. `level` property is essentially just a convenience for `history[current].path.size() - 1` (i.e. last item in path)\r\n* `add_object` method variants were so rarely used, it made more sense to make the underlying `_add_object` public and just give it default parameters. This required only one external change, where `add_object_inspector_only` was used in EditorNode.\r\n* Spent a bit of time trying to figure out how it works. There should be no behavioural/functional changes.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":534456886,"public_id":44193,"url":"https://github.com/godotengine/godot/pull/44193","diff_url":"https://github.com/godotengine/godot/pull/44193.diff","patch_url":"https://github.com/godotengine/godot/pull/44193.patch","title":"Adds methods to construct mesh from arrays to `SurfaceTool`","state":"open","is_draft":false,"authored_by":{"id":3036176,"user":"Chaosus","avater":"https://avatars.githubusercontent.com/u/3036176?v=4","url":"https://github.com/Chaosus"},"created_at":"2020-12-08T13:37:48Z","updated_at":"2020-12-08T13:55:59Z","body":"I've decided to fix https://github.com/godotengine/godot/issues/22874#issuecomment-523227239 and added a bunch of methods that accept arrays to SurfaceTool. They are:\r\n\r\n```\r\nadd_colors\r\nadd_normals\r\nadd_tangents\r\nadd_uvs\r\nadd_uvs2\r\nadd_vertices\r\nadd_indices\r\n```\r\n\r\nThey all(except `add_tangents` which accept simple Array) accept PackedArray's like:\r\n\r\n```\r\nextends Node3D\r\n\r\n@onready var mesh_instance = $MeshInstance3D\r\n\r\nfunc _ready():\r\n\tvar st = SurfaceTool.new()\r\n\t\r\n\tvar colors = PackedColorArray()\r\n\tcolors.append(Color.red)\r\n\tcolors.append(Color.blue)\r\n\tcolors.append(Color.lime)\r\n\t\r\n\tvar vertices = PackedVector3Array()\r\n\tvertices.append(Vector3(-0.5, 0, 0))\r\n\tvertices.append(Vector3(0, 1, 0))\r\n\tvertices.append(Vector3(0.5, 0, 0))\r\n\t\r\n\tst.begin(Mesh.PRIMITIVE_TRIANGLES)\r\n\t\r\n\tst.add_colors(colors)\r\n\tst.add_vertices(vertices)\r\n\t\r\n\tmesh_instance.mesh = st.commit()\r\n```\r\n\r\nAnd produces correct results:\r\n\r\n![image](https://user-images.githubusercontent.com/3036176/101490560-947a5700-3973-11eb-971e-0ceeba236ef8.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":534324566,"public_id":44187,"url":"https://github.com/godotengine/godot/pull/44187","diff_url":"https://github.com/godotengine/godot/pull/44187.diff","patch_url":"https://github.com/godotengine/godot/pull/44187.patch","title":"Overridden properties link to definition in Godot Docs","state":"open","is_draft":false,"authored_by":{"id":28817459,"user":"joshdegraw","avater":"https://avatars.githubusercontent.com/u/28817459?v=4","url":"https://github.com/joshdegraw"},"created_at":"2020-12-08T09:49:19Z","updated_at":"2021-05-23T12:31:49Z","body":"This is the in-progress implementation of https://github.com/godotengine/godot-docs/issues/4432\r\n\r\nRight now the XML generator has been modified to contain the new data, and I am now in the process of editing makerst.py to format it properly.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,2785428,4418424,4418914]},{"id":534298329,"public_id":44185,"url":"https://github.com/godotengine/godot/pull/44185","diff_url":"https://github.com/godotengine/godot/pull/44185.diff","patch_url":"https://github.com/godotengine/godot/pull/44185.patch","title":"Rename tree item double-click signals to match their event","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-08T09:07:49Z","updated_at":"2020-12-30T17:34:55Z","body":"As identified [here](https://github.com/godotengine/godot/issues/16839#issuecomment-366896486), currently a `Tree` emits an `item_activated` signal when the item's label is double-clicked, and an `item_double_clicked` signal when the item's icon is double-clicked.\r\n\r\nThis PR renames the `Tree`'s item double-click signals to match the events:\r\n- `item_activated` -> `item_label_double-clicked`\r\n- `item_double_clicked` -> `item_icon_double-clicked`\r\n\r\nPart of #16863.\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":533233647,"public_id":44146,"url":"https://github.com/godotengine/godot/pull/44146","diff_url":"https://github.com/godotengine/godot/pull/44146.diff","patch_url":"https://github.com/godotengine/godot/pull/44146.patch","title":"Tidy Joints 3D","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-06T17:21:47Z","updated_at":"2021-05-01T12:32:20Z","body":"Currently, Joints 3D is spread across multiple files that don't fit with the general Godot file structure and the structure is significantly different from Joints 2D. Specifically:\r\n- Joints3D is in a file called `scene/3d/physics_joint_3d`; instead of `scene/2d/joints_3d`\r\n- Each of the `Joints3DSW` joints and its utility class `JacobianEntry3DSW` are in a separate file in a folder called `joints`, instead of together as is done in 2D.\r\n\r\nThis PR renames `scene/3d/physics_joint_3d` to `scene/3d/joints_3d` and moves all the 3D_SW Joints into `joints_3d_sw`, removes duplicate code, and makes it consistent with Joints 2D.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777,4418550,4418726]},{"id":533212508,"public_id":44143,"url":"https://github.com/godotengine/godot/pull/44143","diff_url":"https://github.com/godotengine/godot/pull/44143.diff","patch_url":"https://github.com/godotengine/godot/pull/44143.patch","title":"Port remaining connections to callable_mp","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-12-06T15:15:44Z","updated_at":"2021-01-12T13:31:56Z","body":"This PR moves remaining `connects` from Callables to `callable_mp`. Some binds were removed in the result as they are no longer necessary, some are still used by UndoRedo, so I marked them as such (only the ones that got connection removed). We can make another sweep after #43872 is merged.\r\n\r\nSome methods required to be made public to get connected. I didn't change their name, they still begin with `_` to indicate they are intended for callbacks.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":533175102,"public_id":44141,"url":"https://github.com/godotengine/godot/pull/44141","diff_url":"https://github.com/godotengine/godot/pull/44141.diff","patch_url":"https://github.com/godotengine/godot/pull/44141.patch","title":"Change physics disabled booleans to enabled","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-12-06T10:40:31Z","updated_at":"2021-06-18T16:02:58Z","body":"To avoid double negatives, boolean names should be positive. Currently, a `Shape` defaults to not being `disabled`. Similarly, to enable collisions between the bodies attached to a `Joint`'s we need to not `exclude_nodes`.\r\n\r\nThis PR makes physics boolean names positive, standardises their functions; and updates the documentation.\r\n\r\nPart of #16863, specifically this [comment](https://github.com/godotengine/godot/issues/16863#issuecomment-511037393) and the following [two](https://github.com/godotengine/godot/issues/16863#issuecomment-511037764) [comments](https://github.com/godotengine/godot/issues/16863#issuecomment-511042959).\r\n\r\nNote: Includes a clarification of `pickable` being associated with `InputEvent`s, specifically `InputEventMouse` events i.e. it has nothing to do with rays (other than a ray being used in 3D to detect objects under the mouse). Also ensures that 2D and 3D are the same (except for 2D being disabled by default and 3D enabled).\r\n\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777,4418718,4418726,4418914]},{"id":533072807,"public_id":44125,"url":"https://github.com/godotengine/godot/pull/44125","diff_url":"https://github.com/godotengine/godot/pull/44125.diff","patch_url":"https://github.com/godotengine/godot/pull/44125.patch","title":"[3.x] Initialize class variables with default values","state":"open","is_draft":true,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2020-12-05T18:24:12Z","updated_at":"2021-08-15T20:29:29Z","body":"Part of #43636 for 3.2 branch.\r\n\r\nIt should decrease number of Cppcheck errors from 791 to ~125(except buffers and some rendering things).\r\n\r\nIt should be really easy to check this commit, because it adds only to constructor values initializations(in opposite to similar commits to master branch when I moved a lot of things across code and also initialized structs members which was not shown in Cppcheck).","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2304948121,"name":"topic:codestyle","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[2785428,3112904,3112906,3112907,3112909,3112910,3112912,3112913,3377457,3388402,3609449,3857901,4038183,4417777,4417819,4417868,4418380,4418392,4418424,4418542,4418558,4418605,4418718,4418726,4418733,4418914]},{"id":533006266,"public_id":44118,"url":"https://github.com/godotengine/godot/pull/44118","diff_url":"https://github.com/godotengine/godot/pull/44118.diff","patch_url":"https://github.com/godotengine/godot/pull/44118.patch","title":"Enable ANSI escape code processing on Windows 10","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-12-05T12:02:52Z","updated_at":"2020-12-05T12:03:38Z","body":"This lets the engine and projects use the same color codes in the terminal on all platforms.\r\n\r\nThis PR will be needed by https://github.com/godotengine/godot/pull/33505 and https://github.com/godotengine/godot/pull/36252.\r\n\r\nWindows 64-bit editor binary for testing: https://0x0.st/ihsp.zip (link expires in June 2021)\r\n\r\nWith the binary above, \"GREEN TEXT\" should be printed in green when the engine starts.\r\n\r\n## TODO\r\n\r\n- Test on Windows 7/8.1 and see how the fallback behavior works.\r\n  - We will probably have to add a function to strip ANSI codes from the console output for those Windows versions.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":529844723,"public_id":43998,"url":"https://github.com/godotengine/godot/pull/43998","diff_url":"https://github.com/godotengine/godot/pull/43998.diff","patch_url":"https://github.com/godotengine/godot/pull/43998.patch","title":"Add built-in types to autocompletion list","state":"open","is_draft":false,"authored_by":{"id":25207137,"user":"gvekan","avater":"https://avatars.githubusercontent.com/u/25207137?v=4","url":"https://github.com/gvekan"},"created_at":"2020-11-30T22:18:43Z","updated_at":"2021-01-11T12:39:09Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nAdds built-in types to autocompletion list for variant and function return type hint completion, and cast type completion.\r\nThe issue is mentioned in https://github.com/godotengine/godot/issues/40933.\r\nI extracted, replaced and changed code that added variant completion options, in the `gdscript_editor.cpp` file.  \r\n![1](https://user-images.githubusercontent.com/25207137/100671938-861fb000-3361-11eb-985f-0d55416fe4a4.PNG)\r\n![3](https://user-images.githubusercontent.com/25207137/100671945-8750dd00-3361-11eb-96f2-a40750bddab9.PNG)\r\n![2](https://user-images.githubusercontent.com/25207137/100671942-8750dd00-3361-11eb-85e5-d23ec911c18d.PNG)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":528963398,"public_id":43934,"url":"https://github.com/godotengine/godot/pull/43934","diff_url":"https://github.com/godotengine/godot/pull/43934.diff","patch_url":"https://github.com/godotengine/godot/pull/43934.patch","title":"Check if second parameter of posmod is 0","state":"open","is_draft":false,"authored_by":{"id":17316999,"user":"Demindiro","avater":"https://avatars.githubusercontent.com/u/17316999?v=4","url":"https://github.com/Demindiro"},"created_at":"2020-11-28T15:37:03Z","updated_at":"2021-01-29T18:15:16Z","body":"I decided to return INT_MIN since logically it cannot happen.\r\n\r\nMy gut tells me this should also throw a `SCRIPT ERROR` but I don't know how to do that correctly.\r\n\r\nCloses #43932","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":528109847,"public_id":43888,"url":"https://github.com/godotengine/godot/pull/43888","diff_url":"https://github.com/godotengine/godot/pull/43888.diff","patch_url":"https://github.com/godotengine/godot/pull/43888.patch","title":"Added support for left- and right- versions of modifier keys.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-11-26T14:25:36Z","updated_at":"2020-12-08T11:59:45Z","body":"Adds the ability to use Left/Right Shift, Control, Alt and Meta as key bindings.\r\nThese keys being used as modifiers (e.g. Shift+Ins, Ctrl+T) is unchanged, and either left or right will work.\r\n\r\nReferences used:\r\nhttps://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes\r\nhttps://www.win.tue.nl/~aeb/linux/kbd/scancodes-1.html\r\n\r\n**Will close issues:**\r\nCloses #3347.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":527832771,"public_id":43878,"url":"https://github.com/godotengine/godot/pull/43878","diff_url":"https://github.com/godotengine/godot/pull/43878.diff","patch_url":"https://github.com/godotengine/godot/pull/43878.patch","title":"Expose PopupMenu ScrollContainer to scripting","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-11-26T05:23:29Z","updated_at":"2021-01-05T00:10:43Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/1859\r\n\r\n```\r\nvar popup = PopupMenu.new()\r\nvar sc = popup.get_scroll_container()\r\nsc.get_v_scrollbar() # or whetever else...\r\n```\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":527743681,"public_id":43872,"url":"https://github.com/godotengine/godot/pull/43872","diff_url":"https://github.com/godotengine/godot/pull/43872.diff","patch_url":"https://github.com/godotengine/godot/pull/43872.patch","title":"Make UndoRedo use Callables","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-11-25T23:48:10Z","updated_at":"2021-07-02T21:38:13Z","body":"This PR makes UndoRedo use Callables instead of method names and hardcoded argument list. I added `add_undo_method_compat` and changed all old calls to this. We need to port them later and cleanup needlessly bound methods.\r\n\r\nLikely fixes #26483\r\nAnd likely fixes #36895\r\n\r\nSumbitting as draft, because I'm not yet sure what to do with\r\nhttps://github.com/godotengine/godot/blob/7e009a167110e79caa102c5b88363fd32b75293c/core/object/undo_redo.cpp#L301-L303\r\nEither I need to figure out how to change it to Callable or extract arguments from callable and push them here. For now this part is commented out, everything else seems to work.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":526874769,"public_id":43838,"url":"https://github.com/godotengine/godot/pull/43838","diff_url":"https://github.com/godotengine/godot/pull/43838.diff","patch_url":"https://github.com/godotengine/godot/pull/43838.patch","title":"Clear connection data from/to empty after used","state":"open","is_draft":false,"authored_by":{"id":14951430,"user":"lupoDharkael","avater":"https://avatars.githubusercontent.com/u/14951430?v=4","url":"https://github.com/lupoDharkael"},"created_at":"2020-11-25T00:10:28Z","updated_at":"2020-11-25T21:33:10Z","body":"The connection data provided by `_connection_from_empty` and\r\n`_connection_to_empty` was not cleared and caused unwanted\r\nconnections in some cases.\r\n\r\nGif of the actual bug:\r\n![Peek-2020-11-25-00-35](https://user-images.githubusercontent.com/14951430/100165554-d0fd7b80-2eba-11eb-92ea-a5bc6e55e86c.gif)\r\n\r\nSteps to reproduce the bug:\r\n- drag from a port and create a node.\r\n- delete that new node.\r\n- Create a node and it gets connected to the node and port you dragged previously.\r\n\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":526606321,"public_id":43826,"url":"https://github.com/godotengine/godot/pull/43826","diff_url":"https://github.com/godotengine/godot/pull/43826.diff","patch_url":"https://github.com/godotengine/godot/pull/43826.patch","title":"Add option to display stack trace for errors and warnings","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2020-11-24T16:27:16Z","updated_at":"2021-03-20T18:21:00Z","body":"Support for optional stack traces in log on errors and warnings, based on a project setting option to set the call stack size, from https://github.com/godotengine/godot-proposals/issues/963.\r\n\r\nWindows, Linux:\r\nImplemented stack trace code in specific OS utility, used in common with the crash handler.\r\n\r\n*Note:* On Windows, stack traces work only with MSVC, not with MingW (see #42540).\r\n\r\nOther platforms:\r\nNot supported yet.\r\n\r\n----\r\n\r\n**Example script:**\r\n```\r\nextends Node\r\n\r\nfunc _ready():\r\n\t_test_error()\r\n\r\nfunc _test_error():\r\n\tpush_error(\"Test error\")\r\n\tget_node(\"abc\")\r\n```\r\n\r\n**Example output:**\r\n```\r\nERROR: Test error\r\n   at: GDScriptFunctions::call (modules\\gdscript\\gdscript_functions.cpp:749)\r\nCallstack:\r\n  - godot.windows.tools.64.exe:GDScriptFunctions::call\r\n    At C:\\dev\\source\\godot\\modules\\gdscript\\gdscript_functions.cpp, line 750\r\n  - GDScript:_test_error\r\n    At res://Node.gd, line 7\r\n  - GDScript:_ready\r\n    At res://Node.gd, line 4\r\nERROR: Node not found: abc.\r\n   at: (scene\\main\\node.cpp:1413)\r\nCallstack:\r\n  - godot.windows.tools.64.exe:Node::get_node\r\n    At C:\\dev\\source\\godot\\scene\\main\\node.cpp, line 1413\r\n  - godot.windows.tools.64.exe:call_with_variant_args_retc_helper<Node,Node *,NodePath const &,0>\r\n    At C:\\dev\\source\\godot\\core\\variant\\binder_common.h, line 615\r\n  - godot.windows.tools.64.exe:call_with_variant_args_retc_dv<Node,Node *,NodePath const &>\r\n    At C:\\dev\\source\\godot\\core\\variant\\binder_common.h, line 451\r\n  - godot.windows.tools.64.exe:MethodBindTRC<Node,Node *,NodePath const &>::call\r\n    At C:\\dev\\source\\godot\\core\\object\\method_bind.h, line 555\r\n  - godot.windows.tools.64.exe:GDScriptFunction::call\r\n    At C:\\dev\\source\\godot\\modules\\gdscript\\gdscript_vm.cpp, line 1479\r\n  - GDScript:_test_error\r\n    At res://Node.gd, line 8\r\n  - GDScript:_ready\r\n    At res://Node.gd, line 4\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":525315709,"public_id":43778,"url":"https://github.com/godotengine/godot/pull/43778","diff_url":"https://github.com/godotengine/godot/pull/43778.diff","patch_url":"https://github.com/godotengine/godot/pull/43778.patch","title":"Expose _edit_use_rect, _edit_is_selected_on_click and _edit_get_rect to script to handle editor selection for custom drawn nodes","state":"open","is_draft":false,"authored_by":{"id":7462993,"user":"remorse107","avater":"https://avatars.githubusercontent.com/u/7462993?v=4","url":"https://github.com/remorse107"},"created_at":"2020-11-22T17:06:51Z","updated_at":"2021-01-08T07:54:51Z","body":"I'm one of the core developer of the SmartShape tool for Godot, and it seems not possible to capture when a node is being clicked in the editor if that node is custom drawn. This pull request addresses that by exposing the tool only calls from C++ to the script.\r\n\r\nBelow is a working example of that change.  Please consider for a 3.2 Cherry-pick.\r\n\r\n![select_from_edit_window3](https://user-images.githubusercontent.com/7462993/99910226-6e399380-2cb2-11eb-8476-98e0d8ca59a9.gif)\r\n\r\nSample GDScript of its use:\r\n\r\n![image](https://user-images.githubusercontent.com/7462993/99910292-c2dd0e80-2cb2-11eb-9923-b75819ca3927.png)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":525192664,"public_id":43757,"url":"https://github.com/godotengine/godot/pull/43757","diff_url":"https://github.com/godotengine/godot/pull/43757.diff","patch_url":"https://github.com/godotengine/godot/pull/43757.patch","title":"Update the minimum size of ViewportContainer","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-11-21T21:33:33Z","updated_at":"2020-12-10T10:31:00Z","body":"Fixes #19252","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":525036203,"public_id":43735,"url":"https://github.com/godotengine/godot/pull/43735","diff_url":"https://github.com/godotengine/godot/pull/43735.diff","patch_url":"https://github.com/godotengine/godot/pull/43735.patch","title":"Handle key release events in Line/Text Edits","state":"open","is_draft":false,"authored_by":{"id":41607512,"user":"Nickswoboda","avater":"https://avatars.githubusercontent.com/u/41607512?v=4","url":"https://github.com/Nickswoboda"},"created_at":"2020-11-21T01:42:32Z","updated_at":"2020-11-24T00:42:14Z","body":"Fixes #43701\r\n\r\nCurrently, Line and Text Edits ignore any key event that isn't pressed allowing them to be caught by the _unhandled_input function. This fixes that behavior for any non-special key.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":524054764,"public_id":43694,"url":"https://github.com/godotengine/godot/pull/43694","diff_url":"https://github.com/godotengine/godot/pull/43694.diff","patch_url":"https://github.com/godotengine/godot/pull/43694.patch","title":"Proposal-1778: Updating Transform.rotated() docs and test cases.","state":"open","is_draft":false,"authored_by":{"id":8113473,"user":"AlexanderPruss","avater":"https://avatars.githubusercontent.com/u/8113473?v=4","url":"https://github.com/AlexanderPruss"},"created_at":"2020-11-19T15:56:47Z","updated_at":"2020-11-22T16:18:34Z","body":"For proposal 1778: godotengine/godot-proposals#1788\r\n\r\nFollowing the discussion in https://github.com/godotengine/godot/pull/43601, it was decided to just adjust the documentation of `Transform.rotated()` instead of adding a new function.\r\n\r\nIf this is approved, we can probably close the previous PR and the linked proposal.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":523733484,"public_id":43670,"url":"https://github.com/godotengine/godot/pull/43670","diff_url":"https://github.com/godotengine/godot/pull/43670.diff","patch_url":"https://github.com/godotengine/godot/pull/43670.patch","title":"Change one-shot node parameter for correctly root motion","state":"open","is_draft":true,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2020-11-19T07:17:46Z","updated_at":"2021-08-06T21:49:40Z","body":"Fixes #40294","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":522403025,"public_id":43617,"url":"https://github.com/godotengine/godot/pull/43617","diff_url":"https://github.com/godotengine/godot/pull/43617.diff","patch_url":"https://github.com/godotengine/godot/pull/43617.patch","title":"[3.x] Fix test_body_motion() sometimes failing to extracting collision information","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-11-17T13:16:29Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #43616,","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4417777]},{"id":522402861,"public_id":43616,"url":"https://github.com/godotengine/godot/pull/43616","diff_url":"https://github.com/godotengine/godot/pull/43616.diff","patch_url":"https://github.com/godotengine/godot/pull/43616.patch","title":"Fix test_body_motion() sometimes failing to extracting collision information","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-11-17T13:16:13Z","updated_at":"2021-02-14T12:05:25Z","body":"Currently, in Godot physics 2D and 3D, `test_body_motion()` sometimes fails to extract collision information, which results in the collision being ignored. This problem is aggravated when the collision margin is reduced. The most common reason for reducing collision margins is to overcome the problem that touching, but not overlapping objects are treated as colliding. This PR ensures:\r\n1. Collision information is always correctly extracted regardless of the size of the collision margin\r\n2. Touching, but not overlapping objects are not treated as colliding\r\n\r\nFixes #16414\r\nFixes #23140\r\nFixes #36432\r\nFixes #37798\r\nFixes #43346\r\nAddresses [comment](https://github.com/godotengine/godot/pull/34219#issuecomment-578092722)\r\n\r\nAlthough these issues all have the same source, fixing them required making multiple changes:\r\n- Removing the dependence on a minimum contact depth\r\n- Removing collision solver checks for a minimum penetration\r\n- Preventing zero overlaps from being detected as collisions\r\n- Ensuring that the 3D Godot physics static and distance collision algorithms treat zero pixel overlaps the same\r\n\r\nTo facilitate these changes this PR has refactored Godot 2D and 3D `SpaceSW`, the Godot GJK EPA API and the Godot 3D `solve_distance()` algorithm. I have kept all these changes in separate commits to facilitate review and potential future troubleshooting (the refactoring changes modified a lot of lines of code, but they should not change behaviour).\r\n\r\nThe refactoring of `SpaceSW` is comprehensive. To isolate the disparate issues, the code was standardised, which involved:\r\n- Removing duplicated code, unnecessary loops and unnecessary checks\r\n- Adding missing checks and generating appropriate errors\r\n- Making all functions across 2D and 3D as similar as possible.\r\n- Changing variable names so the code is easier to understand.\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":521919786,"public_id":43601,"url":"https://github.com/godotengine/godot/pull/43601","diff_url":"https://github.com/godotengine/godot/pull/43601.diff","patch_url":"https://github.com/godotengine/godot/pull/43601.patch","title":"Add a local rotation function to `Transform3D` ","state":"open","is_draft":false,"authored_by":{"id":8113473,"user":"AlexanderPruss","avater":"https://avatars.githubusercontent.com/u/8113473?v=4","url":"https://github.com/AlexanderPruss"},"created_at":"2020-11-16T20:06:35Z","updated_at":"2021-06-19T16:56:30Z","body":"Implements proposal 1778: https://github.com/godotengine/godot-proposals/issues/1788\r\n\r\nAdds a new `rotated_local` function to `Transform`, usable in GDScript. This makes it more clear that the `Transform.rotated` function will change `Transform.origin`. \r\n\r\nI'm not 100% sure that `rotated_local` is the best name for the new function.\r\n\r\n<i>Bugsquad edit</i>: Fix https://github.com/godotengine/godot-proposals/issues/1788","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":521873901,"public_id":43597,"url":"https://github.com/godotengine/godot/pull/43597","diff_url":"https://github.com/godotengine/godot/pull/43597.diff","patch_url":"https://github.com/godotengine/godot/pull/43597.patch","title":"Make CSharpScript::reload search through loaded assemblies if it couldn't find the class through the scripts metadat.","state":"open","is_draft":false,"authored_by":{"id":665679,"user":"spacechase0","avater":"https://avatars.githubusercontent.com/u/665679?v=4","url":"https://github.com/spacechase0"},"created_at":"2020-11-16T19:19:12Z","updated_at":"2020-11-17T22:19:36Z","body":"Otherwise, classes from assemblies loaded later on (such as for [mods](https://docs.godotengine.org/en/stable/getting_started/workflow/export/exporting_pcks.html)) can't be used as scenes because they can't be found.\r\n\r\nI don't think this will properly differentiate between `NamespaceA.MyClass` and `NamespaceB.MyClass`, but I don't think that currently works anyways from what I saw? Not sure on that though.\r\n\r\nI don't know if there's a better way of doing this. Maybe outputting scripts metadata when exporting a pck and then merging it with the existing one when loading a pck?\r\n\r\nI tested this on the 3.2.3-stable with my current project and then cherry picked onto master and made some adjustments (mainly I noticed the code uses `nullptr` instead of `NULL` now). Let me know if I missed something or need to make some other changes.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":521245122,"public_id":43573,"url":"https://github.com/godotengine/godot/pull/43573","diff_url":"https://github.com/godotengine/godot/pull/43573.diff","patch_url":"https://github.com/godotengine/godot/pull/43573.patch","title":"sprite_3d.cpp: return _is_playing() from public is_playing() function","state":"open","is_draft":false,"authored_by":{"id":233380,"user":"lewiji","avater":"https://avatars.githubusercontent.com/u/233380?v=4","url":"https://github.com/lewiji"},"created_at":"2020-11-15T19:18:45Z","updated_at":"2020-11-22T21:47:02Z","body":"**Godot version:**\r\n3.2.3-stable\r\n\r\n\r\n**OS/device including version:**\r\nWindows 10 / Android\r\n\r\n\r\n**Issue description:**\r\nThe `is_playing()` getter in the `AnimatedSprite3D` class should return the `playing` bool. However, it returns the `Node::is_processing` function instead, which may not always be the same as `playing`. Instead, I think it should be returning the result of the private `AnimatedSprite3D::_is_playing` function to give the expected behaviour.\r\n\r\n\r\n**Steps to reproduce:**\r\nCreate an `AnimatedSprite3d` with an animation. In the `_process` function, print something if `is_playing()`. Nothing is printed.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":521201764,"public_id":43563,"url":"https://github.com/godotengine/godot/pull/43563","diff_url":"https://github.com/godotengine/godot/pull/43563.diff","patch_url":"https://github.com/godotengine/godot/pull/43563.patch","title":"Improved the importer ability to detect colonly and the other markers.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-11-15T14:13:35Z","updated_at":"2021-04-26T07:37:36Z","body":"Improved the importer ability to detect `colonly` and the other markers.\r\n\r\nDepending on how the scene is composed in blender a different naming convention is used, so the markers `colonly`, `col`, `convcolonly`, `noimport` are not always detected.\r\n\r\nFor example, blender map my meshes in this way: `Box001|Cube|Dupli|2` and `Box001|Collisin-colonly|Dupli|2`\r\n\r\nThis PR enhance the detection algorithm. Now it finds the marker and make sure that there are no letters around it.\r\nThis allow to always detects the markers and never miss detect it.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":521166237,"public_id":43552,"url":"https://github.com/godotengine/godot/pull/43552","diff_url":"https://github.com/godotengine/godot/pull/43552.diff","patch_url":"https://github.com/godotengine/godot/pull/43552.patch","title":"Fix highlight for completion options match","state":"open","is_draft":false,"authored_by":{"id":25207137,"user":"gvekan","avater":"https://avatars.githubusercontent.com/u/25207137?v=4","url":"https://github.com/gvekan"},"created_at":"2020-11-15T09:05:29Z","updated_at":"2020-11-16T16:36:29Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nFixes https://github.com/godotengine/godot/issues/43551.\r\nBecause of the solution I created to find the best intersection (match) to highlight between the option and the written word, where substrings > subsequences. I changed the completion options populate algorithm to prioritize substrings over subsequences.\r\n![completion_new](https://user-images.githubusercontent.com/25207137/99180786-a0367d00-2729-11eb-8766-f7487a1af336.gif)\r\n  \r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":520966404,"public_id":43522,"url":"https://github.com/godotengine/godot/pull/43522","diff_url":"https://github.com/godotengine/godot/pull/43522.diff","patch_url":"https://github.com/godotengine/godot/pull/43522.patch","title":"Fix crash when dividing by 0 in Vector2/3i","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2020-11-14T06:03:51Z","updated_at":"2021-08-15T20:18:29Z","body":"Fixes #41125 \r\n\r\nThis PR just add specialized class to handle Vector3i and Vector2i because `b == 0` doesn't work with this types and need to be changed to `b.x == 0 || b.y == 0` or `b.x == 0 || b.y == 0 || b.z == 0`\r\n\r\nI also added check inside `unlikely`, because this shouldn't happens to often ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":520512952,"public_id":43495,"url":"https://github.com/godotengine/godot/pull/43495","diff_url":"https://github.com/godotengine/godot/pull/43495.diff","patch_url":"https://github.com/godotengine/godot/pull/43495.patch","title":"[3.x] Suppress dividing by float 0 warning in Undefined Sanitizers","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2020-11-13T11:05:29Z","updated_at":"2021-08-15T19:52:04Z","body":"~3.2 version of PR #34332, since last Variant changes removed a lot of code which this PR used.~\r\n\r\n~Due performance reasons Vector2, Vector3 and Color are only checked in debug builds.~\r\n\r\nThis PR only suppress warnings about division by float 0 in every situation when we don't do it.\r\n\r\nBefore even this code caused division by 0.0\r\n```\r\nVector2(1,1) / Vector2(1,1)\r\n```","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":517371845,"public_id":43399,"url":"https://github.com/godotengine/godot/pull/43399","diff_url":"https://github.com/godotengine/godot/pull/43399.diff","patch_url":"https://github.com/godotengine/godot/pull/43399.patch","title":"Update PathFollow2D when curve is changed","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-11-08T21:15:52Z","updated_at":"2021-01-13T21:20:58Z","body":"Fixes #20386\r\n\r\nI added a second commit (separately because I wasn't sure if it's necessary) that makes the update delayed, [as suggested by Calinou](https://github.com/godotengine/godot/issues/20386#issuecomment-538466693) \r\n\r\nWithout delay\r\n![5g1UI0eBZu](https://user-images.githubusercontent.com/2223172/98484383-3bea5980-220f-11eb-8cc2-a9438f64cd89.gif)\r\n\r\nWith delay\r\n![1Z2ttsJmYJ](https://user-images.githubusercontent.com/2223172/98484387-3ee54a00-220f-11eb-9222-2bb20a8023f3.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":517168765,"public_id":43382,"url":"https://github.com/godotengine/godot/pull/43382","diff_url":"https://github.com/godotengine/godot/pull/43382.diff","patch_url":"https://github.com/godotengine/godot/pull/43382.patch","title":"[3.x] Fix empty and invisible CSG shapes.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-11-07T17:39:27Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #43381.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":517168734,"public_id":43381,"url":"https://github.com/godotengine/godot/pull/43381","diff_url":"https://github.com/godotengine/godot/pull/43381.diff","patch_url":"https://github.com/godotengine/godot/pull/43381.patch","title":"Fix empty and invisible CSG shapes.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-11-07T17:39:12Z","updated_at":"2021-05-06T15:37:10Z","body":"Currently, there is inconsistency in how CSG shapes create collision shapes when they or their components are invisible or change their visibility:\r\n![CSG323](https://user-images.githubusercontent.com/9253928/98445870-0e6bb600-2112-11eb-8469-c128b2505940.gif)\r\n#40919 significantly improved this, but some inconsistency remains:\r\n![CSG324beta1](https://user-images.githubusercontent.com/9253928/98445913-525ebb00-2112-11eb-990e-a31d000d59ed.gif)\r\nThis PR makes the collision shapes consistent with the CSG shape:\r\n![CSG324fixed](https://user-images.githubusercontent.com/9253928/98445960-a10c5500-2112-11eb-8325-d26d022556eb.gif)\r\n\r\nFixes #43251.\r\n\r\nFor those that are interested, the project used to create the above tests is: [43251.zip](https://github.com/godotengine/godot/files/5505147/43251.zip). It consists of 20 tests: every combination of changing the visibility of a platform or part thereof and a `RigidBody` ball above it to test the `CollisionShape`. \r\n\r\nThere are two layers. The top layer creates the shapes with the toggled components visible. The bottom layer creates the shapes with the toggled components invisible. Then the visibility of the CSG shape, or a part of it, is toggled every two seconds.\r\n\r\nEach layer has three rows. The front row of each layer has three shapes that consist of a single shape. The second row of each layer has three shapes that consist of double shapes created from two shapes without a `CSGCombiner`. The back row of each layer has four shapes that consist of double shapes created from two shapes inside a `CSGCombiner`.\r\n\r\nIn the front row, the left two shapes are contained within a `CSGCombiner`; the right one is on its own. The left shape (Test1 and Test11) toggles the visibility of the `CSGCombiner`. The middle shape (Test2 and Test12) toggles the visibility of the shape inside the `CSGCombiner`. The right shape (Test3 and Test13) toggles the visibility of the shape.\r\n\r\nIn the middle row, the left two shapes toggle the visibility of the parent shape; the right shape toggles the visibility of the child shape. In the left shape (Test4 and Test14) the ball is above the parent shape. In the middle shape (Test5 and Test15) the ball is above the child shape. In the right shape (Test 6 and Test16) the ball is also above the child shape.\r\n\r\nIn the back row, the left two shapes toggle the visibility of the `CSGCombiner`; the right two shapes toggle the visibility of a child shape. In the left most shape (Test7 and Test17) the ball is above the first child. In the second to left most shape (Test8 and Test18) the ball is above the second child. In the second to right most shape (Test9 and Test19) the ball is above the first child. In the right most shape (Test10 and Test20) the ball is above the second child.\r\n\r\nFinally, there was a [discussion](https://github.com/godotengine/godot/issues/43251#issuecomment-721767274) in #43251 about what the right solution was. Two options were floated:\r\n1. Keep one mesh, collisions only happen with visible CSG components i.e. the bug is that invisible individual CSG Shapes are collidable when they shouldn't be.\r\n2. Have separate meshes for the VisualInstance and the CollisionShape. The parameters visible and use_collision could be used to control which CSG components are visible and which are collidable.\r\n\r\nThis PR implements option 1. However, @hoontee preferred option 2 and created #43322 to implement that approach. I think option 1 is the better solution, because it is more intuitive. Furthermore, if a user has a need for separating the `VisualInstance` and the `CollisionShape`, they can already do this: they literally create two separate meshes and, with one, enable `Use Collision` and remove it from the `VisualInstance` layer. To demonstrate this I've recreated the project presented in [#43322](https://github.com/godotengine/godot/pull/43322#issuecomment-722075246): [43251a.zip](https://github.com/godotengine/godot/files/5505126/43251a.zip). This approach has the added advantage of not constraining the differences to the components of the CSG shape.\r\n![CSGCombo](https://user-images.githubusercontent.com/9253928/98447120-4ecf3200-211a-11eb-9ae8-4d08c9c4f1f2.gif)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":517137691,"public_id":43377,"url":"https://github.com/godotengine/godot/pull/43377","diff_url":"https://github.com/godotengine/godot/pull/43377.diff","patch_url":"https://github.com/godotengine/godot/pull/43377.patch","title":"Add a script to install Linux dependencies for building","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-11-07T13:26:46Z","updated_at":"2021-06-21T15:06:12Z","body":"This closes https://github.com/godotengine/godot-proposals/issues/1614.\r\n\r\nPlease test on various Linux distributions, preferably in fresh containers or VMs to ensure the set of dependencies installed is sufficient to build Godot.\r\n\r\nCommand to test on a fresh system:\r\n\r\n```bash\r\n# Install `curl` using the distribution's package manager, then run:\r\ncurl -LO https://github.com/Calinou/godot/archive/add-linux-dependencies-install-script.tar.gz && tar xf add-linux-dependencies-install-script.tar.gz && cd godot-add-linux-dependencies-install-script && misc/scripts/install_linuxbsd_deps.sh && export PATH=\"$HOME/.local/bin:$PATH\" && scons\r\n# (triple-click to select the whole line)\r\n```\r\n\r\n*All systems listed below are fresh Docker containers.*\r\n\r\n## Successfully tested on\r\n\r\n- Debian 10 (`stable`)\r\n  - Prints warning about GCC version not being supported and fails to build due to this.\r\n- Fedora 33\r\n- Ubuntu 18.04\r\n- Ubuntu 20.04\r\n\r\n## Fails on\r\n\r\n- Debian bullseye (`testing`)\r\n  - GCC version check fails with: `misc/scripts/install_linuxbsd_deps.sh: line 39: bullseye: unbound variable`\r\n\r\n## TODO\r\n\r\n- Install Clang when the GCC version is too old (and instruct the user to pass `use_llvm=yes` to the SCons command line).\r\n- Add a `-y` switch that automatically confirms package installation (for use on unattended systems and CI). We could do this by default, but there's a risk that conflicting packages might be removed. Some distributions' package managers have a \"safe `-y`\" switch that only applies if no packages will be removed, but not all.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":513469307,"public_id":43240,"url":"https://github.com/godotengine/godot/pull/43240","diff_url":"https://github.com/godotengine/godot/pull/43240.diff","patch_url":"https://github.com/godotengine/godot/pull/43240.patch","title":"Docs: Fix Mainloop example","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2020-10-31T17:26:40Z","updated_at":"2021-03-22T23:37:40Z","body":"Before adding the C# code, I want to have a valid GDScript. I tested with various approaches and I think using the Input singleton is the easiest and by far shortest way of reimplementing the logic we had earlier in the example.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":512921766,"public_id":43207,"url":"https://github.com/godotengine/godot/pull/43207","diff_url":"https://github.com/godotengine/godot/pull/43207.diff","patch_url":"https://github.com/godotengine/godot/pull/43207.patch","title":"Fix low directional shadow quality on ultrawide aspect ratios","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-10-30T11:07:05Z","updated_at":"2021-08-06T11:24:33Z","body":"This applies to both GLES3 and GLES2.\r\n\r\nThis closes #23603.\r\n\r\n**Testing project (`3.x`):** [test_light_atlas_bias.zip](https://github.com/godotengine/godot/files/6430084/test_light_atlas_bias.zip)\r\n\r\n## Preview\r\n\r\n*7680×1440 (3-monitor setup with a 48:9 aspect ratio)*\r\n\r\n### Before\r\n\r\n![2020-10-30_11 58 10](https://user-images.githubusercontent.com/180032/97698260-8b5eb600-1aa8-11eb-8e01-2e113e919994.png)\r\n\r\n### After\r\n\r\n![2020-10-30_11 58 42](https://user-images.githubusercontent.com/180032/97698233-81d54e00-1aa8-11eb-81c4-093e282cc29b.png)\r\n\r\n### In `master` (for reference)\r\n\r\n![2020-10-30_12 01 39](https://user-images.githubusercontent.com/180032/97698229-813cb780-1aa8-11eb-835f-3a50616508c2.png)\r\n\r\nI'll see if I can backport shadow pancaking in a future PR. It should greatly decrease the amount of visible shadow peter-panning.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":512216804,"public_id":43181,"url":"https://github.com/godotengine/godot/pull/43181","diff_url":"https://github.com/godotengine/godot/pull/43181.diff","patch_url":"https://github.com/godotengine/godot/pull/43181.patch","title":"Replace String, StringName comparisons with \"\", String(), StringName() to is_empty()","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-10-29T11:47:22Z","updated_at":"2021-04-15T06:13:14Z","body":"Regex to replace:\r\n`((?:[a-zA-Z0-9_]+::)?([a-zA-Z0-9_]+(\\(\\))?(\\[.+\\])*)((\\.|->)(([a-zA-Z0-9_]+(\\(\\))?(\\[.+\\])*)))*) == (String\\(\\)|\"\")` -> `$1.is_empty()`\r\n`((?:[a-zA-Z0-9_]+::)?([a-zA-Z0-9_]+(\\(\\))?(\\[.+\\])*)((\\.|->)(([a-zA-Z0-9_]+(\\(\\))?(\\[.+\\])*)))*) != (String\\(\\)|\"\")` -> `!$1.is_empty()`\r\n\r\nInclude files: `*.cpp, *.h, *.hpp`\r\nIgnore files: `thirdparty/*, tests/test_string.h`\r\n\r\nOpening this as a draft to encourage discussion on how this condition should be formatted. Also, possible recommendations for the format script/check.\r\n\r\n**BENCHMARKS** (Thanks @Xrayez)\r\n```\r\n===============================================================================\r\ntests/test_string.h:1300:\r\nTEST CASE:  [Stress][String] Empty via ' == String()'\r\n\r\n0.017540 s: [Stress][String] Empty via ' == String()'\r\n===============================================================================\r\ntests/test_string.h:1309:\r\nTEST CASE:  [Stress][String] Empty via `is_empty()`\r\n\r\n0.015278 s: [Stress][String] Empty via `is_empty()`\r\n===============================================================================\r\n```\r\n\r\n---\r\n\r\n# Important: This PR also:\r\n\r\n- Adds `is_empty` and `length` to `string_name.h`\r\n- Adds two stress tests to `test_string.h`\r\n- Changes to `.empty()` on `std::string`s\r\n- Makes some formatting/organization on `string_name.h`\r\n\r\nAll manual changes are in my branch, [`string-empty-prelude`](https://github.com/nathanfranke/godot/tree/string-empty-prelude)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":510321174,"public_id":43111,"url":"https://github.com/godotengine/godot/pull/43111","diff_url":"https://github.com/godotengine/godot/pull/43111.diff","patch_url":"https://github.com/godotengine/godot/pull/43111.patch","title":"New icons for ParallaxBackground & ParallaxLayer","state":"open","is_draft":false,"authored_by":{"id":25551525,"user":"junkajii","avater":"https://avatars.githubusercontent.com/u/25551525?v=4","url":"https://github.com/junkajii"},"created_at":"2020-10-26T21:33:54Z","updated_at":"2020-10-26T21:42:14Z","body":"**ParallaxLayer** only works inside **ParallaxBackground**, icons make sense now.\r\n\r\n![icons](https://user-images.githubusercontent.com/25551525/97230563-e9458200-17b8-11eb-980a-cee9ed6670a1.png)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":509670033,"public_id":43082,"url":"https://github.com/godotengine/godot/pull/43082","diff_url":"https://github.com/godotengine/godot/pull/43082.diff","patch_url":"https://github.com/godotengine/godot/pull/43082.patch","title":"Fix for incorrect line number warnings when redeclaring variables","state":"open","is_draft":false,"authored_by":{"id":5622899,"user":"mateosss","avater":"https://avatars.githubusercontent.com/u/5622899?v=4","url":"https://github.com/mateosss"},"created_at":"2020-10-25T22:00:06Z","updated_at":"2020-11-27T14:11:10Z","body":"Solves #42884 as #43019 did, but for master.\r\nDoes the same as the previous PR did for 3.2, but also solves it for function parameters and constants.\r\n\r\nBefore\r\n\r\n```go\r\nfunc f(\r\n    x,\r\n    x\r\n): <- Error points here\r\n    pass\r\n\r\nfunc f(x):\r\n    const x = 1 \r\n    pass <- Error points here\r\n```\r\n\r\nNow\r\n\r\n```go\r\nfunc f(\r\n    x,\r\n    x <- Error points here\r\n): \r\n    pass\r\n\r\nfunc f(x):\r\n    const x = 1 <- Error points here\r\n    pass\r\n```\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":509666854,"public_id":43081,"url":"https://github.com/godotengine/godot/pull/43081","diff_url":"https://github.com/godotengine/godot/pull/43081.diff","patch_url":"https://github.com/godotengine/godot/pull/43081.patch","title":"Keep property values when extending script","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-10-25T21:35:41Z","updated_at":"2020-10-25T21:35:41Z","body":"Closes #37480\r\n\r\nThis can also trigger when replacing a script for one node. Making it work only with script extending would make the code more complicated, because the editor doesn't really differentiate between extending and attaching. I don't think this is a big issue.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":509612184,"public_id":43076,"url":"https://github.com/godotengine/godot/pull/43076","diff_url":"https://github.com/godotengine/godot/pull/43076.diff","patch_url":"https://github.com/godotengine/godot/pull/43076.patch","title":"Added a more descriptive error message for file operations in core_bind.cpp","state":"open","is_draft":false,"authored_by":{"id":11459028,"user":"Anutrix","avater":"https://avatars.githubusercontent.com/u/11459028?v=4","url":"https://github.com/Anutrix"},"created_at":"2020-10-25T15:35:29Z","updated_at":"2021-03-20T20:26:32Z","body":"~Added a more descriptive error message for file operations in core_bind.cpp for android. Just a tip that it might because of lack of read-write permission.~\r\n\r\nAdded a more descriptive error message for file operations in `core_bind.cpp`. Just a tip that it might because of lack of read-write permission in any platform. Thx @Xrayez for https://github.com/godotengine/godot/pull/43076#issuecomment-718248873.\r\n\r\nAddresses an issue(#42959) in #42719.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":509584468,"public_id":43072,"url":"https://github.com/godotengine/godot/pull/43072","diff_url":"https://github.com/godotengine/godot/pull/43072.diff","patch_url":"https://github.com/godotengine/godot/pull/43072.patch","title":"Fix Vector2.angle_to_point() being reversed","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-10-25T12:25:26Z","updated_at":"2020-10-25T17:47:29Z","body":"Fixes #43063 (see the rationale)\r\nResolves #16307","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":509552106,"public_id":43068,"url":"https://github.com/godotengine/godot/pull/43068","diff_url":"https://github.com/godotengine/godot/pull/43068.diff","patch_url":"https://github.com/godotengine/godot/pull/43068.patch","title":"Allow renaming to change the case of Windows directories","state":"open","is_draft":false,"authored_by":{"id":659057,"user":"cooperra","avater":"https://avatars.githubusercontent.com/u/659057?v=4","url":"https://github.com/cooperra"},"created_at":"2020-10-25T07:47:35Z","updated_at":"2020-10-25T08:04:32Z","body":"Somewhat related to #42992, but different and on Windows.\r\n\r\nHere are the steps to reproduce the problem that this fixes:\r\n- On Windows, create a new folder \"Foo\" in Godot's file panel\r\n- Right-click -> Rename\r\n- Enter \"foO\" in the rename dialog that appears and submit it\r\n- **Expected**: the folder is renamed to \"foO\".\r\n- **Actual**: `Error moving: Foo` alert and the name is unchanged\r\n\r\nThis was only a problem with folders. Files already had a fix.\r\n\r\nI should point out that the `::_wrename()` call used to rename the folders also works on files, so it doesn't seem like the \"juggling\" workaround in the existing fix is needed anymore, at least on my system.\r\n\r\nTested on Windows 10.\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":509277852,"public_id":43044,"url":"https://github.com/godotengine/godot/pull/43044","diff_url":"https://github.com/godotengine/godot/pull/43044.diff","patch_url":"https://github.com/godotengine/godot/pull/43044.patch","title":"Fix import hints breaking node paths in animations","state":"open","is_draft":false,"authored_by":{"id":229837,"user":"rburing","avater":"https://avatars.githubusercontent.com/u/229837?v=4","url":"https://github.com/rburing"},"created_at":"2020-10-23T23:16:51Z","updated_at":"2021-06-08T00:50:08Z","body":"Keep track of renamed nodes (which are processed first) so that in the animations (which are processed last) the paths can be fixed.\r\n\r\nFixes #38809. Importing the minimal example there now gives the following verbose output:\r\n\r\n    Fix: Renamed Marker-col to Marker\r\n    Fix: Correcting node path in animation track: Marker-col should be Marker\r\n\r\nSmall bonus: fixes the unreported bug that the `convcolonly` hint was not removed in case of an empty object with a draw type.\r\n\r\nBugsquad Edit:\r\nFixes: https://github.com/godotengine/godot/issues/42041 https://github.com/godotengine/godot/issues/38163","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":508736970,"public_id":43027,"url":"https://github.com/godotengine/godot/pull/43027","diff_url":"https://github.com/godotengine/godot/pull/43027.diff","patch_url":"https://github.com/godotengine/godot/pull/43027.patch","title":"Add get_native_handle to OS (Godot 4.0 version)","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2020-10-23T05:55:38Z","updated_at":"2020-10-23T12:30:12Z","body":"Godot 4.0 version of my get_native_handle PR we added to Godot 3. Work in progress, have to add the code that gets the info for the correct window and add support for Vulkan handles so this can be used for Vulkan support in GDNative.\r\n\r\n*Bugsquad edit: 4.0 version of #42531.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":508447887,"public_id":43011,"url":"https://github.com/godotengine/godot/pull/43011","diff_url":"https://github.com/godotengine/godot/pull/43011.diff","patch_url":"https://github.com/godotengine/godot/pull/43011.patch","title":"Add a Pause button to the 2D and 3D editor","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-10-22T17:26:57Z","updated_at":"2021-04-22T06:38:32Z","body":"Salvaged from https://github.com/godotengine/godot/pull/31070. Thanks @Chaosus :slightly_smiling_face: \r\n\r\nThis can be used to decrease CPU/GPU usage if particles or shaders are being displayed in the editor.\r\n\r\n**Note:** Since [low-processor usage mode hasn't been reimplemented yet in `master`](https://github.com/godotengine/godot/issues/39511), this won't decrease CPU/GPU usage significantly in the `master` branch, only in `3.2` if it's backported there.\r\n\r\n**Don't merge yet** as pausing will break freelook in the 3D editor and scrolling in the script editor if smooth scrolling is enabled (related to https://github.com/godotengine/godot/issues/28385, partially addressed by https://github.com/godotengine/godot/pull/42704).\r\n\r\nI can make a 3.2 version of this PR once it's ready.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/942.\r\n\r\n## Preview\r\n\r\n*Freeze* icon is at the bottom.\r\n\r\n![image](https://user-images.githubusercontent.com/180032/97311228-6d087880-1864-11eb-90d4-1beb1952ffcb.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":508403757,"public_id":43008,"url":"https://github.com/godotengine/godot/pull/43008","diff_url":"https://github.com/godotengine/godot/pull/43008.diff","patch_url":"https://github.com/godotengine/godot/pull/43008.patch","title":"feat(editor/2d): Add zoom speed setting","state":"open","is_draft":false,"authored_by":{"id":1263211,"user":"erictuvesson","avater":"https://avatars.githubusercontent.com/u/1263211?v=4","url":"https://github.com/erictuvesson"},"created_at":"2020-10-22T16:08:54Z","updated_at":"2021-03-17T18:01:46Z","body":"Fixes https://github.com/godotengine/godot-proposals/issues/863\r\n\r\n---\r\n\r\nIs there somewhere where the settings are documented?\r\nWould be nice to have documentation or tooltips on the different kind of settings.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":507860988,"public_id":42975,"url":"https://github.com/godotengine/godot/pull/42975","diff_url":"https://github.com/godotengine/godot/pull/42975.diff","patch_url":"https://github.com/godotengine/godot/pull/42975.patch","title":"Fixed: Tabs not selected in RichTextLabel","state":"open","is_draft":false,"authored_by":{"id":18557453,"user":"torabshaikh","avater":"https://avatars.githubusercontent.com/u/18557453?v=4","url":"https://github.com/torabshaikh"},"created_at":"2020-10-21T21:00:49Z","updated_at":"2020-11-24T04:36:41Z","body":"Fix #42656 \r\n![Rich_Text](https://user-images.githubusercontent.com/18557453/96786921-8fd30100-140e-11eb-8a6e-aebd6060cd8d.jpg)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":506598365,"public_id":42929,"url":"https://github.com/godotengine/godot/pull/42929","diff_url":"https://github.com/godotengine/godot/pull/42929.diff","patch_url":"https://github.com/godotengine/godot/pull/42929.patch","title":"[3.x] Give each RigidBody its own DirectBodyState wrapper.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-20T08:42:59Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #42928.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":506598176,"public_id":42928,"url":"https://github.com/godotengine/godot/pull/42928","diff_url":"https://github.com/godotengine/godot/pull/42928.diff","patch_url":"https://github.com/godotengine/godot/pull/42928.patch","title":"Give each RigidBody its own DirectBodyState wrapper.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-20T08:42:40Z","updated_at":"2021-02-14T08:22:51Z","body":"Currently 2D and 3D, Godot and Bullet physics servers have a singleton wrapper for `DirectBodyState`. This means that only one `RigidBody`'s `DirectBodyState` can be accessed at any one time. This is an unnecessary and cumbersome restriction that is not thread safe. Aside from also being used to store the current step size, it's just a wrapper, so I can see no reason why this should be a singleton.\r\n\r\nThis PR gives each `RigidBody` its own `DirectBodyState` wrapper and moves the current step size to `Space`, where it belongs and already done in Bullet.\r\n\r\nFixes #42877.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":506305114,"public_id":42920,"url":"https://github.com/godotengine/godot/pull/42920","diff_url":"https://github.com/godotengine/godot/pull/42920.diff","patch_url":"https://github.com/godotengine/godot/pull/42920.patch","title":"Enlarge the thickness of the triangle depending on angle","state":"open","is_draft":false,"authored_by":{"id":6265307,"user":"reduz","avater":"https://avatars.githubusercontent.com/u/6265307?v=4","url":"https://github.com/reduz"},"created_at":"2020-10-19T22:01:15Z","updated_at":"2020-10-19T22:06:47Z","body":"Avoids problems with holes in SDF collision","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":506296548,"public_id":42918,"url":"https://github.com/godotengine/godot/pull/42918","diff_url":"https://github.com/godotengine/godot/pull/42918.diff","patch_url":"https://github.com/godotengine/godot/pull/42918.patch","title":"Add Inspector section highlight during drag and drop","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2020-10-19T21:43:38Z","updated_at":"2020-10-21T18:25:45Z","body":"Revamped #39650. \r\n\r\nBetter user feedback while waiting for the drop unfold timer.\r\n![folder](https://user-images.githubusercontent.com/25907608/96514947-bd7c4680-1264-11eb-8a77-82f1593b4888.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":505459792,"public_id":42885,"url":"https://github.com/godotengine/godot/pull/42885","diff_url":"https://github.com/godotengine/godot/pull/42885.diff","patch_url":"https://github.com/godotengine/godot/pull/42885.patch","title":"Make Godot close the file's tab when it is deleted","state":"open","is_draft":false,"authored_by":{"id":6501975,"user":"Ev1lbl0w","avater":"https://avatars.githubusercontent.com/u/6501975?v=4","url":"https://github.com/Ev1lbl0w"},"created_at":"2020-10-18T11:53:40Z","updated_at":"2020-10-18T14:26:21Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #39469\r\n\r\nChanged default behavior of Godot when deleting an open file; instead of leaving it as an unsaved file, now it removes it from the tab.\r\n![Peek 2020-10-18 12-49](https://user-images.githubusercontent.com/6501975/96366661-e0153f00-1140-11eb-97bf-a11ebf4ae44f.gif)\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":505423681,"public_id":42880,"url":"https://github.com/godotengine/godot/pull/42880","diff_url":"https://github.com/godotengine/godot/pull/42880.diff","patch_url":"https://github.com/godotengine/godot/pull/42880.patch","title":"Fix custom shortcuts not being saved in some cases","state":"open","is_draft":false,"authored_by":{"id":2185163,"user":"gvaneyck","avater":"https://avatars.githubusercontent.com/u/2185163?v=4","url":"https://github.com/gvaneyck"},"created_at":"2020-10-18T06:47:39Z","updated_at":"2021-01-26T02:08:32Z","body":"Fixes: #42862\r\nCan be cherry-picked to 3.0+","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418403]},{"id":505313934,"public_id":42875,"url":"https://github.com/godotengine/godot/pull/42875","diff_url":"https://github.com/godotengine/godot/pull/42875.diff","patch_url":"https://github.com/godotengine/godot/pull/42875.patch","title":"Add customizable main loop iterator proposal code","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-10-17T16:59:43Z","updated_at":"2021-07-05T10:33:02Z","body":"_PR has the aim to show the code change needed to integrate this proposal: https://github.com/godotengine/godot-proposals/issues/1592_\r\n\r\n---\r\n\r\nIt's possible to customize the [Main::iterator](https://github.com/godotengine/godot/blob/master/main/main.cpp#L2349) from a module by adding some rules on the module `config.py`:\r\n\r\n**my_module/config.py**\r\n```python\r\ndef can_build(env, platform):\r\n    return True\r\n\r\ndef configure(env):\r\n    pass\r\n\r\ndef has_custom_iterator():\r\n    # Optional\r\n    return True\r\n\r\ndef disable_main_iterator_process():\r\n    # Optional\r\n    return False\r\n\r\ndef disable_main_iterator_physics():\r\n    # Optional\r\n    return True\r\n\r\ndef disable_main_iterator_audio():\r\n    # Optional\r\n    return False\r\n```\r\n\r\n**has_custom_iterator**\r\nWhen `has_custom_iterator` returns `True`, the compiler will add the function `custom_iteration` on the `main.cpp` that the module can implement:\r\n\r\n**my_module/custom_iterator.cpp**\r\n```cpp\r\nbool Main::custom_iteration(float p_process_delta, float p_physics_delta, MainFrameTime *p_frame_time, float p_time_scale) {\r\n\r\n\t// This function is called each frame, before godot `process`.\r\n\r\n\t// Controls whether wants to stop the engine execution.\r\n\treturn true;\r\n}\r\n```\r\n\r\nYou can already see it in action here: https://github.com/AndreaCatania/godex/blob/main/main.cpp#L14\r\n\r\n**disable_main_iterator_process**, **disable_main_iterator_physics** and **disable_main_iterator_audio**\r\nWhen these functions, which are optional, returns `True` the specific process within the iterator function is disabled. For example, when `disable_main_iterator_physics` returns `True` the physics is not processed.\r\n\r\nThis PR, also adds 2 new functions on the `Engine.h` that fully allow to control the engine physics execution from a module.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518,4418914]},{"id":505000816,"public_id":42858,"url":"https://github.com/godotengine/godot/pull/42858","diff_url":"https://github.com/godotengine/godot/pull/42858.diff","patch_url":"https://github.com/godotengine/godot/pull/42858.patch","title":"Document modification limitations with Pool*Arrays passed by reference","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-10-16T17:36:13Z","updated_at":"2021-08-06T11:24:33Z","body":"See #15265.\r\n\r\nI presume this doesn't apply to PackedArrays in `master`, so I opened this on the `3.2` branch.","target_branch":"3.x","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":504830871,"public_id":42850,"url":"https://github.com/godotengine/godot/pull/42850","diff_url":"https://github.com/godotengine/godot/pull/42850.diff","patch_url":"https://github.com/godotengine/godot/pull/42850.patch","title":"Fix 3D physics clearing forces after each iteration.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-16T13:13:11Z","updated_at":"2020-10-25T06:15:57Z","body":"As identified in #30061 and discussed in #38646, in 2D physics, `add_central_force()`, `add_force()`, `add_torque()` correctly, and as [documented](https://docs.godotengine.org/en/stable/classes/class_rigidbody2d.html#class-rigidbody2d-method-add-central-force), add a constant force and/or torque to the `RigidBody2D`. However, currently, in 3D physics, `add_central_force()`, `add_force()`, `add_torque()` behave like `apply_central_impulse()`, `apply_impulse()` and `apply_torque_impulse()` i.e. they are not constant. The `applied_force` and `applied_torque` are incorrectly being cleared at the end of each iteration.\r\n\r\nCurrently, in 3D, the only difference between `add_central_force()`, `add_force()`, `add_torque()`, and `apply_central_impulse()`, `apply_impulse()` and `apply_torque_impulse()` respectively is the unit used; the factor of delta:\r\n- `add_central_force(offset, force)` = `apply_central_impulse(offset, force * delta)`\r\n- `add_force(force)` = `add_impulse(force_vector * delta)`\r\n- `add_torque(force)` = `apply_torque_impulse(force * delta)`\r\n\r\nThis PR makes 3D physics consistent with 2D physics and the [documentation](https://docs.godotengine.org/en/stable/classes/class_rigidbody.html). It ensures that `add_central_force()`, `add_force()`, `add_torque()` correctly add a constant force and/or torque to the `RigidBody3D`. It also adds the missing properties `applied_force` and `applied_torque` to `RigidBody3D`, which are available in `RigidBody2D`.\r\n\r\nFixes #38646.\r\n\r\nNote: This is my suggested alternative to #38648, which also makes 2D and 3D consistent, but would do it by making 2D the same as 3D i.e. incorrectly clearing the `applied_force` and `applied_torque` at the end of each 2D physics iteration, which would incorrectly make `add_central_force()`, `add_force()`, `add_torque()` behave like `apply_central_impulse()`, `apply_impulse()` and `apply_torque_impulse()` respectively.\r\n\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":504463527,"public_id":42843,"url":"https://github.com/godotengine/godot/pull/42843","diff_url":"https://github.com/godotengine/godot/pull/42843.diff","patch_url":"https://github.com/godotengine/godot/pull/42843.patch","title":"When OptionButton is pressed, give focus to selected option","state":"open","is_draft":false,"authored_by":{"id":229837,"user":"rburing","avater":"https://avatars.githubusercontent.com/u/229837?v=4","url":"https://github.com/rburing"},"created_at":"2020-10-16T00:04:50Z","updated_at":"2020-10-16T06:57:48Z","body":"A simple usability improvement: give focus to the currently selected option when an `OptionButton` is pressed.\r\n\r\n![godot_optionbutton_focus](https://user-images.githubusercontent.com/229837/96195288-a7ad0f80-0f4c-11eb-971f-24052106c3fd.gif)\r\n\r\nThe previous behavior was to focus on *no option in particular* (index `-1`), which was less clear (find the filled circle), less standard (compare e.g. web browsers) and less convenient. For users of the arrow keys, the previous behavior required (in all but two cases) at least one useless button press (to give focus to the first or last item).\r\n\r\nIt has been asked on the German Godot Community Discord and [in Q&A](https://godotengine.org/qa/48084/how-to-set-focus-on-an-item-in-option-button-by-code) how to achieve this functionality. As far as I could see it was impossible in plain GDScript. It was easy to implement in C++ (the commit is basically a one-liner), and I see no reason to keep the old behavior or to have any other behavior, hence this humble PR.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":504291236,"public_id":42832,"url":"https://github.com/godotengine/godot/pull/42832","diff_url":"https://github.com/godotengine/godot/pull/42832.diff","patch_url":"https://github.com/godotengine/godot/pull/42832.patch","title":"Correction in class reference, example of String.rsplit","state":"open","is_draft":false,"authored_by":{"id":23386940,"user":"h0lley","avater":"https://avatars.githubusercontent.com/u/23386940?v=4","url":"https://github.com/h0lley"},"created_at":"2020-10-15T18:18:37Z","updated_at":"2020-10-15T18:19:17Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":501497859,"public_id":42736,"url":"https://github.com/godotengine/godot/pull/42736","diff_url":"https://github.com/godotengine/godot/pull/42736.diff","patch_url":"https://github.com/godotengine/godot/pull/42736.patch","title":"Add external editor presets","state":"open","is_draft":false,"authored_by":{"id":4833621,"user":"opl-","avater":"https://avatars.githubusercontent.com/u/4833621?v=4","url":"https://github.com/opl-"},"created_at":"2020-10-12T10:58:33Z","updated_at":"2021-03-21T16:15:15Z","body":"You can choose a preset to set `exec_path` and `exec_flags` to values for the chosen editor. Optionally, if your editor is not in PATH, you can change the `exec_path` to a non-empty path to override the preset, while keeping the preset `exec_flags` value for the selected editor.\r\n\r\nChoosing \"Custom\" (default) as the preset uses the old behavior.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":501332849,"public_id":42730,"url":"https://github.com/godotengine/godot/pull/42730","diff_url":"https://github.com/godotengine/godot/pull/42730.diff","patch_url":"https://github.com/godotengine/godot/pull/42730.patch","title":"Change reparenting new node to not move pos.","state":"open","is_draft":false,"authored_by":{"id":16217563,"user":"willnationsdev","avater":"https://avatars.githubusercontent.com/u/16217563?v=4","url":"https://github.com/willnationsdev"},"created_at":"2020-10-12T06:17:04Z","updated_at":"2020-10-13T10:21:23Z","body":"Closes godotengine/godot-proposals#1652.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":501105184,"public_id":42712,"url":"https://github.com/godotengine/godot/pull/42712","diff_url":"https://github.com/godotengine/godot/pull/42712.diff","patch_url":"https://github.com/godotengine/godot/pull/42712.patch","title":"[3.x] Add shape data to Bullet Area overlap data.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-11T09:01:58Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of  #42711.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":501105137,"public_id":42711,"url":"https://github.com/godotengine/godot/pull/42711","diff_url":"https://github.com/godotengine/godot/pull/42711.diff","patch_url":"https://github.com/godotengine/godot/pull/42711.patch","title":"Add shape data to Bullet Area overlap data.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-11T09:01:41Z","updated_at":"2021-02-14T08:43:32Z","body":"Currently, Bullet physics Areas' `area_shape_entered`, `area_shape_exited`, `body_shape_entered` and `body_shape_exited` signals always report 0 for the `area_shape`, `body_shape` and `self_shape`:\r\nhttps://github.com/godotengine/godot/blob/bf37ab52b3ee4b14f235cfa1ea9e48c24c616bb3/modules/bullet/area_bullet.cpp#L105-L108\r\n\r\nThis PR adds the `area_shape`, `body_shape` and `self_shape` ids to the signals.\r\nIt also removes the use of `friend` and `goto` in the collision detection function, and renames variables used so the code is easier to read and understand.\r\n\r\nFixes #19290.\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":501053513,"public_id":42708,"url":"https://github.com/godotengine/godot/pull/42708","diff_url":"https://github.com/godotengine/godot/pull/42708.diff","patch_url":"https://github.com/godotengine/godot/pull/42708.patch","title":"Clarified usage of TreeItem navigation functions.","state":"open","is_draft":false,"authored_by":{"id":1520613,"user":"drentsoft","avater":"https://avatars.githubusercontent.com/u/1520613?v=4","url":"https://github.com/drentsoft"},"created_at":"2020-10-10T23:51:24Z","updated_at":"2020-10-14T12:07:35Z","body":"Clarified usage of TreeItem navigation functions.\r\nAdded small example to get_children() description to help understand how to walk through the children of a TreeItem.\r\nClarified that get_next(), get_next_visible(), get_prev() and get_prev_visible() refer to the siblings of the current TreeItem rather than the next/previous child. It seems that is a common misconception based on the original wording that get_children() will return the first child and get_next() will return the next child TreeItem similar to how Directory.list_dir_begin() and Directory.get_next() works.\r\nAddresses issue #42609 ","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":501028655,"public_id":42704,"url":"https://github.com/godotengine/godot/pull/42704","diff_url":"https://github.com/godotengine/godot/pull/42704.diff","patch_url":"https://github.com/godotengine/godot/pull/42704.patch","title":"Disable script editor smooth scrolling by default due to bugs","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-10-10T19:52:31Z","updated_at":"2021-04-16T16:53:51Z","body":"Fixing this bug doesn't appear to be trivial (I tried a while ago), so disabling by default should alleviate the issue for now.\r\n\r\nThe way the current smooth scrolling algorithm works isn't really conductive to a good user experience anyway. It's the first option I disable in Godot's editor, even though I don't disable the equivalent feature in Visual Studio Code :slightly_smiling_face: \r\n\r\nThis partially addresses #28385.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":500971108,"public_id":42690,"url":"https://github.com/godotengine/godot/pull/42690","diff_url":"https://github.com/godotengine/godot/pull/42690.diff","patch_url":"https://github.com/godotengine/godot/pull/42690.patch","title":"[3.x] Implement ResourceImporter version and respect import params when testing for reimport.","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2020-10-10T12:43:59Z","updated_at":"2021-08-06T11:24:33Z","body":"This is a version of #42689 for **3.2**.\r\n\r\n**The problem**\r\nWhen multiply contributors work on the same project and contributor A changes the import parameter for some resource, this change remains unprocessed by the editor for contributor B. Also, there is no clean way to tell the editor if a custom resource importer updated and affected resources needs to be reimported. All of this leads to sneaky bugs.\r\n\r\n**The solution**\r\nTo provide consistency between imported resources for multiply project contributors, we need to reimport resources if import params got changed outside the project (via git, for example). For now, only Textures are reimported and only in some cases (if I change compression type, or change supported by project compression formats). With this PR resources will be reimported on any parameter change. This also introduces `ResourceImporter.get_importer_version() -> int`. Changing the version of the importer will re-import all associated resources.\r\n\r\n**How to test** \r\n\r\nReimport on params change:\r\n- open test project\r\n- edit the import file with a text editor, `res://hello.txt.import`, for example\r\n- change param`prefix`\r\n- switch back to Godot editor\r\n- ensure `hello.txt` is reimported - you can inspect `hello.txt-<hash>.tres` in `.godot/import` folder (no reimport without PR)\r\n\r\nReimport on importer version change:\r\n- change value returned by `get_importer_version()` in `res://addons/hello_world/plugin.gd`\r\n- restart the editor\r\n- ensure `hello.txt` is reimported - you can inspect `hello.txt-<hash>.tres` in `.godot/import` folder (no reimport without PR)\r\n\r\n**Test project**\r\n[importer_version_3.2.zip](https://github.com/godotengine/godot/files/5358979/importer_version_3.2.zip)\r\n\r\n\r\n**Notes**\r\nI receive some warnings on import when using EditorImportPlugin (everything is ok with native ResourceImporters), this is related to the way how custom resources works, I guess, not this PR:\r\n<img width=\"860\" alt=\"Screenshot 2020-10-10 at 15 23 07\" src=\"https://user-images.githubusercontent.com/122736/95655242-8f815e80-0b0e-11eb-91a8-a39a2940db3a.png\">\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418424,4418914]},{"id":500970643,"public_id":42689,"url":"https://github.com/godotengine/godot/pull/42689","diff_url":"https://github.com/godotengine/godot/pull/42689.diff","patch_url":"https://github.com/godotengine/godot/pull/42689.patch","title":"Implement ResourceImporter version and respect import params when testing for reimport.","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2020-10-10T12:40:37Z","updated_at":"2021-01-13T00:37:16Z","body":"**The problem**\r\nWhen multiply contributors work on the same project and contributor A changes the import parameter for some resource, this change remains unprocessed by the editor for contributor B. Also, there is no clean way to tell the editor if a custom resource importer updated and affected resources needs to be reimported. All of this leads to sneaky bugs.\r\n\r\n**The solution**\r\nTo provide consistency between imported resources for multiply project contributors, we need to reimport resources if import params got changed outside the project (via git, for example). For now, only Textures are reimported and only in some cases (if I change compression type, or change supported by project compression formats). With this PR resources will be reimported on any parameter change. This also introduces `ResourceImporter.get_importer_version() -> int`. Changing the version of the importer will re-import all associated resources.\r\n\r\n**How to test** \r\n\r\nReimport on params change:\r\n- open test project\r\n- edit the import file with a text editor, `res://hello.txt.import`, for example\r\n- change param`prefix`\r\n- switch back to Godot editor\r\n- ensure `hello.txt` is reimported - you can inspect `hello.txt-<hash>.tres` in `.godot/import` folder (no reimport without PR)\r\n\r\nReimport on importer version change:\r\n- change value returned by `get_importer_version()` in `res://addons/hello_world/plugin.gd`\r\n- restart the editor\r\n- ensure `hello.txt` is reimported - you can inspect `hello.txt-<hash>.tres` in `.godot/import` folder (no reimport without PR)\r\n\r\n**Test project**\r\n[importer_version_4.0.zip](https://github.com/godotengine/godot/files/5358973/importer_version_4.0.zip)\r\n\r\n**Notes**\r\nI receive some warnings on import when using EditorImportPlugin (everything is ok with native ResourceImporters), this is related to the way how custom resources works, I guess, not this PR:\r\n<img width=\"860\" alt=\"Screenshot 2020-10-10 at 15 23 07\" src=\"https://user-images.githubusercontent.com/122736/95655242-8f815e80-0b0e-11eb-91a8-a39a2940db3a.png\">\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":500825429,"public_id":42682,"url":"https://github.com/godotengine/godot/pull/42682","diff_url":"https://github.com/godotengine/godot/pull/42682.diff","patch_url":"https://github.com/godotengine/godot/pull/42682.patch","title":"Added API to propagate checkmarks to children and parents.","state":"open","is_draft":false,"authored_by":{"id":46539626,"user":"Phischermen","avater":"https://avatars.githubusercontent.com/u/46539626?v=4","url":"https://github.com/Phischermen"},"created_at":"2020-10-09T21:18:38Z","updated_at":"2021-07-22T18:30:52Z","body":"Fixes #4829 \r\n\r\nOld Behavior\r\n![OldBehavior](https://user-images.githubusercontent.com/46539626/95631550-c71dd700-0a38-11eb-8af5-34901c01b244.gif)\r\n\r\nNew Behavior\r\n![NewBehavior](https://user-images.githubusercontent.com/46539626/95631565-cb49f480-0a38-11eb-941c-584b250830e8.gif)\r\n\r\nThis also adds a new method to TreeItem called get_next_checked() which returns the next tree item affected last time set_checked() was called. This allows the user to respond to each check/uncheck that results from the original check/uncheck.\r\n\r\nI have started to refactor some things like the asset installer and the project export dialog to take advantage of this behavior, but it won't be done until I can finish testing. I'd also like to try and write a test for this, to ensure it's working as intended.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,1828783,4418733,4418923]},{"id":500817329,"public_id":42681,"url":"https://github.com/godotengine/godot/pull/42681","diff_url":"https://github.com/godotengine/godot/pull/42681.diff","patch_url":"https://github.com/godotengine/godot/pull/42681.patch","title":"Improve performance when apply bone transform in get_bone_global_pose()","state":"open","is_draft":true,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2020-10-09T20:57:49Z","updated_at":"2021-08-08T15:30:21Z","body":"Improve performance when apply bone transform in `get_bone_global_pose()` by implementing bone_children and associating them with dirty flag and option: bypass updating skins.\r\n\r\nThe current implementation of Skeleton is that if you call `get_bone_global_pose()` after transforming a bone, recalculate transformation all the bones in the skeleton and access the visual (rendering) server for updating the skin. However, the current implementation  causes a lot of waste waste when computing the bones in the same thread.\r\n\r\nFor example, a skeleton has 100 bones. If the transformation is applied to the bone at the base of the skeleton's right index finger, then the necessary recalculation would normally only require 3 times recalculation, so including the child. However, in the current implementation, it would be recalculated 100 times.\r\n\r\nAlso, under normal circumstances, applying the skin only needs to be done once at the end of the thread.  If you want to transform a bone multiple times with `get_bone_global_pose()` in the same thread, slows down performance because accessing the visual server multiple times.\r\n\r\nThese issues have resulted in very poor performance when using `get_bone_global_pose()` in add-ons that simulate bone transformation, such as IK and DynamicBone. In order to lay the groundwork for future add-on development, I make two main changes in this PR\r\n\r\n- Implements a list of bone children as a property, reducing unnecessary recalculation of bones\r\n-  Implements an option: *don't update skins* in `get_bone_global_pose()`\r\n\r\nI actually saw a large performance improvement in the DynamicBone I created for 3D model's hair.\r\n\r\n![bone_global_pose](https://user-images.githubusercontent.com/61938263/95656672-dbea8f80-0b4a-11eb-887b-8b4fedb6ba19.gif)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":3240950060,"name":"performance","color":"#447777"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":500475127,"public_id":42664,"url":"https://github.com/godotengine/godot/pull/42664","diff_url":"https://github.com/godotengine/godot/pull/42664.diff","patch_url":"https://github.com/godotengine/godot/pull/42664.patch","title":" Optimized area overlap check in bullet physics.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-10-09T09:47:58Z","updated_at":"2020-10-09T10:17:18Z","body":"Optimized area overlap check in bullet physics, that now is using a combination of SAT algorithm and some accelerated one.\r\nThe improvement goes from 30% to 70%, depending on the shape combination that the new algorithm is going to check, (For example the box capsule overlap check is pretty cheap [5 times faster] compared to the previous, while the box / box is cheaper than before but just around 30%).\r\n\r\nOther parts of the entire overlap check get optimized.\r\n\r\nTo verify the code and measure it you can run the following project [TestOverlap.zip](https://github.com/godotengine/godot/files/5353991/TestOverlap.zip) Note that it's necessary to use perf to measure it because other parts of the engine are bottlenecks so is difficult measure it just by checking the FPS.\r\n\r\n_This change is kindly sponsored by IMVU_","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":500271070,"public_id":42659,"url":"https://github.com/godotengine/godot/pull/42659","diff_url":"https://github.com/godotengine/godot/pull/42659.diff","patch_url":"https://github.com/godotengine/godot/pull/42659.patch","title":"Add alert in anim trees if resource load fails","state":"open","is_draft":false,"authored_by":{"id":23728939,"user":"kingoftheconnors","avater":"https://avatars.githubusercontent.com/u/23728939?v=4","url":"https://github.com/kingoftheconnors"},"created_at":"2020-10-09T00:38:00Z","updated_at":"2021-01-20T11:21:11Z","body":"Add_menu_type implements a resource loading, but only when the resource is initially valid. No alert message is shown if the resource isn't valid, leaving the user without feedback.\r\n\r\n![silentfail](https://user-images.githubusercontent.com/23728939/95528368-e4ee2c00-09a5-11eb-9729-f4803d2b2d2c.gif)\r\n\r\nThis PR adds an else clause to the is_valid command to give feedback to the user when loading an animationPlaybackNode into an animation tree fails.\r\n\r\nImplements proposal godotengine/godot-proposals#1624\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":500256454,"public_id":42658,"url":"https://github.com/godotengine/godot/pull/42658","diff_url":"https://github.com/godotengine/godot/pull/42658.diff","patch_url":"https://github.com/godotengine/godot/pull/42658.patch","title":"Check for updates to GitHub Actions every weekday","state":"open","is_draft":false,"authored_by":{"id":25142529,"user":"jlosito","avater":"https://avatars.githubusercontent.com/u/25142529?v=4","url":"https://github.com/jlosito"},"created_at":"2020-10-08T23:58:18Z","updated_at":"2020-10-09T09:39:04Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nThis simply checks for out-dated GitHub actions which this project uses and submits PRs automatically with version bumps.\r\n\r\nhttps://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/keeping-your-actions-up-to-date-with-github-dependabot","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":500130193,"public_id":42653,"url":"https://github.com/godotengine/godot/pull/42653","diff_url":"https://github.com/godotengine/godot/pull/42653.diff","patch_url":"https://github.com/godotengine/godot/pull/42653.patch","title":"Do not print a warning when loading an image from `res://` path","state":"open","is_draft":false,"authored_by":{"id":17108460,"user":"Xrayez","avater":"https://avatars.githubusercontent.com/u/17108460?v=4","url":"https://github.com/Xrayez"},"created_at":"2020-10-08T19:11:55Z","updated_at":"2021-07-31T11:11:00Z","body":"Closes #24222.\r\nAlternative to #39396.\r\nSee rationale at https://github.com/godotengine/godot/pull/39396#issuecomment-705482583.\r\n\r\nSee documentation changes at #42412 instead. I strongly believe this should be part of documentation rather than a warning (which doesn't even apply to all use cases), and the verbosity of the message suggests so. 🙂\r\n\r\nThere's no need to cherry-pick this to 3.2 if you feel like this warning (deprecation?) has informational value to let people update their projects to use imported resources over loading files dynamically.\r\n\r\nAs a bonus, removes `ResourceLoader` dependency from the `Image` class.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":500027444,"public_id":42650,"url":"https://github.com/godotengine/godot/pull/42650","diff_url":"https://github.com/godotengine/godot/pull/42650.diff","patch_url":"https://github.com/godotengine/godot/pull/42650.patch","title":"Do not set gravity and damping when Custom Integrator is enabled.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-08T15:57:41Z","updated_at":"2020-10-12T15:59:51Z","body":"#40252 was reverted with #42639. However, #40252 included a fix for #40508. This PR provides a similar fix, but performs the check earlier and extends it to include dampening.\r\n\r\nFixes #40508 again.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":499923298,"public_id":42643,"url":"https://github.com/godotengine/godot/pull/42643","diff_url":"https://github.com/godotengine/godot/pull/42643.diff","patch_url":"https://github.com/godotengine/godot/pull/42643.patch","title":"Optimized physics object spawn time, improved bullet physics server code.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-10-08T13:29:03Z","updated_at":"2021-01-27T17:00:21Z","body":"This is a combination of #39726 #40252 #41096 that got reverted here #42639\r\n\r\n- Optimized physics object spawn time, by integrating lazy body reload.\r\n- Optimized shape usage when the shape is not scaled.\r\n- Make sure to correctly fetch gravity when the integrate_forces function is used\r\n- Added override keyword\r\n- Using LocalVector\r\n\r\n----\r\nTest project: [TestSpawnRB.zip](https://github.com/godotengine/godot/files/5354623/TestSpawnRB.zip) you can just open an launch it.\r\nThe benchmark code is this:\r\n```GDScript\r\nextends Node\r\n\r\nvar count = 0\r\n\r\nvar shapes_per_frame := 2000\r\nvar shape := BoxShape3D.new()\r\nvar t1\r\nvar overall: int = 0\r\n\r\nfunc _ready():\r\n\tt1 = OS.get_ticks_msec()\r\n\t_do_test()\r\n\r\nfunc _physics_process(delta):\r\n\tif count < 3:\r\n\t\tvar t2 = OS.get_ticks_msec()\r\n\t\tcount += 1\r\n\t\tprint(\"Frame \", count, \": \", t2 - t1, \"ms\")\r\n\t\toverall += t2 - t1\r\n\telse:\r\n\t\tprint(\"Overall \", overall, \"ms\")\r\n\t\tget_tree().quit()\r\n\r\nfunc _do_test():\r\n\tprint(\"Test start\")\r\n\tfor i in range(0, shapes_per_frame):\r\n\t\tvar rb = RigidBody3D.new()\r\n\t\tvar c = CollisionShape3D.new()\r\n\t\tc.set_shape(shape)\r\n\t\trb.add_child(c)\r\n\t\tadd_child(rb)\r\n\t\tif i % 50 == 0:\r\n\t\t\tprint(\"Added: \", i)\r\n\r\n```\r\n\r\n```\r\nTest start\r\nAdded: 0\r\nAdded: 50\r\nAdded: 100\r\nAdded: 150\r\nAdded: 200\r\nAdded: 250\r\nAdded: 300\r\nAdded: 350\r\nAdded: 400\r\nAdded: 450\r\nAdded: 500\r\nAdded: 550\r\nAdded: 600\r\nAdded: 650\r\nAdded: 700\r\nAdded: 750\r\nAdded: 800\r\nAdded: 850\r\nAdded: 900\r\nAdded: 950\r\nAdded: 1000\r\nAdded: 1050\r\nAdded: 1100\r\nAdded: 1150\r\nAdded: 1200\r\nAdded: 1250\r\nAdded: 1300\r\nAdded: 1350\r\nAdded: 1400\r\nAdded: 1450\r\nAdded: 1500\r\nAdded: 1550\r\nAdded: 1600\r\nAdded: 1650\r\nAdded: 1700\r\nAdded: 1750\r\nAdded: 1800\r\nAdded: 1850\r\nAdded: 1900\r\nAdded: 1950\r\nFrame 1: 33ms\r\nFrame 2: 9146ms\r\nFrame 3: 14503ms\r\nOverall 23682ms\r\n```\r\nThis is flame graph extracted from the perf of this PR:\r\n![Screenshot from 2020-08-07 09-43-54](https://user-images.githubusercontent.com/8342599/89622188-efe7eb80-d892-11ea-8b5e-e9bb59ffd1c7.png)\r\n\r\nThis is flame graph extracted from the perf of master branch:\r\n![Screenshot from 2020-08-07 09-13-49](https://user-images.githubusercontent.com/8342599/89622222-02fabb80-d893-11ea-9d79-a8cd56401833.png)\r\n\r\nWithout this PR, the `set_` functions (like `set_layer` / `set_mask`) remove and add the body from the Physics World to recompute the entire hierarchy and cache.\r\n\r\nGodot, call these functions one by one when a new `RigidBody` node is created, so the cache is internally reconstructed multiple times. With this PR, the body is created at the start of the frame and so all the code is executed only 1 time.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":499922730,"public_id":42642,"url":"https://github.com/godotengine/godot/pull/42642","diff_url":"https://github.com/godotengine/godot/pull/42642.diff","patch_url":"https://github.com/godotengine/godot/pull/42642.patch","title":"[3.x] Ensure KinematicBodies only interact with other Bodies with layers in their mask","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-10-08T13:28:11Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #42641.\r\n\r\n`KinematicBody` version of #42269, which fixes collision_layer->collision_mask checks for Areas in 3.2.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":499412604,"public_id":42625,"url":"https://github.com/godotengine/godot/pull/42625","diff_url":"https://github.com/godotengine/godot/pull/42625.diff","patch_url":"https://github.com/godotengine/godot/pull/42625.patch","title":"[3.x] Support deep comparison of Array and Dictionary","state":"open","is_draft":false,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2020-10-07T17:40:16Z","updated_at":"2021-08-06T11:24:33Z","body":"This is a revival of #35816, but for 3.2. As such, it's just a safe subset of it; namely, recursive comparison is added to `Dictionary` and `Array`, but instead of changing how comparison currently works on them, it adds special `deep_equal()` functions, that one can use if desired.\r\n\r\nAnd this PR indeed leverages `deep_equal()`  in the following situations:\r\n\r\n- The new `deep_equal()` GDScript global function.\r\n- Scene packing code, to address #29221 in 3.2 (and in the property inspector, to show the reset button accordingly).\r\n\r\nSome extra notes:\r\n- The goal of this is having #29221 fixed, but since we can't afford changing how `==` works in `Dictionary`, `Array` and `Variant` in 3.2 because that would be a compatibility breakage, this safe, non-intrusive approach is taken. For 4.0 we are still in time to merge #35816 so that proper comparison is not a patch but an out-of-the-box feature.\r\n- Since the first commit is heavily based on @touilleMan's work on the mentioned PR, I've added him as a co-author to it. Also, @touilleMan, you'll noticed I've renamed `recursive_equal` to `deep_equal`. I hope that makes sense to you and you are willing to adopt that name in your PR for 4.0. 😊\r\n\r\nLast word:\r\n\r\nI've written the following GDScript snippet to test how well `deep_equal()` works and also to contrast it with `==`:\r\n```\r\n    # deep_equal() works as expected in every case\r\n\r\n    # Array containing no other Arrays or Dictionaries (== works)\r\n    var a1a = [1, 2, 3]\r\n    var a1b = [1, 2, 3]\r\n    assert(a1a == a1b)\r\n    assert(deep_equal(a1a, a1b))\r\n\r\n    # Array containing Array (== works)\r\n    var a2a = [1, 2, 3, [1, 2, 3]]\r\n    var a2b = [1, 2, 3, [1, 2, 3]]\r\n    assert(a2a == a2b)\r\n    assert(deep_equal(a2a, a2b))\r\n\r\n    # Array containing Dictionary\r\n    var a3a = [1, 2, 3, {\"a\": 1, \"b\": 2}]\r\n    var a3b = [1, 2, 3, {\"a\": 1, \"b\": 2}]\r\n    assert(a3a != a3b)\r\n    assert(deep_equal(a3a, a3b))\r\n\r\n    # Dictionary containing no other Dictionaries or Arrays (== doesn't work even in this case)\r\n    var d1a = {\"a\": 1, \"b\": 2, \"c\": 3}\r\n    var d1b = {\"a\": 1, \"b\": 2, \"c\": 3}\r\n    assert(d1a != d1b)\r\n    assert(deep_equal(d1a, d1b))\r\n\r\n    # Dictionary containing Array\r\n    var d2a = {\"a\": 1, \"b\": 2, \"c\": [1, 2, 3]}\r\n    var d2b = {\"a\": 1, \"b\": 2, \"c\": [1, 2, 3]}\r\n    assert(d2a != d2b)\r\n    assert(deep_equal(d2a, d2b))\r\n\r\n    # Dictionary containing Dictionary\r\n    var d3a = {\"a\": 1, \"b\": 2, \"c\": {\"e\": 11, \"f\": 22}}\r\n    var d3b = {\"a\": 1, \"b\": 2, \"c\": {\"e\": 11, \"f\": 22}}\r\n    assert(d3a != d3b)\r\n    assert(deep_equal(d3a, d3b))\r\n```\r\n\r\nFixes #29221.\r\n\r\n---\r\n**This PR is generously donated by IMVU.**","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183,4418914]},{"id":498788869,"public_id":42605,"url":"https://github.com/godotengine/godot/pull/42605","diff_url":"https://github.com/godotengine/godot/pull/42605.diff","patch_url":"https://github.com/godotengine/godot/pull/42605.patch","title":"Re-add the track editor toggle button to Animation dock","state":"open","is_draft":false,"authored_by":{"id":10428035,"user":"williamd1k0","avater":"https://avatars.githubusercontent.com/u/10428035?v=4","url":"https://github.com/williamd1k0"},"created_at":"2020-10-06T19:33:13Z","updated_at":"2020-10-21T18:57:36Z","body":"This PR is a \"cherry-pick\" from the Godot v1 branch *(this is not a joke :sweat_smile:).*\r\n\r\nGodot 1 used to have an \"edit\" button in the Animation Dock, because the default mode was \"play mode\". This feature was removed when Juan refactored the entire Animation Dock for Godot 2.0.\r\n>Btw I found out about it a few years ago, when I tried Godot 1 just for fun/curiosity.\r\n\r\n- Play mode\r\n![image](https://user-images.githubusercontent.com/10428035/95243505-1d93d700-07e7-11eb-9eb3-621bfa6c52ac.png)\r\n- Edit mode\r\n![image](https://user-images.githubusercontent.com/10428035/95243557-30a6a700-07e7-11eb-8cca-3ed8b9abfb59.png)\r\n\r\nI'm not good with C++, so I tried to implement it recently as a study, more specifically during this year's GGJ (Godot master branch was still v3.2). I didn't open a PR before because this year is being insanely busy for me.\r\n\r\nSo, I'm taking advantage of the hacktoberfest opportunity to re-implement (again) and open a PR before I forget it forever :P \r\n\r\nMy implementation is a bit different from the original, it's just a simple toggle for the track editor, and the \"edit\" mode is still the default.\r\n\r\n- Edit mode\r\n![image](https://user-images.githubusercontent.com/10428035/95247008-b2003880-07eb-11eb-938f-2aaceb0f1264.png)\r\n- Play mode\r\n![image](https://user-images.githubusercontent.com/10428035/95247111-d4925180-07eb-11eb-9ebb-549b411d1d2f.png)\r\n\r\n- Video:\r\n![vokoscreenNG-2020-10-06_14-42-55](https://user-images.githubusercontent.com/10428035/95250371-67cd8600-07f0-11eb-8406-c846a7ea63a7.gif)\r\n\r\n\r\nSorry for not opening a GIP in advance, but as it is already implemented, I find it easier to discuss the implementation in this PR.\r\nI implemented it because I found it useful, I always get upset when I just want to play animations, but the Animation Dock takes up almost half of my screen.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":497436231,"public_id":42560,"url":"https://github.com/godotengine/godot/pull/42560","diff_url":"https://github.com/godotengine/godot/pull/42560.diff","patch_url":"https://github.com/godotengine/godot/pull/42560.patch","title":"Clearer explanations for Area2D.xml","state":"open","is_draft":false,"authored_by":{"id":36481442,"user":"hazarek","avater":"https://avatars.githubusercontent.com/u/36481442?v=4","url":"https://github.com/hazarek"},"created_at":"2020-10-04T13:46:50Z","updated_at":"2020-10-04T16:16:01Z","body":"Clearer explanations for overlaps_area() and overlaps_body() in Area2D.xml\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":497339372,"public_id":42541,"url":"https://github.com/godotengine/godot/pull/42541","diff_url":"https://github.com/godotengine/godot/pull/42541.diff","patch_url":"https://github.com/godotengine/godot/pull/42541.patch","title":"Adds missing TreeItem descriptions","state":"open","is_draft":false,"authored_by":{"id":4741886,"user":"AlexHolly","avater":"https://avatars.githubusercontent.com/u/4741886?v=4","url":"https://github.com/AlexHolly"},"created_at":"2020-10-03T21:15:28Z","updated_at":"2021-01-29T08:58:51Z","body":"related https://github.com/godotengine/godot-docs/issues/3981","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":495987906,"public_id":42447,"url":"https://github.com/godotengine/godot/pull/42447","diff_url":"https://github.com/godotengine/godot/pull/42447.diff","patch_url":"https://github.com/godotengine/godot/pull/42447.patch","title":"Allow creating .gitignore and .gitattributes when creating a new project","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-10-01T06:09:28Z","updated_at":"2021-08-11T01:31:55Z","body":"Implements and closes https://github.com/godotengine/godot-proposals/issues/1813.\r\n\r\nMany people either forget to make `.gitignore` files, or make them incorrectly, or make them correctly but not until after they committed files that shouldn't be committed. There was also [some concern about possible confusion](https://github.com/godotengine/godot-proposals/issues/1521#issuecomment-697575796) with the `.godot/` folder. We can solve all of these problems by having Godot automatically create a `.gitignore` file.\r\n\r\nThis PR also has Godot automatically create a `.gitattributes` file. It's a subset of [the one in the main repo](https://github.com/godotengine/godot/blob/master/.gitattributes). This doesn't include any manual definitions for binary files, but I think it's safe to assume Git >2.10 now (2.11 came out in 2016).\r\n\r\nFor people who aren't using Git, these files are useless, but also they are harmless and extremely small (total 116 bytes), and there is a dropdown menu where you can disable their creation. In the future, this dropdown menu could be expanded to have more types of metadata for different version control systems.\r\n\r\nNote: This gitignore doesn't include `.translation`, so this PR expects that #42392 will be merged (but the PRs shouldn't conflict).\r\n\r\nThis can be [cherry-picked to 3.2 if desired](https://github.com/aaronfranke/godot/tree/3.2-gitignore-create), but we will have to include [the rest of the 3.2 ignores](https://github.com/github/gitignore/blob/master/Godot.gitignore) too.\r\n\r\n```\r\n$ cat .gitignore\r\n# Godot 4+ specific ignores\r\n.godot/\r\n$ cat .gitattributes\r\n# Normalize EOL for all files that Git considers text files.\r\n* text=auto eol=lf\r\n```\r\n\r\nEDIT: The files are now optional, they can be disabled in the project creation dialog:\r\n\r\n![Screenshot from 2020-11-13 03-58-54](https://user-images.githubusercontent.com/1646875/99050464-1b4f3600-2566-11eb-9fc7-aece3629c711.png)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":495830797,"public_id":42441,"url":"https://github.com/godotengine/godot/pull/42441","diff_url":"https://github.com/godotengine/godot/pull/42441.diff","patch_url":"https://github.com/godotengine/godot/pull/42441.patch","title":"Remove unnecessary sections when exporting .import files","state":"open","is_draft":false,"authored_by":{"id":109197,"user":"martok","avater":"https://avatars.githubusercontent.com/u/109197?v=4","url":"https://github.com/martok"},"created_at":"2020-09-30T22:49:22Z","updated_at":"2021-06-08T22:54:22Z","body":"This adds logic to the editor to \"strip\" .import files when exporting to pack files by dropping the params and deps sections before storing the file.\r\n\r\nRationale: the `[params]` section is only used by the editor and not during runtime. In fact, only the `[remap]` section is used when loading a resource by following an import to the stex/scn/etc. However, the params can be excessively large for some resource types, which adds data that has to be stored, read, parsed etc. whenever it is accessed. In some cases (PackedScene, this is how I noticed it), the .import can even be much larger than the data it refers to.\r\n\r\nThis PR is based on master, the feature itself has been tested on 3.2 and is easily cherry-pickable.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":495567365,"public_id":42432,"url":"https://github.com/godotengine/godot/pull/42432","diff_url":"https://github.com/godotengine/godot/pull/42432.diff","patch_url":"https://github.com/godotengine/godot/pull/42432.patch","title":"Fix quote logic regarding code completion","state":"open","is_draft":false,"authored_by":{"id":25207137,"user":"gvekan","avater":"https://avatars.githubusercontent.com/u/25207137?v=4","url":"https://github.com/gvekan"},"created_at":"2020-09-30T14:48:58Z","updated_at":"2020-11-17T13:50:35Z","body":"Fixes https://github.com/godotengine/godot/issues/42382\r\n\r\nThe fix could not be tested in `master` because of other issues, it is however tested in the `3.2` branch, and the code that is fixed is the same in both branches.\r\n\r\nThe old code doesn't consider that you can write a single quote between double quotes or vice versa: \"  '  \" or '  \"  '.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":495540214,"public_id":42431,"url":"https://github.com/godotengine/godot/pull/42431","diff_url":"https://github.com/godotengine/godot/pull/42431.diff","patch_url":"https://github.com/godotengine/godot/pull/42431.patch","title":"Improve the pull request template","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-30T14:11:19Z","updated_at":"2021-08-01T15:04:12Z","body":"This guides people towards better describing what their pull request does and how much they've tested it.\n\nIn addition, it highlights the recommendation to write unit tests in pull requests.\n\nInspired by the template [here](https://github.com/godotengine/godot-proposals/issues/1586#issuecomment-701369306). Thanks @bruvzg :slightly_smiling_face:","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":495223318,"public_id":42423,"url":"https://github.com/godotengine/godot/pull/42423","diff_url":"https://github.com/godotengine/godot/pull/42423.diff","patch_url":"https://github.com/godotengine/godot/pull/42423.patch","title":"Fix editing items in tree making changes to the wrong item","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-09-30T03:11:07Z","updated_at":"2021-06-01T17:08:31Z","body":"This was caused by the fact that selecting a new item would immediately change that item to the \"popup_edited_item\" which meant that when the `item_edited` method was called, the wrong item was being changed. \"popup_edited_item\" would change immediately upon selection because bring_up_editor was based on it's current selection status, which could have changed to true just before, in the same method, where selection is handled (see line 1758). This change makes it based upon it's _previous_ selection status (which was already used) so that the editor does not popup immediately on first selection.\r\n\r\nThis was a pretty big pain to troubleshoot tbh. Tree could do with a refactor... It is quite messy and hard to decipher.\r\n\r\nCloses #42419\r\n![tree_fixed](https://user-images.githubusercontent.com/41730826/94638946-5e3eac80-031e-11eb-98f3-edf45a599afb.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":494450770,"public_id":42392,"url":"https://github.com/godotengine/godot/pull/42392","diff_url":"https://github.com/godotengine/godot/pull/42392.diff","patch_url":"https://github.com/godotengine/godot/pull/42392.patch","title":"Move generated translation files into `res://.godot/translations`","state":"open","is_draft":true,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-09-28T23:13:17Z","updated_at":"2021-08-09T16:32:11Z","body":"Follow up to #38607. Implements and closes https://github.com/godotengine/godot-proposals/issues/1812.\r\n\r\nThis moves the generated `.translation` files into a subfolder of `res://.godot` called `res://.godot/translations` (defined as a constant: `TranslationServer::TRANSLATION_FILES_PATH`). These files are generated and don't need to be committed, which is the goal of the `res://.godot` folder.\r\n\r\nNote that projects need to be manually updated, since `project.godot` explicitly references the translation files. For example, the translation demo contains `res://text.en.translation` in `project.godot`.\r\n\r\nThe simplest solution was to make the contents of this folder replicate the folder structure of the project, so a file `res://subfolder/text.csv` gets imported as `res://.godot/translations/subfolder/text.en.translation` etc. Because the generated translation files have to be referenced explicitly, I think this is actually really nice.\r\n\r\n~~Another question is what to call this folder. I think \"translation\" is nice because it contains `.translation` files, but one could make the argument that this folder should be called \"translation**s**\" instead.~~","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":493991980,"public_id":42384,"url":"https://github.com/godotengine/godot/pull/42384","diff_url":"https://github.com/godotengine/godot/pull/42384.diff","patch_url":"https://github.com/godotengine/godot/pull/42384.patch","title":"Lowered the number of map look up calls","state":"open","is_draft":false,"authored_by":{"id":51797383,"user":"Craig-Stoneham","avater":"https://avatars.githubusercontent.com/u/51797383?v=4","url":"https://github.com/Craig-Stoneham"},"created_at":"2020-09-28T08:57:00Z","updated_at":"2021-04-08T00:28:46Z","body":"Does this not make more sense here? It saves 2 map look up calls at the expense of creating a variable on the stack\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":493748517,"public_id":42374,"url":"https://github.com/godotengine/godot/pull/42374","diff_url":"https://github.com/godotengine/godot/pull/42374.diff","patch_url":"https://github.com/godotengine/godot/pull/42374.patch","title":"Trigger RigidBodyBullet space override updates when Area properties change.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-27T17:04:54Z","updated_at":"2020-09-27T17:04:55Z","body":"Currently, in Bullet physics, if an `Area's` properties change, any `RigidBody` that is already within the `Area` is not affected by the change.\r\n\r\nThis PR ensures that when the following `Area` properties are changed, the `RigidBodies` already enclosed in the `Area` are informed of the change and are updated accordingly:\r\n- The `Gravity` magnitude.\r\n- The `Gravity` direction `Vector`.\r\n- Whether or not the `Area` is a `Gravity Point`.\r\n- The `Gravity Point` location.\r\n- The `Gravity Point` fall-off `Distance`.\r\n- The `Linear Damp`\r\n- The `Angular Damp`\r\n\r\nFixes #32776\r\n\r\nRegistering changes to whether or not the `Area` is `Monitoring` or `Monitorable` is fixed with #42306.\r\n\r\nNote: Changes to the `Area`'s priority being ignored at runtime are not fixed with this PR or #42306.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":493707408,"public_id":42367,"url":"https://github.com/godotengine/godot/pull/42367","diff_url":"https://github.com/godotengine/godot/pull/42367.diff","patch_url":"https://github.com/godotengine/godot/pull/42367.patch","title":"Don't try saving imported 3D scenes to avoid alerts when running project","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-27T11:14:36Z","updated_at":"2021-03-21T14:55:18Z","body":"See https://github.com/godotengine/godot/issues/14967. This issue was reported as still valid by @SeleDreams on Discord.\r\n\r\nWindows 64-bit editor build for testing (`3.2` branch, 4162df439727fad01b0d1240df69f59ba97ed422): https://0x0.st/iUQF.zip (link expires in April 2021)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":493705179,"public_id":42365,"url":"https://github.com/godotengine/godot/pull/42365","diff_url":"https://github.com/godotengine/godot/pull/42365.diff","patch_url":"https://github.com/godotengine/godot/pull/42365.patch","title":"[3.x] Increment index when populating PhysicsShapeQueryParameters exclude array.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-27T10:53:18Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #42364.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":493705148,"public_id":42364,"url":"https://github.com/godotengine/godot/pull/42364","diff_url":"https://github.com/godotengine/godot/pull/42364.diff","patch_url":"https://github.com/godotengine/godot/pull/42364.patch","title":"Increment index when populating PhysicsShapeQueryParameters exclude array.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-27T10:53:02Z","updated_at":"2020-10-28T09:38:34Z","body":"While investigating #39887, I noticed that when getting the `PhysicsShapeQueryParameters` exclude array, the index used to populate the returned `Vector` isn't being incremented; so only the first element gets populated with the last entry. This PR increments the index so the returned `Vector` is properly populated.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":493628038,"public_id":42359,"url":"https://github.com/godotengine/godot/pull/42359","diff_url":"https://github.com/godotengine/godot/pull/42359.diff","patch_url":"https://github.com/godotengine/godot/pull/42359.patch","title":"Add placeholders for console support that explain how to do it","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-26T21:07:38Z","updated_at":"2021-01-23T16:43:22Z","body":"The Xbox and PlayStation icon background colors were taken from their respective official websites.\r\n\r\nSupersedes #40194. This pull request uses the official console logos and adds an Xbox placeholder export preset.\r\n\r\n## Preview\r\n\r\n(I can't display the actual notice due to single-window popups being broken :slightly_frowning_face:)\r\n\r\n![image](https://user-images.githubusercontent.com/180032/94365299-f430c800-00cf-11eb-9742-9a8cb860bc42.png)\r\n\r\n<details>\r\n<summary>Old version</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/180032/94350283-16353680-004d-11eb-801f-436761e04bb4.png)\r\n</details>","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":493623210,"public_id":42358,"url":"https://github.com/godotengine/godot/pull/42358","diff_url":"https://github.com/godotengine/godot/pull/42358.diff","patch_url":"https://github.com/godotengine/godot/pull/42358.patch","title":"Add a Tightness parameter to AudioStreamPlayer3D","state":"open","is_draft":false,"authored_by":{"id":32044095,"user":"lucaslcode","avater":"https://avatars.githubusercontent.com/u/32044095?v=4","url":"https://github.com/lucaslcode"},"created_at":"2020-09-26T20:17:57Z","updated_at":"2020-10-10T14:04:23Z","body":"Allows this parameter for the sound algorithm in AudioStreamPlayer3D to be modified.\r\n\r\nI didn't like the fact that an object directly on my left would only play through the left channel with 0 in the right, seemed too artificial for me. Now I can customize it as I like! :)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":492811162,"public_id":42325,"url":"https://github.com/godotengine/godot/pull/42325","diff_url":"https://github.com/godotengine/godot/pull/42325.diff","patch_url":"https://github.com/godotengine/godot/pull/42325.patch","title":"Improve documentation for Camera3D's `current` member","state":"open","is_draft":false,"authored_by":{"id":9060496,"user":"zak-grumbles","avater":"https://avatars.githubusercontent.com/u/9060496?v=4","url":"https://github.com/zak-grumbles"},"created_at":"2020-09-25T03:29:41Z","updated_at":"2021-03-19T23:46:18Z","body":"Behavior of the camera's `current` member wasn't fully documented for situations with more than one camera in a scene. Added some more info to clear that up.\r\n\r\nResolves https://github.com/godotengine/godot-docs/issues/4080\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":492503450,"public_id":42307,"url":"https://github.com/godotengine/godot/pull/42307","diff_url":"https://github.com/godotengine/godot/pull/42307.diff","patch_url":"https://github.com/godotengine/godot/pull/42307.patch","title":"[3.x] Update Bullet Area overlaps when Area properties or shapes change.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-24T14:50:41Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #42306.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":492503309,"public_id":42306,"url":"https://github.com/godotengine/godot/pull/42306","diff_url":"https://github.com/godotengine/godot/pull/42306.diff","patch_url":"https://github.com/godotengine/godot/pull/42306.patch","title":"Update Bullet Area overlaps when Area properties or shapes change.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-24T14:50:28Z","updated_at":"2020-10-08T13:52:20Z","body":"Currently, `Area`s in Bullet physics only update the `CollisionObject`s they overlap with when they or the other objects are moved (or created). This PR ensures that `Area`s are updated and trigger any necessary signals when their properties or shapes change too including:\r\n- Collision shape enabled or disabled\r\n- Collision shape added or removed\r\n- Collision shape properties changed\r\n- Collision layers changed\r\n- Collision mask changed\r\n- Monitoring enabled or disabled\r\n- Monitorable enabled or disabled (ensures other `Area`s are updated)\r\n\r\nFixes #22889\r\nFixes #39947\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":492386513,"public_id":42302,"url":"https://github.com/godotengine/godot/pull/42302","diff_url":"https://github.com/godotengine/godot/pull/42302.diff","patch_url":"https://github.com/godotengine/godot/pull/42302.patch","title":"Implement add_directly to animation tree node add2 and add3","state":"open","is_draft":false,"authored_by":{"id":61938263,"user":"TokageItLab","avater":"https://avatars.githubusercontent.com/u/61938263?v=4","url":"https://github.com/TokageItLab"},"created_at":"2020-09-24T11:42:26Z","updated_at":"2021-06-28T21:18:52Z","body":"For [#37661](https://github.com/godotengine/godot/issues/37661)\r\n\r\nThe current algorithm adds the transformations after the subtraction of the difference.\r\nSo, for compatibility, I implemented a checkbox to add the transforms directly.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":492251334,"public_id":42298,"url":"https://github.com/godotengine/godot/pull/42298","diff_url":"https://github.com/godotengine/godot/pull/42298.diff","patch_url":"https://github.com/godotengine/godot/pull/42298.patch","title":"Stop reset of MultiMesh properties on populate","state":"open","is_draft":false,"authored_by":{"id":25207137,"user":"gvekan","avater":"https://avatars.githubusercontent.com/u/25207137?v=4","url":"https://github.com/gvekan"},"created_at":"2020-09-24T07:40:31Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes https://github.com/godotengine/godot/issues/42223\r\n\r\nColorFormat and CustomFormat is not changed when populate is called.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":492074227,"public_id":42288,"url":"https://github.com/godotengine/godot/pull/42288","diff_url":"https://github.com/godotengine/godot/pull/42288.diff","patch_url":"https://github.com/godotengine/godot/pull/42288.patch","title":"Fix for drag and drop audio effect resources to audio bus layout","state":"open","is_draft":true,"authored_by":{"id":31479779,"user":"Waranoi","avater":"https://avatars.githubusercontent.com/u/31479779?v=4","url":"https://github.com/Waranoi"},"created_at":"2020-09-23T22:30:53Z","updated_at":"2021-03-31T17:05:06Z","body":"Fix #17066. I tried to make the code easy to follow to the best of my ability, but I'm not confident in my results. Also should we do anything about audio effect resources not having a name by default? \r\n\r\nWhen adding a new effect to a bus you would expect the effect to have the same name as the filename, but since the default name is empty the name of the effect in the bus is also empty. Having to explicitly set the name of every new audio effect resource feels like bad user experience to me. I believe that setting the name of the resource to be the same as the filename when created is a good solution.\r\n\r\n![image](https://user-images.githubusercontent.com/31479779/94076020-826d2b80-fdfc-11ea-9583-34a0684b217f.png) ![image](https://user-images.githubusercontent.com/31479779/94076064-9e70cd00-fdfc-11ea-9476-60df3a142411.png)\r\n\r\nAlso changing the name of an audio effect resource doesn't automatically update the bus layout, I don't know what the best solution for that would be.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":491691579,"public_id":42269,"url":"https://github.com/godotengine/godot/pull/42269","diff_url":"https://github.com/godotengine/godot/pull/42269.diff","patch_url":"https://github.com/godotengine/godot/pull/42269.patch","title":"[3.x] Ensure Areas and Bodies only interact with Areas with layers in their mask","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-23T10:57:47Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #42268.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":491691430,"public_id":42268,"url":"https://github.com/godotengine/godot/pull/42268","diff_url":"https://github.com/godotengine/godot/pull/42268.diff","patch_url":"https://github.com/godotengine/godot/pull/42268.patch","title":"Ensure Areas and Bodies only interact with Areas with layers in their mask","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-23T10:57:29Z","updated_at":"2021-07-21T10:36:17Z","body":"Currently, when interacting with an `Area`, the `collision_layer`-`collision_mask` combination is checked both ways. This results in interactions that are not wanted:\r\n- If an `Area`'s mask bit is disabled, it should not respond to `CollisionObject`s with that layer bit set.\r\n- If a `CollisionObject`'s layer bit is disabled, an `Area` with that mask bit set, should not respond to the `CollisionObject`.\r\n\r\nHowever, in both cases, if the other `CollisionObject`'s mask matches one of the `Area`'s layer bits, the `Area` will incorrectly respond to the other `CollisionObject`.\r\n\r\nThis PR ensures that `Area`s only respond to `CollisionObject`s that have layer bits that match the `Area`'s mask bits. It fixes both 2D and 3D (Godot and Bullet) physics.\r\n\r\nFixes #7644.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":489722652,"public_id":42194,"url":"https://github.com/godotengine/godot/pull/42194","diff_url":"https://github.com/godotengine/godot/pull/42194.diff","patch_url":"https://github.com/godotengine/godot/pull/42194.patch","title":"Added TileMap::set_cell_region()","state":"open","is_draft":false,"authored_by":{"id":63566776,"user":"dariomnz","avater":"https://avatars.githubusercontent.com/u/63566776?v=4","url":"https://github.com/dariomnz"},"created_at":"2020-09-19T12:46:33Z","updated_at":"2020-09-20T07:50:44Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nImplementation of the new feature that was proposed in https://github.com/godotengine/godot-proposals/issues/1538\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":489721849,"public_id":42193,"url":"https://github.com/godotengine/godot/pull/42193","diff_url":"https://github.com/godotengine/godot/pull/42193.diff","patch_url":"https://github.com/godotengine/godot/pull/42193.patch","title":"Correctly showed `smooth_trimesh_collision` into the Project Settings.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-09-19T12:40:07Z","updated_at":"2020-12-02T19:44:36Z","body":"Correctly showed `smooth_trimesh_collision` into the Project Settings.\r\nYou can take more info about `smooth_trimesh_collision`, here: https://github.com/godotengine/godot-docs/pull/4040 and here: https://github.com/godotengine/godot/issues/21341#issuecomment-427364636","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":489115414,"public_id":42158,"url":"https://github.com/godotengine/godot/pull/42158","diff_url":"https://github.com/godotengine/godot/pull/42158.diff","patch_url":"https://github.com/godotengine/godot/pull/42158.patch","title":"Fix saving for resources outside of res://","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-09-18T06:49:37Z","updated_at":"2021-07-15T12:18:06Z","body":"Fixes #42154\r\n\r\nRather than checking if this path is in res://, check if it is any path","target_branch":"master","labels":[{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":488940733,"public_id":42148,"url":"https://github.com/godotengine/godot/pull/42148","diff_url":"https://github.com/godotengine/godot/pull/42148.diff","patch_url":"https://github.com/godotengine/godot/pull/42148.patch","title":"Group the CanvasItem particle animation properties in the inspector","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-17T21:26:02Z","updated_at":"2021-02-22T20:31:39Z","body":"This prevents the property names from overflowing with the default inspector width.\r\n\r\nSee https://github.com/godotengine/godot-docs/issues/2059#issuecomment-564042104.\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n*Can't distinguish H frames from V frames without hovering them and waiting for the tooltip to appear.\r\nAlso, the Loop option (the last property in the list) appears identical to the overall animation toggle.*\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/180032/93530042-35d9aa00-f93d-11ea-8da0-80303f085c47.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/180032/93530018-2d816f00-f93d-11ea-9e69-99bb923c48d7.png)\r\n\r\nThe section will appear at the bottom instead of being \"included\" within the overall toggle. Unfortunately, we can't fix this without breaking backwards compatibility since we'd have to rename at least one property.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":488890096,"public_id":42143,"url":"https://github.com/godotengine/godot/pull/42143","diff_url":"https://github.com/godotengine/godot/pull/42143.diff","patch_url":"https://github.com/godotengine/godot/pull/42143.patch","title":"Fixes copy-paste issue in visual script editor","state":"open","is_draft":false,"authored_by":{"id":24036721,"user":"Kartik1397","avater":"https://avatars.githubusercontent.com/u/24036721?v=4","url":"https://github.com/Kartik1397"},"created_at":"2020-09-17T19:41:04Z","updated_at":"2021-07-17T08:11:40Z","body":"Fixes #41156\r\n![Peek 2020-09-18 01-08](https://user-images.githubusercontent.com/24036721/93519197-8eb03f00-f94b-11ea-990b-5bd934a2d746.gif)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":488171049,"public_id":42123,"url":"https://github.com/godotengine/godot/pull/42123","diff_url":"https://github.com/godotengine/godot/pull/42123.diff","patch_url":"https://github.com/godotengine/godot/pull/42123.patch","title":"Try to load project data from a ZIP data pack if no PCK is found","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-16T18:29:30Z","updated_at":"2021-03-19T21:21:36Z","body":"Previously, a launch script with the `--main-pack` command-line argument had to be created by the user to run a project with a ZIP data pack.\r\n\r\nThis also updates the command-line help to mention ZIP data packs.\r\n\r\n4.0-compatible PCK and ZIP data packs for testing: [dsds-datapacks.zip](https://github.com/godotengine/godot/files/5234184/dsds-datapacks.zip) (extract the ZIP, you'll find PCK and ZIP data packs inside)\r\n\r\n- Note that the PCK and ZIP files have slightly different content. The engine will likely crash when loading the PCK data pack and close immediately after starting when loading the ZIP data pack, but this is unrelated to the issue I'm trying to solve here.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":488070527,"public_id":42118,"url":"https://github.com/godotengine/godot/pull/42118","diff_url":"https://github.com/godotengine/godot/pull/42118.diff","patch_url":"https://github.com/godotengine/godot/pull/42118.patch","title":"Fix import logic for VRAM compressed texture formats","state":"open","is_draft":false,"authored_by":{"id":1177068,"user":"DrMoriarty","avater":"https://avatars.githubusercontent.com/u/1177068?v=4","url":"https://github.com/DrMoriarty"},"created_at":"2020-09-16T15:28:23Z","updated_at":"2021-08-06T11:24:33Z","body":"*Bugsquad edit:* Fixes #38040, fixes #35851.\r\n\r\nCompressed stream texture now saves right image dimensions for every compression format.\r\nAlso it allows to compressor resize image on it's side to make it more optimized.\r\nSo ETC1 format becames smaller then before. Pvrtc format always saves square texture.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418424]},{"id":488036487,"public_id":42117,"url":"https://github.com/godotengine/godot/pull/42117","diff_url":"https://github.com/godotengine/godot/pull/42117.diff","patch_url":"https://github.com/godotengine/godot/pull/42117.patch","title":"Fix window_get_current_screen for X11 display server","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2020-09-16T14:37:16Z","updated_at":"2021-03-22T17:39:24Z","body":"This method used to check which screen contains the top-left corner of the window (and default to the first screen in case none is found), which is not accurate in some cases.\r\n\r\nNow the area of overlap with each screen is calculated, so we can get the best candidate based on the window's position.\r\n\r\nThis makes window_get_current_screen consistent with Windows platform, and fixes an issue where popups appear on the main screen when the main window is slightly moved outside of the desktop on the top or left.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112907]},{"id":487634979,"public_id":42103,"url":"https://github.com/godotengine/godot/pull/42103","diff_url":"https://github.com/godotengine/godot/pull/42103.diff","patch_url":"https://github.com/godotengine/godot/pull/42103.patch","title":"Fixed issue in TextureAtlas import of images with wrong size.","state":"open","is_draft":false,"authored_by":{"id":7107228,"user":"dankan1890","avater":"https://avatars.githubusercontent.com/u/7107228?v=4","url":"https://github.com/dankan1890"},"created_at":"2020-09-15T23:30:56Z","updated_at":"2020-09-16T08:32:26Z","body":"Fix #42057\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":487469498,"public_id":42100,"url":"https://github.com/godotengine/godot/pull/42100","diff_url":"https://github.com/godotengine/godot/pull/42100.diff","patch_url":"https://github.com/godotengine/godot/pull/42100.patch","title":"Document why use _unhandled_key_input over _unhandled_input","state":"open","is_draft":false,"authored_by":{"id":6093119,"user":"groud","avater":"https://avatars.githubusercontent.com/u/6093119?v=4","url":"https://github.com/groud"},"created_at":"2020-09-15T18:15:24Z","updated_at":"2020-09-23T11:37:17Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nAs discussed in IRC with @reduz and @EricEzaM ","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":487460743,"public_id":42099,"url":"https://github.com/godotengine/godot/pull/42099","diff_url":"https://github.com/godotengine/godot/pull/42099.diff","patch_url":"https://github.com/godotengine/godot/pull/42099.patch","title":"Single window mode is not lost after starting a project from the project manager","state":"open","is_draft":false,"authored_by":{"id":6291339,"user":"jak6jak","avater":"https://avatars.githubusercontent.com/u/6291339?v=4","url":"https://github.com/jak6jak"},"created_at":"2020-09-15T17:57:03Z","updated_at":"2021-07-06T16:09:08Z","body":"Ran into so weird git stuff with rebasing got some help and they said to try a new pull request.  Previous pull request: https://github.com/godotengine/godot/pull/42071\r\nThis means you can start Godot with --single-window and it passes it through the project manager.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":486912655,"public_id":42069,"url":"https://github.com/godotengine/godot/pull/42069","diff_url":"https://github.com/godotengine/godot/pull/42069.diff","patch_url":"https://github.com/godotengine/godot/pull/42069.patch","title":"Add a test suite for OS","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-09-14T21:55:59Z","updated_at":"2021-05-05T20:14:54Z","body":"I'm not sure how to test this class well, as some of these tests might be a bit flaky or not very useful. They still all pass on my machine.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2231593685,"name":"topic:tests","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418923]},{"id":486222140,"public_id":42035,"url":"https://github.com/godotengine/godot/pull/42035","diff_url":"https://github.com/godotengine/godot/pull/42035.diff","patch_url":"https://github.com/godotengine/godot/pull/42035.patch","title":"Audio bus effect fixed","state":"open","is_draft":false,"authored_by":{"id":28615299,"user":"DashCell","avater":"https://avatars.githubusercontent.com/u/28615299?v=4","url":"https://github.com/DashCell"},"created_at":"2020-09-13T18:39:45Z","updated_at":"2021-06-06T13:17:32Z","body":"Make the appropriate selection of the effect on the audio bus.\r\n\r\n> - Select an effect on more than one Audio bus the other ones remains selected, so if you press the Delete key you can delete one effect selected at a time of each diferent Audio bus.\r\n\r\n> - Create a new node in the scene and create and select a Audio bus effect, then select the new scene node and press the Delete key to delete the node, the effect will be deleted instead.\r\n\r\n- Fixes godotengine/godot#11355","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":486083932,"public_id":42017,"url":"https://github.com/godotengine/godot/pull/42017","diff_url":"https://github.com/godotengine/godot/pull/42017.diff","patch_url":"https://github.com/godotengine/godot/pull/42017.patch","title":"MultiplayerAPI: Fix improper re-insertion into cache","state":"open","is_draft":false,"authored_by":{"id":5834478,"user":"ASavchenkov","avater":"https://avatars.githubusercontent.com/u/5834478?v=4","url":"https://github.com/ASavchenkov"},"created_at":"2020-09-13T01:28:43Z","updated_at":"2021-02-22T20:32:01Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\nfixes #41412. MultiplayerAPI::_add_peer does not need to and should not insert into path_get_cache because the creation of PathGetCache(s) happens automatically in MultiplayerAPI::_process_simplify_path.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":485793027,"public_id":42001,"url":"https://github.com/godotengine/godot/pull/42001","diff_url":"https://github.com/godotengine/godot/pull/42001.diff","patch_url":"https://github.com/godotengine/godot/pull/42001.patch","title":"Checkbox on Delete-Node dialog regarding deleting animations","state":"open","is_draft":false,"authored_by":{"id":3907929,"user":"strank","avater":"https://avatars.githubusercontent.com/u/3907929?v=4","url":"https://github.com/strank"},"created_at":"2020-09-12T06:55:30Z","updated_at":"2020-10-11T12:52:44Z","body":"Initial version to fix #3562.\r\n\r\nThis is a minimal fix. Mainly to get feedback for a proper one.\r\nIt is therefore also not cleaned up or squashed, with lots of comments in the code regarding issues that showed up. I welcome any feedback on all those comments.\r\n\r\nThis fix simply adds a checkbox to the \"Delete Node\" confirmation dialog. The checkbox directly reflects, and changes, the editor setting \"editors/animation/autorename_animation_tracks\", as this controls if animation tracks that refer to a node are deleted.\r\n\r\nThis is suboptimal, I would say - for one autorename is not autoremove. But see below for more.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":485293754,"public_id":41991,"url":"https://github.com/godotengine/godot/pull/41991","diff_url":"https://github.com/godotengine/godot/pull/41991.diff","patch_url":"https://github.com/godotengine/godot/pull/41991.patch","title":"Suggest snake_case script names by default","state":"open","is_draft":false,"authored_by":{"id":38013155,"user":"neqs20","avater":"https://avatars.githubusercontent.com/u/38013155?v=4","url":"https://github.com/neqs20"},"created_at":"2020-09-11T17:29:02Z","updated_at":"2021-03-23T06:39:20Z","body":"Script Create Dialog will now suggest snake case file names for GDScript, VisualScript and NativeScript. \r\n\r\nThis doesn't apply to C# which requires PascalCase file names (to match the class name). \r\n\r\nCloses: godotengine/godot-proposals#1211.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":483810419,"public_id":41949,"url":"https://github.com/godotengine/godot/pull/41949","diff_url":"https://github.com/godotengine/godot/pull/41949.diff","patch_url":"https://github.com/godotengine/godot/pull/41949.patch","title":"Added confirmation dialog for making sub-resources unique.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-09-10T12:51:51Z","updated_at":"2021-03-25T18:34:56Z","body":"Making sub-resources unique is a destructive operation without the ability to undo. Having no feedback to the user about this operation seems bad UX.\r\n\r\nThis PR adds:\r\n![image](https://user-images.githubusercontent.com/41730826/92730700-7f634b80-f3b7-11ea-9369-9a43635a5896.png)\r\n\r\nMaybe in the future this could even be a list with checkboxes for each resource, allowing the user to easily select some/all of the resources to be made unique. For example, I would say it's quite common to not want the script to be made unique.\r\n\r\nP.S. it's not really +86/-24, more like +50/-0, the diff just gets confused by code being moved around.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":483077558,"public_id":41924,"url":"https://github.com/godotengine/godot/pull/41924","diff_url":"https://github.com/godotengine/godot/pull/41924.diff","patch_url":"https://github.com/godotengine/godot/pull/41924.patch","title":"[3.x] Add PROPERTY_USAGE_ALWAYS_SHARE_ON_DUPLICATE flag","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2020-09-09T19:22:19Z","updated_at":"2021-08-06T11:24:33Z","body":"This adds `PROPERTY_USAGE_ALWAYS_SHARE_ON_DUPLICATE` flag for 3.2 branch (master #41923). With this PR, `Resource.duplicate` will not duplicate `Object.script` property. Fixes #33079. \r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":483072682,"public_id":41923,"url":"https://github.com/godotengine/godot/pull/41923","diff_url":"https://github.com/godotengine/godot/pull/41923.diff","patch_url":"https://github.com/godotengine/godot/pull/41923.patch","title":"Add PROPERTY_USAGE_ALWAYS_SHARE_ON_DUPLICATE flag","state":"open","is_draft":false,"authored_by":{"id":122736,"user":"jkb0o","avater":"https://avatars.githubusercontent.com/u/122736?v=4","url":"https://github.com/jkb0o"},"created_at":"2020-09-09T19:15:48Z","updated_at":"2020-09-09T19:57:00Z","body":"This adds `PROPERTY_USAGE_ALWAYS_SHARE_ON_DUPLICATE` flag. With this PR, `Resource.duplicate` will not duplicate `Object.script` property. Fixes #33079.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":482184119,"public_id":41884,"url":"https://github.com/godotengine/godot/pull/41884","diff_url":"https://github.com/godotengine/godot/pull/41884.diff","patch_url":"https://github.com/godotengine/godot/pull/41884.patch","title":"GDScript constant folding for method call on const value base, implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-09-08T17:12:45Z","updated_at":"2020-09-08T18:22:52Z","body":"Fix: #41673\r\n\r\n```gdscript\r\nextends Node2D\r\n\r\n\r\nconst KEY = \"p@$$w0rD\".hash()\r\nconst VAL_42 = [0, [1, 42]].back().max()\r\n\r\nfunc _ready():\r\n\tprint(KEY)\r\n\tprint(VAL_42)\r\n```\r\n\r\noutput\r\n```\r\n1842799034\r\n42\r\n```","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":481617971,"public_id":41862,"url":"https://github.com/godotengine/godot/pull/41862","diff_url":"https://github.com/godotengine/godot/pull/41862.diff","patch_url":"https://github.com/godotengine/godot/pull/41862.patch","title":"Improve the line/column indicator","state":"open","is_draft":false,"authored_by":{"id":70844631,"user":"IlTrain","avater":"https://avatars.githubusercontent.com/u/70844631?v=4","url":"https://github.com/IlTrain"},"created_at":"2020-09-07T19:50:47Z","updated_at":"2020-09-10T09:22:26Z","body":"Before:\r\n![before](https://user-images.githubusercontent.com/70844631/92414338-0d3efc80-f154-11ea-9693-699c88924428.PNG)\r\n\r\nAfter:\r\n![after](https://user-images.githubusercontent.com/70844631/92414352-28aa0780-f154-11ea-9093-373fb96dca77.PNG)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":481497349,"public_id":41855,"url":"https://github.com/godotengine/godot/pull/41855","diff_url":"https://github.com/godotengine/godot/pull/41855.diff","patch_url":"https://github.com/godotengine/godot/pull/41855.patch","title":"Add up/down keys to inc/dec val in editor spin slider","state":"open","is_draft":false,"authored_by":{"id":2823241,"user":"Razoric480","avater":"https://avatars.githubusercontent.com/u/2823241?v=4","url":"https://github.com/Razoric480"},"created_at":"2020-09-07T15:42:58Z","updated_at":"2021-07-15T23:19:50Z","body":"Adds the ability to increment and decrement an integer while focused in the editor spin slider's line edit, via a gui_input event. Also works with shift to increment and decrement by 10.\r\n\r\n*Bugsquad edit: This closes godotengine/godot-proposals#29.*\r\n\r\nBackport with 3.2 syntax is available in [branch](https://github.com/Razoric480/godot/tree/key_up_down_spin_slider_32)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":481433530,"public_id":41853,"url":"https://github.com/godotengine/godot/pull/41853","diff_url":"https://github.com/godotengine/godot/pull/41853.diff","patch_url":"https://github.com/godotengine/godot/pull/41853.patch","title":"Make precision of time_step consistently float.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-07T14:20:30Z","updated_at":"2021-02-14T12:38:07Z","body":"The precision of `time_step` is `float`. However, there are a number of locations where `time_step` is converted to a `double`. This PR makes the uses of `time_step` consistently a `float`.\r\n\r\nNote: The driver for this change is to avoid [lgtm](https://lgtm.com/projects/g/godotengine/godot/alerts/?mode=tree&lang=&id=cpp%2Finteger-multiplication-cast-to-long&tag=&ruleFocus=2157860313) warning about potential `float` overflows: If the reason for a conversion to a `double` were the need to increase the maximum size of the `float`, and the conversion to a `double` was done after a calculation, there is a risk of a `float` overflow that would go unnoticed. In other words, if there is actually a need for a `double` when using `time_step` in a calculation to prevent a `float` overflow (or a loss of precision, for example, when the numbers are larger) then the conversion to a `double` should be done earlier and made explicit.\r\n\r\nThe only place I have found where the conversion to a `double` may be required is when storing `RasterizerCanvasRD::State.time`:\r\nhttps://github.com/godotengine/godot/blob/5bf28c735dc6d70fdf8dd5a27da86d6beb36933d/servers/rendering/rasterizer_rd/rasterizer_rd.cpp#L84-L87\r\nHowever, I think it's unlikely this needs to be a `double`, because, at most the size is limited to the size of `rendering/limits/time/time_rollover_secs`, which, by default, is 3,600, and even within `RasterizerCanvasRD::State` the `RasterizerCanvasRD::State.Buffer.time` uses a `float` too:\r\nhttps://github.com/godotengine/godot/blob/5bf28c735dc6d70fdf8dd5a27da86d6beb36933d/servers/rendering/rasterizer_rd/rasterizer_canvas_rd.h#L397-L422\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":481009275,"public_id":41836,"url":"https://github.com/godotengine/godot/pull/41836","diff_url":"https://github.com/godotengine/godot/pull/41836.diff","patch_url":"https://github.com/godotengine/godot/pull/41836.patch","title":"CI: Add workflows to check if Godot compiles without modules enabled","state":"open","is_draft":true,"authored_by":{"id":2647304,"user":"totlmstr","avater":"https://avatars.githubusercontent.com/u/2647304?v=4","url":"https://github.com/totlmstr"},"created_at":"2020-09-07T03:25:11Z","updated_at":"2020-09-08T14:06:05Z","body":"In line with https://github.com/godotengine/godot/issues/41710#issuecomment-685864557 (note that that issue is for Godot 3.2, **not** for 4.0 master), this PR adds two new workflows for Github Actions which compiles Godot with the new `modules_enabled_by_default` option I previously introduced from #41091. These new workflows are otherwise copies of `linux-template` and `linux-editor` from `linux_builds.yml` but trimmed.\r\n\r\nAlso note that `linux-minimal-tools` currently has `module_freetype_enabled=yes` because that is issue #28650 (which I am currently looking to fix).\r\n\r\nFinally, if this PR is merged, then it closes #41091, since this branch is a rebase of that PR to master with additional edits.\r\n\r\n---\r\n\r\nAddendum: This code compiles, but the minimal implementations _can and will crash_ unexpectedly when interacting or using projects with fonts.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":480949071,"public_id":41833,"url":"https://github.com/godotengine/godot/pull/41833","diff_url":"https://github.com/godotengine/godot/pull/41833.diff","patch_url":"https://github.com/godotengine/godot/pull/41833.patch","title":"Add boot splash display time setting","state":"open","is_draft":false,"authored_by":{"id":47700418,"user":"dalexeev","avater":"https://avatars.githubusercontent.com/u/47700418?v=4","url":"https://github.com/dalexeev"},"created_at":"2020-09-07T00:37:46Z","updated_at":"2021-03-20T01:47:30Z","body":"Implements #8867.\r\n\r\n---\r\n\r\nBy default, display time is 0 (equivalent to current behavior).\r\n\r\nI found this useful because simple games start so quickly that the splash screen blinks and you can't see anything. The recommended delay is 500 ms – 1 s.\r\n\r\nhttps://github.com/godotengine/godot/blob/b592b74d66f8d728cc512bbde5448d9f4c4e1624/main/main.cpp#L1596\r\n\r\n`delay_usec` is used instead of `delay_msec` because `delay_msec` is defined in `core_bind.cpp` and is not yet available in `main.cpp`.\r\n\r\nThis PR is cherry-pickable for 3.2.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":480881394,"public_id":41821,"url":"https://github.com/godotengine/godot/pull/41821","diff_url":"https://github.com/godotengine/godot/pull/41821.diff","patch_url":"https://github.com/godotengine/godot/pull/41821.patch","title":"Added is_playing_backwards() method to AnimatedSprite2D","state":"open","is_draft":false,"authored_by":{"id":406473,"user":"Wavesonics","avater":"https://avatars.githubusercontent.com/u/406473?v=4","url":"https://github.com/Wavesonics"},"created_at":"2020-09-06T20:18:33Z","updated_at":"2021-03-20T04:17:56Z","body":"It was talked about that backwards should not be a property, so this keeps it private while still exposing it to script for reading.\r\n\r\nThis is an updated version of #30785","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":480080445,"public_id":41771,"url":"https://github.com/godotengine/godot/pull/41771","diff_url":"https://github.com/godotengine/godot/pull/41771.diff","patch_url":"https://github.com/godotengine/godot/pull/41771.patch","title":"Add AnimationNode lifecycle callbacks","state":"open","is_draft":false,"authored_by":{"id":1084143,"user":"RolandMQuiros","avater":"https://avatars.githubusercontent.com/u/1084143?v=4","url":"https://github.com/RolandMQuiros"},"created_at":"2020-09-04T20:45:00Z","updated_at":"2021-05-24T20:03:04Z","body":"Adds lifecycle script callbacks to `AnimationNode` so users can attach logic directly to animations.\r\n\r\nFeature proposal here: https://github.com/godotengine/godot-proposals/issues/1462#issue-693602370\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":479883133,"public_id":41769,"url":"https://github.com/godotengine/godot/pull/41769","diff_url":"https://github.com/godotengine/godot/pull/41769.diff","patch_url":"https://github.com/godotengine/godot/pull/41769.patch","title":"Refactors and corrects the AudioStreamPlayer3D's SPCAP volume calculation.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-04T16:58:23Z","updated_at":"2021-03-25T17:28:39Z","body":"Removes the Spcap class and replaces it with just two functions which:\r\n- Calculate the SPCAP speaker effects: `_calculate_spcap_speaker_effects()`\r\n- Calculate the SPCAP volumes: `_calculate_spcap_volumes()`\r\n\r\nIn addition:\r\n- The speaker effects are now only calculated when the speaker mode changes.\r\n- The speaker effect calculation now includes all speaker directions, not just the previous directions.\r\n- There is no longer a hidden variable (`speaker_directions`).\r\n- The `speaker_directions` are now also a non `const` `static` member of `AudioStreamPlayer3D` allowing them to be configurable.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":478206385,"public_id":41727,"url":"https://github.com/godotengine/godot/pull/41727","diff_url":"https://github.com/godotengine/godot/pull/41727.diff","patch_url":"https://github.com/godotengine/godot/pull/41727.patch","title":"Modify draw_string to support string autowrap","state":"open","is_draft":false,"authored_by":{"id":24036721,"user":"Kartik1397","avater":"https://avatars.githubusercontent.com/u/24036721?v=4","url":"https://github.com/Kartik1397"},"created_at":"2020-09-02T22:07:18Z","updated_at":"2020-09-03T19:17:40Z","body":"Fixes #41084 by adding `draw_string_autowrap` method to `CanvasItem`.\r\n\r\n## Result\r\n![curve_wrap](https://user-images.githubusercontent.com/24036721/92041766-7e6a6280-ed96-11ea-9dc4-078a5bde62fa.png)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":477643029,"public_id":41699,"url":"https://github.com/godotengine/godot/pull/41699","diff_url":"https://github.com/godotengine/godot/pull/41699.diff","patch_url":"https://github.com/godotengine/godot/pull/41699.patch","title":"[3.x] Fix Area monitorable in 2D and 3D Godot physics.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-02T07:57:02Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #41698.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":477642825,"public_id":41698,"url":"https://github.com/godotengine/godot/pull/41698","diff_url":"https://github.com/godotengine/godot/pull/41698.diff","patch_url":"https://github.com/godotengine/godot/pull/41698.patch","title":"Fix Area monitorable in 2D and 3D Godot physics.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-09-02T07:56:37Z","updated_at":"2021-01-19T21:01:45Z","body":"In Godot physics (2D and 3D), when an `Area`'s `Monitorable` property is changed, it updates the broadphase collision checker by changing the `static` field. This removes any active collision pairs and creates new ones. Currently, deleting an active collision pair will trigger `area_exited` signals. However, the `Area`'s status is not changed, so the new pair is ignored until something else forces an update e.g. moving the `Area`.\r\n\r\nThis patch does two things, both of which are required to fix the issues with changes to `Monitorable` not working. First, when changing the `Monitorable` property, it calls `_shapes_changed()`, which adds the `Area` to the `Space`'s moved areas' list, which will trigger a collision update for the new collision pair created. Second, it ensures that only areas that were `Monitorable` are added to the `Areas` removed list when the collision pair is deleted. This also ensures that the new pair's `area_entered` signals are not cancelled by the old pair's `area_exited` signals.\r\n\r\nFixes #23484\r\nFixes #27441\r\n\r\nNote: This does not fix being unable to disable `Monitorable` in Bullet physics. This is fixed in #42306.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":477296492,"public_id":41686,"url":"https://github.com/godotengine/godot/pull/41686","diff_url":"https://github.com/godotengine/godot/pull/41686.diff","patch_url":"https://github.com/godotengine/godot/pull/41686.patch","title":"Improve and Simplify SpinBox Focus Behaviour","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-09-01T19:49:57Z","updated_at":"2021-04-14T08:56:41Z","body":"SpinBox should now respect `focus_mode` correctly.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":475961240,"public_id":41632,"url":"https://github.com/godotengine/godot/pull/41632","diff_url":"https://github.com/godotengine/godot/pull/41632.diff","patch_url":"https://github.com/godotengine/godot/pull/41632.patch","title":"Move method bindings from ArrayMesh to Mesh:","state":"open","is_draft":false,"authored_by":{"id":3920264,"user":"playmyskay","avater":"https://avatars.githubusercontent.com/u/3920264?v=4","url":"https://github.com/playmyskay"},"created_at":"2020-08-30T20:43:32Z","updated_at":"2021-02-09T20:05:51Z","body":"1. surface_get_primitive_type\r\n2. surface_get_format\r\n3. surface_get_array_index_len\r\n4. surface_get_array_len\r\n\r\nI would extend cpp-bindings to get access from gdnative modules via api.json. I have already successfully tested this.\r\nI would appreciate it if this would be included in the **3.2 branch**.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":475932096,"public_id":41626,"url":"https://github.com/godotengine/godot/pull/41626","diff_url":"https://github.com/godotengine/godot/pull/41626.diff","patch_url":"https://github.com/godotengine/godot/pull/41626.patch","title":"Change cubic interpolation of rotations in 3d transform animation tracks","state":"open","is_draft":true,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2020-08-30T16:21:28Z","updated_at":"2021-08-09T08:19:36Z","body":"Fixes: https://github.com/godotengine/godot/issues/40592.\r\n\r\nPlease use your test animation. I've been testing using https://github.com/KhronosGroup/glTF-Sample-Models/tree/5bbe0b378d703a506ce8ae12c7dc829e42546d3b/2.0/InterpolationTest and my own assets.\r\n\r\nThis is also useful for reduz's particle simulations once the code has been debugged.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380,4418914]},{"id":475802181,"public_id":41604,"url":"https://github.com/godotengine/godot/pull/41604","diff_url":"https://github.com/godotengine/godot/pull/41604.diff","patch_url":"https://github.com/godotengine/godot/pull/41604.patch","title":"Adding ability to evaluate the negation of an advance condition in an anim state machine transition","state":"open","is_draft":false,"authored_by":{"id":15147863,"user":"Huxellberger","avater":"https://avatars.githubusercontent.com/u/15147863?v=4","url":"https://github.com/Huxellberger"},"created_at":"2020-08-29T16:57:32Z","updated_at":"2021-01-20T11:22:39Z","body":"**What is the problem?**\r\n\r\nWhen creating logic for a state machine, if you consider a simple setup such as the one below:\r\n\r\n![image](https://user-images.githubusercontent.com/15147863/91641666-d5320e00-ea1d-11ea-8937-c156ca02cbee.png)\r\n\r\nLet's say I want to enter the jumping animation state when a transition parameter \"IsJump\" evaluates to true. That's easy enough to setup...but what happens when I want to exit that jump state again? Adding another bool \"HasFinishedJump\" makes for a lot of extra headaches...especially if these simple states start to pile up!\r\n\r\n**Proposed Solution**\r\n\r\nBy adding an extra inversion property to the transition, we allow for the negation of the bool to be considered and this measurably simplifies the ease in setting up these more simplistic animation states.\r\n\r\nIn the current implementation, it looks like this when highlighting the transition:\r\n\r\n![image](https://user-images.githubusercontent.com/15147863/91641727-5b4e5480-ea1e-11ea-94b4-d510abcd345d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/15147863/91641736-7751f600-ea1e-11ea-9f3c-019bcd7c3435.png)\r\n\r\nThere are similar concepts available for animation transitions in other engines e.g using a NOT for boolean evaluation in unreal engine (which is still fast path accessible which shows they put a lot of stock in it) and although it's been a while since I've used Unity I recall the transition logic there allowing the negation to be considered in some fashion.\r\n\r\nFirst go at adding a new feature...so if I've done something incredibly dumb happy to close/adjust as needed. ","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":475739396,"public_id":41594,"url":"https://github.com/godotengine/godot/pull/41594","diff_url":"https://github.com/godotengine/godot/pull/41594.diff","patch_url":"https://github.com/godotengine/godot/pull/41594.patch","title":"[WIP] Make built-in enum names consistent with GDScript named enums","state":"open","is_draft":false,"authored_by":{"id":43905913,"user":"Yetizone","avater":"https://avatars.githubusercontent.com/u/43905913?v=4","url":"https://github.com/Yetizone"},"created_at":"2020-08-29T07:45:28Z","updated_at":"2020-09-07T16:57:14Z","body":"Opening this in response to https://github.com/godotengine/godot-proposals/issues/1426\r\n\r\nIt's a WIP in it's incipient phase, but I'm opening it now to ask questions about the code, track progress etc. \r\n\r\nCloses https://github.com/godotengine/godot-proposals/issues/1426\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":474962778,"public_id":41571,"url":"https://github.com/godotengine/godot/pull/41571","diff_url":"https://github.com/godotengine/godot/pull/41571.diff","patch_url":"https://github.com/godotengine/godot/pull/41571.patch","title":"File get_csv_line returns invalid PackedStringArray if the line is empty","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-08-27T21:31:51Z","updated_at":"2021-04-19T16:29:53Z","body":"```py\r\n# Notice: Modify this for your OS\r\nconst path = \"/tmp/temp.csv\"\r\n\r\nfunc _ready():\r\n\t_save()\r\n\t_load()\r\n\r\nfunc _save():\r\n\tvar file := File.new()\r\n\tfile.open(path, File.WRITE)\r\n\tfile.store_csv_line([\"a\", \"b\", \"c\"])\r\n\tfile.close()\r\n\r\nfunc _load():\r\n\tvar file := File.new()\r\n\tfile.open(path, File.READ)\r\n\tprint(file.get_csv_line())\r\n\tvar arr = file.get_csv_line()\r\n\tprint(arr)\r\n\tprint(arr.size())\r\n\tfile.close()\r\n```\r\n\r\nBefore:\r\n```\r\n[a, b, c]\r\n[]\r\n1\r\n```\r\n\r\nAfter:\r\n```\r\n[a, b, c]\r\n[]\r\n0\r\n```\r\n\r\n**Discuss**: Depending on how `get_csv_line` should behave, `[\"\"]` could also be a valid return, but it makes it difficult to tell when EOF has been reached.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":474921486,"public_id":41568,"url":"https://github.com/godotengine/godot/pull/41568","diff_url":"https://github.com/godotengine/godot/pull/41568.diff","patch_url":"https://github.com/godotengine/godot/pull/41568.patch","title":"Nice empty sections in `ConfigFile`","state":"open","is_draft":false,"authored_by":{"id":47700418,"user":"dalexeev","avater":"https://avatars.githubusercontent.com/u/47700418?v=4","url":"https://github.com/dalexeev"},"created_at":"2020-08-27T20:05:46Z","updated_at":"2021-01-22T16:22:10Z","body":"Now values ​​of the empty section are saved without `[]` (only at the beginning of the file).\r\n\r\nThis PR could be slightly better, but `OrderedHashMap` does not allow changing the order of elements. :laughing:","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":474808373,"public_id":41565,"url":"https://github.com/godotengine/godot/pull/41565","diff_url":"https://github.com/godotengine/godot/pull/41565.diff","patch_url":"https://github.com/godotengine/godot/pull/41565.patch","title":"Implemented screen_get_usable_rect for X11 Display Server","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2020-08-27T16:15:35Z","updated_at":"2020-11-23T00:58:42Z","body":"Helps with fixing issues with scrolling popups not respecting screen decorations on the display server side for Linux.\r\n\r\n~Extra work is still needed for `PopupMenu` to handle usable screen size properly for all platforms (see #41564).~\r\n*edit:* this has been fixed in #41640\r\n\r\n**Edit - Support for multi-screen:**\r\nHandling decorations is only partially supported, because there's no proper mechanism available in X11 to get accurate information about each screen separately on all desktop systems. There are two cases:\r\n- `_GTK_WORKAREAS` is used when available from the WM to get accurate rect for the different screens (available on Gnome).\r\n- Otherwise `_NET_WORKAREA` is used. It provides one full rect for all screens, which doesn't handle decorations on the secondary screen in all cases (KDE, XFCE).\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":474417126,"public_id":41556,"url":"https://github.com/godotengine/godot/pull/41556","diff_url":"https://github.com/godotengine/godot/pull/41556.diff","patch_url":"https://github.com/godotengine/godot/pull/41556.patch","title":"export StreamPeerStream's poll() function and optimize PackedPeerStream's package length with StreamPeer's big_endian","state":"open","is_draft":false,"authored_by":{"id":29348971,"user":"chenjie199234","avater":"https://avatars.githubusercontent.com/u/29348971?v=4","url":"https://github.com/chenjie199234"},"created_at":"2020-08-27T03:10:50Z","updated_at":"2021-03-07T11:09:43Z","body":"poll is useful when write a network program\r\nwithout poll,we have to spin,and waste cpu\r\nthe reason is in this issue\r\nhttps://github.com/godotengine/godot-proposals/issues/1415\r\n\r\ni don't known if these code is ok\r\ni'm not familiary with godot c++ code\r\nplease review the code","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":474392029,"public_id":41555,"url":"https://github.com/godotengine/godot/pull/41555","diff_url":"https://github.com/godotengine/godot/pull/41555.diff","patch_url":"https://github.com/godotengine/godot/pull/41555.patch","title":"Edit vector/rect properties in a \"linked\" manner when holding down Ctrl","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-08-27T01:38:08Z","updated_at":"2021-02-27T17:15:55Z","body":"**Don't merge yet.** This PR needs to be modified so it doesn't link coordinates when dragging properties to change their values while holding down <kbd>Ctrl</kbd>.\r\n\r\n___\r\n\r\nFor Rect2, Rect2i and AABB, this only applies to the size, not the position.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/144.\r\n\r\n**Note:** When cherry-picking to the `3.2` branch, remove the parts that modify the integer vector types as these aren't present in 3.2.x.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":473591553,"public_id":41526,"url":"https://github.com/godotengine/godot/pull/41526","diff_url":"https://github.com/godotengine/godot/pull/41526.diff","patch_url":"https://github.com/godotengine/godot/pull/41526.patch","title":"Fixes `is_action_released` firing with no modifiers","state":"open","is_draft":true,"authored_by":{"id":13891859,"user":"Lunatoid","avater":"https://avatars.githubusercontent.com/u/13891859?v=4","url":"https://github.com/Lunatoid"},"created_at":"2020-08-26T01:39:04Z","updated_at":"2021-02-03T19:07:51Z","body":"Should fix #34502\r\nIf you have an action like \"CTRL + A\", it will now fire on both press and release, however if you release \"CTRL\" while still holding \"A\" it will not fire the release event.\r\n\r\nAlso tested with just modifier keys like only \"CTRL\" or \"CTRL+SHIFT\" and that still works.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":473488225,"public_id":41519,"url":"https://github.com/godotengine/godot/pull/41519","diff_url":"https://github.com/godotengine/godot/pull/41519.diff","patch_url":"https://github.com/godotengine/godot/pull/41519.patch","title":"Add CSV plural support","state":"open","is_draft":false,"authored_by":{"id":23119524,"user":"SkyLucilfer","avater":"https://avatars.githubusercontent.com/u/23119524?v=4","url":"https://github.com/SkyLucilfer"},"created_at":"2020-08-25T21:09:55Z","updated_at":"2020-09-07T11:59:14Z","body":"Added CSV plural support, as requested by this proposal godotengine/godot-proposals#1291.\r\n\r\n### Usage:\r\nIt functions like how the proposal describes. Some key notes:\r\n\r\n- tr_n() now accepts arguments in the form of tr_n(n, message, plural_message = \"\", context = \"\").\r\n\r\n- Plural translation using CSV should leave out `plural_message` and `context` parameters as they aren't used during the translation (which explains the reordering of the parameters).\r\n\r\n- How it works: tr_n(n, \"KEY\") will fetch the correct plural translation from the CSV using adjusted key, i.e. KEY[0], KEY[1] etc. depending on the current `locale` and n. The system will concatenate the `KEY` with appropriate subscript for us.\r\n\r\n### Condition\r\nBecause of how the concatenation works, in the CSV users should append [0], [1] and so on for keys mapping plurals for it to work. This is the contract. Examples can be seen in the proposal.\r\n\r\n#### Note for PO users: \r\nUsers using PO files to translate will still have to fill in the `plural_message` field, as PO files expect to have the plural message data (I have documented this in the class reference too). The `context` parameter is optional.\r\n\r\n#### Test project:\r\n[test_project.zip](https://github.com/godotengine/godot/files/5126286/test_project.zip)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":473124958,"public_id":41502,"url":"https://github.com/godotengine/godot/pull/41502","diff_url":"https://github.com/godotengine/godot/pull/41502.diff","patch_url":"https://github.com/godotengine/godot/pull/41502.patch","title":"Script editor description on hover Implementation","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-08-25T11:08:02Z","updated_at":"2021-05-21T16:59:33Z","body":"This will draw the description of the symbol that is being hovered (closes https://github.com/godotengine/godot-proposals/issues/1393) This will work with #41095 (marked some TODOs for dependency) and the color values are hard coded which needs to be changed with the theme (not sure I'll be able to implement themes and colors)\r\n\r\n![](https://user-images.githubusercontent.com/41085900/90722006-9d1d2380-e2d7-11ea-9aca-a3555145a481.gif)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183,4418558,4418733,4418914]},{"id":473069049,"public_id":41499,"url":"https://github.com/godotengine/godot/pull/41499","diff_url":"https://github.com/godotengine/godot/pull/41499.diff","patch_url":"https://github.com/godotengine/godot/pull/41499.patch","title":"CSGPolygon Add interpolation (Scaling/Moving) in mode Path","state":"open","is_draft":false,"authored_by":{"id":26193340,"user":"stebulba","avater":"https://avatars.githubusercontent.com/u/26193340?v=4","url":"https://github.com/stebulba"},"created_at":"2020-08-25T09:29:33Z","updated_at":"2021-07-05T19:44:56Z","body":"This new feature from my proposal:\r\nAdd Scaling/Modify a CSG Polygon in PathFollow when PathNode is drawing the mesh\r\n[https://github.com/godotengine/godot-proposals/issues/1062](https://github.com/godotengine/godot-proposals/issues/1062)\r\n- No conflict with anything else.\r\n- No performance drop and no difference when is not active.\r\n- path_joined is working with a manipulation of the path_curve.\r\n\r\nI did't compile from the master. I had issues to compile Godot 4. But on 3.2.3.rc1 is running perfectly.\r\n\r\nThe interpolation work using a Curve who interpolate between two polygon array. If both polygons are equal, a single scaling mode is active.\r\n\r\nIf the path_polygon2 is empty, when you active the interpolation bool, you make a copy of the first polygon to the second. Is a way to reset or help you for editing the polygons.\r\n\r\nEnjoy ! \r\n\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":472065230,"public_id":41464,"url":"https://github.com/godotengine/godot/pull/41464","diff_url":"https://github.com/godotengine/godot/pull/41464.diff","patch_url":"https://github.com/godotengine/godot/pull/41464.patch","title":"Support multiline strings in buttons","state":"open","is_draft":false,"authored_by":{"id":2176843,"user":"Waridley","avater":"https://avatars.githubusercontent.com/u/2176843?v=4","url":"https://github.com/Waridley"},"created_at":"2020-08-23T02:43:46Z","updated_at":"2021-08-06T11:24:33Z","body":"Added new `String::split_lines` and `Font::get_multiline_string_size` methods to make this and possible future features easier. Then I simply put the button text rendering logic in a for loop that loops over each line. Perhaps there's a more efficient method for rendering a block of text, but this changed as little code as possible, and I tried to make sure it was as efficient as I could. \r\n\r\nFixes https://github.com/godotengine/godot/issues/2967","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":472053188,"public_id":41463,"url":"https://github.com/godotengine/godot/pull/41463","diff_url":"https://github.com/godotengine/godot/pull/41463.diff","patch_url":"https://github.com/godotengine/godot/pull/41463.patch","title":"Emacs support","state":"open","is_draft":false,"authored_by":{"id":362891,"user":"rileyrg","avater":"https://avatars.githubusercontent.com/u/362891?v=4","url":"https://github.com/rileyrg"},"created_at":"2020-08-22T23:49:53Z","updated_at":"2021-01-20T07:26:26Z","body":"I added a couple if lines to .gitignore to facilitate (a) Projectile - a popular project  management package for emacs - by telling git to ignore the local .projectile file which is used to tell projectile this is a projectile compatible project and (b) add in a sample .dir-locals.el which configures emacs dap-mode debugging templates for the godot executable,\r\n\r\nPlease note this is my first PR and I hope it's clean and in order. Ideally, it could be cherry-picked into 3.2.2 master stable.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":471945929,"public_id":41443,"url":"https://github.com/godotengine/godot/pull/41443","diff_url":"https://github.com/godotengine/godot/pull/41443.diff","patch_url":"https://github.com/godotengine/godot/pull/41443.patch","title":"Reset clear and update mode when set to only next frame","state":"open","is_draft":true,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2020-08-22T06:23:33Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes: https://github.com/godotengine/godot/issues/33351\r\n\r\nI am not certain this is the best approach. It is certainly one of the simplest approaches. \r\n\r\nWe could also track the frame manually within the Viewport class.\r\n\r\nIf we decide that this is an acceptable approach, I will make an equivalent PR for ``SubViewport`` in master","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":471820868,"public_id":41434,"url":"https://github.com/godotengine/godot/pull/41434","diff_url":"https://github.com/godotengine/godot/pull/41434.diff","patch_url":"https://github.com/godotengine/godot/pull/41434.patch","title":"Fix triple-quote completion bug #41361","state":"open","is_draft":false,"authored_by":{"id":43443370,"user":"amoriqbal","avater":"https://avatars.githubusercontent.com/u/43443370?v=4","url":"https://github.com/amoriqbal"},"created_at":"2020-08-21T19:32:46Z","updated_at":"2020-10-25T08:50:02Z","body":"**Previous state:**\r\nAuto-complete did not recognise triple-quotes.\r\n\r\n**After this commit:**\r\n1. Auto-complete triple-quote pairs working.\r\n2. Also, other auto-complete features, like single-quotes and braces, now recognise the presence of these multi-line strings. They act accordingly. Quotations inside multi-line comments are not closed automatically.\r\n\r\n**Known Issues**\r\n1. The new function _get_running_quotes() checks for open quotations and comments. It can be optimised (though it does not cause any lag. Tested with 500 lines). \r\n2. Quotations inside multi-line comments are consumed automatically (On `'``'`, backspace on the first `'` consumes the whole pair). This will be fixed in the next PR. This issue is not created in this PR. It exists in 3.2.2 also. \r\n\r\n*Bugsquad edit: This closes #41361.*","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":471010006,"public_id":41402,"url":"https://github.com/godotengine/godot/pull/41402","diff_url":"https://github.com/godotengine/godot/pull/41402.diff","patch_url":"https://github.com/godotengine/godot/pull/41402.patch","title":"Add process_mode property to InterpolatedCamera","state":"open","is_draft":false,"authored_by":{"id":11743366,"user":"saneery","avater":"https://avatars.githubusercontent.com/u/11743366?v=4","url":"https://github.com/saneery"},"created_at":"2020-08-20T15:49:20Z","updated_at":"2021-08-06T11:24:33Z","body":"move_and_slide in _physics_process + InterpolatedCamera == stutter\r\n![ezgif-5-9e777cb7f7fd](https://user-images.githubusercontent.com/11743366/90794521-901f2500-e315-11ea-88ec-1a0b32a13620.gif)\r\n\r\nLike this https://github.com/godotengine/godot/pull/24806 but for InterpolatedCamera\r\nThis allows the user to choose if the camera should update in _process or _physics_process.\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":470116955,"public_id":41369,"url":"https://github.com/godotengine/godot/pull/41369","diff_url":"https://github.com/godotengine/godot/pull/41369.diff","patch_url":"https://github.com/godotengine/godot/pull/41369.patch","title":"Autosize inspector property editors rather than always being half-half with label","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-08-19T11:58:53Z","updated_at":"2021-05-22T10:47:21Z","body":"Closes #7133\r\nCloses #35564\r\n\r\nThis resolves a (seemingly longstanding) issue where the editor inspector always splits Property Editors and their Labels 50/50 no matter what. Most of the time it would be beneficial to have a better view of the Property Editor, especially for long strings or paths.\r\n\r\nDemo:\r\nNote that the width of the label is capped at 50%, so the property editor does not become tiny.\r\n![inspector_autosize](https://user-images.githubusercontent.com/41730826/90631810-bb970680-e266-11ea-9a9e-3cccdbb4ad04.gif)\r\n\r\nWorks everywhere inspector is used, as expected.\r\n![inspector_autosize_projsettings](https://user-images.githubusercontent.com/41730826/90631839-c5206e80-e266-11ea-8ce5-130d607c6f46.gif)\r\n\r\nThis also maintains a form of \"backwards compatibility\" with the Animation Blend Tree Editor and the Visual Shader Editor, which both used the previous setting, which was `set_name_split_ratio()` . The method (and associated property) is now `label_target_width`, so setting it to 0 has the same effect in both cases, requiring no other changes.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":469312410,"public_id":41348,"url":"https://github.com/godotengine/godot/pull/41348","diff_url":"https://github.com/godotengine/godot/pull/41348.diff","patch_url":"https://github.com/godotengine/godot/pull/41348.patch","title":"[3.x] Make intersect_ray() return true, if ray orginates inside of a shape.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-08-18T09:01:00Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #41347.\r\n","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4417777]},{"id":469312213,"public_id":41347,"url":"https://github.com/godotengine/godot/pull/41347","diff_url":"https://github.com/godotengine/godot/pull/41347.diff","patch_url":"https://github.com/godotengine/godot/pull/41347.patch","title":"Make intersect_ray() return true, if ray orginates inside of a shape.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-08-18T09:00:40Z","updated_at":"2021-01-22T18:06:24Z","body":"Fixes #35845\r\nFixes #38343\r\nFixes #38873\r\nFixes #39859\r\nFixes #44003\r\nSupersedes #41277\r\nAddresses [comment](https://github.com/godotengine/godot/issues/41167#issuecomment-674035596) in #41167.\r\n\r\nThe issues above suggest that, if the ray originates inside of a shape, `intersect_ray()` is expected to return true. This change performs this check and assigns the first shape that it detects that the ray is within as the colliding `Object`. It also sets the colliding point to the ray origin. Since the ray is not colliding with an edge or face, there is no normal; so the zero length vector is assigned. This makes all `CollisionShapes` consistent with the current results when a ray originates inside a `Rectangle2D` or `BoxShape3D` (in Godot physics).\r\n\r\nThis change has been applied to both Godot 2D and Godot 3D physics. It has not been applied to Bullet physics, which uses the opposite approach: returns no collision if the ray originates inside a shape (has an incalculable normal); as proposed in #41277. However, unlike in Godot physics, in Bullet physics, there does not appear to be an easy way to determine if a point (the ray origin) is contained inside a `CollisionShape` to make this consistent in Bullet physics too.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":468691605,"public_id":41322,"url":"https://github.com/godotengine/godot/pull/41322","diff_url":"https://github.com/godotengine/godot/pull/41322.diff","patch_url":"https://github.com/godotengine/godot/pull/41322.patch","title":"PhysicsBone3D and Skeleton Improvements","state":"open","is_draft":false,"authored_by":{"id":5601015,"user":"marstaik","avater":"https://avatars.githubusercontent.com/u/5601015?v=4","url":"https://github.com/marstaik"},"created_at":"2020-08-17T08:56:21Z","updated_at":"2021-08-13T01:00:30Z","body":"## Demo\r\n[Video demonstration of this MR](https://youtu.be/jy0iqu0VZFU) (beware, outfit is a little risque, may be NSFW)\r\n\r\n\r\n## Summary\r\nThe aim of this commit is to improve the Physics bone system to create more impressive rigged 3d characters in Godot. It addresses some issues with flexibility (previously, there could be only one physical bone per bone) and simulation and ease of use issues.\r\n\r\nI really recommend watching the above video, as it does a much better job of demonstrating how the new nodes work.\r\n\r\n## Changes\r\nThis commit renames PhysicalBone3D -> PhysicsBone3D and converts PhysicsBone3D into a proper rigid body.\r\n\r\nPhysicsBone3D has two modes - bone tracking and free simulation. In bone tracking - the body is in \"kinematic mode\" and continuously follows the bone. In free simulation mode, the bone is in rigid body mode, simulating with the world, and controls the position of the joint directly.\r\n\r\nFor joining free simulating bones, derived nodes of all of the Joint classes have been made specifically for bones, and whose joint position is automatically computed as the pivot point of the second bone. This allows full customization of the simulating joint hierarchy, and allows for combinations of free simulation and non free simulation.\r\n\r\nDue to decoupling of character controllers kinematic bodies from free simulating bones, a PhysicsBoneCompensation3D node has been added which allows you to track velocities of a kinematic object and apply them to the bones.\r\n\r\nSkeleton3D has also been updated to have an internal process tick for pose updates, as well as for partial pose re computation (only bones affected and their children will have their final poses recomputed)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777]},{"id":468493732,"public_id":41312,"url":"https://github.com/godotengine/godot/pull/41312","diff_url":"https://github.com/godotengine/godot/pull/41312.diff","patch_url":"https://github.com/godotengine/godot/pull/41312.patch","title":"Unsaved changes reviewed before exporting","state":"open","is_draft":false,"authored_by":{"id":48980641,"user":"AlphaOneProject","avater":"https://avatars.githubusercontent.com/u/48980641?v=4","url":"https://github.com/AlphaOneProject"},"created_at":"2020-08-16T20:43:56Z","updated_at":"2021-03-20T19:41:22Z","body":"Editor now open save confirmation for each unsaved change before\r\nopening the project export popup.\r\n\r\nSolves unsaved changes not included in the exported project.\r\n\r\nResolves: #40963","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":468367941,"public_id":41298,"url":"https://github.com/godotengine/godot/pull/41298","diff_url":"https://github.com/godotengine/godot/pull/41298.diff","patch_url":"https://github.com/godotengine/godot/pull/41298.patch","title":"Mute some of the warnings \"Implicit conversion from type..\"","state":"open","is_draft":true,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2020-08-15T21:45:02Z","updated_at":"2021-08-15T20:29:25Z","body":"Fixes #33236\r\nFixes #41293\r\n\r\nThis should silence warnings similar to #41293, which are completely useless since are used in hashing or as enum flags(it's not the value that counts, it's the specific distribution of the bits).\r\n\r\nThis PR adds several explicit conversions for incompatible types that are not due to an error.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":468155600,"public_id":41266,"url":"https://github.com/godotengine/godot/pull/41266","diff_url":"https://github.com/godotengine/godot/pull/41266.diff","patch_url":"https://github.com/godotengine/godot/pull/41266.patch","title":"FileSystem dock now filters the import options based on search filter.","state":"open","is_draft":false,"authored_by":{"id":27040,"user":"geekrelief","avater":"https://avatars.githubusercontent.com/u/27040?v=4","url":"https://github.com/geekrelief"},"created_at":"2020-08-14T19:47:22Z","updated_at":"2021-04-26T20:47:29Z","body":"In conjunction with PR #41242, you can have directories\r\nof mixed import types, filter by part of a file name\r\nand select a directory to reimport all the matching files.\r\n\r\n<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418424,4418914]},{"id":468142274,"public_id":41264,"url":"https://github.com/godotengine/godot/pull/41264","diff_url":"https://github.com/godotengine/godot/pull/41264.diff","patch_url":"https://github.com/godotengine/godot/pull/41264.patch","title":"Allow exporting custom Resource variables from GDscript","state":"open","is_draft":false,"authored_by":{"id":4402304,"user":"JFonS","avater":"https://avatars.githubusercontent.com/u/4402304?v=4","url":"https://github.com/JFonS"},"created_at":"2020-08-14T19:10:24Z","updated_at":"2021-08-06T11:24:33Z","body":"This PR is based on the work by Will Nations (@willnationsdev) in\r\nhttps://github.com/willnationsdev/godot/commits/gdres-3.2\r\n\r\nIt includes some extra changes to make it more robust to cyclic script\r\nreferences and a minor bugfix. These changes were sponsored by IMVU.\r\n\r\nIn order to export a custom Resource:\r\n\r\n1. Create a script that extends Resource (or any other Resource type) and give it a `class_name`\r\n![res](https://user-images.githubusercontent.com/4402304/90281139-6759e400-de6c-11ea-8dc7-adcc1db6d0ce.png)\r\n\r\n2. You are done! You can now export variables using the class name as a hint.\r\n![Screenshot from 2020-08-14 21-00-10](https://user-images.githubusercontent.com/4402304/90283840-33cd8880-de71-11ea-8e3e-366a845cb6fc.png)\r\n![myres2](https://user-images.githubusercontent.com/4402304/90281434-d8999700-de6c-11ea-8801-b131f4c49cb4.png)\r\n\r\n3. Inheritance works too :)\r\n![Screenshot from 2020-08-14 20-29-54](https://user-images.githubusercontent.com/4402304/90281482-f109b180-de6c-11ea-8e71-caaa467928f2.png)\r\n![new](https://user-images.githubusercontent.com/4402304/90281444-dd5e4b00-de6c-11ea-850b-903b087508cd.png)\r\n\r\n\r\nThanks again to @willnationsdev for the awesome work!\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183,4418914]},{"id":467709786,"public_id":41239,"url":"https://github.com/godotengine/godot/pull/41239","diff_url":"https://github.com/godotengine/godot/pull/41239.diff","patch_url":"https://github.com/godotengine/godot/pull/41239.patch","title":"Fix `CanvasItem.draw_rect` function with `filled = false`","state":"open","is_draft":false,"authored_by":{"id":47700418,"user":"dalexeev","avater":"https://avatars.githubusercontent.com/u/47700418?v=4","url":"https://github.com/dalexeev"},"created_at":"2020-08-14T00:56:57Z","updated_at":"2021-08-22T08:32:02Z","body":"Closes #35384.\r\n\r\n---\r\n\r\nSpecial thanks to @clayjohn and @kleonc for [the explanations](https://github.com/godotengine/godot/issues/41023).","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":467366068,"public_id":41225,"url":"https://github.com/godotengine/godot/pull/41225","diff_url":"https://github.com/godotengine/godot/pull/41225.diff","patch_url":"https://github.com/godotengine/godot/pull/41225.patch","title":"Added Always Visible property to ScrollContainer scrollbars","state":"open","is_draft":false,"authored_by":{"id":17124869,"user":"Oen44","avater":"https://avatars.githubusercontent.com/u/17124869?v=4","url":"https://github.com/Oen44"},"created_at":"2020-08-13T12:53:48Z","updated_at":"2021-07-06T10:32:43Z","body":"Dynamically changing `ScrollContainer` width/height can result in scrollbar not visible anymore and leaving unnecessary empty space which in some cases might not look that great. Now it's possible to have scrollbars visible all the time.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":467157038,"public_id":41214,"url":"https://github.com/godotengine/godot/pull/41214","diff_url":"https://github.com/godotengine/godot/pull/41214.diff","patch_url":"https://github.com/godotengine/godot/pull/41214.patch","title":"Navigation Mesh Generation - Simple geometry method added","state":"open","is_draft":false,"authored_by":{"id":69324102,"user":"TypeOverride2","avater":"https://avatars.githubusercontent.com/u/69324102?v=4","url":"https://github.com/TypeOverride2"},"created_at":"2020-08-13T05:29:12Z","updated_at":"2021-02-27T17:22:21Z","body":"Implemented a method of generating simple geometry. It will use the mesh like it was created.\r\n\r\n![simplegem0](https://user-images.githubusercontent.com/69324102/90097539-750d4d80-dd36-11ea-8a06-9e55dad14f17.png)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":466959886,"public_id":41208,"url":"https://github.com/godotengine/godot/pull/41208","diff_url":"https://github.com/godotengine/godot/pull/41208.diff","patch_url":"https://github.com/godotengine/godot/pull/41208.patch","title":"Bug/lsp ignore $ notifications","state":"open","is_draft":false,"authored_by":{"id":15386897,"user":"ofrank123","avater":"https://avatars.githubusercontent.com/u/15386897?v=4","url":"https://github.com/ofrank123"},"created_at":"2020-08-12T19:21:36Z","updated_at":"2021-08-06T11:24:33Z","body":"Ignores $/ notification so that an error is not thrown to client.  This is per the [LSP specification](https://microsoft.github.io/language-server-protocol/specification.html#dollarRequests).  Also adds an option so users can choose whether non-standard messages are sent (in particular the gdscript/capabilities and gdscript_client/changeWorkspace messages).  ","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":466400409,"public_id":41193,"url":"https://github.com/godotengine/godot/pull/41193","diff_url":"https://github.com/godotengine/godot/pull/41193.diff","patch_url":"https://github.com/godotengine/godot/pull/41193.patch","title":"The UndoRedo class has been extended to make it more useful for its own use in addition to internal use by the engine itself.","state":"open","is_draft":false,"authored_by":{"id":69324102,"user":"TypeOverride2","avater":"https://avatars.githubusercontent.com/u/69324102?v=4","url":"https://github.com/TypeOverride2"},"created_at":"2020-08-11T23:02:22Z","updated_at":"2021-03-20T21:21:01Z","body":"`int get_action_count() const;`\r\n> Gets the amount of actions.\r\n\r\n`int get_current_action() const;`\r\n> Gets the index of the current action.\r\n\r\n`void set_max_actions(int p_max_actions);`\r\n> Sets the max amount of actions. If max_actions is -1, there is no limit of actions.\r\n\r\n`int get_max_actions() const;`\r\n> Returns the max amount of actions. Returns -1, when there is no limit of actions.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":465722646,"public_id":41180,"url":"https://github.com/godotengine/godot/pull/41180","diff_url":"https://github.com/godotengine/godot/pull/41180.diff","patch_url":"https://github.com/godotengine/godot/pull/41180.patch","title":"Audio Track playback fixed in AnimationPlayer","state":"open","is_draft":false,"authored_by":{"id":69324102,"user":"TypeOverride2","avater":"https://avatars.githubusercontent.com/u/69324102?v=4","url":"https://github.com/TypeOverride2"},"created_at":"2020-08-10T20:45:24Z","updated_at":"2021-01-20T11:25:24Z","body":"fixed the audio track playback in the same manner like the animation track playback was fixed on the higher branch (animation-track-feature - https://github.com/godotengine/godot/pull/41168).\r\n\r\n- fixed that audio playback is playing in loop when there is no end offset\r\n- fixed audio playback is not stopping when reaching end of track\r\n- fixed correct playing of overlapped areas of audio\r\n- fixed that on track loop the audio is sometimes not playing","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":465422205,"public_id":41168,"url":"https://github.com/godotengine/godot/pull/41168","diff_url":"https://github.com/godotengine/godot/pull/41168.diff","patch_url":"https://github.com/godotengine/godot/pull/41168.patch","title":"Implemented start and end offset for AnimationTrack (like AudioTrack has)","state":"open","is_draft":false,"authored_by":{"id":69324102,"user":"TypeOverride2","avater":"https://avatars.githubusercontent.com/u/69324102?v=4","url":"https://github.com/TypeOverride2"},"created_at":"2020-08-10T10:45:14Z","updated_at":"2021-01-20T11:27:23Z","body":"Implemented start and end offset for AnimationTrack (like AudioTrack has). Several bugfixes on Animation playback included.\r\n\r\n[![](https://img.youtube.com/vi/0t3_yYInLuY/0.jpg)](https://www.youtube.com/watch?v=0t3_yYInLuY)\r\n\r\n- setting a start and end offset like AudioTrack has is now possible on AnimationTracks\r\n- live-preview of animations are now possible in AnimationPlayer via Editor\r\n- the correct last animation frame is now showing when going in AnimationPlayer on a empty area with the cursor\r\n- backward playing of animations is now possible in AnimationPlayer\r\n- overlapping areas ( < 0 and > length) of animations are now playing correctly in AnimationPlayer\r\n- AnimationPlayer is now stopping on the correct time when AnimationTrack length is reached (loop off)\r\n- A sub-AnimationTrack is now not looping anymore infinite when reaching the end of the AnimationTrack\r\n- serveral other fixes are made on AnimationTrack playback logic\r\n\r\n(Notice: Sorry. I had to close my old Pull request. Now it should all be in a branch. I should read next time the pull request workflow first. I hope now its all fine)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":465190042,"public_id":41148,"url":"https://github.com/godotengine/godot/pull/41148","diff_url":"https://github.com/godotengine/godot/pull/41148.diff","patch_url":"https://github.com/godotengine/godot/pull/41148.patch","title":"Set resource path on load.","state":"open","is_draft":false,"authored_by":{"id":22252865,"user":"somnathsarkar","avater":"https://avatars.githubusercontent.com/u/22252865?v=4","url":"https://github.com/somnathsarkar"},"created_at":"2020-08-09T19:07:25Z","updated_at":"2021-08-06T11:24:33Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nFixes #39881\r\n\r\nCalling `get_path()` returns null for certain resources after their `load()` function is used. For `StreamTexture` a block of code intended to set the resource path in the load function does not actually do so. This fix rectifies that block, and adds a similar changes to `ImageTexture` and `Image` . More information [here](https://github.com/godotengine/godot/issues/39881#issuecomment-670953617)","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418914]},{"id":465169324,"public_id":41143,"url":"https://github.com/godotengine/godot/pull/41143","diff_url":"https://github.com/godotengine/godot/pull/41143.diff","patch_url":"https://github.com/godotengine/godot/pull/41143.patch","title":"Use a bold font for modified property names in the inspector","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-08-09T15:59:32Z","updated_at":"2021-02-25T16:48:28Z","body":"This is more in line with how other software denotes modified properties in inspector-like controls.\r\n\r\n## Preview\r\n\r\n![Editor inspector with modified properties](https://user-images.githubusercontent.com/180032/89736497-16ac4a80-da6a-11ea-958d-a2c6607eba2b.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418563]},{"id":464481681,"public_id":41096,"url":"https://github.com/godotengine/godot/pull/41096","diff_url":"https://github.com/godotengine/godot/pull/41096.diff","patch_url":"https://github.com/godotengine/godot/pull/41096.patch","title":"Correctly flush dirty bodies - physics.","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-08-07T08:53:14Z","updated_at":"2020-09-17T17:16:05Z","body":"The lazy changes, implemented by this PR: #39726, was not flushing the dirty bodies when needed - causing different crashes.\r\nThis PR make sure to flush the dirty bodies, when is necessary do so, and not just during the physics step.\r\n\r\nNote, the perf of this PR is not changed and is in line with the one measured here: https://github.com/godotengine/godot/pull/41082#issuecomment-670382832\r\n```\r\nTest start\r\nAdded: 0\r\nAdded: 50\r\nAdded: 100\r\nAdded: 150\r\nAdded: 200\r\nAdded: 250\r\nAdded: 300\r\nAdded: 350\r\nAdded: 400\r\nAdded: 450\r\nAdded: 500\r\nAdded: 550\r\nAdded: 600\r\nAdded: 650\r\nAdded: 700\r\nAdded: 750\r\nAdded: 800\r\nAdded: 850\r\nAdded: 900\r\nAdded: 950\r\nAdded: 1000\r\nAdded: 1050\r\nAdded: 1100\r\nAdded: 1150\r\nAdded: 1200\r\nAdded: 1250\r\nAdded: 1300\r\nAdded: 1350\r\nAdded: 1400\r\nAdded: 1450\r\nAdded: 1500\r\nAdded: 1550\r\nAdded: 1600\r\nAdded: 1650\r\nAdded: 1700\r\nAdded: 1750\r\nAdded: 1800\r\nAdded: 1850\r\nAdded: 1900\r\nAdded: 1950\r\nFrame 1: 33ms\r\nFrame 2: 9146ms\r\nFrame 3: 14503ms\r\n```\r\n\r\nFixes: #40311\r\nFixes: #40840\r\nSuperseed: #41067","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":463177192,"public_id":41038,"url":"https://github.com/godotengine/godot/pull/41038","diff_url":"https://github.com/godotengine/godot/pull/41038.diff","patch_url":"https://github.com/godotengine/godot/pull/41038.patch","title":"Allow Disabling 2D from editor features.","state":"open","is_draft":true,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-08-05T06:36:28Z","updated_at":"2021-02-27T19:41:30Z","body":"**DRAFT**: This PR requires #41036 to be merged.\r\n\r\n---\r\n\r\nThis PR allows disabling the 2D editor in the editor features dialog. Also improves the main screen plugin code by allowing no plugins to be loaded at a time.\r\n\r\nHow the editor looks without any main screen plugins (Pointless, but still possible):\r\n![image](https://user-images.githubusercontent.com/14253836/89380208-c1181c80-d6bc-11ea-85e2-f078a57cceaf.png)\r\n\r\nCC @aaronfranke \r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":463120605,"public_id":41036,"url":"https://github.com/godotengine/godot/pull/41036","diff_url":"https://github.com/godotengine/godot/pull/41036.diff","patch_url":"https://github.com/godotengine/godot/pull/41036.patch","title":"Use 2D as default main screen plugin","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-08-05T03:23:48Z","updated_at":"2021-07-05T19:21:21Z","body":"This was based on a request [here](https://github.com/godotengine/godot/issues/2207#issuecomment-117028091) by @itsraineing:\r\n\r\n> I would recommend that either the default (eg when creating a new scene) be changed to 2D, or the 3D tab moved to be the first; it's always stricken me as a bit odd that the editor defaults to the second tab.\r\n\r\nThis PR changes the default main screen plugin to the first one that is enabled. Typically, 2D\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/14253836/89368362-f878d000-d6a0-11ea-9a2b-65decdf14caa.png)\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/14253836/89368366-fb73c080-d6a0-11ea-9743-25e80f7b1c50.png)\r\n\r\n\r\n*Bugsquad edit:* Closes https://github.com/godotengine/godot-proposals/issues/1352","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":461855971,"public_id":40981,"url":"https://github.com/godotengine/godot/pull/40981","diff_url":"https://github.com/godotengine/godot/pull/40981.diff","patch_url":"https://github.com/godotengine/godot/pull/40981.patch","title":"Always disable low-processor usage mode on mobile platforms","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-08-02T20:26:50Z","updated_at":"2021-03-09T21:06:47Z","body":"This partially addresses https://github.com/godotengine/godot/issues/19304.\r\n\r\n**Note:** It may be easier to cherry-pick this PR by copy-pasting the relevant parts rather than using `git cherry-pick`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":461826377,"public_id":40975,"url":"https://github.com/godotengine/godot/pull/40975","diff_url":"https://github.com/godotengine/godot/pull/40975.diff","patch_url":"https://github.com/godotengine/godot/pull/40975.patch","title":"Added set_extra_headers() to WebSocketServer","state":"open","is_draft":false,"authored_by":{"id":1125150,"user":"rohanrhu","avater":"https://avatars.githubusercontent.com/u/1125150?v=4","url":"https://github.com/rohanrhu"},"created_at":"2020-08-02T16:08:30Z","updated_at":"2021-07-16T17:50:29Z","body":"Hi, I'm resending PR to `master` branch with changes.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428]},{"id":459697312,"public_id":40893,"url":"https://github.com/godotengine/godot/pull/40893","diff_url":"https://github.com/godotengine/godot/pull/40893.diff","patch_url":"https://github.com/godotengine/godot/pull/40893.patch","title":"Added sanitizer-specific suffixes","state":"open","is_draft":false,"authored_by":{"id":8337880,"user":"Rubonnek","avater":"https://avatars.githubusercontent.com/u/8337880?v=4","url":"https://github.com/Rubonnek"},"created_at":"2020-07-31T00:55:37Z","updated_at":"2021-06-21T05:38:49Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n\r\nI'd like to have separated Godot binary filenames that display which sanitizers were enabled.\r\n\r\nNot sure if we want this, but I find it useful.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3112904,3112907,4418518]},{"id":458387747,"public_id":40831,"url":"https://github.com/godotengine/godot/pull/40831","diff_url":"https://github.com/godotengine/godot/pull/40831.diff","patch_url":"https://github.com/godotengine/godot/pull/40831.patch","title":"Change \"does\" to \"do\" to and add preceding \"note\" regarding erase() method.","state":"open","is_draft":false,"authored_by":{"id":2729388,"user":"PerMalmberg","avater":"https://avatars.githubusercontent.com/u/2729388?v=4","url":"https://github.com/PerMalmberg"},"created_at":"2020-07-29T11:50:27Z","updated_at":"2020-09-29T07:56:30Z","body":"<!--\r\nPull requests should always be made for the `master` branch first, as that's\r\nwhere development happens and the source of all future stable release branches.\r\n\r\nRelevant fixes are cherry-picked for stable branches as needed.\r\n\r\nDo not create a pull request for stable branches unless the change is already\r\navailable in the `master` branch and it cannot be easily cherry-picked.\r\nAlternatively, if the change is only relevant for that branch (e.g. rendering\r\nfixes for the 3.2 branch).\r\n-->\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":458171974,"public_id":40814,"url":"https://github.com/godotengine/godot/pull/40814","diff_url":"https://github.com/godotengine/godot/pull/40814.diff","patch_url":"https://github.com/godotengine/godot/pull/40814.patch","title":"Properly handle `CSGShape` parent and visibility updates, plus some refactoring","state":"open","is_draft":false,"authored_by":{"id":5272529,"user":"hoontee","avater":"https://avatars.githubusercontent.com/u/5272529?v=4","url":"https://github.com/hoontee"},"created_at":"2020-07-29T03:33:49Z","updated_at":"2021-05-06T14:40:26Z","body":"- `CSGShapes` no longer lose collision when the root shape is made invisible. Fixes #43251.\r\n- Prevents unnecessary `CSGShape` updates when changing the parent's visibility or hierarchy. Fixes godotengine#40931.\r\n- Allows `_update_shape` to be used on invisible shapes. Fixes godotengine#41093.\r\n- Closes #43381.\r\n- Refactor: Renames `parent` to `parent_shape`.\r\n- Refactor: Cleaned up `CSGShape3D::_notification`.\r\n\r\n##\r\nTest projects:\r\n[40814 Test Suite - Visibility.zip](https://github.com/godotengine/godot/files/5044638/40814.Test.Suite.-.Visibility.zip)\r\n[40814 Test Suite - Scene Tree.zip](https://github.com/godotengine/godot/files/5044637/40814.Test.Suite.-.Scene.Tree.zip)\r\n[40814 Test Suite - Collision.zip](https://github.com/godotengine/godot/files/5044952/40814.Test.Suite.-.Collision.zip)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1332303119,"name":"regression","color":"#ff63ac"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":457766337,"public_id":40788,"url":"https://github.com/godotengine/godot/pull/40788","diff_url":"https://github.com/godotengine/godot/pull/40788.diff","patch_url":"https://github.com/godotengine/godot/pull/40788.patch","title":"[3.x] Move Bullet physics query flush from Bullet space pre-tick callback to Bullet physics flush_queries() again.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-07-28T12:07:08Z","updated_at":"2021-08-06T11:24:33Z","body":"This reverts commit 10544f1cf777324efc676565ecc698f8ba9f06e3.\r\n\r\nAs per discussion [here](https://github.com/godotengine/godot/pull/40185#issuecomment-664977928), #40185 was reverted for 3.2.3, because of a regression issues. Once all the regression issues have been resolved this change can be reapplied.\r\n\r\nRegression issues that need to be resolved before applying this PR:\r\n- [ ] #40486\r\n- [x] #40508 - Fixed with c31acd0058cb or a 3.2 cherry-pick of #42650.\r\n- [x] #40739 - Fixed with #40990\r\n\r\n**Edit:** I've added the fix for #40508 as a separate commit to this PR.\r\n\r\nCloses #37702","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":457389943,"public_id":40775,"url":"https://github.com/godotengine/godot/pull/40775","diff_url":"https://github.com/godotengine/godot/pull/40775.diff","patch_url":"https://github.com/godotengine/godot/pull/40775.patch","title":"[WIP] More C# friendly API for Godot file access","state":"open","is_draft":true,"authored_by":{"id":7718100,"user":"neikeq","avater":"https://avatars.githubusercontent.com/u/7718100?v=4","url":"https://github.com/neikeq"},"created_at":"2020-07-27T20:38:44Z","updated_at":"2020-12-05T05:21:18Z","body":"This is still Work-In-Progress.\r\n\r\nFor now the basic idea is to provide a Stream class and imitations of the System.IO.File and System.IO.Directory static classes wrapping the Godot file system API.\r\n\r\nThere are a few things still missing, most of them because of lack of support in the Godot fs API itself.\r\n\r\nThere are no documentation comments yet. That will likely be the last step before merging.\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":457243317,"public_id":40765,"url":"https://github.com/godotengine/godot/pull/40765","diff_url":"https://github.com/godotengine/godot/pull/40765.diff","patch_url":"https://github.com/godotengine/godot/pull/40765.patch","title":"[3.x] Make threaded loading safe","state":"open","is_draft":true,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2020-07-27T15:38:36Z","updated_at":"2021-08-06T11:24:33Z","body":"Loading resources from a thread other than the main was not safe because a number of resource types schedule a \"flush\" to get updated according to the loaded values for their properties.\r\n\r\nThat \"flush\" generally consists in a deferred call to their `_update()` member function. In other words, calls to that function are added to the `MessageQueue`.\r\n\r\nThe problem is that if the resource is loaded from another thread, **race conditions happen since the main thread will keep running, flushing the `MessageQueue` and therefore running those calls to `_update()`, while the loading thread may still be dealing with the resource**.\r\n\r\nThis PR addresses that problem by doing this:\r\n- Adding to `MessageQueue` the ability for the current thread to opt-in to accumulation of deferred calls. When a thread that opted-in decides to opt-out, the accumulated message buffer for it is appended to the regular message queue so they are run when it's safe to do so.\r\n- Making primitive resource loaders (text/binary) use that feature. This way no changes are required on every resource type. To further improve the robustness of this approach, `ResourceInteractiveLoader::poll()` has been refactored so that it's not meant to be overridden (it takes care of the opt-in/opt-out). Derived classes now implement the virtual protected `_poll()` instead, so this new approach is not an added concern to them.\r\n\r\n---\r\n**This code is generously donated by IMVU.**","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":457243294,"public_id":40764,"url":"https://github.com/godotengine/godot/pull/40764","diff_url":"https://github.com/godotengine/godot/pull/40764.diff","patch_url":"https://github.com/godotengine/godot/pull/40764.patch","title":"Make threaded loading safe","state":"open","is_draft":true,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2020-07-27T15:38:34Z","updated_at":"2020-09-24T23:42:40Z","body":"Loading resources from a thread other than the main was not safe because a number of resource types schedule a \"flush\" to get updated according to the loaded values for their properties.\r\n\r\nThat \"flush\" generally consists in a deferred call to their `_update()` member function. In other words, calls to that function are added to the `MessageQueue`.\r\n\r\nResource loading in Godot 4.0 is threaded by design, so **race conditions happen since the main thread will keep running, flushing the `MessageQueue` and therefore running those calls to the relevant update/flush, while a loading thread may still be dealing with the resource**.\r\n\r\nThis PR addresses that problem by doing this:\r\n- Adding to `MessageQueue` the ability for the current thread to opt-in to accumulation of deferred calls. When a thread that opted-in decides to opt-out, the accumulated message buffer for it is appended to the regular message queue so they are run when it's safe to do so.\r\n- Ensuring every resource load opts-in to that feature for loading and opts-out when done. `ResourceFormatLoader::load()` has been refactored so that it's not overridabl; it now just opts-in, calls through the virtual protected `_load()` -which is were specific resource loaders do the bulk of the work now- and opts-out. This way, no changes are required in how each resource type is written and doesn't require special care when writing new types.\r\n\r\n---\r\n**This code is generously donated by IMVU.**","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":456447429,"public_id":40677,"url":"https://github.com/godotengine/godot/pull/40677","diff_url":"https://github.com/godotengine/godot/pull/40677.diff","patch_url":"https://github.com/godotengine/godot/pull/40677.patch","title":"Allow camera_2d to update viewport while in editor","state":"open","is_draft":false,"authored_by":{"id":34634373,"user":"Nikhil-42","avater":"https://avatars.githubusercontent.com/u/34634373?v=4","url":"https://github.com/Nikhil-42"},"created_at":"2020-07-24T19:16:13Z","updated_at":"2021-02-19T00:14:35Z","body":"Fixes #40441\r\n\r\nI'm not sure what the original purpose of the return statement was, but removing it does not create any errors. \r\nThe return statement was preventing the camera_2d from updating the viewport while in the editor resulting in inaccurate previews. This was really annoying when working with nested 2d and 3d worlds using viewports because I would have to run the scene for the viewport to be rendered properly.\r\n\r\n(P.S. This is my first PR ever)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718]},{"id":455704020,"public_id":40631,"url":"https://github.com/godotengine/godot/pull/40631","diff_url":"https://github.com/godotengine/godot/pull/40631.diff","patch_url":"https://github.com/godotengine/godot/pull/40631.patch","title":"Add C# Editor Documentation","state":"open","is_draft":true,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2020-07-23T13:22:31Z","updated_at":"2020-09-02T19:39:00Z","body":"The user can select, how the reference should be rendered in the editor settings.\r\n**text_editor/help/class_reference_language: GDScript**\r\n![grafik](https://user-images.githubusercontent.com/14185889/88271752-eb8ad280-ccd7-11ea-8f64-398f6838e187.png)\r\n\r\n**text_editor/help/class_reference_language: C#**\r\n![grafik](https://user-images.githubusercontent.com/14185889/88271874-20972500-ccd8-11ea-8bfd-302b733e4a1d.png)\r\n\r\nThe conversion to PascalCase is done automatically.\r\n\r\nThis is moved out of #40613 ","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":455623998,"public_id":40627,"url":"https://github.com/godotengine/godot/pull/40627","diff_url":"https://github.com/godotengine/godot/pull/40627.diff","patch_url":"https://github.com/godotengine/godot/pull/40627.patch","title":"Print build arguments used when using godot --version","state":"open","is_draft":false,"authored_by":{"id":11459028,"user":"Anutrix","avater":"https://avatars.githubusercontent.com/u/11459028?v=4","url":"https://github.com/Anutrix"},"created_at":"2020-07-23T10:43:36Z","updated_at":"2021-02-28T12:26:58Z","body":"Print build arguments used when using `godot --version`.\r\nI couldn't find how official builds are generated without hashes so that part is still not done.\r\n\r\n*Bugsquad edit: This partially addresses #28617.*","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":455480528,"public_id":40619,"url":"https://github.com/godotengine/godot/pull/40619","diff_url":"https://github.com/godotengine/godot/pull/40619.diff","patch_url":"https://github.com/godotengine/godot/pull/40619.patch","title":"NaN, INF read/write bug fixed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-07-23T04:58:14Z","updated_at":"2021-03-30T14:01:41Z","body":"Fix: #40589\r\n\r\nwriting and parsing `-nan(ind)` and `-inf` damage the .tscn file as the first negative eaten as float (-0.0) and the reset identifier is unexpected and parsing(reading) these special case would break stuff so I've changed them to `nan`,  `\"inf_neg\"` respectively.\r\n\r\n(regardless of the sign of the NAN, godot using `-nan(ind)` for both)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":453666478,"public_id":40547,"url":"https://github.com/godotengine/godot/pull/40547","diff_url":"https://github.com/godotengine/godot/pull/40547.diff","patch_url":"https://github.com/godotengine/godot/pull/40547.patch","title":"Add get_contents method to Directory class","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-07-20T17:28:16Z","updated_at":"2020-09-02T19:39:03Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/1225\r\n(I called it `get_contents` because it includes directories too)\r\n\r\nThing to consider:\r\n- this could be theoretically used on an arbitrary directory without opening it (similar to [Dir.entries](https://ruby-doc.org/core-2.7.1/Dir.html#method-c-entries) in Ruby)\r\n- this makes `list_dir_begin()` and related methods unnecessary, as they are less convenient\r\n\r\nTheoretically `list_dir_begin()` is more optimal to use when you want to cancel iteration midway, but this happens very rarely and the difference is minimal.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":449835945,"public_id":40438,"url":"https://github.com/godotengine/godot/pull/40438","diff_url":"https://github.com/godotengine/godot/pull/40438.diff","patch_url":"https://github.com/godotengine/godot/pull/40438.patch","title":"Stopped canvas/spatial editor from becoming active when clicking a node in the scene tree if script editor is currently active. Can use alt + click to switch editor.","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-07-16T01:38:30Z","updated_at":"2021-03-10T12:37:13Z","body":"Closes #39539, Closes #14862, Closes #33704\r\n\r\nIf the script editor is open, clicking on a node in the scene tree no longer switches you to the canvas item or spatial editors. The inspector is updated so you can change properties, or drag and drop the node path onto the script easily. \r\n\r\nIf you want to switch to the other editor, simply hold down the Alt key.\r\n\r\n![QBocbLiUOt](https://user-images.githubusercontent.com/41730826/87616574-b1aa5100-c758-11ea-8892-675b5b583c5a.gif)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":448353804,"public_id":40345,"url":"https://github.com/godotengine/godot/pull/40345","diff_url":"https://github.com/godotengine/godot/pull/40345.diff","patch_url":"https://github.com/godotengine/godot/pull/40345.patch","title":"Add algorithm and wrap parameters to Image::bump_map_to_normal_map","state":"open","is_draft":false,"authored_by":{"id":18697097,"user":"kb173","avater":"https://avatars.githubusercontent.com/u/18697097?v=4","url":"https://github.com/kb173"},"created_at":"2020-07-13T16:11:58Z","updated_at":"2021-07-06T21:38:55Z","body":"As discussed and shown in https://github.com/godotengine/godot-proposals/issues/659, this improves the `Image::bump_map_to_normal_map` function in two ways:\r\n\r\n1. In addition to the default \"repeat\" wrapping, \"clamp\" wrapping is now supported. This is required when the algorithm is applied to non-tileable images, e.g. when two different, adjacent heightmap tiles are next to each other. The wrapping type to use can be given as an additional parameter - either `BUMP_TO_NORMAL_WRAP_REPEAT` or `BUMP_TO_NORMAL_WRAP_CLAMP`.\r\n\r\n![connected_previous](https://user-images.githubusercontent.com/18697097/87324308-35352980-c530-11ea-84e7-0b37d93e09c4.png) Result with `BUMP_TO_NORMAL_WRAP_REPEAT` (previously the only possible result)\r\n\r\n![connected_new_wrapping](https://user-images.githubusercontent.com/18697097/87324357-43834580-c530-11ea-9175-830dbb2c3055.png) New result with `BUMP_TO_NORMAL_WRAP_CLAMP`\r\n\r\n\r\n2. The option of using a higher quality (but slower) algorithm for calculating the normal for a given pixel is added, also via an enum parameter. This new algorithm uses a Sobel operator instead of the partial derivatives. Especially when using very detailed bump maps, this noticeably reduces noise and creates smoother heights.\r\n\r\n![algo_comparison](https://user-images.githubusercontent.com/18697097/87324442-601f7d80-c530-11ea-9736-30ade20a731d.png)\r\n\r\nSide-by-side comparison of the `BUMP_TO_NORMAL_ALGO_PARTIAL_DERIVATIVE` algorithm (previously the only option) (left) and the new `BUMP_TO_NORMAL_ALGO_SOBEL` algorithm (right).\r\n\r\nBoth of these options can be passed to `Image::bump_map_to_normal_map` as __optional__ parameters - the previous function call still works and yields exactly the same result as before. Calling the function with both new parameters looks like this: `img.bump_map_to_normal_map(10.0, Image.BUMP_TO_NORMAL_ALGO_SOBEL, Image.BUMP_TO_NORMAL_WRAP_CLAMP)`\r\n\r\n(All screenshots were taken in the engine with a directional light and two meshes with normal maps.)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":448059143,"public_id":40336,"url":"https://github.com/godotengine/godot/pull/40336","diff_url":"https://github.com/godotengine/godot/pull/40336.diff","patch_url":"https://github.com/godotengine/godot/pull/40336.patch","title":"bool -> (int, float) and (int, float) -> bool implicit cast removed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-07-13T06:18:43Z","updated_at":"2021-01-20T12:53:32Z","body":"Fix: #40249\r\n\r\n![Capture](https://user-images.githubusercontent.com/41085900/87276790-b2e04180-c4fe-11ea-9fa2-78420a68ee15.JPG)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":447914886,"public_id":40317,"url":"https://github.com/godotengine/godot/pull/40317","diff_url":"https://github.com/godotengine/godot/pull/40317.diff","patch_url":"https://github.com/godotengine/godot/pull/40317.patch","title":"GDScript: Script.get_property_default_value() removed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-07-12T15:24:59Z","updated_at":"2021-02-27T18:27:12Z","body":"Fix: #40122\r\n\r\nThe default values of exported variables (only) are cached and used by the editor, so the method `get_property_default_value` shouldn't exposed to GDScript","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":447779094,"public_id":40287,"url":"https://github.com/godotengine/godot/pull/40287","diff_url":"https://github.com/godotengine/godot/pull/40287.diff","patch_url":"https://github.com/godotengine/godot/pull/40287.patch","title":"Decrease margins around the editor and project manager windows","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-07-11T15:07:05Z","updated_at":"2021-05-06T00:27:55Z","body":"This increases the screen real estate available for Godot, especially at smaller window sizes.\r\n\r\n## Preview\r\n\r\n***Edit:** This preview is outdated; there's now 1 pixel of margin on all sides (instead of 0).*\r\n\r\n### Editor - Before\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/87227127-17818c00-c399-11ea-8cc6-9ba6c7596264.png)\r\n\r\n### Editor - After\r\n\r\n![image](https://user-images.githubusercontent.com/180032/87431798-6de40a00-c5e7-11ea-8434-6ef24f7ffe09.png)\r\n\r\n### Project manager - Before\r\n\r\n![Before](https://user-images.githubusercontent.com/180032/87227134-1fd9c700-c399-11ea-803c-3e4022eeb0a8.png)\r\n\r\n### Project manager - After\r\n\r\n![After](https://user-images.githubusercontent.com/180032/87227135-20725d80-c399-11ea-82be-03ead1882128.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":447711111,"public_id":40274,"url":"https://github.com/godotengine/godot/pull/40274","diff_url":"https://github.com/godotengine/godot/pull/40274.diff","patch_url":"https://github.com/godotengine/godot/pull/40274.patch","title":"Replace \"default\" for any animation name when importing clips","state":"open","is_draft":false,"authored_by":{"id":18577412,"user":"Juankz","avater":"https://avatars.githubusercontent.com/u/18577412?v=4","url":"https://github.com/Juankz"},"created_at":"2020-07-11T03:15:43Z","updated_at":"2021-01-20T11:27:41Z","body":"The clips method only worked if the imported model had an animation named \"default\". This PR allows clips to be created no matter what the one-track animation name is.\r\n\r\nThis closes my other PR #36709.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":446630387,"public_id":40223,"url":"https://github.com/godotengine/godot/pull/40223","diff_url":"https://github.com/godotengine/godot/pull/40223.diff","patch_url":"https://github.com/godotengine/godot/pull/40223.patch","title":"Window management abstraction layer enhancements","state":"open","is_draft":false,"authored_by":{"id":36975818,"user":"hnOsmium0001","avater":"https://avatars.githubusercontent.com/u/36975818?v=4","url":"https://github.com/hnOsmium0001"},"created_at":"2020-07-09T05:39:23Z","updated_at":"2020-11-03T22:25:29Z","body":"This PR makes `BORDERLESS` windows have no title bar on Windows, and adds a self-rendered title and a close button for `AcceptDialog`.\r\n\r\n- [x] No native title bar for borderless windows\r\n- [x] TitleBar control to replace the native one\r\n- [x] `WINDOW_FLAG_SHADOWS` implementation\r\n- [x] Resizing for borderless windows\r\n- [x] `DisplayServer` changes for Windows\r\n- [ ] `DisplayServer` changes for MacOS\r\n\r\nClose #37377.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":446399849,"public_id":40212,"url":"https://github.com/godotengine/godot/pull/40212","diff_url":"https://github.com/godotengine/godot/pull/40212.diff","patch_url":"https://github.com/godotengine/godot/pull/40212.patch","title":"Expose Node3DEditorViewport to GDScript","state":"open","is_draft":false,"authored_by":{"id":46539626,"user":"Phischermen","avater":"https://avatars.githubusercontent.com/u/46539626?v=4","url":"https://github.com/Phischermen"},"created_at":"2020-07-08T18:01:20Z","updated_at":"2021-03-26T03:26:55Z","body":"One user and I want access to the cameras from the 3D editor viewports for tools and plugins.\r\n[Post on the QA forums](https://godotengine.org/qa/6369/how-to-get-the-editors-camera)\r\n\r\nI went ahead and exposed the Node3DEditorViewport class, which has a method for getting the camera.\r\n\r\nI've added a method to EditorInterface, get_node3D_editor_viewport(int p_idx), to access these viewports.\r\n\r\nIf it is preferable that I don't expose Node3DEditorViewport, I could expose this functionality through EditorInterface instead e.g.\r\nget_node3d_editor_camera(int p_idx)\r\nset_node3d_editor_message(string message, int p_idx, double p_time)\r\n\r\n*Bugsquad edit: This closes #26534. This closes https://github.com/godotengine/godot-proposals/issues/1302.*","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550]},{"id":445613231,"public_id":40187,"url":"https://github.com/godotengine/godot/pull/40187","diff_url":"https://github.com/godotengine/godot/pull/40187.diff","patch_url":"https://github.com/godotengine/godot/pull/40187.patch","title":"[3.x] Call reload_space_override_modificator() directly when processing a body entering or leaving an area.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-07-07T19:25:21Z","updated_at":"2021-08-06T11:24:33Z","body":"3.2 version of #40186.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":445612936,"public_id":40186,"url":"https://github.com/godotengine/godot/pull/40186","diff_url":"https://github.com/godotengine/godot/pull/40186.diff","patch_url":"https://github.com/godotengine/godot/pull/40186.patch","title":"Call reload_space_override_modificator() directly when processing a body entering or leaving an area.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-07-07T19:24:59Z","updated_at":"2020-10-08T16:07:24Z","body":"Currently, when processing a `RigidBody` entering or exiting an `Area`, the code to update the effect that an `Area` has on a `RigidBody` is not called directly, instead it is added to the queue to be processed in the next physics iteration.\r\n\r\nThis PR ensures the code to update the effect an Area has on the `RigidBody` entering or exiting an `Area` is called as the `RigidBody` enters or exits the `Area` ensuring its affect is felt immediately and not only in the next physics iteration.\r\n\r\nImproves #40127 which is caused by the effect an `Area` has on a `RigidBody` only being applied two physics frames later. This PR reduces it to one. The other is due to a physics iteration still being required to detect the `RigidBody` colliding with the `Area`, but that is for another PR.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":445469298,"public_id":40179,"url":"https://github.com/godotengine/godot/pull/40179","diff_url":"https://github.com/godotengine/godot/pull/40179.diff","patch_url":"https://github.com/godotengine/godot/pull/40179.patch","title":"Prevent cleaned up GDScriptFunctionStates from emitting \"completed\" signals","state":"open","is_draft":false,"authored_by":{"id":1638331,"user":"sjml","avater":"https://avatars.githubusercontent.com/u/1638331?v=4","url":"https://github.com/sjml"},"created_at":"2020-07-07T14:56:46Z","updated_at":"2021-08-06T11:24:33Z","body":"This fixes the crashes I described in #39957, but I will admit I don't know enough about the engine details to say if this is the correct approach. If there are no remaining references to a `GDScriptFunctionState`, there's no point in it emitting a signal because nobody is listening, correct? That may not be a correct assumption, but is there another way to guard against the engine trying to call emit on junk memory? ","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":444600488,"public_id":40152,"url":"https://github.com/godotengine/godot/pull/40152","diff_url":"https://github.com/godotengine/godot/pull/40152.diff","patch_url":"https://github.com/godotengine/godot/pull/40152.patch","title":"Enable addition of points directly in Polygon2D UV Editor","state":"open","is_draft":false,"authored_by":{"id":22248849,"user":"mrushyendra","avater":"https://avatars.githubusercontent.com/u/22248849?v=4","url":"https://github.com/mrushyendra"},"created_at":"2020-07-06T07:47:47Z","updated_at":"2021-04-05T21:37:13Z","body":"Avoids the need to switch between canvas editor and UV editor whenever a polygon and its associated UV coordinates need to be modified by adding points. Also avoids the need to delete all internal vertices every time a new point needs to be added. The behavior of this new function aims to be identical to the add points option found in the canvas editor.\r\n\r\n![addPoints](https://user-images.githubusercontent.com/22248849/86568345-4bc30a00-bf9f-11ea-8ca7-ca024e42e356.gif)\r\n\r\nI understand that there is discussion about possibly refactoring the Polygon2D UV editor sometime in the future, so if this change may conflict or be superseded by those other changes, please feel free to close this PR. On the other hand, if this seems like a worthwhile addition, I could also make another PR for deleting points.\r\n\r\nCloses #24021","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418542]},{"id":444449825,"public_id":40141,"url":"https://github.com/godotengine/godot/pull/40141","diff_url":"https://github.com/godotengine/godot/pull/40141.diff","patch_url":"https://github.com/godotengine/godot/pull/40141.patch","title":"Fix tree with title row vertical scroll start position","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2020-07-05T19:25:45Z","updated_at":"2020-10-21T21:14:59Z","body":"![title](https://user-images.githubusercontent.com/25907608/86540448-a3149c00-bf05-11ea-9edf-47b7734d6f62.png)\r\n\r\nAdd title offset to starting position. The rest is just some name clarification.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":444449348,"public_id":40140,"url":"https://github.com/godotengine/godot/pull/40140","diff_url":"https://github.com/godotengine/godot/pull/40140.diff","patch_url":"https://github.com/godotengine/godot/pull/40140.patch","title":"Make scrolling to a tree item always center on that item","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2020-07-05T19:21:43Z","updated_at":"2020-10-21T21:24:25Z","body":"In search dialogs, scrolling to a selected item will make that item visible, but it can be anywhere in the tree rect. If you are typing fast, the selected item can jump around a lot which can be confusing. This commit makes scrolling to an item always center on that item (unless there are no scrollbars of course). An added benefit is that you can always see search results below and above the item.\r\n![scroll](https://user-images.githubusercontent.com/25907608/86540406-69439580-bf05-11ea-9f11-24adbe9aebc4.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":444369286,"public_id":40129,"url":"https://github.com/godotengine/godot/pull/40129","diff_url":"https://github.com/godotengine/godot/pull/40129.diff","patch_url":"https://github.com/godotengine/godot/pull/40129.patch","title":"Version control system improvements","state":"open","is_draft":false,"authored_by":{"id":29702428,"user":"Janglee123","avater":"https://avatars.githubusercontent.com/u/29702428?v=4","url":"https://github.com/Janglee123"},"created_at":"2020-07-05T07:08:50Z","updated_at":"2021-02-27T18:49:11Z","body":"This is port for 4.0 branch of #39255. I have not tested hooks with GDnative plugin for this port but GUI is working without crashing. ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":444327183,"public_id":40123,"url":"https://github.com/godotengine/godot/pull/40123","diff_url":"https://github.com/godotengine/godot/pull/40123.diff","patch_url":"https://github.com/godotengine/godot/pull/40123.patch","title":"Visible CollisionShape3D faces and random Color","state":"open","is_draft":false,"authored_by":{"id":471393,"user":"Cold-0","avater":"https://avatars.githubusercontent.com/u/471393?v=4","url":"https://github.com/Cold-0"},"created_at":"2020-07-04T20:54:39Z","updated_at":"2020-10-15T14:02:47Z","body":"edit : After lots of change https://github.com/godotengine/godot/pull/40123#issuecomment-655251208 better show the state of the PR\r\n\r\nhttps://github.com/godotengine/godot-proposals/issues/906\r\nIt add a default color face to `BoxShape3D`, `CapsuleShape3D`, `CylinderShape3D` and `SphereShape3D` when used with `CollisionShape3D`. \r\nEach instance can have custom color and texture to differentiate them to help gamedesigning bigger scene.\r\n\r\n![rLMxdbfhPR](https://user-images.githubusercontent.com/471393/86520764-5919b080-be48-11ea-8d0d-4765a81c3c98.gif)\r\n\r\nI still have thing TODO but not sure what fit the best for godot\r\n\r\n- [x] Default Color in EditorSettings\r\n- [x] Random Color\r\n- ~~Miss other shapes~~\r\n- ~~Random Color EditorSettings~~\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":443514803,"public_id":40055,"url":"https://github.com/godotengine/godot/pull/40055","diff_url":"https://github.com/godotengine/godot/pull/40055.diff","patch_url":"https://github.com/godotengine/godot/pull/40055.patch","title":"expose copy_selection() and select_all() for RichTextLabel","state":"open","is_draft":false,"authored_by":{"id":9008901,"user":"PostPollux","avater":"https://avatars.githubusercontent.com/u/9008901?v=4","url":"https://github.com/PostPollux"},"created_at":"2020-07-02T13:24:14Z","updated_at":"2021-02-27T17:43:55Z","body":"This PR exposes two functions for RichTextLabel: **copy_selection()** and **select_all()**\r\n\r\nMy usecase:\r\nI'm working on a render manager and I use RichTextLabel to show a colorized log output of some external processes. It was already possible to copy the selection by pressing ctrl+c as this is hard coded, but I also wanted to add a \"copy\" option in a right click context menu. So I need to have access to this function. Selecting everything would also be handy in my case in order to select the whole log, which can be quit long.\r\n\r\nBy the way, TextEdit also has those two functions exposed ( copy() and select_all() ), so I see no reason why they shouldn't be exposed in RichTextLabel, too.\r\n\r\nFor select_all() I'm not sure if the way how I access the items is correct or problematic in any way. I've tested it and it seems to work nicely. I couldn't find any problems with it.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":443315916,"public_id":40045,"url":"https://github.com/godotengine/godot/pull/40045","diff_url":"https://github.com/godotengine/godot/pull/40045.diff","patch_url":"https://github.com/godotengine/godot/pull/40045.patch","title":"Enhance visual script, selection area popped up when disconnected nodes","state":"open","is_draft":false,"authored_by":{"id":45402513,"user":"ChristopheLY","avater":"https://avatars.githubusercontent.com/u/45402513?v=4","url":"https://github.com/ChristopheLY"},"created_at":"2020-07-02T06:57:37Z","updated_at":"2021-07-13T17:53:48Z","body":"*Bugsquad edit:* Fixes #11641.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":443297869,"public_id":40043,"url":"https://github.com/godotengine/godot/pull/40043","diff_url":"https://github.com/godotengine/godot/pull/40043.diff","patch_url":"https://github.com/godotengine/godot/pull/40043.patch","title":"Clarify port/slot distinction and add method to get slot idx from port idx in GraphNode","state":"open","is_draft":false,"authored_by":{"id":22248849,"user":"mrushyendra","avater":"https://avatars.githubusercontent.com/u/22248849?v=4","url":"https://github.com/mrushyendra"},"created_at":"2020-07-02T06:11:46Z","updated_at":"2020-09-29T19:41:31Z","body":"The `GraphEdit` class documentation uses the terms `port` and `slot` interchangeably to refer only to slots that are enabled,\r\nwhereas the `GraphNode` class documentation uses `slot` to refer to any slot, regardless of whether it is enabled or not.\r\nThis PR clarifies the distinction between ports and slots in the `GraphEdit` class documentation, and updates the relevant \r\nsignal descriptions accordingly.  \r\n\r\nIt also adds a method to convert a port/connection index to its corresponding slot index on the `GraphNode`.\r\n\r\nCloses #37227","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":441651615,"public_id":39965,"url":"https://github.com/godotengine/godot/pull/39965","diff_url":"https://github.com/godotengine/godot/pull/39965.diff","patch_url":"https://github.com/godotengine/godot/pull/39965.patch","title":"Tweak default SDFGI settings for better quality","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-06-29T21:10:14Z","updated_at":"2021-08-22T00:36:11Z","body":"- Enable Read Sky Light to get proper outdoors lighting out of the box.\r\n- Set bounce feedback to 0.5 by default to get a better quality result.\r\n  - [Higher values may cause infinite feedback with bright surfaces.](https://github.com/godotengine/godot/issues/50773#issuecomment-886047017)\r\n- Increase the number of frames to converge to improve quality at the cost of latency. Most scenes are fairly static after all.\r\n- Use 75% Y scale by default as most scenes are not highly vertical.\r\n- Reorder the Y scale enum to go from the lowest Y scale to the highest. Also rename the \"Disabled\" setting to \"100%\" for clarity.\r\n\r\n**Edit:** This PR was amended in May 2021 to not tweak any performance-related settings. Therefore, performance should be roughly identical to what it was before.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4418550,4418726]},{"id":441390334,"public_id":39949,"url":"https://github.com/godotengine/godot/pull/39949","diff_url":"https://github.com/godotengine/godot/pull/39949.diff","patch_url":"https://github.com/godotengine/godot/pull/39949.patch","title":"Move ItemListEditorPlugin to a sidedock","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2020-06-29T12:49:17Z","updated_at":"2020-10-21T21:41:31Z","body":"See godotengine/godot-proposals#368 for the problem. This commit moves the ItemListEditor from a popup window to a side dock. Additionally, the delete button is now disabled if no item is selected.\r\n\r\n**Explanation:**\r\nWhen working with nodes that use an ItemList, the ItemListEditor is often used. It is found in a toolbar button, which wouldn't be bad if it was an infrequently used feature or if this wasn't the only editor (like for Sprite2D). Additionally, the toolbar button is easily missed, leading some users to add nodes as children of an ItemList. Moving the editor from the popup window to the sidedock should make it more clear how to use it, and doesn't require opening and closing popup windows. The portion of the screen that is taken up when selecting such a node can be justified by how essential this functionality is to an ItemList, and a popup window disables the whole editor anyway. \r\n\r\n![il_plugin2](https://user-images.githubusercontent.com/25907608/86007028-23736280-ba17-11ea-8f85-2162bcd69af6.PNG)\r\n\r\nOther options were \r\n- highlighting the toolbar: doesn't solve much, as the popup window is still awkward to use.\r\n- putting the editor in the inspector as a dictionary: makes the inspector too messy. ","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":441103559,"public_id":39924,"url":"https://github.com/godotengine/godot/pull/39924","diff_url":"https://github.com/godotengine/godot/pull/39924.diff","patch_url":"https://github.com/godotengine/godot/pull/39924.patch","title":"Allow importing 3D models without colliders or with KinematicBody/Area","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-06-28T19:34:37Z","updated_at":"2021-08-16T00:48:38Z","body":"Implements and closes https://github.com/godotengine/godot-proposals/issues/1029\r\n\r\nThis PR adds an enum for how colliders should be imported. Right now the possible values are None, Static, Rigid, and Area. Static is the default value and has the same behavior as the current master.\r\n\r\nThis was tested by copying `core.glb` from the TPS demo into a mostly empty project.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":890310502,"name":"topic:import","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777,4418424]},{"id":440630434,"public_id":39849,"url":"https://github.com/godotengine/godot/pull/39849","diff_url":"https://github.com/godotengine/godot/pull/39849.diff","patch_url":"https://github.com/godotengine/godot/pull/39849.patch","title":"GDScript Documentation-System UI implementations","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-06-26T14:52:25Z","updated_at":"2021-02-15T07:30:39Z","body":"This PR is the UI implementation part of <s>#39359</s> #41095 (my GSoC project) I split the pr into core and UI.\r\nNote: this pr depend on #41095 (yet it needs some changes to work with #41095 after merged. I've marked TODOs for dependencies )\r\n\r\nImages\r\n------\r\n\r\n![Capture](https://user-images.githubusercontent.com/41085900/90047378-723b3a00-dcef-11ea-8573-7194f7867f24.JPG)\r\n\r\n![doc-ui](https://user-images.githubusercontent.com/41085900/90048296-ef1ae380-dcf0-11ea-83db-a469905b779e.gif)\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":440624391,"public_id":39848,"url":"https://github.com/godotengine/godot/pull/39848","diff_url":"https://github.com/godotengine/godot/pull/39848.diff","patch_url":"https://github.com/godotengine/godot/pull/39848.patch","title":"Implemented 'Auto width' behaviour to the ItemList to complement the existing 'Auto height'","state":"open","is_draft":false,"authored_by":{"id":8601980,"user":"Althar93","avater":"https://avatars.githubusercontent.com/u/8601980?v=4","url":"https://github.com/Althar93"},"created_at":"2020-06-26T14:41:03Z","updated_at":"2020-12-10T17:36:19Z","body":"_Re-created from the previously closed pull request #33774 ; now up to date with the main branch & changes merged ready for integration_\r\n\r\nI have implemented the 'Auto width' in ItemList. This is also in response to #31504\r\n\r\nThe behaviour in this pull request should be identical to the existing 'Auto height', i.e. : expands the container & parent containers with the content but does not shrink the container or any parent container.\r\n\r\nThis change is a minimal change that serves to complement the existing 'Auto height' but perhaps both options should be updated to both shrink & expand with the contents?\r\n\r\n*Bugsquard edit:* Closes #31504","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":440225648,"public_id":39835,"url":"https://github.com/godotengine/godot/pull/39835","diff_url":"https://github.com/godotengine/godot/pull/39835.diff","patch_url":"https://github.com/godotengine/godot/pull/39835.patch","title":"Don't remove the owner immediately","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-06-25T19:53:37Z","updated_at":"2020-09-02T19:39:22Z","body":"Closes #22840\r\n\r\nThe question is whether setting owner to `null` immediately in NOTIFICATION_PREDELETE was done for a reason or the order doesn't matter (but some code might still rely on the old order). I did a quick test and didn't notice any unusual behavior.\r\n\r\nAlso here's a test code:\r\n```\r\nfunc _ready():\r\n\tvar se1f = self\r\n\t$Node2D.connect(\"tree_exiting\", Callable(se1f, \"exiting\"), [$Node2D])\r\n\t$Node2D.connect(\"tree_exited\", Callable(se1f, \"exited\"), [$Node2D])\r\n\t$Node2D.free()\r\n\r\nfunc exiting(node):\r\n\tprint(node.owner) #prints node; before it was null\r\n\r\nfunc exited(node):\r\n\tprint(node.owner) #prints null\r\n```","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":440129599,"public_id":39833,"url":"https://github.com/godotengine/godot/pull/39833","diff_url":"https://github.com/godotengine/godot/pull/39833.diff","patch_url":"https://github.com/godotengine/godot/pull/39833.patch","title":"Added TileMap::set_cell_region() and TileMap::set_tile_data()","state":"open","is_draft":false,"authored_by":{"id":15219779,"user":"ben-humphries","avater":"https://avatars.githubusercontent.com/u/15219779?v=4","url":"https://github.com/ben-humphries"},"created_at":"2020-06-25T16:25:33Z","updated_at":"2020-09-20T09:29:47Z","body":"This PR is trying to improve on and generalize the PR by @zzz-assault here: [https://github.com/godotengine/godot/pull/38324]( https://github.com/godotengine/godot/pull/38324)\r\n\r\nI think it is also worth reading through this issue:\r\n[https://github.com/godotengine/godot/issues/31020](https://github.com/godotengine/godot/issues/31020\r\n)\r\n\r\n`TileMap::set_cell_region()`  should have the benefits of the set_line() performance improvements while also being useful in a more general case.\r\n\r\n`TileMap::set_tile_data()` is simply revealing to the user the `TileMap::_set_tile_data()` function. I think this could be very useful in the case where large amounts of tile data need to be updated quickly, or asynchronously, or in place of `TileMap::set_cell_region()` when `flip_h`, `flip_v`, `transpose`, or `autotile_coords` need to be specified. The reason I looked into this topic is that a game I'm working on would benefit from asynchronously updating a large TileMap. TileMap is not thread-safe, but populating an array of tile data could be made thread-safe, and then this function could be called once the threads are complete.\r\n\r\nI think the `TileMap::set_tile_data()` function would be more useful if the data format was well documented. I've included comments in this PR, and I will paste a function from GDScript here that can be used to convert individual cell info into a packed data format:\r\n\r\n```\r\nfunc pack_cell_data(x : int, y : int, id : int, flip_h : bool = false, flip_v : bool = false, transpose : bool = false, autotile_x : int = 0, autotile_y : int = 0):\r\n\t\r\n\ty <<= 16\r\n\tvar coord_packed = x + y\r\n\t\r\n\tvar id_packed = id\r\n\tid_packed |= int(flip_h) << 29\r\n\tid_packed |= int(flip_v) << 30\r\n\tid_packed |= int(transpose) << 31\r\n\t\r\n\tautotile_y <<= 16\r\n\tvar autotile_packed = autotile_x + autotile_y\r\n\t\r\n\treturn PackedInt32Array([coord_packed, id_packed, autotile_packed])\r\n```\r\n\r\nHere is a small project that demonstrates the use of both functions:\r\n[TilemapTest.zip](https://github.com/godotengine/godot/files/4832561/TilemapTest.zip)\r\n\r\n\r\nThis is my first PR to Godot, I'm sorry if something is formatted incorrectly or I've gone through the process the wrong way.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":439557975,"public_id":39813,"url":"https://github.com/godotengine/godot/pull/39813","diff_url":"https://github.com/godotengine/godot/pull/39813.diff","patch_url":"https://github.com/godotengine/godot/pull/39813.patch","title":"Added type checks for Tween's interpolate_property values","state":"open","is_draft":false,"authored_by":{"id":3308180,"user":"JotaFaD","avater":"https://avatars.githubusercontent.com/u/3308180?v=4","url":"https://github.com/JotaFaD"},"created_at":"2020-06-24T22:47:45Z","updated_at":"2021-01-05T00:59:54Z","body":"The current implementation of interpolate_property does not check that the type of the values provided by the user matches the type of the property they're trying to interpolate. In case they don't, the Tween simply fails to execute and no error is shown to the user. This happened to me when trying to interpolate the scale of a Sprite2D with a float, instead of the proper Vector2.\r\n\r\nThis PR adds checks that alert the user if the initial/final value parameters do not match the property they're trying to interpolate.\r\nThe error message is of the form \"Tween property expected type [Vector2] for [initial/final] value, but got [float] instead.\"\r\n\r\nNote: This is my first PR, so please bear with me.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":439261002,"public_id":39796,"url":"https://github.com/godotengine/godot/pull/39796","diff_url":"https://github.com/godotengine/godot/pull/39796.diff","patch_url":"https://github.com/godotengine/godot/pull/39796.patch","title":"[3.x] SkeletonEditorPlugin backport","state":"open","is_draft":false,"authored_by":{"id":25082678,"user":"TwistedTwigleg","avater":"https://avatars.githubusercontent.com/u/25082678?v=4","url":"https://github.com/TwistedTwigleg"},"created_at":"2020-06-24T14:51:29Z","updated_at":"2021-08-06T11:24:33Z","body":"This PR is a backport of the SkeletonEditorPlugin that @fire created, with the modifications I added for Godot 4.0. I tested and everything seems to be working like it does in the Godot 4.0/master version.\r\n\r\nCloses #35652 and supersedes #39090\r\nEdit: Fixed the linked issue. I accidentally had the wrong one.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418726]},{"id":438329511,"public_id":39772,"url":"https://github.com/godotengine/godot/pull/39772","diff_url":"https://github.com/godotengine/godot/pull/39772.diff","patch_url":"https://github.com/godotengine/godot/pull/39772.patch","title":"make and display warning on editing an .obj mesh, fixes #20659","state":"open","is_draft":false,"authored_by":{"id":45402513,"user":"ChristopheLY","avater":"https://avatars.githubusercontent.com/u/45402513?v=4","url":"https://github.com/ChristopheLY"},"created_at":"2020-06-23T05:33:35Z","updated_at":"2021-02-27T18:35:30Z","body":"I displayed the button warning when the mesh .obj displayed it\r\nIt's update when you add or remove the mesh\r\n\r\nI create a new Pr because I have any problem with git rebase (#39621)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":437533223,"public_id":39727,"url":"https://github.com/godotengine/godot/pull/39727","diff_url":"https://github.com/godotengine/godot/pull/39727.diff","patch_url":"https://github.com/godotengine/godot/pull/39727.patch","title":"Improve OS time api","state":"open","is_draft":false,"authored_by":{"id":3187637,"user":"touilleMan","avater":"https://avatars.githubusercontent.com/u/3187637?v=4","url":"https://github.com/touilleMan"},"created_at":"2020-06-21T11:40:28Z","updated_at":"2021-03-12T19:58:25Z","body":"Following #39189\r\n\r\nThis PR improve the OS.get_unix_time_from_datetime & OS.get_datetime familly of functions:\r\n\r\n- `OS.get_datetime` is the main function that should be implemented by platforms\r\n- datetime dictionary contains the a milliseconds field (it is considered trying to have a lower precision is not really useful)\r\n- `OS.get_date/time/time_zone_info` are just wrappers over `OS.get_datetime`\r\n- `OS.get_datetime` is GDscript returns a dict containing the timezone information. In my experience it's a really really bad idea to have timezone-naive variable (given you have no idea if this variable is UTC or local time, and this cause subtle bugs hard to catch on CI where local time is set to UTC...)\r\n- The use of `OS.get_date` then `OS.get_time` in a row has been replaced by `OS.get_datetime`, this avoid potential invalid time when the date change between the two calls\r\n\r\nThings I'm still wondering:\r\n- `OS.get_datetime()` takes a `utc` parameter in GDScript while `OS.get_datetime()` takes a `local` parameter in C++... This is error-prone (as [is currently buggy !](https://github.com/godotengine/godot/blob/277d2f1f50fe060ad7ff4b2696bf67a742a0ea83/core/bind/core_bind.cpp#L335)). We should choose `utc` or `local` and stick to it everywhere\r\n- I don't see the use for the `dst` field, especially since it is always set to false on Windows. So I think it would be just better to remove it ;-)\r\n- It would be much more convenient to have Datetime as a builtin type instead of representing them with dictionaries (hence we could easily compare dates, represent them for debugging and encode them back and forth to a string format)\r\n- `OS::get_iso_date_time` is only used [once in the whole codebase](https://github.com/godotengine/godot/blob/277d2f1f50fe060ad7ff4b2696bf67a742a0ea83/editor/editor_node.cpp#L2563), it would be better to expose it to GDNative (along with a iso string to datetime function)\r\n- timezone naming on windows seems odd (I got `Romance Daylight Time` currently for UTC+2), it may be correct, but it forces `OS::get_iso_date_time` to [do extra work](https://github.com/godotengine/godot/blob/277d2f1f50fe060ad7ff4b2696bf67a742a0ea83/core/os/os.cpp#L63) to have a useful naming (which is something we may not want to push on GDscript users)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112906,3112913,4418914]},{"id":437513376,"public_id":39724,"url":"https://github.com/godotengine/godot/pull/39724","diff_url":"https://github.com/godotengine/godot/pull/39724.diff","patch_url":"https://github.com/godotengine/godot/pull/39724.patch","title":"fix #22136 JavaClassWrapper.wrap should be ok","state":"open","is_draft":false,"authored_by":{"id":2156473,"user":"zeze0556","avater":"https://avatars.githubusercontent.com/u/2156473?v=4","url":"https://github.com/zeze0556"},"created_at":"2020-06-21T08:18:21Z","updated_at":"2021-08-06T11:24:33Z","body":"Class function called also should be ok\r\nClass.new function also should be ok\r\nAll of function in plugins also should be visited.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112909]},{"id":437412698,"public_id":39708,"url":"https://github.com/godotengine/godot/pull/39708","diff_url":"https://github.com/godotengine/godot/pull/39708.diff","patch_url":"https://github.com/godotengine/godot/pull/39708.patch","title":"Toggle fullscreen mode when pressing Alt + Enter by default","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-06-20T13:31:11Z","updated_at":"2021-08-16T19:09:05Z","body":"**Note:** Technically cherry-pickable to `3.2`, but existing projects may already have implemented a fullscreen toggle on their own. I think it's better not to cherry-pick this PR to avoid trouble.\r\n\r\n___\r\n\r\n<kbd>Alt + Enter</kbd> is a widely followed convention to toggle fullscreen. This adds support for it both in the editor and projects, as long as the window is configured to be resizable.\r\n\r\nThe rationale for providing this feature in all projects is that many developers don't bother about adding a fullscreen toggle, especially for smaller/gamejam games. Yet, this convention is followed by many popular games out there, including AAA games.\r\n\r\nThe shortcut can be modified or disabled by editing the Input Map in the Project Settings.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1983. See discussion in https://github.com/godotengine/godot-proposals/issues/1087.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":437407177,"public_id":39705,"url":"https://github.com/godotengine/godot/pull/39705","diff_url":"https://github.com/godotengine/godot/pull/39705.diff","patch_url":"https://github.com/godotengine/godot/pull/39705.patch","title":"Added link for Default Shortcuts in Help menu","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-06-20T12:34:45Z","updated_at":"2021-03-01T11:47:32Z","body":"That's one more approach to the original work of @zaksnet in PR  #39676","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828781,4418537]},{"id":436984879,"public_id":39670,"url":"https://github.com/godotengine/godot/pull/39670","diff_url":"https://github.com/godotengine/godot/pull/39670.diff","patch_url":"https://github.com/godotengine/godot/pull/39670.patch","title":"Hide autoload category from general project settings","state":"open","is_draft":false,"authored_by":{"id":25907608,"user":"hinlopen","avater":"https://avatars.githubusercontent.com/u/25907608?v=4","url":"https://github.com/hinlopen"},"created_at":"2020-06-19T09:12:46Z","updated_at":"2021-03-20T00:08:48Z","body":"Fixes #39639\r\nFixes godotengine/godot-proposals#1082\r\n*Bugsquad edit:* Fixes #24453\r\n\r\nWhile Autoload has its own tab in the Project Settings, it was also added as a category under the general settings. The issue is about incorrect autoload names, but the autoload is unnecessary here and can be removed. This commit removes Autoload from the General tab.\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":435813799,"public_id":39618,"url":"https://github.com/godotengine/godot/pull/39618","diff_url":"https://github.com/godotengine/godot/pull/39618.diff","patch_url":"https://github.com/godotengine/godot/pull/39618.patch","title":"Fixes #39576 - Method order seemingly random in PropertySelector when…","state":"open","is_draft":false,"authored_by":{"id":45926471,"user":"Sl3dge78","avater":"https://avatars.githubusercontent.com/u/45926471?v=4","url":"https://github.com/Sl3dge78"},"created_at":"2020-06-17T12:19:21Z","updated_at":"2021-03-01T00:05:19Z","body":"… inserting function in AnimationPlayer\r\n\r\nFixes #39576\r\nMethod name order is now sorted alphabetically through a custom sorter.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":435534262,"public_id":39607,"url":"https://github.com/godotengine/godot/pull/39607","diff_url":"https://github.com/godotengine/godot/pull/39607.diff","patch_url":"https://github.com/godotengine/godot/pull/39607.patch","title":"Timeline cursor now jumps to selected key #27278","state":"open","is_draft":false,"authored_by":{"id":45926471,"user":"Sl3dge78","avater":"https://avatars.githubusercontent.com/u/45926471?v=4","url":"https://github.com/Sl3dge78"},"created_at":"2020-06-17T00:29:47Z","updated_at":"2021-02-18T22:35:50Z","body":"Added a single line call to change the timeline position to the selected key to fix  #27278\r\nMoves to the first key when box selecting. ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":435454283,"public_id":39605,"url":"https://github.com/godotengine/godot/pull/39605","diff_url":"https://github.com/godotengine/godot/pull/39605.diff","patch_url":"https://github.com/godotengine/godot/pull/39605.patch","title":"Print warning when set/get non-existing Audio bus for AudioStreamPlayer","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-06-16T20:38:22Z","updated_at":"2021-02-15T10:43:52Z","body":"Fixes: #39585","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418392]},{"id":435298477,"public_id":39599,"url":"https://github.com/godotengine/godot/pull/39599","diff_url":"https://github.com/godotengine/godot/pull/39599.diff","patch_url":"https://github.com/godotengine/godot/pull/39599.patch","title":"Fixes #39445 - Nodes Missing Property Animation Descriptions","state":"open","is_draft":false,"authored_by":{"id":55824716,"user":"ewesche","avater":"https://avatars.githubusercontent.com/u/55824716?v=4","url":"https://github.com/ewesche"},"created_at":"2020-06-16T15:30:14Z","updated_at":"2021-02-27T18:38:38Z","body":"Fixes #39445 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":434990371,"public_id":39587,"url":"https://github.com/godotengine/godot/pull/39587","diff_url":"https://github.com/godotengine/godot/pull/39587.diff","patch_url":"https://github.com/godotengine/godot/pull/39587.patch","title":"Change in-editor documentation style to match online docs [RTL features].","state":"open","is_draft":true,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2020-06-16T05:52:00Z","updated_at":"2021-05-07T08:57:32Z","body":"Second part of #38917\r\n\r\nAdds RichTextLabel table cell customizable border color, background color, padding and size override.\r\n\r\nAdds table borders and alternating backgrounds to the documentation to match online docs style.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/7645683/117425332-605b9000-af2b-11eb-876a-ae0614a1fb00.png)\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":434049585,"public_id":39518,"url":"https://github.com/godotengine/godot/pull/39518","diff_url":"https://github.com/godotengine/godot/pull/39518.diff","patch_url":"https://github.com/godotengine/godot/pull/39518.patch","title":"Make collision with TileMaps useful","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2020-06-13T20:00:22Z","updated_at":"2021-06-06T13:12:53Z","body":"Same as #39515 \r\n\r\nI just ran into the problem of not beeing able to get the exact colliding tile. Since the described workaround in https://github.com/godotengine/godot/issues/24739#issuecomment-451529763 doesn't work ether and you don't have a chance to get the RID of the quadrant, to get the metadata with the cell position from the Physics2DServer, I gave the TileMap a RID and handle the owners comparable to the CollisionObject2D.\r\n\r\nIt changes the internal collision handling of the TileMap completly, but otherwise the collision handling of the TileMap is without the changes not usable. You can workaround that, by using use_parent and a StaticBody2D:\r\n```gdscript\r\nfunc _on_body_shape_entered(body_id, body, body_shape, area_shape):\r\n\tif not body is StaticBody2D:\r\n\t\treturn\r\n\tvar b := body as StaticBody2D\r\n\tvar b_o = b.shape_owner_get_owner(b.shape_find_owner(body_shape))\r\n\tif not b_o is TileMap:\r\n\t\treturn\r\n\t\r\n\tvar tm : TileMap = b_o\r\n\tvar cv: Vector2 = Physics2DServer.body_get_shape_metadata(body.get_rid(), body_shape)\r\n```\r\n\r\nWith the fix you don't need a parent, to be able to use it:\r\n\r\n```gdscript\r\nfunc _on_body_shape_entered(body_id, body, body_shape, area_shape):\r\n\tif not body is TileMap:\r\n\t\treturn\r\n\tvar tm := body as TileMap\r\n\tvar cv := tm.get_cell_from_shape(body_shape)\r\n```\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":434042572,"public_id":39515,"url":"https://github.com/godotengine/godot/pull/39515","diff_url":"https://github.com/godotengine/godot/pull/39515.diff","patch_url":"https://github.com/godotengine/godot/pull/39515.patch","title":"[3.x] Make collision with TileMaps useful","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2020-06-13T18:52:35Z","updated_at":"2021-08-06T11:24:33Z","body":"I just ran into the problem of not beeing able to get the exact colliding tile. Since the described workaround in https://github.com/godotengine/godot/issues/24739#issuecomment-451529763 doesn't work ether and you don't have a chance to get the RID of the quadrant, to get the metadata with the cell position from the Physics2DServer, I gave the TileMap a RID and handle the owners comparable to the CollisionObject2D.\r\n\r\nI developed this fix in 3.2 since I use that one in production, but I am not sure, if this should be merged into a 3.2 release. It changes the internal collision handling of the TileMap completly, but otherwise the collision handling of the TileMap is without the changes not usable. You can workaround that, by using use_parent and a StaticBody2D:\r\n```gdscript\r\nfunc _on_body_shape_entered(body_id, body, body_shape, area_shape):\r\n\tif not body is StaticBody2D:\r\n\t\treturn\r\n\tvar b := body as StaticBody2D\r\n\tvar b_o = b.shape_owner_get_owner(b.shape_find_owner(body_shape))\r\n\tif not b_o is TileMap:\r\n\t\treturn\r\n\t\r\n\tvar tm : TileMap = b_o\r\n\tvar cv: Vector2 = Physics2DServer.body_get_shape_metadata(body.get_rid(), body_shape)\r\n```\r\n\r\nWith the fix you don't need a parent, to be able to use it:\r\n\r\n```gdscript\r\nfunc _on_body_shape_entered(body_id, body, body_shape, area_shape):\r\n\tif not body is TileMap:\r\n\t\treturn\r\n\tvar tm := body as TileMap\r\n\tvar cv := tm.get_cell_from_shape(body_shape)\r\n```\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,4418718]},{"id":433721876,"public_id":39481,"url":"https://github.com/godotengine/godot/pull/39481","diff_url":"https://github.com/godotengine/godot/pull/39481.diff","patch_url":"https://github.com/godotengine/godot/pull/39481.patch","title":"Fix wrong assumption of callee thread","state":"open","is_draft":false,"authored_by":{"id":6501975,"user":"Ev1lbl0w","avater":"https://avatars.githubusercontent.com/u/6501975?v=4","url":"https://github.com/Ev1lbl0w"},"created_at":"2020-06-12T14:44:16Z","updated_at":"2021-04-02T15:33:57Z","body":"Fixes #39392\r\n\r\nI think Godot was making a wrong assumption here: if `Thread::get_caller_id() != server_thread` failed, it would assume the render thread was running in a separate thread, which might not be the case, as shown in the issue.\r\n\r\nThis added check fixes this.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":431849549,"public_id":39417,"url":"https://github.com/godotengine/godot/pull/39417","diff_url":"https://github.com/godotengine/godot/pull/39417.diff","patch_url":"https://github.com/godotengine/godot/pull/39417.patch","title":"[WIP] Variant: Add support for duplicating Objects","state":"open","is_draft":true,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2020-06-09T14:46:09Z","updated_at":"2020-09-02T19:39:33Z","body":"To do so, Object gets a new virtual `object_duplicate` (`duplicate`\r\nalready taken by incompatible implementations in derived classes)\r\nwhich is implemented in `Node` and `Resource`.\r\n\r\nThis allows fixing #36372 properly in `ClassDB` by duplicating\r\nObjects that need it to avoid using the same one as default value.\r\n(So far it seems only Path2D/Path3D's `curve` property uses this.)\r\n\r\nFixes #36372.\r\nFixes #36650.\r\n\r\nSupersedes #36644 and #36656.\r\n\r\n----\r\n\r\nThis is a draft and very much asking for trouble - I'm not sure it's the best route but it seems to be what would be the cleanest approach to fix the above bugs and potential future similar bugs, but it has its share of risks (any code that calls `Variant::duplicate()` will now properly duplicate Nodes and Resources, which might break expectations).","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":431483258,"public_id":39404,"url":"https://github.com/godotengine/godot/pull/39404","diff_url":"https://github.com/godotengine/godot/pull/39404.diff","patch_url":"https://github.com/godotengine/godot/pull/39404.patch","title":"Allow copying property path from inspector.","state":"open","is_draft":false,"authored_by":{"id":2496231,"user":"rcorre","avater":"https://avatars.githubusercontent.com/u/2496231?v=4","url":"https://github.com/rcorre"},"created_at":"2020-06-09T01:38:30Z","updated_at":"2021-08-22T13:53:13Z","body":"If you hover over a property label in the inspector dock and press\r\nthe \"property_ediotr/copy_property_path\" shortcut (ctrl+c by default),\r\nthe complete property path will be copied to the system clipboard. This\r\nis especially useful for the `AnimationTree`, where code might reference\r\nproperties like \"parameters/state/aim/move/blend_position\".\r\n\r\nResolves godotengine/godot-proposals#106.\r\n\r\nOne issue is that if you click a property, then click on the node you\r\ncurrently have selected in the node tree, then press ctrl+c, it will\r\nstill copy the selected property path rather than the node path. If you\r\nclick on a different node in the nodetree, however, ctrl+c will return\r\nto copying the nodepath.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":430060143,"public_id":39364,"url":"https://github.com/godotengine/godot/pull/39364","diff_url":"https://github.com/godotengine/godot/pull/39364.diff","patch_url":"https://github.com/godotengine/godot/pull/39364.patch","title":"Replace all flags with one value when holding Cmd in the layers editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-06-07T13:17:56Z","updated_at":"2021-07-05T15:20:23Z","body":"This behavior is inspired by Blender (except it's the other way around to preserve the current default behavior).\r\n\r\nTrying to enable a single enabled value with <kbd>Cmd</kbd> held will invert the current flags, which makes enabling all flags but one faster.\r\n\r\n## Preview\r\n\r\n*On the GIF below, at first, I'm checking boxes as usual, then I hold down <kbd>Ctrl</kbd> (<kbd>Cmd</kbd> on macOS) to replace existing values.*\r\n\r\n![file](https://user-images.githubusercontent.com/180032/83969850-908d4f80-a8d2-11ea-9e09-d5079357f205.gif)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418563]},{"id":430023051,"public_id":39362,"url":"https://github.com/godotengine/godot/pull/39362","diff_url":"https://github.com/godotengine/godot/pull/39362.diff","patch_url":"https://github.com/godotengine/godot/pull/39362.patch","title":"[3.x] Fix PlaneShape in Godot physics","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-06-07T12:24:00Z","updated_at":"2021-08-06T11:24:33Z","body":"This is a the 3.2 branch version of PR #39361.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":430022714,"public_id":39361,"url":"https://github.com/godotengine/godot/pull/39361","diff_url":"https://github.com/godotengine/godot/pull/39361.diff","patch_url":"https://github.com/godotengine/godot/pull/39361.patch","title":"Fix PlaneShape in Godot physics","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-06-07T12:23:29Z","updated_at":"2021-03-21T11:14:10Z","body":"Fixes Godot physics part of #5910.\r\n\r\nThe Bullet physics part is fixed in #35945.\r\n\r\n*BugSquad edit*: fixes #5910","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":428138658,"public_id":39306,"url":"https://github.com/godotengine/godot/pull/39306","diff_url":"https://github.com/godotengine/godot/pull/39306.diff","patch_url":"https://github.com/godotengine/godot/pull/39306.patch","title":"Add edit all children to the scene dock","state":"open","is_draft":false,"authored_by":{"id":32321,"user":"fire","avater":"https://avatars.githubusercontent.com/u/32321?v=4","url":"https://github.com/fire"},"created_at":"2020-06-04T23:21:17Z","updated_at":"2020-12-23T09:43:32Z","body":"Sponsored by IMVU.\r\n\r\nFixes https://github.com/godotengine/godot-proposals/issues/856\r\n\r\nEdit:\r\n\r\nvideo incoming.\r\n\r\n![GIF 2020-06-04 4-25-09 PM](https://user-images.githubusercontent.com/32321/83819919-09489d80-a680-11ea-9edd-e94da3c49669.gif)\r\n","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":428025511,"public_id":39295,"url":"https://github.com/godotengine/godot/pull/39295","diff_url":"https://github.com/godotengine/godot/pull/39295.diff","patch_url":"https://github.com/godotengine/godot/pull/39295.patch","title":"revert: segfault on _class_desc_resized at exit","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-06-04T18:50:18Z","updated_at":"2021-02-27T18:39:13Z","body":"this reverts : #32985\r\n\r\nalso relative to : #39277","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":427806133,"public_id":39283,"url":"https://github.com/godotengine/godot/pull/39283","diff_url":"https://github.com/godotengine/godot/pull/39283.diff","patch_url":"https://github.com/godotengine/godot/pull/39283.patch","title":"Fix CanvasModulate not updating modulate color when changing scenes","state":"open","is_draft":false,"authored_by":{"id":22248849,"user":"mrushyendra","avater":"https://avatars.githubusercontent.com/u/22248849?v=4","url":"https://github.com/mrushyendra"},"created_at":"2020-06-04T12:37:51Z","updated_at":"2021-04-25T00:07:28Z","body":"When a `CanvasModulate` node is freed using `queue_free()` and a new `CanvasModulate` \r\nnode is added, the new color is not visible. This occurs because the old node receives its\r\n`NOTIFICATION_EXIT_CANVAS` after the new `CanvasModulate` node sets its own color. \r\nThe old node overrides this new color and sets it to the default instead.\r\n\r\nTo fix, `CanvasModulate` now resets the canvas's modulate color to the default when it receives\r\n`NOTIFICATION_EXIT_CANVAS` only if the canvas's modulate color is the same as node's color field, i.e. the color that was set by the node.\r\n\r\nBefore and after:\r\n![canvasModulateOrig](https://user-images.githubusercontent.com/22248849/83756994-66554b00-a6a2-11ea-9f0c-aa7575a85de0.gif)\r\n\r\n![ezgif com-gif-maker](https://user-images.githubusercontent.com/22248849/83753055-29865580-a69c-11ea-98e4-cc04182485d8.gif)\r\n\r\n[bug_test.zip](https://github.com/godotengine/godot/files/4729918/bug_test.zip)\r\n\r\n(Note: The PR involves adding a new function to the Rendering Server API to use for this specific case. Perhaps there is a better way to fix this issue.)\r\n\r\nCloses #39182\r\n\r\nEdit: Force pushed to correct formatting checks. Can also make a separate PR for 3.2, if it seems to be okay.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":427060817,"public_id":39255,"url":"https://github.com/godotengine/godot/pull/39255","diff_url":"https://github.com/godotengine/godot/pull/39255.diff","patch_url":"https://github.com/godotengine/godot/pull/39255.patch","title":"Updated VCS interface and integration of editor","state":"open","is_draft":false,"authored_by":{"id":29702428,"user":"Janglee123","avater":"https://avatars.githubusercontent.com/u/29702428?v=4","url":"https://github.com/Janglee123"},"created_at":"2020-06-03T08:56:57Z","updated_at":"2021-08-06T11:24:34Z","body":"This pr is part of my GSoC project. It has a new UI for commit dock and implemented new features like stage/unstage, discarding changes, branch checkout, fetch/pull/push and etc. \r\n\r\nTesting this branch requires a custom compiled version of [godot-git-plugin](https://github.com/godotengine/godot-git-plugin/pull/37). Both branches are in sync so you can check it out.  \r\n\r\nHere is a gif for curiosity. \r\n<img src=\"https://user-images.githubusercontent.com/29702428/85693492-ebf17700-b6f3-11ea-9e07-117f7bf7f1e6.gif\" width=\"256\">","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":426295577,"public_id":39232,"url":"https://github.com/godotengine/godot/pull/39232","diff_url":"https://github.com/godotengine/godot/pull/39232.diff","patch_url":"https://github.com/godotengine/godot/pull/39232.patch","title":"Fix timers running inside scene preview on drag","state":"open","is_draft":false,"authored_by":{"id":30842999,"user":"lightspot21","avater":"https://avatars.githubusercontent.com/u/30842999?v=4","url":"https://github.com/lightspot21"},"created_at":"2020-06-02T01:23:45Z","updated_at":"2020-09-25T13:55:41Z","body":"This PR closes #39221.\r\n\r\n~~As a hacky work-around, we iterate through all first-level children of the scene's root and call `stop()` on the ones that are Timers.~~\r\n\r\n~~This approach is bad, and I'm currently thinking of using the pause function of the scene tree, but for some reason Godot crashes when toggling pause, which I'll need to investigate.~~\r\n\r\nNew approach is to pause the subtree which starts with the node containing the preview, instead of iterating through all of its children. This ensures that the preview stays frozen regardless of the existence of second-level timers (unless the child nodes are set to `Process` pause mode) and is cleaner than the old one, IMO.\r\n\r\n(This is not a duplicate PR, the old one was not based on the `master` branch due to an oversight of mine)\r\n\r\nEDIT: Waiting for the `OS/DisplayServer` split to be completed ~~(or at least previews working again on master)~~\r\nPreviews are working again, so this is ready for review.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":425606456,"public_id":39191,"url":"https://github.com/godotengine/godot/pull/39191","diff_url":"https://github.com/godotengine/godot/pull/39191.diff","patch_url":"https://github.com/godotengine/godot/pull/39191.patch","title":"Fix TextEdit::get_line_count() when lines are wrapped","state":"open","is_draft":false,"authored_by":{"id":25220729,"user":"kopcion","avater":"https://avatars.githubusercontent.com/u/25220729?v=4","url":"https://github.com/kopcion"},"created_at":"2020-05-31T12:43:43Z","updated_at":"2020-09-02T19:39:38Z","body":"After this PR TextEdit::get_line_count() will return the number of entries in text vector, as well as a number of times those lines wrap around so that the result is the same as what users can see on screen, as opposed to a number of '\\n' characters.\r\n\r\n*Bugsquad edit:* Fixes #38180.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":425505448,"public_id":39175,"url":"https://github.com/godotengine/godot/pull/39175","diff_url":"https://github.com/godotengine/godot/pull/39175.diff","patch_url":"https://github.com/godotengine/godot/pull/39175.patch","title":"Fix get_string_size which doesnt recongnizing tab character + Added tab spacing equal to 4 spaces.","state":"open","is_draft":false,"authored_by":{"id":25220729,"user":"kopcion","avater":"https://avatars.githubusercontent.com/u/25220729?v=4","url":"https://github.com/kopcion"},"created_at":"2020-05-30T18:38:37Z","updated_at":"2021-02-27T18:54:36Z","body":"Fix #38315\r\nAs per issue, added special case for handling tab character, set equal to 4 spaces.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":425354782,"public_id":39155,"url":"https://github.com/godotengine/godot/pull/39155","diff_url":"https://github.com/godotengine/godot/pull/39155.diff","patch_url":"https://github.com/godotengine/godot/pull/39155.patch","title":"NodePath export hint","state":"open","is_draft":false,"authored_by":{"id":58010307,"user":"brndel","avater":"https://avatars.githubusercontent.com/u/58010307?v=4","url":"https://github.com/brndel"},"created_at":"2020-05-29T22:08:46Z","updated_at":"2021-08-06T11:24:33Z","body":"`export(NodePath, Button) var my_node_path`\r\nMakes only Button (and its subclasses) selectable in the 'Select a Node' dialog window in the editor\r\n![image](https://user-images.githubusercontent.com/58010307/83309412-7afc9380-a209-11ea-9a14-8d3e304f1d3b.png)\r\n\r\n\r\nthis also works for global classes\r\n```\r\n#Inventory.gd\r\nextends Node\r\nclass_name Inventory\r\n\r\n#...\r\n```\r\n```\r\n#Player.gd\r\n#...\r\n\r\nexport(NodePath, Inventory) var inventory_path\r\n\r\n#...\r\n```\r\n![image](https://user-images.githubusercontent.com/58010307/83309372-615b4c00-a209-11ea-865d-8238434326d1.png)\r\n\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":425142315,"public_id":39148,"url":"https://github.com/godotengine/godot/pull/39148","diff_url":"https://github.com/godotengine/godot/pull/39148.diff","patch_url":"https://github.com/godotengine/godot/pull/39148.patch","title":"Remove bbcode_text from RichTextLabel","state":"open","is_draft":false,"authored_by":{"id":14185889,"user":"HaSa1002","avater":"https://avatars.githubusercontent.com/u/14185889?v=4","url":"https://github.com/HaSa1002"},"created_at":"2020-05-29T14:33:55Z","updated_at":"2021-05-20T11:44:12Z","body":"This simplyfies the text setting and resolves some bugs as the internal data structure is the same.\r\n\r\n*It's a draft, since the points below must be discussed first (at least 1 to 3)*\r\n\r\nThings to discuss:\r\n1. Make add_text, set_text, get_text private (hide them in their current form)?\r\n2. Rename set_bbcode, get_bbcode and append_bbcode to set_text, get_text and add/append_text?\r\n3. Rename bbcode_enabled?\r\n4. How to parse old scene files (since we should put the `bbcode_text` into the `text`, when `bbcode_enabled` is true)?\r\n\r\nfixes #36711\r\nfixes #35553 and therefore supersedes #36037 if merged\r\nfixes partly #18413\r\n\r\n#35368 seems related acording to the title, but issue itself is unclear\r\n\r\nWe could alternativly make the RichTextLabel a base class for multiple parsers and reimplement a BBCodeLabel or go in the direction of https://github.com/godotengine/godot-proposals/issues/826","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":424949218,"public_id":39141,"url":"https://github.com/godotengine/godot/pull/39141","diff_url":"https://github.com/godotengine/godot/pull/39141.diff","patch_url":"https://github.com/godotengine/godot/pull/39141.patch","title":"editor help doc sort with space for Methods and Properties by alphabe…","state":"open","is_draft":false,"authored_by":{"id":45402513,"user":"ChristopheLY","avater":"https://avatars.githubusercontent.com/u/45402513?v=4","url":"https://github.com/ChristopheLY"},"created_at":"2020-05-29T07:59:50Z","updated_at":"2021-02-27T18:36:14Z","body":"…tical order","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":424296956,"public_id":39114,"url":"https://github.com/godotengine/godot/pull/39114","diff_url":"https://github.com/godotengine/godot/pull/39114.diff","patch_url":"https://github.com/godotengine/godot/pull/39114.patch","title":"Impulse report","state":"open","is_draft":false,"authored_by":{"id":22211800,"user":"dustinjamescondon","avater":"https://avatars.githubusercontent.com/u/22211800?v=4","url":"https://github.com/dustinjamescondon"},"created_at":"2020-05-28T07:18:26Z","updated_at":"2021-02-27T18:41:28Z","body":"Implements [feature request #409](https://github.com/godotengine/godot-proposals/issues/409). The total final impulse applied to the contact is saved in the BodyPair2DSW::contacts structure. By total final impulse, I mean the impulses applied to the contact throughout each solver iteration is summed, so when get_contact_impulse is called, the resulting impulse vector should be the exact impulse that was applied to the contact. Also I added the documentation entry as well","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":424113948,"public_id":39104,"url":"https://github.com/godotengine/godot/pull/39104","diff_url":"https://github.com/godotengine/godot/pull/39104.diff","patch_url":"https://github.com/godotengine/godot/pull/39104.patch","title":"Fixing destroying a sub_window which activates the wrong window","state":"open","is_draft":false,"authored_by":{"id":39414297,"user":"GuidoRevers","avater":"https://avatars.githubusercontent.com/u/39414297?v=4","url":"https://github.com/GuidoRevers"},"created_at":"2020-05-27T21:06:09Z","updated_at":"2021-06-06T13:50:34Z","body":"**Branch**: master\r\n**Platform**: win7 (also tested on win10)\r\n**Fixes**: #37731\r\n\r\n**Problem:**\r\nWhen closing the FileDialog, the wrong window(in this case \"Godot Engine - Project Manager\") is activated which in turn closes the \"Create New Project\" window.\r\n\r\nThis happens because Godot's Dialog and Popup close themselves when their parent gets focused. But this is actually not what's causing the problem.\r\n\r\nI think the **underlying problem** and real culprit is:\r\n`SetWindowLongPtr(wd_window.hWnd, GWLP_HWNDPARENT, (LONG_PTR) nullptr);`\r\nand\r\n`SetWindowLongPtr(wd_window.hWnd, GWLP_HWNDPARENT, (LONG_PTR)wd_parent.hWnd);`\r\nlocated in \r\n_display_server_windows.cpp_\r\n\r\n`SetWindowLongPtr` is used to set the owner of sub_window and is needed to make the windows behave transient. But this seems to mess with the list of recently active windows the OS is keeping. When closing an active window, Windows somehow finds another window to activate. And this fails when `SetWindowLongPtr` was used to set and unset the owner.\r\n\r\nThis can easily be tested by commenting out both occurrences of `SetWindowLongPtr`.\r\n\r\n\r\n**How to Fix:**\r\nGo through the list of windows, created by display_server_windows.cpp, and look for the last window we created(the window with the highest WindowID), excluding the window we want to close. Activating this window before closing another window was the simplest fix I could think of.\r\n\r\nBefore Fix:\r\n![before](https://user-images.githubusercontent.com/39414297/83067114-63d17080-a066-11ea-94b0-6338b4123da2.gif)\r\n\r\nAfter Fix:\r\n![after](https://user-images.githubusercontent.com/39414297/83067154-7055c900-a066-11ea-85c1-81e603c5aeef.gif)\r\n\r\n\r\nI'm quite sure this is also related to a few other issues with popup menues or closing windows. I will edit or comment later on it.\r\n\r\n<i>Bugsquad edit</i>: Fix #37731\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":423488579,"public_id":39072,"url":"https://github.com/godotengine/godot/pull/39072","diff_url":"https://github.com/godotengine/godot/pull/39072.diff","patch_url":"https://github.com/godotengine/godot/pull/39072.patch","title":"Add debug_color property to CollisionShape2D","state":"open","is_draft":false,"authored_by":{"id":47700418,"user":"dalexeev","avater":"https://avatars.githubusercontent.com/u/47700418?v=4","url":"https://github.com/dalexeev"},"created_at":"2020-05-26T22:05:06Z","updated_at":"2021-07-09T18:38:38Z","body":"Closes godotengine/godot-proposals#906\r\n\r\n---\r\n\r\n![200527-1](https://user-images.githubusercontent.com/47700418/83000551-327b8500-a013-11ea-9610-87931d914d67.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418718]},{"id":422892951,"public_id":39055,"url":"https://github.com/godotengine/godot/pull/39055","diff_url":"https://github.com/godotengine/godot/pull/39055.diff","patch_url":"https://github.com/godotengine/godot/pull/39055.patch","title":"implements EventGesturePan,Pinch,Twist - OS agnostic","state":"open","is_draft":false,"authored_by":{"id":14182,"user":"jeremyz","avater":"https://avatars.githubusercontent.com/u/14182?v=4","url":"https://github.com/jeremyz"},"created_at":"2020-05-25T20:50:43Z","updated_at":"2020-11-27T14:14:26Z","body":"this is shamelessy inspired by Federico-Ciuffardi's job on #36953\r\n\r\nimplementation of thresholds to limit the amount of\r\nemitted events will come later.\r\n\r\nthis is related to #13139 (and #37754 for 3.2 branch)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":422840892,"public_id":39046,"url":"https://github.com/godotengine/godot/pull/39046","diff_url":"https://github.com/godotengine/godot/pull/39046.diff","patch_url":"https://github.com/godotengine/godot/pull/39046.patch","title":"Allow autotiles to auto-transform tiles, per developer config.","state":"open","is_draft":false,"authored_by":{"id":6305593,"user":"PeterJSFChaplin","avater":"https://avatars.githubusercontent.com/u/6305593?v=4","url":"https://github.com/PeterJSFChaplin"},"created_at":"2020-05-25T17:26:23Z","updated_at":"2021-08-06T11:24:33Z","body":"Allows the developer to specify allowed transformations (flip and transpose)\r\nfor a given autotile subtile via a new method:\r\n\r\nTileSet.autotile_set_subtile_allowed_transformations(id, coord, flags).\r\n\r\nAutotiles will try the allowed transformations when searching for a matching\r\nbitmask, and apply a matching transformation to the cell being drawn into.\r\n\r\nThis allows functioning autotile sets to be created with smaller\r\ntextures, as rotated and flipped variants need not be included.","target_branch":"3.x","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418718]},{"id":422421494,"public_id":39013,"url":"https://github.com/godotengine/godot/pull/39013","diff_url":"https://github.com/godotengine/godot/pull/39013.diff","patch_url":"https://github.com/godotengine/godot/pull/39013.patch","title":"Store Control constants as floats instead of integers","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-24T14:31:07Z","updated_at":"2020-09-02T19:39:44Z","body":"This allows to store values like the editor scale in a constant. This way, we can eventually [remove the need to include editor-only headers in source files in the `scene/` folder](https://github.com/godotengine/godot/issues/29730).\r\n\r\nThe editor still appears to look correct, but please test for regressions anyway. I'd be surprised if *everything* worked as expected right now :slightly_smiling_face: ","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":422362348,"public_id":39001,"url":"https://github.com/godotengine/godot/pull/39001","diff_url":"https://github.com/godotengine/godot/pull/39001.diff","patch_url":"https://github.com/godotengine/godot/pull/39001.patch","title":"Fix implementation to find the preferred surface format.","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2020-05-24T04:43:05Z","updated_at":"2021-01-05T00:10:17Z","body":"TBH I am not sure what the old one was even trying to do...\r\nI assume its a placeholder logic.\r\n\r\nThis implementation is based on Sascha Willem's:\r\n\r\nhttps://github.com/SaschaWillems/Vulkan/blob/2973aad0144e8ab2323df174cc22917c90994cc4/base/VulkanSwapChain.hpp#L218-L248","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":422297462,"public_id":38989,"url":"https://github.com/godotengine/godot/pull/38989","diff_url":"https://github.com/godotengine/godot/pull/38989.diff","patch_url":"https://github.com/godotengine/godot/pull/38989.patch","title":"Renames autotile_coord to subtile_coordinate","state":"open","is_draft":false,"authored_by":{"id":1387165,"user":"guilhermefelipecgs","avater":"https://avatars.githubusercontent.com/u/1387165?v=4","url":"https://github.com/guilhermefelipecgs"},"created_at":"2020-05-23T16:39:06Z","updated_at":"2020-09-02T19:39:45Z","body":"- Renames `autotile_coord` to `subtile_coordinate`.\r\n  - As I suggested here https://github.com/godotengine/godot/issues/16863#issuecomment-629812730.\r\n\r\nAlso:\r\n- Changes default return of `TileMap::get_cell_subtile_coordinate`.\r\n  - The method reference said: \"Returns a zero vector if the cell doesn't have autotiling\", but this is not entirely true because `Vector.ZERO` it's still a valid coordinate for auto tile, so I changed for `Vector.INF`.\r\n-  [TileSet] Merges `_forward_atlas_subtile_selection` with `_forward_subtile_selection`.\r\n   - This is my suggestion. Makes the API clearer I hope.\r\n-  Renames `coord` to `subtile_coordinate`.\r\n\r\nI'm planning to create (and/or update) a \"continued\" page for Tilemap document to explain the hidden features like bitmasks, wildcards, explain the concept of tiles and subtiles, differences from 3x3 minimal and 3x3, priority for atlas, _forward_subtile_selection, etc. (the docs now don't even mention autotile)\r\n\r\n**Update:** I changed from `tile_coordinate` to `subtile_coordinate` because makes more sense.\r\n\r\n**Update:** I decided to change the methods that starts with `autotile_` to `subtile_` that are used for both atlas and autotile as well. Complete list below:\r\n```\r\nautotile_[set|get]_icon_coordinate -> subtile_[set|get]_icon_coordinate\r\nautotile_[set|get]_spacing -> subtile_[set|get]_spacing\r\nautotile_[set|get]_size -> subtile_[set|get]_size\r\nautotile_[set|get]_z_index -> subtile_[set|get]_z_index\r\nautotile_get_z_index_map -> subtile_get_z_index_map\r\nautotile_[set|get]_light_occluder -> subtile_[set|get]_light_occluder\r\nautotile_get_light_oclusion_map -> subtile_get_light_oclusion_map\r\nautotile_[set|get]_navigation_polygon -> subtile_[set|get]_navigation_polygon\r\nautotile_get_navigation_map -> subtile_get_navigation_map\r\n```\r\n\r\n**Update:** Renames `tile_locaiton` of `_forward_subtile_selection` to `cell_position`.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":422240858,"public_id":38976,"url":"https://github.com/godotengine/godot/pull/38976","diff_url":"https://github.com/godotengine/godot/pull/38976.diff","patch_url":"https://github.com/godotengine/godot/pull/38976.patch","title":"[WIP] export var array reduced to const bug fixed","state":"open","is_draft":true,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-05-23T08:16:28Z","updated_at":"2021-07-13T09:35:57Z","body":"Fix: #20436\r\n\r\n```gdscript\r\n## working\r\nexport var arr1 = []\r\nexport var arr2 = []\r\n\r\nexport(Array) var arr1 = []\r\nexport(Array) var arr2 = []\r\n\r\nexport(Array) var arr1 := []\r\nexport(Array) var arr2 := []\r\n\r\nexport(Array) var arr1 :Array= []\r\nexport(Array) var arr2 :Array= []\r\n\r\nexport var arr1 :Array= []\r\nexport var arr2 :Array= []\r\n\r\nexport var arr1 :Array= Array()\r\nexport var arr2 :Array= Array()\r\n\r\nexport(Vector2) var arr1 = Vector2i()\r\nexport(Vector2) var arr2 = Vector2i()\r\n```\r\nit's working for every scenario above, (seems like only `Array` and `Dictionary` are exportable reference types)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":421426134,"public_id":38926,"url":"https://github.com/godotengine/godot/pull/38926","diff_url":"https://github.com/godotengine/godot/pull/38926.diff","patch_url":"https://github.com/godotengine/godot/pull/38926.patch","title":"Add access to the viewport's G-buffers (and depth).","state":"open","is_draft":false,"authored_by":{"id":34734122,"user":"SIsilicon","avater":"https://avatars.githubusercontent.com/u/34734122?v=4","url":"https://github.com/SIsilicon"},"created_at":"2020-05-21T15:36:42Z","updated_at":"2021-08-06T11:24:33Z","body":"With this addition, the G buffers in viewports, and the depth buffer, are now accessible textures that can be used in shaders.\r\n\r\nUsing the new `buffer_mode` property in `ViewportTexture`, the following buffers are now accessible, including the default `Color` buffer.\r\n- Depth\r\n- Diffuse + Ambient Factor\r\n- Specular + Metallic\r\n- Normal + Roughness\r\n- Subsurface\r\n\r\nIt is now possible to do various mid-processing effects, such as this.\r\n![temp_annotation](https://user-images.githubusercontent.com/34734122/82576852-d1097100-9b4f-11ea-917a-ac1c23d2d80e.png)\r\n\r\nThere is also an `expose_gbuffer` variable in `Viewport` that enables access to the G-buffers, with some exceptions.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/798.*\r\n","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3388402,3609449,4418914]},{"id":421047544,"public_id":38902,"url":"https://github.com/godotengine/godot/pull/38902","diff_url":"https://github.com/godotengine/godot/pull/38902.diff","patch_url":"https://github.com/godotengine/godot/pull/38902.patch","title":"Add to_global_basis/to_local_basis methods to Node2D/Node3D","state":"open","is_draft":false,"authored_by":{"id":53737317,"user":"Cykyrios","avater":"https://avatars.githubusercontent.com/u/53737317?v=4","url":"https://github.com/Cykyrios"},"created_at":"2020-05-20T22:17:09Z","updated_at":"2020-09-02T19:39:48Z","body":"This adds convenience functions to rotate vectors from global to local space (and the other way around), [as proposed here](https://github.com/godotengine/godot-proposals/issues/857).\r\n\r\nI would mainly like to get opinions about the 2D version as I wasn't entirely sure about how I should name the methods.\r\n\r\nNote that this can be backported easily to 3.2 by adding this to Spatial instead of Node3D.","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":420944513,"public_id":38898,"url":"https://github.com/godotengine/godot/pull/38898","diff_url":"https://github.com/godotengine/godot/pull/38898.diff","patch_url":"https://github.com/godotengine/godot/pull/38898.patch","title":"Load GDNative libraries for X11 as a fallback on the Server platform","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-20T18:24:39Z","updated_at":"2020-09-02T19:39:49Z","body":"**This is completely untested as I don't have a GDNative setup. I welcome any testing efforts.** cc @sesenta\r\n\r\n___\r\n\r\nThis makes it possible to load GDNative libraries on a Linux server without having to edit the GDNativeLibrary resource.\r\n\r\nSee https://github.com/godotengine/godot-docs/pull/3557#issuecomment-630761914.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":419134454,"public_id":38801,"url":"https://github.com/godotengine/godot/pull/38801","diff_url":"https://github.com/godotengine/godot/pull/38801.diff","patch_url":"https://github.com/godotengine/godot/pull/38801.patch","title":"Small refactor for atlas priority","state":"open","is_draft":false,"authored_by":{"id":1387165,"user":"guilhermefelipecgs","avater":"https://avatars.githubusercontent.com/u/1387165?v=4","url":"https://github.com/guilhermefelipecgs"},"created_at":"2020-05-17T16:04:59Z","updated_at":"2021-07-15T00:32:30Z","body":"- Remove hack of bitmask to use priority\r\n- Allows priority to be used with gdscript\r\n- Fix the atlas priority by randomly changing the surrounding tiles (https://github.com/godotengine/godot/issues/36972#issuecomment-625995506)\r\n- Set atlas priority in gdscript to true by default (breaks compat when used with gdscript)\r\n\r\nFix #36972\r\nSupersedes #38790, #38546\r\n\r\nBreaks compatibility for games that create procedurally generated tilemaps with `ATLAS TILE` by code.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":417452307,"public_id":38722,"url":"https://github.com/godotengine/godot/pull/38722","diff_url":"https://github.com/godotengine/godot/pull/38722.diff","patch_url":"https://github.com/godotengine/godot/pull/38722.patch","title":"Add offset for TextureProgress progress texture","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-05-13T15:47:51Z","updated_at":"2021-03-09T21:50:55Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/823","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418733]},{"id":416914845,"public_id":38701,"url":"https://github.com/godotengine/godot/pull/38701","diff_url":"https://github.com/godotengine/godot/pull/38701.diff","patch_url":"https://github.com/godotengine/godot/pull/38701.patch","title":"Avoid copy PackedDataContainer::_iter_init_ofs","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2020-05-12T19:08:25Z","updated_at":"2020-09-02T19:39:54Z","body":"I am pretty sure the local variable `ref` is not needed. It also performs a useless assignment operation.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":416319997,"public_id":38679,"url":"https://github.com/godotengine/godot/pull/38679","diff_url":"https://github.com/godotengine/godot/pull/38679.diff","patch_url":"https://github.com/godotengine/godot/pull/38679.patch","title":"Document a common deferred workaround for `Control.grab_focus()`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-11T20:12:59Z","updated_at":"2021-02-18T22:34:13Z","body":"See #38671.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":415790040,"public_id":38644,"url":"https://github.com/godotengine/godot/pull/38644","diff_url":"https://github.com/godotengine/godot/pull/38644.diff","patch_url":"https://github.com/godotengine/godot/pull/38644.patch","title":"Updated KinematicBody doc file.","state":"open","is_draft":false,"authored_by":{"id":60354907,"user":"Megamega53","avater":"https://avatars.githubusercontent.com/u/60354907?v=4","url":"https://github.com/Megamega53"},"created_at":"2020-05-10T22:20:45Z","updated_at":"2021-01-05T00:59:43Z","body":"I updated the document to be more consistent with KinematicBody2D, in which [method move_and_slide_with_snap] is added to lines that are necessary.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":415773257,"public_id":38642,"url":"https://github.com/godotengine/godot/pull/38642","diff_url":"https://github.com/godotengine/godot/pull/38642.diff","patch_url":"https://github.com/godotengine/godot/pull/38642.patch","title":"3.4 SailfishOS port ","state":"open","is_draft":false,"authored_by":{"id":16311332,"user":"savegame","avater":"https://avatars.githubusercontent.com/u/16311332?v=4","url":"https://github.com/savegame"},"created_at":"2020-05-10T20:02:56Z","updated_at":"2021-08-06T11:24:33Z","body":"About [SailfishOS](https://sailfishos.org)\r\n\r\nThis PR add to Godot Engine 3.2 support for exporting Godot GLES2 games to SailfishOS rpm file with SailfishSDK.  \r\n\r\nFix ~~#26018~~ [#914](https://github.com/godotengine/godot-proposals/issues/914) issue for 3.2 branch\r\n\r\nI use this pull request for my work: \r\n- #16470\r\n- #9435\r\n\r\n#### **What is done**:\r\n- add ability export game from Godot Editor to native SailfishOS RPM file\r\n- touch screen input\r\n- dynamic orientation events \r\n- dynamic orientation change ( just some magic in canvas shader and gles renderer )  \r\n- normal application life cycle  \r\n- sound initialization, pause - when application is \"minimized'\r\n- joypad (just compile already exists **libudev** implementation of LinuxJoypad, works nice )\r\n\r\nWhan need do next:  \r\n- show native keyboard (maliit keyboard) when use text edit UI items \r\n- device vibration\r\n- accelerometer, gyroscope events\r\n\r\n#### **Known bugs**:\r\n- SailfishOS platform dont support GLES3 for now\r\n\r\n#### **Build Instructions**:\r\n\r\nFor build this branch on SailfishOS, need SailfishSDK (or Sailfish Docker image), all build commands are looks like:\r\n```bash\r\nexport SAILFISH_SDK=$HOME/SailfishOS/\r\nexport SSH_MER_KEY=${SAILFISH_SDK}/vmshare/ssh/private_keys/engine/mersdk\r\nexport MERSSH_PORT=2222\r\nexport MERSSH=\"ssh  -o \"IdentitiesOnly=yes\" -i \\\"$SSH_MER_KEY\\\" -p $MERSSH_PORT\"\r\n# GODOT_PATH - path to godot sources inside MerSDK (SailfishSDK) build machine\r\nexport GODOT_PATH=/home/mersdk/share/Projects/Sailfish/godot\r\n# version of taget Sailfish platform, should be more than or equal to 3.1.0.12 (becuse of SDL2 version)\r\nexport MER_TARGET_VERSION=3.2.1.20\r\n# architecture can be i486 or armv7hl\r\nexport MER_TARGET_ARCH=armv7hl\r\nexport GODOT_ARCH=`[ \"$MER_TARGET_ARCH\" == \"armv7hl\" ] && echo arm || echo x86`\r\nexport MER_TARGET=SailfishOS-${MER_TARGET_VERSION}-${MER_TARGET_ARCH}\r\n#first install dependencies\r\n$MERSSH \"sb2 -t ${MER_TARGET} -m sdk-install -R zypper in -y SDL2-devel libaudioresource-devel pulseaudio-devel openssl-devel wayland-devel libpng-devel libxkbcommon-devel libudev-devel scons  gcc-c++\"\r\n#than build \r\n$MERSSH \"cd $GODOT_PATH && sb2 -t ${MER_TARGET}  scons -j 8 platform=sailfish target=release arch=${GODOT_ARCH} bits=32\"\r\n# then optimize binary size if it release (arm or x86)\r\n$MERSSH \"cd $GODOT_PATH && sb2 -t ${MER_TARGET}  strip godot.sailfish.opt.${GODOT_ARCH}\"\r\n```\r\nlatest SailfishSDK can use docker images for build engine.\r\n\r\n[Latest build release (Editor and export temaplates based on Godot 3.2.1 stable) ](https://github.com/savegame/godot/releases/tag/v3.2.1-stable-sailfish)\r\nWith this export templates already exists few demos and games:\r\n- [Whoosh! in the Dungeon](https://openrepos.net/content/sashikknox/whoosh-dungeon) - Summary it's just another dungeon crawler!\r\n- [Godot Joypad Demo](https://openrepos.net/content/sashikknox/godot-joypad) for testing gamepads support on SailfishOS (little bit modified for touchscreens)\r\n- [Godot Materials Demo](https://openrepos.net/content/sashikknox/godot-materials-tester) - little bit modified for touchscreens\r\n- [Circle Jump](https://openrepos.net/content/nesnomis/circle-jump) - Circle Jump is a small (but kind of addictive) game.\r\n\r\nWhy 3.2, not 4 branch? \r\nBecause 4 branch is in deep development, and this Sailfish support already work. But port it to 4.0 branch not possible now, because i need GLES2 implementation in 4.0 branch and more time for understanding how to port it to Sailfish. \r\nBut 3.2 already work on SailfishOS, it stable on it, some people already use this export templates for their project.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3377457,3609449,4418392,4418518,4418914]},{"id":415746334,"public_id":38634,"url":"https://github.com/godotengine/godot/pull/38634","diff_url":"https://github.com/godotengine/godot/pull/38634.diff","patch_url":"https://github.com/godotengine/godot/pull/38634.patch","title":"Allow sending `null` as the last argument to be recognizable in `UndoRedo` methods","state":"open","is_draft":false,"authored_by":{"id":25220729,"user":"kopcion","avater":"https://avatars.githubusercontent.com/u/25220729?v=4","url":"https://github.com/kopcion"},"created_at":"2020-05-10T16:34:40Z","updated_at":"2021-06-06T13:26:25Z","body":"Previously the number of arguments for functions for EditorPlugin has been determined by checking for the first null value argument, which meant one could not pass null as value to a function. Now UndoRedo call has map storing function name and argument count, which is updated after each reloading of a script, so if a function is present in the map the correct argc is obtained.\r\n\r\n*Bugsquad edit: This closes #36895.*","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":415673052,"public_id":38612,"url":"https://github.com/godotengine/godot/pull/38612","diff_url":"https://github.com/godotengine/godot/pull/38612.diff","patch_url":"https://github.com/godotengine/godot/pull/38612.patch","title":"virtual func return type check implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-05-10T05:49:22Z","updated_at":"2021-03-20T01:23:43Z","body":"Fix: https://github.com/godotengine/godot-proposals/issues/811\r\n\r\n![override-return-type](https://user-images.githubusercontent.com/41085900/81491805-02f91880-92b0-11ea-88a3-9bfb5a489af0.JPG)\r\n\r\n![override-return-type-2](https://user-images.githubusercontent.com/41085900/81491893-de517080-92b0-11ea-8a9d-9a4f995a54ed.JPG)\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":415665971,"public_id":38608,"url":"https://github.com/godotengine/godot/pull/38608","diff_url":"https://github.com/godotengine/godot/pull/38608.diff","patch_url":"https://github.com/godotengine/godot/pull/38608.patch","title":"Fix for variables losing scope and disappearing from debugger","state":"open","is_draft":false,"authored_by":{"id":52541536,"user":"BigRed-118","avater":"https://avatars.githubusercontent.com/u/52541536?v=4","url":"https://github.com/BigRed-118"},"created_at":"2020-05-10T04:14:22Z","updated_at":"2020-09-02T19:39:58Z","body":"When breaking on or stepping to the last line of a p_block, the local\r\nvariables declared in that scope would be removed from the debugger.\r\nThis was because the current_line for removal set in gdscript_compiler.h,\r\npop_stack_identifiers ended up being the last line of the block, not\r\nthe line after. Now we set the current_line to be the end_line of the\r\np_block, only if the end_line is not -1\r\n\r\nReported: #38206\r\n\r\nIf anyone sees any issues with this let me know. From what I've seen, the end_line of a p_block was either a valid line or -1, but I could be mistaken. Thank you.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":415649943,"public_id":38604,"url":"https://github.com/godotengine/godot/pull/38604","diff_url":"https://github.com/godotengine/godot/pull/38604.diff","patch_url":"https://github.com/godotengine/godot/pull/38604.patch","title":"Rename `AStar.get_points()` to `AStar.get_point_ids()` for clarity","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-10T00:35:30Z","updated_at":"2021-03-20T23:48:10Z","body":"The same has been done for AStar2D as well.\r\n\r\nIf desired, I could open a PR against the `3.2` branch to update only the method descriptions.\r\n\r\nThis closes https://github.com/godotengine/godot-docs/issues/3515.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":415628950,"public_id":38601,"url":"https://github.com/godotengine/godot/pull/38601","diff_url":"https://github.com/godotengine/godot/pull/38601.diff","patch_url":"https://github.com/godotengine/godot/pull/38601.patch","title":"Updated documentations on AnimatedSprites and SpriteFrames with more details","state":"open","is_draft":false,"authored_by":{"id":60354907,"user":"Megamega53","avater":"https://avatars.githubusercontent.com/u/60354907?v=4","url":"https://github.com/Megamega53"},"created_at":"2020-05-09T20:52:20Z","updated_at":"2021-01-05T00:59:42Z","body":"I've added more details that weren't in the AnimatedSprites doc, such as making the description more specific of its function. The same goes for the SpriteFrames doc.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":415535878,"public_id":38584,"url":"https://github.com/godotengine/godot/pull/38584","diff_url":"https://github.com/godotengine/godot/pull/38584.diff","patch_url":"https://github.com/godotengine/godot/pull/38584.patch","title":"Add signals for adding and removing nodes from groups.","state":"open","is_draft":false,"authored_by":{"id":6007524,"user":"RabbitB","avater":"https://avatars.githubusercontent.com/u/6007524?v=4","url":"https://github.com/RabbitB"},"created_at":"2020-05-09T07:57:50Z","updated_at":"2021-01-05T00:59:41Z","body":"This PR is in response to proposal: https://github.com/godotengine/godot-proposals/issues/766\r\n\r\nIt adds four new signals in total, two to `Node` and two to `SceneTree`. The two new signals on `Node` are:\r\n\r\n1. `grouped(node: Node, group: StringName)`\r\n2. `ungrouped(node: Node, group: StringName)`\r\n\r\nThese are emitted when a node is added to, or removed from a group (respectively). They will be emitted regardless of whether or not the node is currently part of the `SceneTree`, as we're connecting to the individual `Node` itself.\r\n\r\nI had some debate on whether I should include `node` as one of the arguments sent with the signal, but I decided to include it in the end, as it allows these signals to be connected to multiple different nodes, but use the same method and still make it possible to determine which node emitted the signal.\r\n\r\nThe remaining two signals belong to `SceneTree`, and mirror those for `Node`, but have a distinctly different behavior.\r\n\r\n1. `node_grouped(node: Node, group: StringName)`\r\n2. `node_ungrouped(node: Node, group: StringName)`\r\n\r\nThese signals will emit for any node, but only so-long as they are currently inside the scene-tree. `node_grouped` will be emitted for each group a node belongs to, when it enters the scene-tree. Correspondingly, `node_ungrouped` will emit for each group a node belongs to, when it leaves the scene-tree. If a node is added to, or removed from a group while inside the scene-tree, the corresponding signal will emit.\r\n\r\nI would like to note that I'm open to suggestions for better signal-names. I don't believe the signal names for `SceneTree` fully convey their difference from those on `Node`, but I'm unable to come up with a better set of names. I originally had `node_added_to_group`/`added_to_group` as examples, but I don't think those are any more descriptive--just physically longer.\r\n\r\n**The benefits of this approach:**\r\nInterested parties have the option of narrowly watching group changes to specific nodes, or widely watching changes to entire groups, with the additional benefit of being alerted when nodes belonging to certain groups enter and exit the tree.\r\n\r\nThis greatly simplifies any code that requires up to date information on changes to groups (such as code that would track enemies with specific traits or types), as scripts can now be updated on the specific changes and the nodes affected, vs asking the tree for all nodes in a group and comparing it to a cached version.\r\n\r\n**The deficiencies of this approach:**\r\nUpon game start, for nodes in the default scene, there is no point within GDScript, in which you can connect these signals before they would be emitted, if the nodes have groups that were added in the editor. Or to put it another way, editor defined groups will only emit a receivable signal if the scene is instantiated after the game is started.\r\n\r\nThere is also the issue that the engine itself uses some groups internally, and these will be occasionally added and removed from nodes, with no way of filtering them out from user-defined groups. This means that receivers of these signals will need to filter based on group, and not implicitly trust that only user-defined groups will trigger these to emit.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":415254034,"public_id":38569,"url":"https://github.com/godotengine/godot/pull/38569","diff_url":"https://github.com/godotengine/godot/pull/38569.diff","patch_url":"https://github.com/godotengine/godot/pull/38569.patch","title":"Add a project setting to control texture LOD bias","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-08T14:09:37Z","updated_at":"2021-08-12T17:22:44Z","body":"This setting controls the LOD bias to use for mipmapped textures. Positive values will make mipmapped textures appear blurrier, whereas negative values will make mipmapped textures appear sharper.\r\n\r\nThis LOD bias can be used as a cheaper complement or alternative to anisotropic filtering, especially on platforms with low memory bandwidth such as integrated graphics or mobile platforms. However, a LOD bias that's too low will result in mipmapped textures having a grainy appearance.\r\n\r\n## Preview\r\n\r\n### LOD bias -1 (sharp)\r\n\r\n![bias_-1](https://user-images.githubusercontent.com/180032/81413798-58191b00-9146-11ea-9b25-fa1887432c5d.png)\r\n\r\n### LOD bias 0 (default)\r\n\r\n![bias_0](https://user-images.githubusercontent.com/180032/81413801-594a4800-9146-11ea-9eec-b63f006dde8c.png)\r\n\r\n### LOD bias 1 (blurry)\r\n\r\n![bias_1](https://user-images.githubusercontent.com/180032/81413804-59e2de80-9146-11ea-8a1b-8ba3aa3da9c8.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":414610556,"public_id":38529,"url":"https://github.com/godotengine/godot/pull/38529","diff_url":"https://github.com/godotengine/godot/pull/38529.diff","patch_url":"https://github.com/godotengine/godot/pull/38529.patch","title":"When a KinematicBody is stuck, set the unsafe proportion to the minimum instead of zero.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-05-07T10:56:44Z","updated_at":"2021-01-05T00:50:49Z","body":"When a `KinematicBody` is stuck, setting the unsafe proportion to the minimum instead of zero, ensures that collision information is extracted even if the penetration causing the body to be stuck is less than the `test_motion_min_contact_depth`. More importantly, this ensures that a collision is reported and doesn't allow the body to tunnel. Furthermore, it also ensures that the collision information is extracted from the `CollisionShape` in the direction of motion not the `CollisionShape` that happens to be closest or first.\r\n\r\nNote: The minimum is 1/2^8 because there are (an arbitrary) eight steps in the binary search.\r\n\r\nFixes #37798.\r\n\r\nPS See [my comment](https://github.com/godotengine/godot/issues/37798#issuecomment-625178701) in #37798 for a more in depth analysis.\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":413480407,"public_id":38486,"url":"https://github.com/godotengine/godot/pull/38486","diff_url":"https://github.com/godotengine/godot/pull/38486.diff","patch_url":"https://github.com/godotengine/godot/pull/38486.patch","title":"Refactor Octree<T, use_pairs, AL>::cull_convex() and Geometry::compute_convex_mesh_points()","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-05-05T12:18:23Z","updated_at":"2020-09-02T19:40:03Z","body":"#38465 provided a quick fix for #38457, but the real problem is that `Vectors` are being passed as pointers to their first elements. This is relying on a specific implementation of `Vector`: specifically that the address of the first element of a `Vector` is also the address of the `Vector`.\r\n\r\nThis PR removes that assumption for `Octree<T, use_pairs, AL>::cull_convex()` and `Geometry::compute_convex_mesh_points()` by passing the `Vectors` by reference and cascading this to all functions called. This also simplifies the functions, because `Vector` knows its size, the count doesn't need to be passed as a separate parameter.\r\n\r\nNote: I've extended this to the `Vector<Plane>` parameter that has existed since 0b806ee0f, and which #37863 (and #38344) was, I assume, copying.\r\n\r\nThis also enables removing the checks added in #38465, which may or may not have had an impact on the culling function.\r\n\r\nPS A 3.2 version is available if wanted.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":413259847,"public_id":38471,"url":"https://github.com/godotengine/godot/pull/38471","diff_url":"https://github.com/godotengine/godot/pull/38471.diff","patch_url":"https://github.com/godotengine/godot/pull/38471.patch","title":"Fix one way collisions for KinematicBody2D","state":"open","is_draft":false,"authored_by":{"id":1882199,"user":"Rhathe","avater":"https://avatars.githubusercontent.com/u/1882199?v=4","url":"https://github.com/Rhathe"},"created_at":"2020-05-05T01:02:36Z","updated_at":"2021-08-06T11:24:33Z","body":"Several fixes detailed in the commit messages, but essentially takes the motion of the body into account when determining whether the body collides with the one way colliding body, as well as making sure any collision axes are not perpendicular to the one way axis.\r\n\r\nUpdated version of #38345 \r\n\r\nFixes #25967\r\nFixes #28895\r\nFixes #42914\r\nFixes #42916\r\nFixes #43266\r\nFixes #43346\r\nFixes #43973\r\n\r\n~~Uses part of the code from #36280~~","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777]},{"id":413228060,"public_id":38470,"url":"https://github.com/godotengine/godot/pull/38470","diff_url":"https://github.com/godotengine/godot/pull/38470.diff","patch_url":"https://github.com/godotengine/godot/pull/38470.patch","title":"Added new notification: NOTIFICATION_IGNORED_TRANSFORM_CHANGED","state":"open","is_draft":false,"authored_by":{"id":46539626,"user":"Phischermen","avater":"https://avatars.githubusercontent.com/u/46539626?v=4","url":"https://github.com/Phischermen"},"created_at":"2020-05-04T22:58:16Z","updated_at":"2021-03-01T03:22:04Z","body":"This notification is sent when a translation occurs but the node is set to ignore translation notifications.\r\n\r\nAnother notification is necessary because certain nodes, such as visual instances, rely on the transform notification to update servers/gizmos. If the user sets a node to ignore transform changes, then the gizmo/visual instance will not be placed correctly.\r\n\r\nI haven't written docs yet, and I was thinking of changing the name of the notification. Any suggestions would be appreciated! ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":412451465,"public_id":38414,"url":"https://github.com/godotengine/godot/pull/38414","diff_url":"https://github.com/godotengine/godot/pull/38414.diff","patch_url":"https://github.com/godotengine/godot/pull/38414.patch","title":"Graph node offset wouldn't update- Fixed","state":"open","is_draft":false,"authored_by":{"id":41969735,"user":"theoway","avater":"https://avatars.githubusercontent.com/u/41969735?v=4","url":"https://github.com/theoway"},"created_at":"2020-05-02T13:26:17Z","updated_at":"2021-01-05T00:59:40Z","body":"Fixes #37780 \r\n\r\n**Issue**:  `offset` of the graph node wouldn't update and change in the property inspector, when it was moved in editor, only the `position` of `Rect`(property of `Control`) of the graph node changed. As a result, when the scene was played with the graph node in it, the graph node would be positioned according to the unmodified `offset` value.\r\n\r\n**Fix**: It turns out when editing in the editor, on moving the graph node, only the `position` was changing, when the `offset` should also have been changing as well. So, I overrode the `_edit_set_position()` method in `Control` class, which is called when `position` of `rect` is changed, and modified it such that it would update the `offset` and notify the change so that the new value of offset will appear in the property inspector as well.\r\n\r\n**Results**:\r\n![Godot Engine - New Game Project - Control tscn (_) 2020-05-02 18-22-21_Trim](https://user-images.githubusercontent.com/41969735/80865219-8493e980-8ca5-11ea-9624-e673c9df52c5.gif)\r\n\r\nNow the value of the `offset` changes as the graph node is moved/dragged in the editor, along with the change in `position`. And the graph node is positioned according the updated value of offset when the scene is played.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":412390343,"public_id":38405,"url":"https://github.com/godotengine/godot/pull/38405","diff_url":"https://github.com/godotengine/godot/pull/38405.diff","patch_url":"https://github.com/godotengine/godot/pull/38405.patch","title":"More robust and verbose error handling when uncompressing assets","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2020-05-02T03:03:09Z","updated_at":"2020-09-02T19:40:06Z","body":"All these operations may fail, we should report them and continue with the next files.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":391232995,"name":"topic:assetlib","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":412369992,"public_id":38403,"url":"https://github.com/godotengine/godot/pull/38403","diff_url":"https://github.com/godotengine/godot/pull/38403.diff","patch_url":"https://github.com/godotengine/godot/pull/38403.patch","title":"Begin every comment with a space","state":"open","is_draft":true,"authored_by":{"id":14951430,"user":"lupoDharkael","avater":"https://avatars.githubusercontent.com/u/14951430?v=4","url":"https://github.com/lupoDharkael"},"created_at":"2020-05-02T00:15:13Z","updated_at":"2021-02-19T02:10:24Z","body":"This makes the comments more visually pleasing.\r\nMaybe we could define a base style for comments and add it to the documentation?","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428]},{"id":412268674,"public_id":38397,"url":"https://github.com/godotengine/godot/pull/38397","diff_url":"https://github.com/godotengine/godot/pull/38397.diff","patch_url":"https://github.com/godotengine/godot/pull/38397.patch","title":"Add an example on iterating an array backwards","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-05-01T19:32:54Z","updated_at":"2020-09-29T13:04:13Z","body":"This closes https://github.com/godotengine/godot-docs/issues/3472.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":412092818,"public_id":38383,"url":"https://github.com/godotengine/godot/pull/38383","diff_url":"https://github.com/godotengine/godot/pull/38383.diff","patch_url":"https://github.com/godotengine/godot/pull/38383.patch","title":"Preserve RichTextLabel's text while modyfing Custom Effects","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-05-01T11:19:07Z","updated_at":"2020-09-02T19:40:08Z","body":"Handling Text and BBCode's text in RichTextLabel is really complicated - one is dependent on the other (basically, top Text area in the Inspector can wok on its own, as long as you don't put anything into BBCode's text area - then it will replicate any text change to the top Text field) - that PR doesn't fix that, as it is bigger rework how that Control should work internally.\r\n\r\nWhat that PR fixes, is - whenever there is a change to the Custom Effects array, then it'll preserve 'top' Text as it was entered before.\r\n\r\nFixes: #38284","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":411841190,"public_id":38369,"url":"https://github.com/godotengine/godot/pull/38369","diff_url":"https://github.com/godotengine/godot/pull/38369.diff","patch_url":"https://github.com/godotengine/godot/pull/38369.patch","title":"Basic implementation of async transfer","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2020-04-30T21:17:32Z","updated_at":"2021-01-27T18:51:54Z","body":"This PR moves the creation of textures and buffers to the transfer queue (when available) instead of handling it on the graphics queue with the staging buffer. The transfer queue is guaranteed to be at least as fast as the graphics queue for transfer operations (and is usually faster) and can run in parellel to the graphics queue. \r\n\r\nThis is a base implementation for @reduz to improve on. My knowledge of Vulkan and the multithreaded implementation of the Rendering Device is much to limited to produce a final version. \r\n\r\nNotably, mutexes will need to be added to ``_buffer_transfer()`` and ``texture_create()``. Further, I think we may want to explore creating a command_buffer for each thread, rather than one global command buffer (reduz suggested created a new command_pool and command_buffer for each call to ``texture_create()`` or ``_buffer_transfer``","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":410810764,"public_id":38331,"url":"https://github.com/godotengine/godot/pull/38331","diff_url":"https://github.com/godotengine/godot/pull/38331.diff","patch_url":"https://github.com/godotengine/godot/pull/38331.patch","title":"Fixes misprints, duplicated value assignments, possible usage of null pointers","state":"open","is_draft":false,"authored_by":{"id":41945903,"user":"qarmin","avater":"https://avatars.githubusercontent.com/u/41945903?v=4","url":"https://github.com/qarmin"},"created_at":"2020-04-29T16:10:39Z","updated_at":"2021-04-30T17:17:03Z","body":"Most of changes remove duplicated assignments value to variables:\r\n```\r\nvar = 1\r\n...\r\n... Code which not using `var`\r\n...\r\nvar = 1\r\n```\r\nIn `rvo_agent.cpp` and `display_server_x11.cpp` the pointers were used without checking if they are `nullptr` but in other parts of code were checked.\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":410316637,"public_id":38310,"url":"https://github.com/godotengine/godot/pull/38310","diff_url":"https://github.com/godotengine/godot/pull/38310.diff","patch_url":"https://github.com/godotengine/godot/pull/38310.patch","title":"Rect2::has_point() breaks with negative size fixed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-04-28T19:34:05Z","updated_at":"2020-10-20T07:36:38Z","body":"Fix: #37617\r\n\r\n*Bugsquad edit:* Mutually exclusive with at least a part of #37626","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":410141374,"public_id":38298,"url":"https://github.com/godotengine/godot/pull/38298","diff_url":"https://github.com/godotengine/godot/pull/38298.diff","patch_url":"https://github.com/godotengine/godot/pull/38298.patch","title":"file dialog file name autocomplete fixed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-04-28T14:05:13Z","updated_at":"2020-10-20T19:54:08Z","body":"Fix: #38195","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":409846450,"public_id":38280,"url":"https://github.com/godotengine/godot/pull/38280","diff_url":"https://github.com/godotengine/godot/pull/38280.diff","patch_url":"https://github.com/godotengine/godot/pull/38280.patch","title":"Fixed audio output latency inaccuracies","state":"open","is_draft":false,"authored_by":{"id":8124614,"user":"benjarmstrong","avater":"https://avatars.githubusercontent.com/u/8124614?v=4","url":"https://github.com/benjarmstrong"},"created_at":"2020-04-28T02:33:46Z","updated_at":"2021-07-16T11:47:58Z","body":"Fixed [issue #38215](https://github.com/godotengine/godot/issues/38215)\r\n\r\nA couple of notes on the changes:\r\n- AudioDriver::get_latency() was made pure virtual (instead of non-pure virtual). I did this because the only audio driver implementing this method was for PulseAudio, and the other 9 drivers used the default implementation (reporting 0 latency). My reasoning is that this is something all audio drivers should be forced to implement for correct behaviour and consistency across platforms. \r\n- Drivers may still select an actual latency that is different from the audio \"output latency\" setting, and on many platforms there is no way around this. For example the WASAPI driver currently has no control over it's buffer size due to limitations in WASAPI. Other drivers select the nearest allowed latency to the specified amount. Either way these drivers should report non-0 latency now.\r\n- AudioDriver::get_mix_buffer_size() tells the AudioServer how larger the audio mixer buffers should be. This was implemented in every audio driver based on how many frames they pass to their audio_server_process(..) method so they may synchronize. It was named get_mix_buffer_size instead of get_buffer_size because the mixer _can_ run at a different buffer size if the audio driver would like it to - this could be useful in the future when improving inflexible audio drivers (like WASAPI) to allow for greater latency beyond what the native toolkit can provide.\r\n- I have compiled and tested on Windows and Linux, but all other platforms are currently untested. Any testing would be thoroughly appreciated.\r\n- There's a small conflict between this and [my pr #38210 for bad latency handling in WASAPI](https://github.com/godotengine/godot/pull/38210); if either is merged I'll update the other.\r\n- I need use these changes in Godot 3.2 for a project of mine that requires low-latency audio, so I'll happily put in the work to cherry pick this.  ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":409823872,"public_id":38277,"url":"https://github.com/godotengine/godot/pull/38277","diff_url":"https://github.com/godotengine/godot/pull/38277.diff","patch_url":"https://github.com/godotengine/godot/pull/38277.patch","title":"Add Camera2D Rotation Smoothing","state":"open","is_draft":false,"authored_by":{"id":7874807,"user":"luis-l","avater":"https://avatars.githubusercontent.com/u/7874807?v=4","url":"https://github.com/luis-l"},"created_at":"2020-04-28T01:01:18Z","updated_at":"2021-03-25T18:31:01Z","body":"`Camera2D` has follow smoothing to interpolate towards a target position, but no rotation smoothing to align with the target rotation. \r\n\r\nThis adds rotation smoothing directly into the `Camera2D` API by  having two new properties: \r\n- `smoothing_rotation_enabled`\r\n- `smoothing_rotation_speed`\r\n\r\nPossible issue: confusion by having two similar properties show in the editor: `Rotating` and` Smoothing/Rotation Enabled`. I am open to suggestions to improve this. \r\n\r\nNote that rotational smoothing only works if `Rotating` is enabled.\r\n\r\n![image](https://user-images.githubusercontent.com/7874807/80435111-e7a60a80-88b8-11ea-8afb-c228b02a9b16.png)\r\n\r\n[Camera2D Smooth Rotation Video](https://www.reddit.com/r/godot/comments/g8ov6q/got_rotation_smoothing_built_directly_into/?utm_source=share&utm_medium=web2x)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":409406877,"public_id":38256,"url":"https://github.com/godotengine/godot/pull/38256","diff_url":"https://github.com/godotengine/godot/pull/38256.diff","patch_url":"https://github.com/godotengine/godot/pull/38256.patch","title":"Added option for spinbox to update it's value on line edit 'text_changed' rather than 'text_entered'","state":"open","is_draft":false,"authored_by":{"id":41730826,"user":"EricEzaM","avater":"https://avatars.githubusercontent.com/u/41730826?v=4","url":"https://github.com/EricEzaM"},"created_at":"2020-04-27T10:30:52Z","updated_at":"2021-08-18T15:14:19Z","body":"Having the spinbox update it's value on text_entered means that the control needs to lose focus for the value_changed signal to emit (or hit enter).\r\n\r\nIt can be helpful for the spinbox to update it's value _live_, so that things like validation can be done with faster feedback to the user. \r\n\r\nThis is comparable to _onchange_ and _oninput_ in JavaScript.\r\n![chBTPbYZJ7](https://user-images.githubusercontent.com/41730826/80362401-ec24f000-88c5-11ea-939e-00c09d1d974a.gif)\r\n\r\nNote this is a toggleable option:\r\n![godot windows tools 64_IFWeYCOHOO](https://user-images.githubusercontent.com/41730826/80362537-268e8d00-88c6-11ea-8474-ca48f8279ee6.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":409102761,"public_id":38232,"url":"https://github.com/godotengine/godot/pull/38232","diff_url":"https://github.com/godotengine/godot/pull/38232.diff","patch_url":"https://github.com/godotengine/godot/pull/38232.patch","title":"Implement Ref<T>::operator=(T*)","state":"open","is_draft":false,"authored_by":{"id":14951430,"user":"lupoDharkael","avater":"https://avatars.githubusercontent.com/u/14951430?v=4","url":"https://github.com/lupoDharkael"},"created_at":"2020-04-26T15:27:49Z","updated_at":"2020-09-02T19:40:14Z","body":"There are 4 ways to create a Ref:\r\n```\r\n\r\nRef<T> myref;\r\nmy_ref.instance()\r\n\r\n```\r\n`Ref<T> my_ref(memnew(T));`\r\n\r\n`Ref<T> my_ref = memnew(T);`\r\n\r\n`Ref<T> my_ref = Ref<T>(memnew(T));`\r\n\r\nAll 4 are used in the source code but they do different things.\r\nThe first straight forward but requires 2 lines.\r\nThe 4th one is verbose and requires extra ref and unref.\r\nThe 3rd one is shorter than the 4th but is not as efficent as\r\nwe don't define operator=(T *from) so it tries to cast the pointer.\r\n\r\nThis PR creates that operator and changes the 4th from to th 3rd\r\nin order to have a more compact Ref definition without unneeded\r\ncasting.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[2785428]},{"id":409055477,"public_id":38218,"url":"https://github.com/godotengine/godot/pull/38218","diff_url":"https://github.com/godotengine/godot/pull/38218.diff","patch_url":"https://github.com/godotengine/godot/pull/38218.patch","title":"Add method picker to signal connect dialog","state":"open","is_draft":false,"authored_by":{"id":1129772,"user":"sampengilly","avater":"https://avatars.githubusercontent.com/u/1129772?v=4","url":"https://github.com/sampengilly"},"created_at":"2020-04-26T10:05:57Z","updated_at":"2021-03-25T18:23:42Z","body":"Thought I'd take a stab at resolving #9644 / [#239](https://github.com/godotengine/godot-proposals/issues/239).\r\n\r\nAs this is my first real PR to the engine, I am particularly interested in constructive feedback and any discussion on the changes, the UX choices made, and any mistakes in code style that don't line up with the expectations of the project.\r\n\r\nI am also interested in what process there is for backporting such a change to the stable branch, as there shouldn't be anything in this PR to my limited knowledge that depends on 4.0.\r\n\r\nThe change is rather simple and leverages the existing setup of the connect dialog (selecting a method in the tree simply inputs that method name into the receiver method text field).\r\n\r\nChanges:\r\n- A new method tree is added to the signal connect dialog\r\n  - Appears in basic and advanced mode\r\n  - Tree is broken down by class in the hierarchy of the selected node\r\n  - If a script is attached, those methods appear at the top of the tree\r\n  - Search input updates the tree removing all entries that do not contain the searched string\r\n  - Classes with no methods after search has been applied are de-emphasized\r\n- Removal of the attached script check in basic mode (and the error when no nodes have attached scripts)\r\n  - As the new method list appears in basic mode, it didn't make sense for this behavior to remain\r\n- Move basic/advanced toggle to top alongside signal name\r\n  - Originally did this as I wasn't certain about whether I would show the receiver method input when the tree was visible (was considering putting the tree in advanced). It doesn't have to stay up there and can be reverted.\r\n\r\nUpdated screenshot:\r\n![image](https://user-images.githubusercontent.com/1129772/80322234-1dba9e80-8867-11ea-8f2c-fb7189b2940f.png)\r\n\r\nAdvanced mode:\r\n![image](https://user-images.githubusercontent.com/1129772/80322815-d46c4e00-886a-11ea-9d20-10706835e3e9.png)\r\n\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":408980841,"public_id":38210,"url":"https://github.com/godotengine/godot/pull/38210","diff_url":"https://github.com/godotengine/godot/pull/38210.diff","patch_url":"https://github.com/godotengine/godot/pull/38210.patch","title":"Add support for variable output latency in WASAPI audio driver","state":"open","is_draft":false,"authored_by":{"id":8124614,"user":"benjarmstrong","avater":"https://avatars.githubusercontent.com/u/8124614?v=4","url":"https://github.com/benjarmstrong"},"created_at":"2020-04-25T22:39:09Z","updated_at":"2021-05-04T10:25:00Z","body":"Fixed the audio 'output latency' project setting not appearing when using the WASAPI audio driver (see [#30562](https://github.com/godotengine/godot/issues/30562)). Added variable output latency support to the WASAPI audio driver for systems that support it.\r\n\r\n*Bugsquad edit: This closes #30562.*","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418392]},{"id":408967868,"public_id":38209,"url":"https://github.com/godotengine/godot/pull/38209","diff_url":"https://github.com/godotengine/godot/pull/38209.diff","patch_url":"https://github.com/godotengine/godot/pull/38209.patch","title":"Remove `SceneTree.change_scene()` in favor of `change_scene_to()`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-04-25T20:46:50Z","updated_at":"2021-08-12T22:36:27Z","body":"`change_scene()` was removed because it's stringly-typed, which means there is no way to display an error message until the project is run and the line is reached.\r\n\r\nThe same result can be obtained in a safe manner by using:\r\n\r\n```gdscript\r\nget_tree().change_scene_to(load(\"res://my_scene.tscn\"))\r\n```\r\n\r\nThis breaks compatibility with many existing projects, but the added safety is likely worth the trouble. It makes sense to do this for Godot 4.0 as we're trying to move away from stringly-typed APIs when reasonably feasible.\r\n\r\nThis change also makes it possible to remove some bespoke autocompletion code, since we now rely on `load()`/`preload()` autocompletion instead.\r\n\r\nThis closes #27640. This closes #31941.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":408964577,"public_id":38208,"url":"https://github.com/godotengine/godot/pull/38208","diff_url":"https://github.com/godotengine/godot/pull/38208.diff","patch_url":"https://github.com/godotengine/godot/pull/38208.patch","title":"Use the Dummy audio driver in the project manager","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-04-25T20:18:51Z","updated_at":"2021-05-06T00:55:06Z","body":"This prevents Godot from appearing in the list of applications outputting sound in the OS while the user is in the project manager.\n\nThis also partially addresses #38154.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":408292886,"public_id":38166,"url":"https://github.com/godotengine/godot/pull/38166","diff_url":"https://github.com/godotengine/godot/pull/38166.diff","patch_url":"https://github.com/godotengine/godot/pull/38166.patch","title":"Allow setting more precise values for navmesh baking","state":"open","is_draft":false,"authored_by":{"id":6967786,"user":"hammeron-art","avater":"https://avatars.githubusercontent.com/u/6967786?v=4","url":"https://github.com/hammeron-art"},"created_at":"2020-04-24T02:24:32Z","updated_at":"2021-08-06T11:24:33Z","body":"Tweak for navmesh parameter hints.\r\nMinimum values of 0.1 are too large considering a unit is 1 meter. Height of 0.1, for example, makes the agent appears to be floating above the ground.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":408030181,"public_id":38148,"url":"https://github.com/godotengine/godot/pull/38148","diff_url":"https://github.com/godotengine/godot/pull/38148.diff","patch_url":"https://github.com/godotengine/godot/pull/38148.patch","title":"VisualScript callable nodes not getting updated- Fix","state":"open","is_draft":false,"authored_by":{"id":41969735,"user":"theoway","avater":"https://avatars.githubusercontent.com/u/41969735?v=4","url":"https://github.com/theoway"},"created_at":"2020-04-23T16:22:44Z","updated_at":"2021-07-14T07:55:16Z","body":"Fixes #37173\r\n\r\n**Bug**:- VisualScript callable nodes were not getting updated when the properties\r\nof their corresponding visualscript function nodes were changed.\r\n**Reason**:- method_cache of the callable nodes was not getting updated when their corresponding function node was updated.\r\n\r\nBased on PR:-  #37872\r\nIn this PR, I've refactored the code, making it easier to debug.\r\n\r\n**Results:**\r\n![git_upload](https://user-images.githubusercontent.com/41969735/82762105-bd465f00-9e1c-11ea-8b7f-6dfd8688b906.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":419752642,"name":"topic:visualscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":407639324,"public_id":38125,"url":"https://github.com/godotengine/godot/pull/38125","diff_url":"https://github.com/godotengine/godot/pull/38125.diff","patch_url":"https://github.com/godotengine/godot/pull/38125.patch","title":"Added property_changed signal to editor_inspector","state":"open","is_draft":false,"authored_by":{"id":52541536,"user":"BigRed-118","avater":"https://avatars.githubusercontent.com/u/52541536?v=4","url":"https://github.com/BigRed-118"},"created_at":"2020-04-23T02:13:40Z","updated_at":"2021-01-05T00:59:37Z","body":"This allows for the editor_node to subscribe and update the node dock\r\nwhen the script editor property has changed. Previously, the singals\r\nlist in the node dock would not be updated until you reselect the node\r\nin the editor.\r\n\r\n#37783 ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":407367898,"public_id":38118,"url":"https://github.com/godotengine/godot/pull/38118","diff_url":"https://github.com/godotengine/godot/pull/38118.diff","patch_url":"https://github.com/godotengine/godot/pull/38118.patch","title":"Add a GDScript cache singleton","state":"open","is_draft":true,"authored_by":{"id":5599796,"user":"vnen","avater":"https://avatars.githubusercontent.com/u/5599796?v=4","url":"https://github.com/vnen"},"created_at":"2020-04-22T15:32:12Z","updated_at":"2021-08-06T11:24:33Z","body":"This singleton is able to cache partially compiled scripts and is independent of the resource loader, which allows cyclic dependencies to be properly resolved.\r\n\r\nThere's still one problem here: stuff never get out of the cache. I thought there was a safe place to clear it but I was wrong, so it needs a better solution. If someone wants to contribute a way to do it safely I will be glad, but I've been working in this too long that isn't good for my head to keep thinking on it, so I'll pass it on to the community.\r\n\r\nI've been testing this with a real-world project, but I think it needs some more testing to be confident it's working properly.\r\n\r\nFix #21461\r\nFix #27136","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183]},{"id":407244641,"public_id":38107,"url":"https://github.com/godotengine/godot/pull/38107","diff_url":"https://github.com/godotengine/godot/pull/38107.diff","patch_url":"https://github.com/godotengine/godot/pull/38107.patch","title":"Fix Animation Playback Track not seeking properly","state":"open","is_draft":false,"authored_by":{"id":11552304,"user":"EspeuteClement","avater":"https://avatars.githubusercontent.com/u/11552304?v=4","url":"https://github.com/EspeuteClement"},"created_at":"2020-04-22T12:01:54Z","updated_at":"2021-03-20T01:24:04Z","body":"This is a fix for the issue https://github.com/godotengine/godot/issues/38093\r\nThis fix has been tested in both the master and the 3.2 branch.\r\n\r\nThe fix is in two parts :\r\n1. A typo where a MAX function was used instead of a MIN function\r\n2. Forcing the animation to play from the start when the first Key of the animation is encountered","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":406705119,"public_id":38080,"url":"https://github.com/godotengine/godot/pull/38080","diff_url":"https://github.com/godotengine/godot/pull/38080.diff","patch_url":"https://github.com/godotengine/godot/pull/38080.patch","title":"Small UI fixes","state":"open","is_draft":false,"authored_by":{"id":1387165,"user":"guilhermefelipecgs","avater":"https://avatars.githubusercontent.com/u/1387165?v=4","url":"https://github.com/guilhermefelipecgs"},"created_at":"2020-04-21T14:18:36Z","updated_at":"2020-09-02T19:40:19Z","body":"- [GraphEdit] Fix box_selecting_rect not clearing after mose release.\r\n- [ViewportRotationControl] Fix rotation control not updating for camera preview.\r\n- [Node3DEditorViewport] Set hide_on_checkable_item_selection to false for view menu.\r\n- [Node3DEditorViewport] Add correct margin for rotation control and fps label.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":406205287,"public_id":38051,"url":"https://github.com/godotengine/godot/pull/38051","diff_url":"https://github.com/godotengine/godot/pull/38051.diff","patch_url":"https://github.com/godotengine/godot/pull/38051.patch","title":"Document the Cubemap class","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-04-20T17:42:02Z","updated_at":"2020-09-02T19:40:20Z","body":"The documentation was partly ported over from Godot 3.2. I also added a note about skies, for those looking to use cubemap skies (as it may appear in the class reference search).\r\n\r\n**Note:** Not eligible for cherry-picking, as Cubemap was added in 4.0.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":406098661,"public_id":38044,"url":"https://github.com/godotengine/godot/pull/38044","diff_url":"https://github.com/godotengine/godot/pull/38044.diff","patch_url":"https://github.com/godotengine/godot/pull/38044.patch","title":"[macOS] Add missing global menu features, use native menu for editor.","state":"open","is_draft":false,"authored_by":{"id":7645683,"user":"bruvzg","avater":"https://avatars.githubusercontent.com/u/7645683?v=4","url":"https://github.com/bruvzg"},"created_at":"2020-04-20T14:27:46Z","updated_at":"2021-08-13T05:16:44Z","body":"**Adds missing global menu features:**\r\n - [x] Multi-State / Radio check items.\r\n - [x] Metadata.\r\n - [x] ToolTips.\r\n - [x] Enabled/Disabled items.\r\n - [x] Shortcuts.\r\n - [x] Icons (due to OS limitations not support in dock menus).\r\n\r\n**Adds option to use existing `PopupMenu`s in global menu.**\r\nGlobal menu tracks `PopupMenu` changes and submenus and send back item activation events.\r\n\r\n**Duplicates editor main menu as macOS native menu.**\r\n\r\n<img width=\"1062\" alt=\"editor_screenshot\" src=\"https://user-images.githubusercontent.com/7645683/79966900-c4352700-8496-11ea-9943-7360503974a8.png\">\r\n\r\nDemo project (live menu editor): [menu_test.zip](https://github.com/godotengine/godot/files/4515213/menu_test.zip)\r\n\r\n<img width=\"1062\" alt=\"menu_test_screenshot\" src=\"https://user-images.githubusercontent.com/7645683/79966697-7ae4d780-8496-11ea-9e73-3ed5e34c74ab.png\">\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,4418733]},{"id":405600684,"public_id":37998,"url":"https://github.com/godotengine/godot/pull/37998","diff_url":"https://github.com/godotengine/godot/pull/37998.diff","patch_url":"https://github.com/godotengine/godot/pull/37998.patch","title":"Replaced SpinBox nodes with EditorSpinSlider nodes for better Snap Config","state":"open","is_draft":false,"authored_by":{"id":11083747,"user":"elijahscherz","avater":"https://avatars.githubusercontent.com/u/11083747?v=4","url":"https://github.com/elijahscherz"},"created_at":"2020-04-19T04:05:30Z","updated_at":"2020-09-02T19:40:21Z","body":"Working towards Snap Config dialog box improvements requested in #13966.\r\n\r\nThe main idea is replacing the `SpinBox` nodes with `EditorSpinSlider` nodes to allow drag setting and a nicer interface.\r\n\r\nPrevious -\r\n![image](https://user-images.githubusercontent.com/11083747/79679037-3e805580-81d0-11ea-812c-25b3daa52b9d.png)\r\n\r\nAfter changes - \r\n![image](https://user-images.githubusercontent.com/11083747/79679045-5526ac80-81d0-11ea-90cd-fc0da16bcb34.png)\r\n\r\nHowever, I anticipate needing to make adjustments for this solution. This currently uses `EditorSpinSlider` nodes, but _does not_ have an EditorInspector associated with it, which seems like it might be a misuse of the node. (Though it does seem to function and sets the config values.)\r\n\r\n**I will happily make changes to this, but just need a small example code snippet showing how I could more properly network the slider nodes.**","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":405555658,"public_id":37995,"url":"https://github.com/godotengine/godot/pull/37995","diff_url":"https://github.com/godotengine/godot/pull/37995.diff","patch_url":"https://github.com/godotengine/godot/pull/37995.patch","title":"Make Node3DEditorPlugin viewport always be an odd number in size","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-04-18T20:28:04Z","updated_at":"2021-08-10T20:33:17Z","body":"Mitigates and/or fixes #37016. The code is written such that the SubViewportContainer behavior is the same as it is currently when `odd_size_only` is false.\r\n\r\nThere might be a better solution, but I'm not seeing one. In order to have a 1 pixel think line and have it be in the middle, the size needs to be an odd number so that there is a middle pixel.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550,4418733]},{"id":405314078,"public_id":37969,"url":"https://github.com/godotengine/godot/pull/37969","diff_url":"https://github.com/godotengine/godot/pull/37969.diff","patch_url":"https://github.com/godotengine/godot/pull/37969.patch","title":"Update label's character count to include space count","state":"open","is_draft":false,"authored_by":{"id":44125143,"user":"elizaho","avater":"https://avatars.githubusercontent.com/u/44125143?v=4","url":"https://github.com/elizaho"},"created_at":"2020-04-17T19:57:24Z","updated_at":"2021-01-20T05:27:50Z","body":"Label now counts spaces in get_total_character_count().\r\n\r\n![Capture](https://user-images.githubusercontent.com/44125143/79611484-bc593980-80c8-11ea-94c8-edcc79332a1c.PNG)\r\nLabel and RichTextLabel have consistent character count when spaces are included in the text.\r\n\r\nFixes #27896.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":404746967,"public_id":37945,"url":"https://github.com/godotengine/godot/pull/37945","diff_url":"https://github.com/godotengine/godot/pull/37945.diff","patch_url":"https://github.com/godotengine/godot/pull/37945.patch","title":"exposing AnimationNodeOneShot::mix_mode","state":"open","is_draft":false,"authored_by":{"id":7921065,"user":"IllusiveS","avater":"https://avatars.githubusercontent.com/u/7921065?v=4","url":"https://github.com/IllusiveS"},"created_at":"2020-04-16T21:23:28Z","updated_at":"2021-02-25T15:54:06Z","body":"fixes #23458","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":404531598,"public_id":37938,"url":"https://github.com/godotengine/godot/pull/37938","diff_url":"https://github.com/godotengine/godot/pull/37938.diff","patch_url":"https://github.com/godotengine/godot/pull/37938.patch","title":"Make operator= more C++ compliant","state":"open","is_draft":false,"authored_by":{"id":4844306,"user":"ntfshard","avater":"https://avatars.githubusercontent.com/u/4844306?v=4","url":"https://github.com/ntfshard"},"created_at":"2020-04-16T16:50:51Z","updated_at":"2021-03-25T16:15:32Z","body":"[Copy assignment operator](https://en.cppreference.com/w/cpp/language/copy_assignment) should return reference to object.","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":404272558,"public_id":37932,"url":"https://github.com/godotengine/godot/pull/37932","diff_url":"https://github.com/godotengine/godot/pull/37932.diff","patch_url":"https://github.com/godotengine/godot/pull/37932.patch","title":"Modified time fix for PCK files","state":"open","is_draft":false,"authored_by":{"id":51226895,"user":"IlyaStuurFedorov","avater":"https://avatars.githubusercontent.com/u/51226895?v=4","url":"https://github.com/IlyaStuurFedorov"},"created_at":"2020-04-16T10:42:52Z","updated_at":"2021-01-20T06:55:07Z","body":"This is a fix [for this issue](https://github.com/godotengine/godot/issues/35179).\r\n\r\n*Bugsquad edit:* Fixes #35179.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":403336453,"public_id":37880,"url":"https://github.com/godotengine/godot/pull/37880","diff_url":"https://github.com/godotengine/godot/pull/37880.diff","patch_url":"https://github.com/godotengine/godot/pull/37880.patch","title":"Improved Area3D damping override","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2020-04-14T18:09:18Z","updated_at":"2021-01-22T16:49:22Z","body":"Changes discussed in https://github.com/godotengine/godot/pull/37316#discussion_r408180505\r\n\r\nRigidBody3D and PhysicalBone3D damping is now non-negative.\r\nArea3D can override RigidBody3D damping values, not the other way around.\r\n\r\nIt's already how it works in Bullet, so the way damping is implemented had to be changed only in Godot Physics 3D.\r\n\r\nCC @AndreaCatania ","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":402639807,"public_id":37847,"url":"https://github.com/godotengine/godot/pull/37847","diff_url":"https://github.com/godotengine/godot/pull/37847.diff","patch_url":"https://github.com/godotengine/godot/pull/37847.patch","title":"Enable anisotropic filtering for 3D materials by default on desktop platforms","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-04-13T13:17:43Z","updated_at":"2021-08-16T03:34:22Z","body":"This results in better appearance for textures viewed from oblique angles. Many other engines now enable it by default. On today's desktop platforms, the performance impact is minimal if other effects are already taxing the GPU.\r\n\r\nThe anisotropic filtering quality can be configured as usual in the Project Settings. Setting it to 1 should disable it even if individual materials have it enabled, so this is easy to revert if you don't want it.\r\n\r\nI see screenshots of Godot projects not using anisotropic filtering too often – let's change that! :slightly_smiling_face: \r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/3134.\r\n\r\n## Preview\r\n\r\n*I used [this Sponza demo](https://github.com/Calinou/godot-sponza-4) for the screenshots. Click to view at full size, look at the floor.*\r\n\r\n### Before\r\n\r\n![aniso_off](https://user-images.githubusercontent.com/180032/79124530-cc0d1100-7d9c-11ea-8d5a-61b17bd9e1ee.png)\r\n\t\r\n### After\r\n\r\n*Note: the screenshot below uses 4× anisotropic filtering, not 8× which is the new default on desktop platforms.*\r\n\r\n![aniso_on](https://user-images.githubusercontent.com/180032/79123301-248edf00-7d9a-11ea-8294-c34871868f7a.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3609449,4418914]},{"id":402577037,"public_id":37842,"url":"https://github.com/godotengine/godot/pull/37842","diff_url":"https://github.com/godotengine/godot/pull/37842.diff","patch_url":"https://github.com/godotengine/godot/pull/37842.patch","title":"Swap args of Plane(point, normal) constructor","state":"open","is_draft":false,"authored_by":{"id":12477395,"user":"MennoMax","avater":"https://avatars.githubusercontent.com/u/12477395?v=4","url":"https://github.com/MennoMax"},"created_at":"2020-04-13T10:14:56Z","updated_at":"2021-07-13T14:38:24Z","body":"Swapped args of the plane constructor for more consistency, as requested in https://github.com/godotengine/godot/pull/35698#issuecomment-612699821","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449,4417777,4418550,4418726,4418914,4418923]},{"id":402468734,"public_id":37836,"url":"https://github.com/godotengine/godot/pull/37836","diff_url":"https://github.com/godotengine/godot/pull/37836.diff","patch_url":"https://github.com/godotengine/godot/pull/37836.patch","title":"Operator overloading implemented in GDScript","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-04-13T04:40:38Z","updated_at":"2020-09-02T19:40:26Z","body":"## Motivation\r\nGDScript already have some operator overloading [setget](https://docs.godotengine.org/en/latest/getting_started/scripting/gdscript/gdscript_basics.html#setters-getters), [_to_string](https://docs.godotengine.org/en/latest/classes/class_object.html#class-object-method-to-string), [custom iterators](https://docs.godotengine.org/en/latest/getting_started/scripting/gdscript/gdscript_advanced.html#custom-iterators) but it's incomplete without overloading other basic operators. And having them is more object oriented way to provide a clean code base of godot.\r\n `a.multiply(b).add(a.divide(b))` can be written as `(a * b) + (a / b)`\r\n\r\n## Detail\r\n**EDIT: every overload behaves like in python 3 since my last commit**\r\n\r\nIf an operator ( binary or unaray ) is called with **at least one** `Variant::OBJECT` type it'll call the operator overloading method if exists, `o1 + o2`  is equivalent to `o1._add(o2)` like [python's magic methods](https://rszalski.github.io/magicmethods/). with the implementation I've included 2 concepts of overloading\r\n**1. reflection:** \r\n case `o1 + o2` -> it'll check `o1._add(o2)` if the method not exists check `o2._radd(o1)`\r\n**2. delegance:**\r\n since the rich comparison removed from python 2.7 for some reason, I've removed it from my last commit and now it only use delegance for `==` and `!=` (`a != b` is equ `!(a==b)` and vice versa) just like python 3\r\n\r\n## Parsing, Type checking & Error handling\r\nEvery comparison operator overloading returns boolean, and unaray operation can't contains any argument, binary operation must contain 2 arguments and the type, and return type could be dynamic variant or static type, if a it's a binary operation and not comparison try reflection for overload existence check. These grammars have added to the parser, and violation of the above rules makes parser errors.\r\n\r\n## Usage\r\n```gdscript\r\nclass Vect:\r\n\tvar x:float = 0;\r\n\tvar y:float = 0;\r\n\t\r\n\tstatic func new_vect(x:float, y:float)->Vect:\r\n\t\tvar ret:Vect = Vect.new();\r\n\t\tret.x = x; ret.y = y;\r\n\t\treturn ret;\r\n\r\n\tfunc _to_string():\r\n\t\treturn 'Vect(' + str(x) + ', ' + str(y) + ')'\r\n\t\r\n\tfunc _add(other:Vect)->Vect:\r\n\t\treturn new_vect(x + other.x, y + other.y)\r\n\t\r\n\tfunc _mul(other:Vect)->Vect:\r\n\t\treturn new_vect(x * other.x, y * other.y)\r\n\t\r\n\tfunc _negate()->Vect:\r\n\t\treturn new_vect(-x, -y)\r\n\r\nvar v1 := Vect.new_vect(1, 2)\r\nvar v2 := Vect.new_vect(3, 4)\r\n\r\nfunc _ready():\r\n\tprint(' v1 = ', v1)\r\n\tprint(' v2 = ', v2, '\\n')\r\n\tprint(' v1 + v2  = ', v1 + v2)\r\n\tprint(' v1 * v2  = ', v1 * v2)\r\n\tprint('-v1 + v2  = ', -v1 + v2)\r\n```\r\noutput\r\n```\r\n--- Debugging process started ---\r\nGodot Engine v4.0.dev.custom_build.385d17703 - https://godotengine.org\r\n \r\n v1 = Vect(1, 2)\r\n v2 = Vect(3, 4)\r\n\r\n v1 + v2  = Vect(4, 6)\r\n v1 * v2  = Vect(3, 8)\r\n-v1 + v2  = Vect(2, 2)\r\n```\r\n","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":402415218,"public_id":37833,"url":"https://github.com/godotengine/godot/pull/37833","diff_url":"https://github.com/godotengine/godot/pull/37833.diff","patch_url":"https://github.com/godotengine/godot/pull/37833.patch","title":"Created function that returns whether an action is being triggered or not","state":"open","is_draft":false,"authored_by":{"id":37383316,"user":"Muller-Castro","avater":"https://avatars.githubusercontent.com/u/37383316?v=4","url":"https://github.com/Muller-Castro"},"created_at":"2020-04-12T23:30:13Z","updated_at":"2021-01-05T00:59:33Z","body":"This can be useful to replace some codes like:\r\n\r\n`if not Input.is_action_pressed(\"x\") and`\r\n`not Input.is_action_pressed(\"y\") and`\r\n`not Input.is_action_pressed(\"z\"):`\r\n`pass`","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":402035014,"public_id":37771,"url":"https://github.com/godotengine/godot/pull/37771","diff_url":"https://github.com/godotengine/godot/pull/37771.diff","patch_url":"https://github.com/godotengine/godot/pull/37771.patch","title":"Reimplement MenuButton::switch_on_hover","state":"open","is_draft":false,"authored_by":{"id":1387165,"user":"guilhermefelipecgs","avater":"https://avatars.githubusercontent.com/u/1387165?v=4","url":"https://github.com/guilhermefelipecgs"},"created_at":"2020-04-10T19:18:51Z","updated_at":"2020-09-02T19:40:28Z","body":"Fix partially #37531. We still have some focus problems.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":402002007,"public_id":37765,"url":"https://github.com/godotengine/godot/pull/37765","diff_url":"https://github.com/godotengine/godot/pull/37765.diff","patch_url":"https://github.com/godotengine/godot/pull/37765.patch","title":"control node global rect scale fix","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-04-10T17:45:01Z","updated_at":"2021-03-20T01:17:22Z","body":"fix: https://godotengine.org/qa/66963/how-get-the-scaled-rect-of-control-node-the-child-of-node2d-is control node `get_global_rect()` returns global position and local size\r\n\r\nsteps to reproduce:\r\n- create scene tree like in the picture\r\n- set `Node2D2` scale to `.5, .5`\r\n- attach the script to both color rect\r\n```gdscript\r\nfunc _ready():\r\n\tprint( name, ' local_size  : ', get_rect().size )\r\n\tprint( name, ' global_size : ', get_global_rect().size )\r\n```\r\n![rect size](https://user-images.githubusercontent.com/41085900/79011004-bae7b880-7b80-11ea-8e7c-faa5cf7d3039.JPG)\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":401998539,"public_id":37764,"url":"https://github.com/godotengine/godot/pull/37764","diff_url":"https://github.com/godotengine/godot/pull/37764.diff","patch_url":"https://github.com/godotengine/godot/pull/37764.patch","title":"Properly handle game pause in VideoPlayer","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-04-10T17:34:20Z","updated_at":"2021-01-05T00:59:25Z","body":"Fixes #33702","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":401871323,"public_id":37754,"url":"https://github.com/godotengine/godot/pull/37754","diff_url":"https://github.com/godotengine/godot/pull/37754.diff","patch_url":"https://github.com/godotengine/godot/pull/37754.patch","title":"implement EventGesturePan,Pinch,Twist - OS agnostic (3.x)","state":"open","is_draft":false,"authored_by":{"id":14182,"user":"jeremyz","avater":"https://avatars.githubusercontent.com/u/14182?v=4","url":"https://github.com/jeremyz"},"created_at":"2020-04-10T11:25:01Z","updated_at":"2021-08-06T11:24:33Z","body":"this is shamelessy inspired by Federico-Ciuffardi's job on #36953\r\n\r\nI have some ideas to implement thresholds to limit the amount of\r\nemitted events but it will be implemented later.\r\n\r\nthis to be linked to #13139","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[1828783,3112904,3112909,4418542,4418558,4418726,4418733,4418914]},{"id":401868072,"public_id":37753,"url":"https://github.com/godotengine/godot/pull/37753","diff_url":"https://github.com/godotengine/godot/pull/37753.diff","patch_url":"https://github.com/godotengine/godot/pull/37753.patch","title":"Small speedup and adding more missing description messages for consistency.","state":"open","is_draft":false,"authored_by":{"id":11459028,"user":"Anutrix","avater":"https://avatars.githubusercontent.com/u/11459028?v=4","url":"https://github.com/Anutrix"},"created_at":"2020-04-10T11:14:20Z","updated_at":"2021-03-25T16:49:53Z","body":"Prevents tiny recomputations for replaces and concatenation.\r\nAlso adds missing description for signals, enums and constants similar to that of methods and properties.\r\nBefore:\r\n![Screenshot (676)](https://user-images.githubusercontent.com/11459028/82200571-cd41d880-991c-11ea-90ac-228770f5d5d5.png)\r\nAfter:\r\n![Screenshot (677)](https://user-images.githubusercontent.com/11459028/82201081-72f54780-991d-11ea-8af9-bbb16473909c.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":401865987,"public_id":37751,"url":"https://github.com/godotengine/godot/pull/37751","diff_url":"https://github.com/godotengine/godot/pull/37751.diff","patch_url":"https://github.com/godotengine/godot/pull/37751.patch","title":"Editor Debugger: auto scrolling is activated at every log start.","state":"open","is_draft":false,"authored_by":{"id":7107228,"user":"dankan1890","avater":"https://avatars.githubusercontent.com/u/7107228?v=4","url":"https://github.com/dankan1890"},"created_at":"2020-04-10T11:07:15Z","updated_at":"2020-10-01T12:05:25Z","body":"","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":400993146,"public_id":37701,"url":"https://github.com/godotengine/godot/pull/37701","diff_url":"https://github.com/godotengine/godot/pull/37701.diff","patch_url":"https://github.com/godotengine/godot/pull/37701.patch","title":"Prevent atlas from being set recursively in AtlasTexture and fix typo…","state":"open","is_draft":false,"authored_by":{"id":11459028,"user":"Anutrix","avater":"https://avatars.githubusercontent.com/u/11459028?v=4","url":"https://github.com/Anutrix"},"created_at":"2020-04-08T17:55:03Z","updated_at":"2020-10-12T20:29:05Z","body":"… in the similar error message of font.cpp.\r\nThx to @Zylann for helping me use implicit conversion.\r\nFixes #26939's 2nd half.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":400736169,"public_id":37684,"url":"https://github.com/godotengine/godot/pull/37684","diff_url":"https://github.com/godotengine/godot/pull/37684.diff","patch_url":"https://github.com/godotengine/godot/pull/37684.patch","title":"continue in match makes the control flow fallthrough implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-04-08T09:32:53Z","updated_at":"2020-09-02T19:40:32Z","body":"Fix: https://github.com/godotengine/godot-proposals/issues/160\r\n![continue-match](https://user-images.githubusercontent.com/41085900/78768700-ebc1c500-79a9-11ea-9de8-c7a1077a8261.JPG)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":400696815,"public_id":37680,"url":"https://github.com/godotengine/godot/pull/37680","diff_url":"https://github.com/godotengine/godot/pull/37680.diff","patch_url":"https://github.com/godotengine/godot/pull/37680.patch","title":"[3.x] Editor Debugger: auto scrolling is activated at every log start.","state":"open","is_draft":false,"authored_by":{"id":7107228,"user":"dankan1890","avater":"https://avatars.githubusercontent.com/u/7107228?v=4","url":"https://github.com/dankan1890"},"created_at":"2020-04-08T08:13:00Z","updated_at":"2021-08-06T11:24:33Z","body":"Fix #37476\r\n\r\n**Note**: for the master branch I can't test if it works (godot crashes at the start) and the changes are not entirely compatible, given the different structure of the current debugger.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4418605]},{"id":399886859,"public_id":37641,"url":"https://github.com/godotengine/godot/pull/37641","diff_url":"https://github.com/godotengine/godot/pull/37641.diff","patch_url":"https://github.com/godotengine/godot/pull/37641.patch","title":"Hide .import folder from EditorFileDialog","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-04-06T20:26:13Z","updated_at":"2020-09-02T19:40:33Z","body":"Resolves #37638","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":399495279,"public_id":37626,"url":"https://github.com/godotengine/godot/pull/37626","diff_url":"https://github.com/godotengine/godot/pull/37626.diff","patch_url":"https://github.com/godotengine/godot/pull/37626.patch","title":"Print warnings when using a Rect2 or AABB with a negative size","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-04-06T09:11:51Z","updated_at":"2021-08-14T15:45:54Z","body":"Fixes #23711, fixes #25829, fixes #37617 (or at the very least, mitigates them by showing a warning).\r\n\r\nOne idea mentioned in #37617 is to make the code in Rect2 automatically correct this, but that would be bad for a number of reasons, including performance and the fact that `abs()` might not actually be the desired solution. I think the best idea is to print a warning, letting the user know something's up.\r\n\r\nNote 1: I didn't actually test if the warnings show up *specifically* for each of the above bugs, but I would be surprised if they didn't (and if so, they can just be re-opened).\r\n\r\nNote 2: I noticed that there were a few typos of `Point2` being used in place of `Point2i`, I fixed them.\r\n\r\nPart of this is mutually exclusive with #38310, so if this is merged then #38310 should be closed.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":397863684,"public_id":37540,"url":"https://github.com/godotengine/godot/pull/37540","diff_url":"https://github.com/godotengine/godot/pull/37540.diff","patch_url":"https://github.com/godotengine/godot/pull/37540.patch","title":"Fix TextEdit color regions with conflicting delimiters","state":"open","is_draft":false,"authored_by":{"id":7718100,"user":"neikeq","avater":"https://avatars.githubusercontent.com/u/7718100?v=4","url":"https://github.com/neikeq"},"created_at":"2020-04-02T23:50:16Z","updated_at":"2020-09-02T19:40:34Z","body":"Now we properly support multiple color regions that may use the same delimiter,\r\nfor example:\r\n- `@\" \"`: C# verbatim string.\r\n- `R\" \"`: Python and C++ raw string.\r\n\r\nAdded back C# verbatim string literal delimiters for syntax highlighting.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":397188646,"public_id":37506,"url":"https://github.com/godotengine/godot/pull/37506","diff_url":"https://github.com/godotengine/godot/pull/37506.diff","patch_url":"https://github.com/godotengine/godot/pull/37506.patch","title":"Improve editor popups with multiple screens","state":"open","is_draft":false,"authored_by":{"id":45542433,"user":"giarve","avater":"https://avatars.githubusercontent.com/u/45542433?v=4","url":"https://github.com/giarve"},"created_at":"2020-04-01T19:28:59Z","updated_at":"2020-09-02T19:40:35Z","body":"Hopefully this PR will be able to fix multi-screen support.\r\n\r\nFixes #37320\r\nFixes #38591 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":397060790,"public_id":37498,"url":"https://github.com/godotengine/godot/pull/37498","diff_url":"https://github.com/godotengine/godot/pull/37498.diff","patch_url":"https://github.com/godotengine/godot/pull/37498.patch","title":"[3.x] Fix multiple issues with test_body_motion() and test_body_ray_separaton().","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-04-01T15:15:52Z","updated_at":"2021-08-06T11:24:33Z","body":"This is a the 3.2 branch version of PR #35945.\r\n\r\nI've created this because #34098, #34436, #34596, #35713 and #35780 are regression issues from 3.1 and since master has changed so much, #35945 is no longer cherry-pickable.\r\n\r\nUpdate:\r\nNow includes additional fixes added to #35945 for #17893, #18433, #26550, #28717 and #32182.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4417777,4418726]},{"id":396889850,"public_id":37489,"url":"https://github.com/godotengine/godot/pull/37489","diff_url":"https://github.com/godotengine/godot/pull/37489.diff","patch_url":"https://github.com/godotengine/godot/pull/37489.patch","title":"Improving code around \"Change Type\" tool to better respect scripts.","state":"open","is_draft":false,"authored_by":{"id":1072924,"user":"mason-bially","avater":"https://avatars.githubusercontent.com/u/1072924?v=4","url":"https://github.com/mason-bially"},"created_at":"2020-04-01T10:00:08Z","updated_at":"2020-09-02T19:40:35Z","body":"An improved fix for #37479 (Change Type does nothing for script \"classes\")\r\n\r\nA portion of the code in `Node::replace_by` is vestigial and does not actually do anything (besides looping over all properties and calling `get`), both it and the other portion is identical to what was in `SceneTreeDock::replace_node`. I have refactored the working code of `replace_node` in to `replace_by`. I suspect this duplication/copy code should actually be moved even further down the tree into Object (because it is responsible for properties, and the skipping scripts and metadata would make sense in the class responsible for those things).\r\n\r\nI then elevated the concern of what script the resulting node should have to the \"Change Type\" code of SceneTreeDock, this seems like the more relevant location to make that decision. The decision is straight forward, if the new type has a script it uses that, if the old node has a script it uses that, then it gives up and uses nothing. This seems to give the best behavior for common use cases.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":396019036,"public_id":37451,"url":"https://github.com/godotengine/godot/pull/37451","diff_url":"https://github.com/godotengine/godot/pull/37451.diff","patch_url":"https://github.com/godotengine/godot/pull/37451.patch","title":"SpriteFrames::add_spritesheet_animation() implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-31T02:16:22Z","updated_at":"2020-09-02T19:40:36Z","body":"The animated sprite is all about sprite sheet frame animation, but It's only possible to add frames from a single sprite sheet texture by the animated sprite editor plugin (add frame from a sprite sheet), using gdscript to animate a sprite sheet with animated sprite seems a bit harder, so I've implemented a method to do so.\r\n\r\n![spritesheet](https://user-images.githubusercontent.com/41085900/77979543-8bd07c00-7322-11ea-9e24-1a4ff7b7822e.jpg)\r\n\r\n![animated-sprite-gdscript](https://user-images.githubusercontent.com/41085900/77979737-1b762a80-7323-11ea-99fb-58f8288b499f.JPG)\r\n\r\n![animated_sprite](https://user-images.githubusercontent.com/41085900/77979756-2cbf3700-7323-11ea-9a58-e56e28b5fa82.gif)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":395376694,"public_id":37419,"url":"https://github.com/godotengine/godot/pull/37419","diff_url":"https://github.com/godotengine/godot/pull/37419.diff","patch_url":"https://github.com/godotengine/godot/pull/37419.patch","title":"Fix ColorPicker custom constants not having effect","state":"open","is_draft":false,"authored_by":{"id":23119524,"user":"SkyLucilfer","avater":"https://avatars.githubusercontent.com/u/23119524?v=4","url":"https://github.com/SkyLucilfer"},"created_at":"2020-03-30T02:59:11Z","updated_at":"2021-08-04T19:07:12Z","body":"Fix #36761\r\n\r\n![ColorPickerBug](https://user-images.githubusercontent.com/23119524/77870983-1cd02600-7243-11ea-9d8f-2337a5cdc11e.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":395082298,"public_id":37376,"url":"https://github.com/godotengine/godot/pull/37376","diff_url":"https://github.com/godotengine/godot/pull/37376.diff","patch_url":"https://github.com/godotengine/godot/pull/37376.patch","title":"Warn when setting a scale that has a negative X component in 2D","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2020-03-28T11:25:15Z","updated_at":"2021-08-10T20:48:06Z","body":"Due to the way scale is represented with Transform2D, negative scales on the X axis will be changed to negative scales on the Y axis plus a rotation of 180 degrees when decomposed.\r\n\r\nBecause of this, we should show a warning. Fixes #17405 and its duplicates #21020, #21849, and #42219.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418718,4418914]},{"id":394322903,"public_id":37324,"url":"https://github.com/godotengine/godot/pull/37324","diff_url":"https://github.com/godotengine/godot/pull/37324.diff","patch_url":"https://github.com/godotengine/godot/pull/37324.patch","title":"GDScript load() with relative path fixed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-26T17:47:34Z","updated_at":"2021-02-15T00:59:18Z","body":"Fix: #35832\r\n\r\n![load-rel-path](https://user-images.githubusercontent.com/41085900/77678938-e92d9b80-6fb7-11ea-854d-bd7e1aa66937.JPG)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":393620485,"public_id":37296,"url":"https://github.com/godotengine/godot/pull/37296","diff_url":"https://github.com/godotengine/godot/pull/37296.diff","patch_url":"https://github.com/godotengine/godot/pull/37296.patch","title":"Fixed WM_DELETE flag being set too late","state":"open","is_draft":false,"authored_by":{"id":6501975,"user":"Ev1lbl0w","avater":"https://avatars.githubusercontent.com/u/6501975?v=4","url":"https://github.com/Ev1lbl0w"},"created_at":"2020-03-25T14:27:50Z","updated_at":"2021-08-06T11:24:33Z","body":"Re-implementation of #37247 for the `3.2` branch.\r\n\r\nThe code structure is very different from the `master`, making it harder to implement *(because the window is being created in the `ContextGL_X11` and not `OS_X11`, and to fix this I need to have access to the `wm_delete` atom from `OS_X11`)*\r\n\r\nI made it so this atom has to be passed to the `initialize` method. I don't yet know much about Godot's codestyle and/or how you solve problems like these, so feel free to modify the code to a more pleasant solution.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3112907]},{"id":393335280,"public_id":37285,"url":"https://github.com/godotengine/godot/pull/37285","diff_url":"https://github.com/godotengine/godot/pull/37285.diff","patch_url":"https://github.com/godotengine/godot/pull/37285.patch","title":"Fix: ItemList selection bug && navigation bug","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-25T01:27:20Z","updated_at":"2020-09-02T19:40:39Z","body":"Fix: #37277\r\nFix: ItemList navigation with disabled items\r\n\r\n![list-item-nav](https://user-images.githubusercontent.com/41085900/77491271-511e9d80-6e63-11ea-9c8f-9d2b5cf35094.gif)\r\n\r\nAs far I know `items[i].selectable` and `!items[i].disabled` are interchangeable here. I think we should use disabled only for rendering stuff and selected for selection. \r\nhttps://github.com/godotengine/godot/blob/e9ecb06cf36fbf1f9174a3c4727416194d60d7aa/scene/gui/item_list.cpp#L266\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":392699005,"public_id":37263,"url":"https://github.com/godotengine/godot/pull/37263","diff_url":"https://github.com/godotengine/godot/pull/37263.diff","patch_url":"https://github.com/godotengine/godot/pull/37263.patch","title":"Set correct RW locks in AnimatedTexture","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-23T23:49:42Z","updated_at":"2021-03-20T01:17:55Z","body":"One method had incorrect type of lock, the other was missing it at all.\r\nI am also wondering, whether `_update_proxy` shouldn't also be fixed with Write-type of lock, as there are updates to internals of `AnimatedTexture` in it\r\n\r\n```c++\r\nvoid AnimatedTexture::_update_proxy() {\r\n\r\n\tRWLockRead r(rw_lock); //<- is that one correct? \r\n                 //  Shouldn't it be RWLockWrite, as there are some modification of internal properties here\r\n\r\n\tfloat delta;\r\n\tif (prev_ticks == 0) {\r\n\t\tdelta = 0;\r\n\t\tprev_ticks = OS::get_singleton()->get_ticks_usec(); //<- UPDATE HERE\r\n\t} else {\r\n\t\tuint64_t ticks = OS::get_singleton()->get_ticks_usec();\r\n\t\tdelta = float(double(ticks - prev_ticks) / 1000000.0);\r\n\t\tprev_ticks = ticks; // <- UPDATE HERE\r\n\t}\r\n\r\n\ttime += delta;  //<- UPDATE HERE\r\n\r\n\tfloat limit;\r\n\r\n\tif (fps == 0) {\r\n\t\tlimit = 0;\r\n\t} else {\r\n\t\tlimit = 1.0 / fps;\r\n\t}\r\n\r\n\tint iter_max = frame_count;\r\n\twhile (iter_max) {\r\n\t\tfloat frame_limit = limit + frames[current_frame].delay_sec;\r\n\r\n\t\tif (time > frame_limit) {\r\n\t\t\tcurrent_frame++;  //<- UPDATE HERE\r\n\t\t\tif (current_frame >= frame_count) {\r\n\t\t\t\tcurrent_frame = 0;  //<- UPDATE HERE\r\n\t\t\t}\r\n\t\t\ttime -= frame_limit;  //<- UPDATE HERE\r\n\t\t} else {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\titer_max--;\r\n\t}\r\n\r\n\tif (frames[current_frame].texture.is_valid()) {\r\n\t\tVisualServer::get_singleton()->texture_proxy_update(proxy, frames[current_frame].texture->get_rid());\r\n\t}\r\n}\r\n```","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":392461667,"public_id":37253,"url":"https://github.com/godotengine/godot/pull/37253","diff_url":"https://github.com/godotengine/godot/pull/37253.diff","patch_url":"https://github.com/godotengine/godot/pull/37253.patch","title":"Allow to load multiple animations at once","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-03-23T15:37:29Z","updated_at":"2021-03-25T22:08:02Z","body":"Closes #30227","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":392424399,"public_id":37252,"url":"https://github.com/godotengine/godot/pull/37252","diff_url":"https://github.com/godotengine/godot/pull/37252.diff","patch_url":"https://github.com/godotengine/godot/pull/37252.patch","title":"Update ProjectSettings.xml for documentation fix #36781","state":"open","is_draft":false,"authored_by":{"id":2128662,"user":"sidtheone","avater":"https://avatars.githubusercontent.com/u/2128662?v=4","url":"https://github.com/sidtheone"},"created_at":"2020-03-23T14:35:45Z","updated_at":"2021-01-05T00:58:52Z","body":"New with git, Please guide if making mistakes. Fixes #36781.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":392152470,"public_id":37238,"url":"https://github.com/godotengine/godot/pull/37238","diff_url":"https://github.com/godotengine/godot/pull/37238.diff","patch_url":"https://github.com/godotengine/godot/pull/37238.patch","title":"Fix: json parser bug when extra data found after parsing","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-23T04:40:09Z","updated_at":"2020-09-02T19:40:42Z","body":"Fix: #19611","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":392077901,"public_id":37236,"url":"https://github.com/godotengine/godot/pull/37236","diff_url":"https://github.com/godotengine/godot/pull/37236.diff","patch_url":"https://github.com/godotengine/godot/pull/37236.patch","title":"[DOCS] Clarify CollisionShape disabled usage","state":"open","is_draft":false,"authored_by":{"id":3812514,"user":"cbscribe","avater":"https://avatars.githubusercontent.com/u/3812514?v=4","url":"https://github.com/cbscribe"},"created_at":"2020-03-22T22:02:51Z","updated_at":"2021-01-05T00:58:51Z","body":"Added examples using `set_deferred()` when disabling collision shapes - a common occurrence.\r\n\r\nAlso fixed a couple of minor typos in RandomNumberGenerator and PinJoint2D","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":392009443,"public_id":37228,"url":"https://github.com/godotengine/godot/pull/37228","diff_url":"https://github.com/godotengine/godot/pull/37228.diff","patch_url":"https://github.com/godotengine/godot/pull/37228.patch","title":"Use QuickOpen to load resources in the inspector.","state":"open","is_draft":false,"authored_by":{"id":2496231,"user":"rcorre","avater":"https://avatars.githubusercontent.com/u/2496231?v=4","url":"https://github.com/rcorre"},"created_at":"2020-03-22T13:54:36Z","updated_at":"2021-03-20T20:51:38Z","body":"When you click the \"Load\" button to populate a Resource field in the\r\ninspector dock, the editor currently creates a file dialog. Navigating\r\nthrough folders to find the file you want is tedious.\r\n\r\nThis replaces the file dialog with the same QuickOpen dialog used for\r\nthe \"Quick Run\" and \"Quick Open\" scene actions. The result list is\r\nfiltered to only resources of the appropriate type, and you can type\r\nI find that this is much faster and more intuitive than the file dialog.\r\n\r\nAs far as I'm aware, the only \"feature\" you lose compared to the old\r\nFileDialog is the ability to show all types of files by changing the\r\nextension filter to \"All Files\" in the lower right. This seems like an\r\nunnecessary feature anyways, as selecting a file that is not of the\r\nappropriate resource type would just result in an error like so:\r\n\r\n```\r\nThe selected resource (StreamTexture) does not match any type expected for this property (AudioStream).\r\n```\r\n\r\nRelates to godotengine/godot-proposals#346.\r\n\r\nThe old way:\r\n![filedialog](https://user-images.githubusercontent.com/2496231/77250922-96ec2380-6c21-11ea-8566-8e4cab1e0dd4.gif)\r\n\r\nThe new way:\r\n![quickopen](https://user-images.githubusercontent.com/2496231/77250923-9784ba00-6c21-11ea-8c82-6e39f6d7d19b.gif)\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":391860517,"public_id":37209,"url":"https://github.com/godotengine/godot/pull/37209","diff_url":"https://github.com/godotengine/godot/pull/37209.diff","patch_url":"https://github.com/godotengine/godot/pull/37209.patch","title":"Add an `Array.pop_at()` method to pop an element at an arbitrary index","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-03-21T13:45:21Z","updated_at":"2020-09-02T19:40:43Z","body":"Negative indices are supported to pop an element relative from the end.\r\n\r\n## Example\r\n\r\n```gdscript\r\nfunc _ready():\r\n\tvar array = [2, 4, 6, 8, 10]\r\n\tprint(\"Original array: \", array)\r\n\tprint(array.pop_at(2), \". Array is now \", array)\r\n\tprint(array.pop_at(2), \". Array is now \", array)\r\n\t# Pop the last element.\r\n\tprint(array.pop_at(-1), \". Array is now \", array)\t\r\n\t# This is invalid since the array only has 3 elements at this point.\r\n\t# This will print an error and return `null`.\r\n\tprint(array.pop_at(-15), \". Array is now \", array)\r\n\tprint(array.pop_at(0), \". Array is now \", array)\r\n\tprint(array.pop_at(0), \". Array is now \", array)\r\n\t# This will return `null` without printing an error.\r\n\tprint(\"Trying to pop empty array. \", array.pop_at(24), \". Array is now \", array)\r\n```\r\n\r\n```text\r\nOriginal array: [2, 4, 6, 8, 10]\r\n6. Array is now [2, 4, 8, 10]\r\n8. Array is now [2, 4, 10]\r\n10. Array is now [2, 4]\r\nNull. Array is now [2, 4]\r\n2. Array is now [4]\r\n4. Array is now []\r\nTrying to pop empty array. Null. Array is now []\r\n```\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/562.\r\n\r\n~~PS: Should we print an error when trying to pop an empty array, or is the current behavior fine?~~\r\n\r\n**Edit:** Not displaying an error is fine, for consistency with `pop_back()` and `pop_front()`'s behavior.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":391852944,"public_id":37204,"url":"https://github.com/godotengine/godot/pull/37204","diff_url":"https://github.com/godotengine/godot/pull/37204.diff","patch_url":"https://github.com/godotengine/godot/pull/37204.patch","title":"Enhancement: class ref catalog generator enhancement","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-21T12:28:14Z","updated_at":"2021-01-05T00:58:47Z","body":"I just find out that the codeblock region never use\r\ntabs for indentation, 4 spaces instead. And all the\r\ntab character is used for the xml indentation. Here\r\nI've removed the code which count the tabs to check\r\nif the tab belongs to the xml file or the codeblock\r\nCause It's unnecessary, every tabs could be ignored\r\nsince they are only belongs to the xml indentation.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":391832621,"public_id":37200,"url":"https://github.com/godotengine/godot/pull/37200","diff_url":"https://github.com/godotengine/godot/pull/37200.diff","patch_url":"https://github.com/godotengine/godot/pull/37200.patch","title":"NetworkedController & SceneRewinder","state":"open","is_draft":true,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-03-21T08:38:37Z","updated_at":"2021-08-12T06:25:43Z","body":"![ezgif com-video-to-gif(29)](https://user-images.githubusercontent.com/8342599/85391296-44851080-b54a-11ea-9a0c-eda2216ebff8.gif)\r\n\r\nThis PR adds the possibility to synchronize a `scene` and the `Character`s between many peers.\r\n\r\nIt uses a protocol to keep in sync the clients with the server; under the hood it heals the internet problem like (Latency / Packet loss / Packet reorder / Packet Duplication / ...). Networking is complex and get it right is even more difficult; however, this controller want to be most simple to use possible but also most general purpose possible. Indeed, it's possible to use it to for 2D and 3D and with scene of any kind.\r\n\r\n# Disambiguation\r\n- The `NetworkedController` collects the player inputs and use those to control a character, a node, you name it. The `NetworkedController` takes care to propagate those inputs to all peers.\r\n- The `SceneSynchronizer` make sure to keep in sync, all the **specified** nodes, between all the peers.\r\n\r\n# How to use it\r\nHere a sample project: https://github.com/GodotNetworking/example-project\r\n\r\n\r\nTo use it, you need to extend the `SceneSynchronizer` and create an auto-load with this script. Mine is called `NetworkSync`. Perfect, now you are ready to sync anything into your scene (more about how, below).\r\n\r\n### Networked Character\r\nNow is time to make your `Character` networked; add the node `NetworkedController` and attach a script. Implement these callbacks:\r\n- `func collect_inputs(delta: float):` Collects the frame inputs.\r\n- `func controller_process(delta: float):` Process the frame inputs.\r\n- `func count_input_size(inputs: Object) -> int:` Count the input buffer size.\r\n- `func are_inputs_different(inputs_A: Object, inputs_B: Object) -> bool:` Compare two input buffer.\r\nAt this point the `NetworkedController` is able to control the character. What is needed, however, is to specify the parameters that we need to keep in sync, for this `Character`; we can use the `NeworkSync` to do it. \r\n\r\nMy `Character` is really simple. I just need to sync the velocity and the translation, so into the `_ready` function (on the `NetworkedController` script), I've:\r\n```\r\nfunc _ready():\r\n\tcontrolled_character = get_node(controlled_character_path)\r\n\tassert(controlled_character != null)\r\n\r\n\t# Notify the NetworkSync who is controlling `controlled_character` nodes.\r\n\tNetworkSync.set_node_as_controlled_by(controlled_character, self)\r\n\tNetworkSync.register_variable(controlled_character, \"translation\")\r\n\tNetworkSync.register_variable(controlled_character, \"horizontal_velocity\")\r\n```\r\n_Note: If your character uses an acceleration, or vertical_velocity, (or anything that is used to compute the final movement), you must register those too._\r\n\r\n### Scene synchronization\r\nThe `SceneSynchronizer` (that I'm using via the auto-load `NeworkSync`), is responsible to keep in sync the various objects into the scene.\r\nThis mean that you can also keep in sync things that are not directly related to a controller; in the sample, you can find the `SyncMesh` node, that is moved via the `AnimationPlayer` and uses the `SceneSynchronizer` to keep it in sync across the pears.\r\n\r\nYou can tell which variable you need to keep in sync using the function `SceneSynchronizer.register_variable(node, variable_name, on_change_callback = \"\")`.\r\nAdditionally you can specify a process function, to be called in sync using: `SceneSynchronizer.register_process(node, function_name)`.\r\n\r\n# Conclusion\r\nThere would be much more to talk about and to show, but for the purpose of this PR it should be enough. Please ask questions, propose improvements :) .\r\n\r\n\r\n_This work has been kindly sponsored by IMVU._\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/631.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":649800701,"name":"topic:network","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":391800941,"public_id":37199,"url":"https://github.com/godotengine/godot/pull/37199","diff_url":"https://github.com/godotengine/godot/pull/37199.diff","patch_url":"https://github.com/godotengine/godot/pull/37199.patch","title":"Expose ConeShape from bullet","state":"open","is_draft":false,"authored_by":{"id":12477395,"user":"MennoMax","avater":"https://avatars.githubusercontent.com/u/12477395?v=4","url":"https://github.com/MennoMax"},"created_at":"2020-03-21T01:59:09Z","updated_at":"2021-02-15T18:21:17Z","body":"Exposed ConeShape from Bullet, as it was once requested in #2138 and #17252.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4417777]},{"id":391779647,"public_id":37196,"url":"https://github.com/godotengine/godot/pull/37196","diff_url":"https://github.com/godotengine/godot/pull/37196.diff","patch_url":"https://github.com/godotengine/godot/pull/37196.patch","title":"Make Editor Help text possible to be zoomed in/out","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-20T23:31:28Z","updated_at":"2021-03-25T19:09:26Z","body":"While regular code editor has posibility of text zooming in/out, help tabs didn't have similar functionality.\r\nIt is possible to change its size (for 3 different 'categories'/sections in help text area) - but only by going into editor properties, adjusting it manually, saving and observing how documentation text would look like.\r\n\r\nWith following PR, it's possible to use regular mouse scroll gestures (CTRL + whell up/down), keyboard shortcuts (CTRL + plus, CTRL + minus, CTRL + zero), and magnify gesture to control text size of documentation/help area\r\n\r\n![help-scroll](https://user-images.githubusercontent.com/1110337/77214988-15f23680-6b12-11ea-96e6-1a22932cebdc.gif)\r\n\r\n\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":391736605,"public_id":37195,"url":"https://github.com/godotengine/godot/pull/37195","diff_url":"https://github.com/godotengine/godot/pull/37195.diff","patch_url":"https://github.com/godotengine/godot/pull/37195.patch","title":"Fix auto-keyframing to work with inspector properties","state":"open","is_draft":false,"authored_by":{"id":43449832,"user":"asheraryam","avater":"https://avatars.githubusercontent.com/u/43449832?v=4","url":"https://github.com/asheraryam"},"created_at":"2020-03-20T20:53:55Z","updated_at":"2021-04-26T10:23:41Z","body":"Closes https://github.com/godotengine/godot/issues/36140 https://github.com/godotengine/godot/issues/6201 \r\n\r\n**Rationale for opening this PR:**\r\n\r\nI initially needed to fix https://github.com/godotengine/godot/issues/36140 because our artists were complaining about the state of the animation editor since they're used to the workflow of other engines (copy paste for keyframes is my next target).\r\n\r\nHowever while doing that bugfix, I found it low-hanging fruit to go for https://github.com/godotengine/godot/issues/6201  as well which has been bothering us for over a year now (I commented on the issue in January of last year).\r\n\r\nComparing to other engines you can see that a Record button is a sensible proposition that makes artists' lives much easier.\r\n\r\nUnity has a record button that allows you to switch between manual and auto keyframing:\r\n\r\n![image](https://user-images.githubusercontent.com/43449832/77204155-2ea72000-6b03-11ea-9c5d-53bf50828cfb.png)\r\n\r\nCocos Creator has *only* one mode to edit animations, and that is auto keyframing:\r\n\r\n![image](https://user-images.githubusercontent.com/43449832/77203952-c35d4e00-6b02-11ea-83d9-d98aa186736c.png)\r\n\r\nI hope to get some feedback to know whether I am headed in the right direction. \r\n\r\n**Current State of PR**\r\n\r\nPreviously auto-keying only worked when node transforms were edited with gizmos. This PR fixes/expands the auto-keying behaviour to also work when values are modified in the inspector tab.\r\n\r\nNow it also works for all properties, not only transforms, as long as a track for it already exists. Supports undo-redo with no extra effort.\r\n\r\nThe new auto-keyframing behaviour is currently toggled with the existing auto-key \"Car\" button in the canvas item editor:\r\n\r\n![image](https://user-images.githubusercontent.com/43449832/77204683-5054d700-6b04-11ea-9457-44e48ce2e150.png)\r\n\r\nThe other toggles (loc, rot, and scl) still work as before i.e. they insert a keyframe if the canvas item was moved in the viewport.\r\n\r\n**What this needs to become a full PR:**\r\n- Potentially add a separate \"Record mode\" button, either in the top bar or down in the animation panel. \r\n- Potentially remove the \"Car\" icon from the canvas editor toolbar (and the loc, rot, scl icons beside it) if it becomes redudant.\r\n- Either access the \"auto-capture\" boolean cleanly from inside the editor inspector without exposing protected variables _OR_ connect to a signal from outside the editor inspector class and handle the keyframing there (e.g. in the animation editor).\r\n\r\n\r\n\r\nI'm already happy with this change and have compiled release binaries for our team, and I think it would take little work to make this PR up to the engine standards if we reach a consensus.\r\n\r\nBinary ready for QA (based on the 3.2.x branch): https://mega.nz/#!QdVlyCIa!5is9G7FowZi9Xa89XvD2lNWKvELY2snBUjZ05NwJgyQ\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":391102053,"public_id":37168,"url":"https://github.com/godotengine/godot/pull/37168","diff_url":"https://github.com/godotengine/godot/pull/37168.diff","patch_url":"https://github.com/godotengine/godot/pull/37168.patch","title":"Changed the title of change node type dialog","state":"open","is_draft":false,"authored_by":{"id":41969735,"user":"theoway","avater":"https://avatars.githubusercontent.com/u/41969735?v=4","url":"https://github.com/theoway"},"created_at":"2020-03-19T16:20:37Z","updated_at":"2020-09-02T19:40:46Z","body":"Fixes #36831\r\nThe title of 'change node type' dialog was ambiguous. Now it reads `Convert Node from NodeType`, where Node is the selected node's name and NodeType is the selected node's type. This title is much more clear than the previous one, which was `Change Node Type`. This way, users can have more clarity about the node and its type that they're changing/replacing.\r\n**Code Modification:-**\r\nA default parameter to store the selected node's name is added, whose default value is `\"\"`(empty string), to the function `popup_create()` in the `CreateDialog` class. \r\nLooking at the call hierarchy of this function, this modification is consistent with the functions it is being called from.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":390374957,"public_id":37136,"url":"https://github.com/godotengine/godot/pull/37136","diff_url":"https://github.com/godotengine/godot/pull/37136.diff","patch_url":"https://github.com/godotengine/godot/pull/37136.patch","title":"Added Fix Invalid Cell and Clear All action to GridMap","state":"open","is_draft":false,"authored_by":{"id":37181756,"user":"simpuid","avater":"https://avatars.githubusercontent.com/u/37181756?v=4","url":"https://github.com/simpuid"},"created_at":"2020-03-18T11:18:39Z","updated_at":"2020-09-02T19:40:47Z","body":"Added option to fix invalid cells in `GridMap` just like `TileMap`.\r\nAlso added an option to Clear all cells of `GridMap`, this fixes/resolve #37124 \r\nBoth actions are working properly, even with undo-redo.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":389240883,"public_id":37091,"url":"https://github.com/godotengine/godot/pull/37091","diff_url":"https://github.com/godotengine/godot/pull/37091.diff","patch_url":"https://github.com/godotengine/godot/pull/37091.patch","title":"Fix: unsupported file mode access fixed","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-16T13:37:47Z","updated_at":"2020-09-02T19:40:48Z","body":"Fix: #37090","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388999161,"public_id":37083,"url":"https://github.com/godotengine/godot/pull/37083","diff_url":"https://github.com/godotengine/godot/pull/37083.diff","patch_url":"https://github.com/godotengine/godot/pull/37083.patch","title":"Fixes unnecessary change in animation length property while using the slider","state":"open","is_draft":false,"authored_by":{"id":37181756,"user":"simpuid","avater":"https://avatars.githubusercontent.com/u/37181756?v=4","url":"https://github.com/simpuid"},"created_at":"2020-03-16T05:34:21Z","updated_at":"2021-01-20T11:21:35Z","body":"Fixes #37072\r\nAfter this fix the length of animation updates only when the values are finally changed (either a mouse release event of slider/grabber or confirmation of keyboard input)\r\nChanges made:\r\n* Added `EditorSpinSlider::is_grabbing` to check the grabbing status of `EditorSpinSlider`\r\n* Added `EditorSpinSlider::_ungrabbed` to trigger signals when mouse is released after grabbing\r\n* `value_changed` is triggered at mouse release event.\r\n* `EditorSpinSlider::pre_grab_value` is also updated for changes through grabber\r\n* `AnimationTimelineEdit::_anim_length_changed` skips changes if slider is grabbed, in this way the issue is fixed","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388897713,"public_id":37078,"url":"https://github.com/godotengine/godot/pull/37078","diff_url":"https://github.com/godotengine/godot/pull/37078.diff","patch_url":"https://github.com/godotengine/godot/pull/37078.patch","title":"Adds built-in function angle_diff to gdscript, csharp and visual script.","state":"open","is_draft":false,"authored_by":{"id":37181756,"user":"simpuid","avater":"https://avatars.githubusercontent.com/u/37181756?v=4","url":"https://github.com/simpuid"},"created_at":"2020-03-16T00:47:20Z","updated_at":"2020-11-11T06:10:23Z","body":"Implements godotengine/godot-proposals#330\r\n\r\nThis commit adds angle_diff built-in function to gdscript, csharp and visual script.\r\nChanges made:\r\n* Added `angle_diff` to math_funcs.h\r\n* Added MATH_ANGLE_DIFF to expressions\r\n* Added `angle_diff` to builtin gdscript functions\r\n* Added `angle_diff` to builtin visual script functions\r\n* Added `Math.AngleDiff` to mono glue code.\r\n* Added docs about `angle_diff` to `@GDScript.xml`\r\n* Added docs about `MATH_ANGLE_DIFF` to `VisualScriptBuiltinFunc.xml`\r\n* Added `MATH_ANGLE_DIFF` to `VisualScriptBuiltinFunc::BuiltinFunc` and `Expression::BuiltinFunc`\r\n* Modified `Math::lerp_angle` to avoid code duplication\r\n\r\nDoubt about names for parameters of `angle_diff` . Open for suggestions.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388833645,"public_id":37074,"url":"https://github.com/godotengine/godot/pull/37074","diff_url":"https://github.com/godotengine/godot/pull/37074.diff","patch_url":"https://github.com/godotengine/godot/pull/37074.patch","title":"Enhancement: polygon2d right click to undo last point, delete to cancel","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-15T21:11:29Z","updated_at":"2020-09-02T19:40:49Z","body":"Fix: https://github.com/godotengine/godot-proposals/issues/583","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388766326,"public_id":37070,"url":"https://github.com/godotengine/godot/pull/37070","diff_url":"https://github.com/godotengine/godot/pull/37070.diff","patch_url":"https://github.com/godotengine/godot/pull/37070.patch","title":"Add SQLite to Godot.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-03-15T17:11:49Z","updated_at":"2021-04-15T17:58:43Z","body":"Provide built-in support for SQLite databases.\r\n\r\nBased on the work by @fire and @TGRCdev in [godot-sqlite](https://github.com/godot-extended-libraries/godot-sqlite), which in turn is based on the work by @khairul169 in [gdsqlite-native](https://github.com/khairul169/gdsqlite-native) and [@TGRCdev's branch](https://github.com/TGRCdev/gdsqlite-native). The third party library also includes @spsoft's [spmemvfs](https://github.com/spsoft/spmemvfs) to also support read-only access to game resource databases.\r\n\r\n- SQLite is in the [public domain](https://sqlite.org/copyright.html).\r\n- spmemvfs is provided under the [BSD 2-Clause License](https://github.com/spsoft/spmemvfs/blob/master/LICENSE) and included in the COPYRIGHT.txt\r\n- Khairul Hidayat is the original author of the `modules/sqlite/sqlite.h` and `modules/sqlite/sqlite.cpp` and I've tried to make this clear in the files themselves, because they are provided under the [MIT License](https://github.com/khairul169/gdsqlite-native/blob/master/LICENSE).","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388658176,"public_id":37066,"url":"https://github.com/godotengine/godot/pull/37066","diff_url":"https://github.com/godotengine/godot/pull/37066.diff","patch_url":"https://github.com/godotengine/godot/pull/37066.patch","title":"Add String.is_substring_of to check for consecutive match","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-15T10:42:22Z","updated_at":"2021-01-05T00:58:43Z","body":"Non-breaking change - I've extended two methods in core ```ustring``` of additional parameter, though its default value retains current behaviour.\r\n\r\n![image](https://user-images.githubusercontent.com/1110337/76699895-102fc780-66b2-11ea-819f-122df4fcb79a.png)\r\n\r\n\r\nFixes: #37063","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":388579299,"public_id":37062,"url":"https://github.com/godotengine/godot/pull/37062","diff_url":"https://github.com/godotengine/godot/pull/37062.diff","patch_url":"https://github.com/godotengine/godot/pull/37062.patch","title":"Fix hanging with large offsets and small path lengths in PathFollow and PathFollow2D","state":"open","is_draft":false,"authored_by":{"id":26950821,"user":"daxum","avater":"https://avatars.githubusercontent.com/u/26950821?v=4","url":"https://github.com/daxum"},"created_at":"2020-03-15T05:25:08Z","updated_at":"2020-09-02T19:40:52Z","body":"If the offset of a PathFollow or PathFollow2D is very large, the current while loop implementation can cause the engine to become unresponsive while the offset is adjusted to be between 0 and the path length. To fix this, I've replaced the while loops with a constant time implementation.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388156268,"public_id":37038,"url":"https://github.com/godotengine/godot/pull/37038","diff_url":"https://github.com/godotengine/godot/pull/37038.diff","patch_url":"https://github.com/godotengine/godot/pull/37038.patch","title":"Stop ViewportTexture error spam","state":"open","is_draft":false,"authored_by":{"id":46539626,"user":"Phischermen","avater":"https://avatars.githubusercontent.com/u/46539626?v=4","url":"https://github.com/Phischermen"},"created_at":"2020-03-14T04:50:57Z","updated_at":"2020-09-02T19:40:53Z","body":"The viewport path property in ViewportTexture can sometimes be invalid due to the viewport not yet being initialized. This causes an error, but the texture will still work. Thus, texture is now refreshed via call_deffered(), ensuring the viewport is initialized before refreshing the texture.\r\n\r\nFixes #27790 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":388101129,"public_id":37035,"url":"https://github.com/godotengine/godot/pull/37035","diff_url":"https://github.com/godotengine/godot/pull/37035.diff","patch_url":"https://github.com/godotengine/godot/pull/37035.patch","title":"Add option to toggle editable children for multiple nodes at once","state":"open","is_draft":false,"authored_by":{"id":4673489,"user":"alvaroHernandez","avater":"https://avatars.githubusercontent.com/u/4673489?v=4","url":"https://github.com/alvaroHernandez"},"created_at":"2020-03-14T01:35:13Z","updated_at":"2020-09-02T19:40:53Z","body":"As suggested in [#21033](https://github.com/godotengine/godot/issues/21033) it would be helpful in some cases being able to toggle multiples nodes as editable children.\r\n\r\nI changed just a little bit the behavior of toggle editable children action to check wether current selection contains only nodes that can become editable, and toggle editable on only for those that are currently off. If all of them are already editable, the warning will show up an after confirmation they will be toggled off.\r\n\r\nFixes #21033","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":387516295,"public_id":37015,"url":"https://github.com/godotengine/godot/pull/37015","diff_url":"https://github.com/godotengine/godot/pull/37015.diff","patch_url":"https://github.com/godotengine/godot/pull/37015.patch","title":"Allowing SpinBox & LineEdit contents to be selected while grabbing focus","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-12T23:14:35Z","updated_at":"2021-01-05T00:58:41Z","body":"I took an opportunity to modify and unify how not only Snap Settings behave (original issue) but - others utility popups accessible from 2D and 3D views submenus as well.\r\n\r\nThe change is non-intrusive for the Controls itself - it doesn't affect how SpinBox and LineEdit works out-of-the-box - there needs to be intention of enabling functionality of 'selecting content'.\r\n\r\nOr - actually - if that behaviour is how the controls should work normally - I can enable 'selecting content' while changing focus on them as a default.\r\n\r\nFixes: #37011","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":387384253,"public_id":37010,"url":"https://github.com/godotengine/godot/pull/37010","diff_url":"https://github.com/godotengine/godot/pull/37010.diff","patch_url":"https://github.com/godotengine/godot/pull/37010.patch","title":"Fix: identical tab names set to its path","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-12T17:48:39Z","updated_at":"2021-01-05T00:58:39Z","body":"Fix: #20029\r\n\r\n![identical paths](https://user-images.githubusercontent.com/41085900/76550156-a946be80-64b7-11ea-963d-7ed051e42c1d.JPG)\r\n\r\nEDIT:\r\nhttps://github.com/godotengine/godot/pull/20930#issuecomment-412315763\r\n![tab-name-levels](https://user-images.githubusercontent.com/41085900/76565381-752bc780-64d0-11ea-92f6-ce50ca3c346d.JPG)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":387028129,"public_id":37001,"url":"https://github.com/godotengine/godot/pull/37001","diff_url":"https://github.com/godotengine/godot/pull/37001.diff","patch_url":"https://github.com/godotengine/godot/pull/37001.patch","title":"Fix for short animation blend taking too long when played during a long animation blend.","state":"open","is_draft":false,"authored_by":{"id":7751182,"user":"jitspoe","avater":"https://avatars.githubusercontent.com/u/7751182?v=4","url":"https://github.com/jitspoe"},"created_at":"2020-03-12T04:04:28Z","updated_at":"2021-08-08T00:44:57Z","body":"If you play an animation with a long blend time and, while that blend is still happening, play one with a short (or zero) blend time, the long blend time will continue to be used (logic was sort of reversed).  Also, if you played an animation with a 0 blend time while a blend was active, it still tried to blend.  This PR fixes those issues.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":386955965,"public_id":36999,"url":"https://github.com/godotengine/godot/pull/36999","diff_url":"https://github.com/godotengine/godot/pull/36999.diff","patch_url":"https://github.com/godotengine/godot/pull/36999.patch","title":"Cache Object Icons","state":"open","is_draft":true,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-03-11T22:48:06Z","updated_at":"2021-04-14T10:15:41Z","body":"Draft: Wait for https://github.com/godotengine/godot/issues/44501 to be fixed.\r\n\r\n---\r\n\r\nFixes #36981\r\n\r\nEdit: This probably shouldn't be merged yet ~~since the cache will not update if the image data is changed. But if the path changes it will work fine.~~\r\nThe cache now works properly but it requires the icon is imported as Image which could be annoying.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":386119567,"public_id":36962,"url":"https://github.com/godotengine/godot/pull/36962","diff_url":"https://github.com/godotengine/godot/pull/36962.diff","patch_url":"https://github.com/godotengine/godot/pull/36962.patch","title":"Added possibility to force collision avoidance processing","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-03-10T13:01:56Z","updated_at":"2020-09-02T19:40:56Z","body":"Added possibility to force collision avoidance processing\r\n\r\nThis work has been kindly sponsored by IMVU.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1752040694,"name":"topic:navigation","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385891087,"public_id":36953,"url":"https://github.com/godotengine/godot/pull/36953","diff_url":"https://github.com/godotengine/godot/pull/36953.diff","patch_url":"https://github.com/godotengine/godot/pull/36953.patch","title":"Gestures InputEvents","state":"open","is_draft":false,"authored_by":{"id":45585143,"user":"Federico-Ciuffardi","avater":"https://avatars.githubusercontent.com/u/45585143?v=4","url":"https://github.com/Federico-Ciuffardi"},"created_at":"2020-03-10T01:25:20Z","updated_at":"2020-12-01T14:55:01Z","body":"Addresses the issue https://github.com/godotengine/godot/issues/13139 (just for android) by implementing the following  InputEvents from https://github.com/Federico-Ciuffardi/Godot-Touch-Input-Manager:\r\n* InputEventScreenPinch\r\n* InputEventMultiScreenDrag\r\n* InputEventScreenTwist","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385851940,"public_id":36951,"url":"https://github.com/godotengine/godot/pull/36951","diff_url":"https://github.com/godotengine/godot/pull/36951.diff","patch_url":"https://github.com/godotengine/godot/pull/36951.patch","title":"Fix String.rsplit to return splitted list with correct order","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-09T22:40:31Z","updated_at":"2020-09-02T19:40:57Z","body":"With PR below code (copied from documentation) finally works as expected:\r\n\r\nhttps://docs.godotengine.org/en/3.2/classes/class_string.html#class-string-method-rsplit\r\n\r\n```gdscript\r\nvar some_string = \"One,Two,Three,Four\"\r\nvar some_array = some_string.rsplit(\",\", true, 1)\r\nprint(some_array.size()) # Prints 2\r\nprint(some_array[0]) # Prints \"Four\"\r\nprint(some_array[1]) # Prints \"Three,Two,One\"\r\n```\r\n\r\nFixes: #36898","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385645104,"public_id":36944,"url":"https://github.com/godotengine/godot/pull/36944","diff_url":"https://github.com/godotengine/godot/pull/36944.diff","patch_url":"https://github.com/godotengine/godot/pull/36944.patch","title":"SoftBody fix for imported meshes, Pass indices for other mesh formats","state":"open","is_draft":false,"authored_by":{"id":6509081,"user":"jedStevens","avater":"https://avatars.githubusercontent.com/u/6509081?v=4","url":"https://github.com/jedStevens"},"created_at":"2020-03-09T15:10:42Z","updated_at":"2021-04-12T15:55:51Z","body":"I seemed to have fixed SoftBodies for imported meshes by passing an array from `0..n` for however many vertices the given mesh has. I'm not sure if I should be checking for duplicate vertices as I'm not familiar with these mesh formats.\r\n\r\nThis fixes #33485\r\n\r\nI am open to suggestions if this code is not up to standard.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385394942,"public_id":36931,"url":"https://github.com/godotengine/godot/pull/36931","diff_url":"https://github.com/godotengine/godot/pull/36931.diff","patch_url":"https://github.com/godotengine/godot/pull/36931.patch","title":"Add make_local_canvas_position_global, the inverse to make_canvas_position_local","state":"open","is_draft":false,"authored_by":{"id":8754559,"user":"Razzlegames","avater":"https://avatars.githubusercontent.com/u/8754559?v=4","url":"https://github.com/Razzlegames"},"created_at":"2020-03-09T05:35:46Z","updated_at":"2021-01-05T00:58:38Z","body":"Make a local canvas position transformed to global space. \r\n\r\n - Just the inverse of \t`Vector2 make_canvas_position_local(const Vector2 &screen_point) const;`\r\n\r\nFinally a follow up to https://github.com/godotengine/godot/pull/4854 , you know... 4 years later. :)\r\n\r\n\r\nTest project: https://github.com/Razzlegames/GodotCanvasLocalToGlobalTest","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":385372106,"public_id":36930,"url":"https://github.com/godotengine/godot/pull/36930","diff_url":"https://github.com/godotengine/godot/pull/36930.diff","patch_url":"https://github.com/godotengine/godot/pull/36930.patch","title":"Eliminates SpringArm update lag when changing SpringArm length","state":"open","is_draft":false,"authored_by":{"id":55669430,"user":"Nanotross","avater":"https://avatars.githubusercontent.com/u/55669430?v=4","url":"https://github.com/Nanotross"},"created_at":"2020-03-09T03:50:42Z","updated_at":"2021-01-18T10:00:42Z","body":"**Desciption**\r\nIf the SpringArm's length is updated, its children won't update until the next frame because the process_spring() function won't be called again until the next frame. Any code that needs the position of its children to update in the same frame as the SpringArm length is updated won't get the values based on the updated length until the next frame.\r\n\r\nThe fix makes the set_length() function only change the SpringArm length when the new length is different than the current length and calls the process_spring() function to update the SpringArm and its children with the new length, which eliminates the lag.\r\n\r\n**Before/After Example**\r\nThe zip file contains 1 second videos of where the bug occurs, before and after the fix (the videos are from 3.2, but affected code is also present in 3.1, 3.2, and 4.0).\r\n\r\nThe update lag is most apparent when the camera is rotating while the length changes. In the videos, when the camera rotates to its maximum rotation above the character, the SpringArm zooms out the camera a little after the rotation has stopped because the SpringArm's update lags doesn't update its children until 1 frame after the length is updated.\r\n\r\nThe effect of the update lag can be seen by looking at the shadow to the left of the character in both videos and comparing them. \r\n\r\nThe update lag can also be seen in the output. The top value is the new length, and the next two values are two calculations of the length to a child object of the SpringArm. Because the SpringArm didn't update in the same frame the length was changed, the second and third values lag the first (in the before video).\r\n\r\n[SpringArm_Update_Bug_Before_After_Fix.zip](https://github.com/godotengine/godot/files/4304513/SpringArm_Update_Bug_Before_After_Fix.zip)\r\n\r\n**Affected Versions**\r\n3.1, 3.2, and 4.0","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385328361,"public_id":36926,"url":"https://github.com/godotengine/godot/pull/36926","diff_url":"https://github.com/godotengine/godot/pull/36926.diff","patch_url":"https://github.com/godotengine/godot/pull/36926.patch","title":"Tree and TreeItem folding helpers and improvements","state":"open","is_draft":false,"authored_by":{"id":52422077,"user":"FeatherAntennae","avater":"https://avatars.githubusercontent.com/u/52422077?v=4","url":"https://github.com/FeatherAntennae"},"created_at":"2020-03-08T23:33:18Z","updated_at":"2021-01-05T00:58:37Z","body":"A few small changes to the Tree and TreeItem classes.\r\n\r\nThe goal is to reduce clutter in many classes that each have their own (different) implementation of the same logic, while giving new and old behaviors of the UI trees better consistency across the editor.\r\n\r\n**For the discussion and details, see** #33984.\r\n\r\nThis was separated from the #33984 PR, as the refactor is pretty big and is going to take a while to complete, but I think I pretty much nailed down the global changes needed to make everything compatible and consistent. I think some of these changes would help some other propositions and PR too. #33984 will be kept just to keep track of the refactor, but separating this will allow each part of the refactor to be it's own PR.\r\n\r\nI completed the Tree and TreeItem documentation, and opened this PR for the changes to the Tree and TreeItem, including doc for the new methods. It already makes the click, alt-click and folding consistent to all trees by default. ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":385314232,"public_id":36918,"url":"https://github.com/godotengine/godot/pull/36918","diff_url":"https://github.com/godotengine/godot/pull/36918.diff","patch_url":"https://github.com/godotengine/godot/pull/36918.patch","title":"Fix #34431 animation editor ignores step size","state":"open","is_draft":false,"authored_by":{"id":7764446,"user":"soundgnome","avater":"https://avatars.githubusercontent.com/u/7764446?v=4","url":"https://github.com/soundgnome"},"created_at":"2020-03-08T21:10:40Z","updated_at":"2021-05-10T12:25:43Z","body":"This attempts to address #34431 which is a 3.1 -> 3.2 regression involving the behavior of the animation editor.\r\n\r\n*Bugsquad edit:* Fixes #34431.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385302824,"public_id":36915,"url":"https://github.com/godotengine/godot/pull/36915","diff_url":"https://github.com/godotengine/godot/pull/36915.diff","patch_url":"https://github.com/godotengine/godot/pull/36915.patch","title":"Removed unnecessary semicolons","state":"open","is_draft":false,"authored_by":{"id":37383316,"user":"Muller-Castro","avater":"https://avatars.githubusercontent.com/u/37383316?v=4","url":"https://github.com/Muller-Castro"},"created_at":"2020-03-08T19:20:58Z","updated_at":"2021-01-05T00:58:36Z","body":"from **core/ustring.cpp:String::is_valid_ip_address**","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385286469,"public_id":36910,"url":"https://github.com/godotengine/godot/pull/36910","diff_url":"https://github.com/godotengine/godot/pull/36910.diff","patch_url":"https://github.com/godotengine/godot/pull/36910.patch","title":"Add history navigation in the script editor using extra mouse buttons","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-03-08T16:35:42Z","updated_at":"2021-03-25T16:38:45Z","body":"This adds history navigation in the script/documentation list. It works exactly like the current implementation using <kbd>Alt + Left</kbd> and <kbd>Alt + Right</kbd>, but this makes it accessible using the auxiliary mouse buttons present on some mice.\r\n\r\nAn editor setting allows disabling this feature in case you use the auxiliary mouse buttons for other things (such as push-to-talk in a VoIP program).\r\n\r\n<details>\r\n<summary>March 2020 patch</summary>\r\n\r\n```patch\r\nFrom 11c3a0b9f38a2a9345d9d6e1a9b19c8d02076cda Mon Sep 17 00:00:00 2001\r\nFrom: Hugo Locurcio <hugo.locurcio@hugo.pro>\r\nDate: Sun, 8 Mar 2020 17:32:49 +0100\r\nSubject: [PATCH] Add history navigation in the script editor using extra mouse\r\n buttons\r\n\r\n---\r\n editor/editor_settings.cpp              |  1 +\r\n editor/plugins/script_editor_plugin.cpp | 29 +++++++++++++++++++++++--\r\n editor/plugins/script_editor_plugin.h   |  1 +\r\n 3 files changed, 29 insertions(+), 2 deletions(-)\r\n\r\ndiff --git a/editor/editor_settings.cpp b/editor/editor_settings.cpp\r\nindex ae16a502791..b12038e9429 100644\r\n--- a/editor/editor_settings.cpp\r\n+++ b/editor/editor_settings.cpp\r\n@@ -447,6 +447,7 @@ void EditorSettings::_load_defaults(Ref<ConfigFile> p_extra_config) {\r\n \t_initial_set(\"text_editor/navigation/show_minimap\", true);\r\n \t_initial_set(\"text_editor/navigation/minimap_width\", 80);\r\n \thints[\"text_editor/navigation/minimap_width\"] = PropertyInfo(Variant::INT, \"text_editor/navigation/minimap_width\", PROPERTY_HINT_RANGE, \"50,250,1\");\r\n+\t_initial_set(\"text_editor/navigation/mouse_extra_buttons_navigate_history\", true);\r\n \r\n \t// Appearance\r\n \t_initial_set(\"text_editor/appearance/show_line_numbers\", true);\r\ndiff --git a/editor/plugins/script_editor_plugin.cpp b/editor/plugins/script_editor_plugin.cpp\r\nindex 60bed10351a..39c50d5e0f8 100644\r\n--- a/editor/plugins/script_editor_plugin.cpp\r\n+++ b/editor/plugins/script_editor_plugin.cpp\r\n@@ -2505,6 +2505,28 @@ void ScriptEditor::drop_data_fw(const Point2 &p_point, const Variant &p_data, Co\r\n \t}\r\n }\r\n \r\n+void ScriptEditor::_input(const Ref<InputEvent> &p_event) {\r\n+\r\n+\t// This feature can be disabled to avoid interfering with other uses of the additional\r\n+\t// mouse buttons, such as push-to-talk in a VoIP program.\r\n+\tif (EDITOR_GET(\"text_editor/navigation/mouse_extra_buttons_navigate_history\")) {\r\n+\t\tconst Ref<InputEventMouseButton> mb = p_event;\r\n+\r\n+\t\t// Navigate the script history using additional mouse buttons present on some mice.\r\n+\t\t// This must be hardcoded as the editor shortcuts dialog doesn't allow assigning\r\n+\t\t// more than one shortcut per action.\r\n+\t\tif (mb.is_valid() && mb->is_pressed() && is_visible_in_tree() && !get_viewport()->gui_has_modal_stack()) {\r\n+\t\t\tif (mb->get_button_index() == BUTTON_XBUTTON1) {\r\n+\t\t\t\t_history_back();\r\n+\t\t\t}\r\n+\r\n+\t\t\tif (mb->get_button_index() == BUTTON_XBUTTON2) {\r\n+\t\t\t\t_history_forward();\r\n+\t\t\t}\r\n+\t\t}\r\n+\t}\r\n+}\r\n+\r\n void ScriptEditor::_unhandled_input(const Ref<InputEvent> &p_event) {\r\n \tif (!is_visible_in_tree() || !p_event->is_pressed() || p_event->is_echo())\r\n \t\treturn;\r\n@@ -3045,6 +3067,7 @@ void ScriptEditor::_bind_methods() {\r\n \tClassDB::bind_method(\"_update_script_connections\", &ScriptEditor::_update_script_connections);\r\n \tClassDB::bind_method(\"_help_class_open\", &ScriptEditor::_help_class_open);\r\n \tClassDB::bind_method(\"_live_auto_reload_running_scripts\", &ScriptEditor::_live_auto_reload_running_scripts);\r\n+\tClassDB::bind_method(\"_input\", &ScriptEditor::_input);\r\n \tClassDB::bind_method(\"_unhandled_input\", &ScriptEditor::_unhandled_input);\r\n \tClassDB::bind_method(\"_update_members_overview\", &ScriptEditor::_update_members_overview);\r\n \tClassDB::bind_method(\"_update_recent_scripts\", &ScriptEditor::_update_recent_scripts);\r\n@@ -3165,8 +3188,10 @@ ScriptEditor::ScriptEditor(EditorNode *p_editor) {\r\n \tED_SHORTCUT(\"script_editor/window_sort\", TTR(\"Sort\"));\r\n \tED_SHORTCUT(\"script_editor/window_move_up\", TTR(\"Move Up\"), KEY_MASK_SHIFT | KEY_MASK_ALT | KEY_UP);\r\n \tED_SHORTCUT(\"script_editor/window_move_down\", TTR(\"Move Down\"), KEY_MASK_SHIFT | KEY_MASK_ALT | KEY_DOWN);\r\n-\tED_SHORTCUT(\"script_editor/next_script\", TTR(\"Next script\"), KEY_MASK_CMD | KEY_MASK_SHIFT | KEY_PERIOD); // these should be KEY_GREATER and KEY_LESS but those don't work\r\n-\tED_SHORTCUT(\"script_editor/prev_script\", TTR(\"Previous script\"), KEY_MASK_CMD | KEY_MASK_SHIFT | KEY_COMMA);\r\n+\t// FIXME: These should be `KEY_GREATER` and `KEY_LESS` but those don't work.\r\n+\tED_SHORTCUT(\"script_editor/next_script\", TTR(\"Next Script\"), KEY_MASK_CMD | KEY_MASK_SHIFT | KEY_PERIOD);\r\n+\tED_SHORTCUT(\"script_editor/prev_script\", TTR(\"Previous Script\"), KEY_MASK_CMD | KEY_MASK_SHIFT | KEY_COMMA);\r\n+\tset_process_input(true);\r\n \tset_process_unhandled_input(true);\r\n \r\n \tfile_menu = memnew(MenuButton);\r\ndiff --git a/editor/plugins/script_editor_plugin.h b/editor/plugins/script_editor_plugin.h\r\nindex b4b4f33fc5b..47d4833ddc1 100644\r\n--- a/editor/plugins/script_editor_plugin.h\r\n+++ b/editor/plugins/script_editor_plugin.h\r\n@@ -361,6 +361,7 @@ class ScriptEditor : public PanelContainer {\r\n \tbool can_drop_data_fw(const Point2 &p_point, const Variant &p_data, Control *p_from) const;\r\n \tvoid drop_data_fw(const Point2 &p_point, const Variant &p_data, Control *p_from);\r\n \r\n+\tvoid _input(const Ref<InputEvent> &p_event);\r\n \tvoid _unhandled_input(const Ref<InputEvent> &p_event);\r\n \r\n \tvoid _script_list_gui_input(const Ref<InputEvent> &ev);\r\n```\r\n</details>","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385252327,"public_id":36902,"url":"https://github.com/godotengine/godot/pull/36902","diff_url":"https://github.com/godotengine/godot/pull/36902.diff","patch_url":"https://github.com/godotengine/godot/pull/36902.patch","title":"Fix: `range()` function step argument 0 check implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-08T10:46:01Z","updated_at":"2021-03-20T14:54:54Z","body":"Fix: #20914\r\n\r\nworks for both `range()` in for loop or not.\r\n\r\n![step-arg-0-fix](https://user-images.githubusercontent.com/41085900/76161277-e7f71480-6157-11ea-8979-be533d345a18.JPG)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385177322,"public_id":36889,"url":"https://github.com/godotengine/godot/pull/36889","diff_url":"https://github.com/godotengine/godot/pull/36889.diff","patch_url":"https://github.com/godotengine/godot/pull/36889.patch","title":"Fix: 'use onready var' error message implemented for .get_child() .get_parent()","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-07T18:09:16Z","updated_at":"2021-01-05T00:58:35Z","body":"Fix: #36832\r\nEDIT: error message corrected for each method (old image)\r\n![1](https://user-images.githubusercontent.com/41085900/76150101-acfbcf00-60cc-11ea-91cf-341366abf388.JPG)\r\n\r\nalso fixed incorrect highlighting error line \r\n![2](https://user-images.githubusercontent.com/41085900/76150116-cc92f780-60cc-11ea-802b-791af41a8ea5.JPG)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":385114392,"public_id":36875,"url":"https://github.com/godotengine/godot/pull/36875","diff_url":"https://github.com/godotengine/godot/pull/36875.diff","patch_url":"https://github.com/godotengine/godot/pull/36875.patch","title":"Update documentation for Physics2DServer","state":"open","is_draft":false,"authored_by":{"id":55366994,"user":"seenloitering","avater":"https://avatars.githubusercontent.com/u/55366994?v=4","url":"https://github.com/seenloitering"},"created_at":"2020-03-07T07:10:32Z","updated_at":"2021-01-05T00:58:34Z","body":"Undocumented functions have been added and several existing explanations have been clarified or fleshed out. A more extensive description has been added including a (maybe too large) code sample that demonstrates some typical usage.\r\n\r\ninstance_id and canvas_id functions remain insufficiently explained imo.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":384993339,"public_id":36866,"url":"https://github.com/godotengine/godot/pull/36866","diff_url":"https://github.com/godotengine/godot/pull/36866.diff","patch_url":"https://github.com/godotengine/godot/pull/36866.patch","title":"Searching editor help centers around the found text (optional)","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-03-06T19:49:34Z","updated_at":"2021-03-20T01:45:33Z","body":"Fortunately (or not?), editor help uses one big RichTextLabel to render items, instead of TextEdit as the Script canvas. \r\nThanks to that, fix is based on content height divided in half.\r\n\r\nFixes: #36861","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":384808066,"public_id":36851,"url":"https://github.com/godotengine/godot/pull/36851","diff_url":"https://github.com/godotengine/godot/pull/36851.diff","patch_url":"https://github.com/godotengine/godot/pull/36851.patch","title":"GDScript::_owner type changed from GDScript* to Ref<GDScript>","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-06T12:58:23Z","updated_at":"2020-10-01T07:22:31Z","body":"Fix: #35857\r\nFix: #5843\r\nFix: #5726\r\n\r\nfix explained in the comments of the code below\r\n```gdscript\r\n## Node2D.gd\r\nextends Node2D\r\n\r\nconst SUB_CLASS_REF = preload(\"res://new_script.gd\").SubClass\r\n## now the \"new_script.gd\" (GDScript resource) is deleted \r\n## but SubClass has reference so it's not deleted\r\n## and SubClass (GDScript) `_owner` is now `NULL` (deleted)\r\n\r\nfunc _init():\r\n\tvar sub_class_instance = SUB_CLASS_REF.new()\r\n```\r\n\r\n```gdscript\r\n## new_script.gd\r\nextends Node\r\n\r\nconst CONSTANT_STRING = 'CONST STRING'\r\n\r\nclass SubClass:\r\n\t## after the \"new_script.gd\" (GDScript) deleted \r\n\t## there will be no `_owner` for this class/script \r\n\t## and no `_owner.constants` which has CONSTANT_STRING \r\n\t## so the below constant is invalid (BUG!!!)\r\n\tvar const_str = CONSTANT_STRING\r\n\r\n```\r\n\r\n\r\n**EDIT**\r\nanother possible scenario\r\n```gdscript\r\n## vect.gd\r\nextends Node\r\n\r\nclass Vect:\r\n\tstatic func new_vect(x:float, y:float):\r\n\t\treturn Vect.new()\r\n```\r\n\r\n```gdscript\r\n## node2d.gd\r\nextends Node2D\r\n\r\nconst Vect = preload(\"res://vect.gd\").Vect\r\nvar v1 = Vect.new_vect(1, 1) ## internal script error report please\r\n```\r\n\r\n\r\n \r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":384461021,"public_id":36830,"url":"https://github.com/godotengine/godot/pull/36830","diff_url":"https://github.com/godotengine/godot/pull/36830.diff","patch_url":"https://github.com/godotengine/godot/pull/36830.patch","title":"Added placeholder for TextEdit","state":"open","is_draft":false,"authored_by":{"id":29702428,"user":"Janglee123","avater":"https://avatars.githubusercontent.com/u/29702428?v=4","url":"https://github.com/Janglee123"},"created_at":"2020-03-05T19:34:22Z","updated_at":"2021-01-05T00:10:21Z","body":"**Todo**: Update documentation. I will do it after pr get reviewed and all suggested code changes are done.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1995.*","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":384320998,"public_id":36822,"url":"https://github.com/godotengine/godot/pull/36822","diff_url":"https://github.com/godotengine/godot/pull/36822.diff","patch_url":"https://github.com/godotengine/godot/pull/36822.patch","title":"Fix environment bgmode Canvas in GLES3","state":"open","is_draft":false,"authored_by":{"id":15088582,"user":"fossegutten","avater":"https://avatars.githubusercontent.com/u/15088582?v=4","url":"https://github.com/fossegutten"},"created_at":"2020-03-05T14:52:10Z","updated_at":"2021-08-06T11:24:33Z","body":"Viewport textures are now copied with transparency, if Environment has background mode \"Canvas\".\r\nFixes #36817","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":384286025,"public_id":36819,"url":"https://github.com/godotengine/godot/pull/36819","diff_url":"https://github.com/godotengine/godot/pull/36819.diff","patch_url":"https://github.com/godotengine/godot/pull/36819.patch","title":"Play audio automatically when double-clicking audio file","state":"open","is_draft":false,"authored_by":{"id":8281454,"user":"volzhs","avater":"https://avatars.githubusercontent.com/u/8281454?v=4","url":"https://github.com/volzhs"},"created_at":"2020-03-05T13:48:24Z","updated_at":"2020-09-02T19:41:04Z","body":"Close godotengine/godot-proposals#556\r\n\r\nUpdate : play audio automatically only when double-clicking on file system panel, not opening it by resouce in inspector panel.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":384157357,"public_id":36809,"url":"https://github.com/godotengine/godot/pull/36809","diff_url":"https://github.com/godotengine/godot/pull/36809.diff","patch_url":"https://github.com/godotengine/godot/pull/36809.patch","title":"Fix auto set_scale to (0,0)","state":"open","is_draft":true,"authored_by":{"id":32637656,"user":"sportshead","avater":"https://avatars.githubusercontent.com/u/32637656?v=4","url":"https://github.com/sportshead"},"created_at":"2020-03-05T09:22:00Z","updated_at":"2021-01-05T00:58:32Z","body":"This PR fixes #35081. Currently I have implemented a setting to prevent this automatic set_scale (see 71e23ed). I've marked this as a draft because I have not yet implemented functions that will prevent issues from happening when (0,0) is not auto set.\r\nFixes #36748 (duplicate of #35081)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":383698999,"public_id":36796,"url":"https://github.com/godotengine/godot/pull/36796","diff_url":"https://github.com/godotengine/godot/pull/36796.diff","patch_url":"https://github.com/godotengine/godot/pull/36796.patch","title":"Automatically fix name clashes on instantiation in editor","state":"open","is_draft":false,"authored_by":{"id":8106173,"user":"FroznMine","avater":"https://avatars.githubusercontent.com/u/8106173?v=4","url":"https://github.com/FroznMine"},"created_at":"2020-03-04T16:52:21Z","updated_at":"2021-01-05T00:58:31Z","body":"This is a very basic fix for #26390.\r\n\r\nWhen instancing dependent scenes in the editor the clashing names are now automatically changed and an error is logged. The renaming is done during PackedScene/SceneState::instance but only when the scene is opened in the editor. I currently did this only for the editior, as I think that automatic renaming while in-game would cause even more confusion to the user. (Compared to the current state of having multiple nodes with the same path/name.)\r\n\r\n### Caveats\r\n\r\nIt is not very obvious to the user that renaming took place as this is only logged as an error in the console and the scene is not displayed as modified [(*) marking in scene tab is missing]. \r\nThe renaming needs to be implemented somewhere else to solve these issues.\r\n\r\n### Different Approaches\r\nWhile trying to fix the issue my first intuition was to check for name clashes while loading the scene through ResourceLoader. During resource loading dependency errors can occur. These dependency errors are currently all 'missing dependency'-error. These can be resolved using the DependencyEditor, if they occur during loading. As the name duplication also is some type of dependency error - a 'name clash with dependency'-error - my idea was to generalize the notion of dependency errors and extend the DependencyEditor with a way to resolve name clashes.\r\n\r\nHowever, this approach has two complications:\r\n1. ResourceLoaders only create a PackedScene with SceneState in which it is very difficult to detect name clashes. As SceneStates only have a representation of the serialized scene, no nodes are instanced. Hence the node hierarchy is not immediately traversable, since all nodes are just `int` identifiers with another int-id referencing their parents. Finding name clashes would require to reimplement a node tree traversal on the level of SceneStates/PackedScenes.\r\n\r\n2. This approach would not show effects when the dependent scene is currently opened. When switching to the dependent scene (as done e.g. in #28133) the editor uses `EditorData::check_and_update_scene(int p_idx)` to refresh the scene and show the newly added node. This is done by packing and reinstancing the current scene:\r\nhttps://github.com/godotengine/godot/blob/080b5df6256a368fcd767aec96dd2200194542c8/editor/editor_data.cpp#L642-L645\r\nHence the resource loader is not involved there and the check would not be performed when implemented in the resource loaders. Thus the solution must be implemented in the instantiation too (code duplication) or else we need to change the way the scene is updated. The last one might be possible by writing the packed scene to a temporary file and load from this instead. But this in turn could have other side effects which need to be considered and handled.\r\n\r\nSo this approach is probably too much work.\r\n\r\nHere is another idea: Implementing more detailed error handling for PackedScene instancing.\r\nI noticed that the ResourceLoader class has static callbacks to inform about errors during loading:\r\nhttps://github.com/godotengine/godot/blob/080b5df6256a368fcd767aec96dd2200194542c8/core/io/resource_loader.h#L162-L176\r\n\r\nAs far as I can tell `notify_load_error/err_notify` is used nowhere and `notify_dependency_error/dep_err_notify` is only set by the EditorNode. This allows the engine to show the DependencyEditor to fix dependencies when in-editor and letting loading fail immediately with a (logged) error when in-game. Implementing a similar approach for PackedScene/SceneState on instancing of scenes would allow the editor to provide better guidance for the user in case of problems (like name clashes introduced by dependencies) while still simply failing (with a logged error) in-game.\r\n\r\nWhile requiring more in-depth work on SceneState, EditorNode and the creation of a NameClashResolver (similar to DependencyEditor) I think that this approach would give the best user experience. One might also be able to use it to make other editor errors more prominent to the user.\r\n\r\nAnother way to solve the problem would be moving the automatic renaming into the EditorNode where it is performed as part of loading and updating of scenes. Here it can be implemented as a series of undo/redo operations and hence correctly show the scene as modified. However this still does not solve the problem of properly informing the user about the renaming.\r\n\r\nI would like to hear your opinions on the possible solutions.\r\n\r\nFixes #26390\r\n_Bugsquad edit:_ Fixes #14680 too","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":383337304,"public_id":36780,"url":"https://github.com/godotengine/godot/pull/36780","diff_url":"https://github.com/godotengine/godot/pull/36780.diff","patch_url":"https://github.com/godotengine/godot/pull/36780.patch","title":"Fix script bug for static functions inside other static functions","state":"open","is_draft":false,"authored_by":{"id":52541536,"user":"BigRed-118","avater":"https://avatars.githubusercontent.com/u/52541536?v=4","url":"https://github.com/BigRed-118"},"created_at":"2020-03-04T04:48:16Z","updated_at":"2021-02-25T15:45:04Z","body":"A previous commit got rid of the initialization of the static_ref\r\nfor use in _get_variant in gdscript_function.cpp. This caused\r\nnested static functions not to be called and produced a\r\n\"CALL_ERROR_INVALID_METHOD\" error.\r\n\r\nThe issue was fixed by initializing the static_ref, now defined in gdscript_function.cpp, to be initialized to script, which would be the GDScript for the call. I'm open to other implementations if necessary.\r\n\r\nCommit that introduced bug: https://github.com/godotengine/godot/commit/4d960efafc64f0f94f68158ca49ed7f3dd9742dc\r\nReport of bug: https://github.com/godotengine/godot/issues/36765","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4038183]},{"id":383198319,"public_id":36776,"url":"https://github.com/godotengine/godot/pull/36776","diff_url":"https://github.com/godotengine/godot/pull/36776.diff","patch_url":"https://github.com/godotengine/godot/pull/36776.patch","title":"[WIP] Editor Android Port ","state":"open","is_draft":true,"authored_by":{"id":21955247,"user":"thebestnom","avater":"https://avatars.githubusercontent.com/u/21955247?v=4","url":"https://github.com/thebestnom"},"created_at":"2020-03-03T21:44:13Z","updated_at":"2021-08-10T00:37:26Z","body":"with the headstart of @fahrstuhl and my stubbornness android port is starting to look like it getting somewhere\r\n\r\nIssue discussing this feature https://github.com/godotengine/godot/issues/267\r\n\r\ncurrently in wip because\r\n\r\n- [x] Messy code (and hacky code), would like to get comments on it\r\n- [x] The editor expect double click, which double tap is not (and I\"m pretty sure double tap is not in the api)\r\n- [x] Can't work on master because it's broken for android (or at least to tools build on android, didn't test without tools true) (opend on 3.2 so we can see the actual changes)\r\n- [x] gradle way to detect normal build vs android studio build so normal build will add `no sign` to gradle build task and will not build with tools\r\n- [ ] And more real life testing\r\n\r\nBuild instruction https://github.com/godotengine/godot/pull/36776#issuecomment-645644153\r\n\r\n[Android Editor apk if you want to test it for yourself (arm64v8)](https://mega.nz/folder/u6IHQI4R#OLMeA8tqwWL_2T8vEo6CRQ)\r\n\r\nEDIT: replaced apk with release_debug version, with directory bug fixed\r\nEDIT2: recompiled over newer master commit (5d880bf7db7f46b1509bbe3ed704ea8acbf8e151)\r\nEDIT3: uploaded a new version and now link set to build folder where I will upload newer versions instead of editing the link everytime","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":382906844,"public_id":36759,"url":"https://github.com/godotengine/godot/pull/36759","diff_url":"https://github.com/godotengine/godot/pull/36759.diff","patch_url":"https://github.com/godotengine/godot/pull/36759.patch","title":"Autocomplete for .get() .set() implemented","state":"open","is_draft":false,"authored_by":{"id":41085900,"user":"ThakeeNathees","avater":"https://avatars.githubusercontent.com/u/41085900?v=4","url":"https://github.com/ThakeeNathees"},"created_at":"2020-03-03T11:51:53Z","updated_at":"2020-09-02T19:41:07Z","body":"possible Fix: #24460\r\n\r\nauto complete property name as string just like `.connect()`\r\n\r\n![autocomplete-get-set](https://user-images.githubusercontent.com/41085900/75773080-287b1a80-5d73-11ea-8359-51575a33f32a.JPG)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":382719352,"public_id":36747,"url":"https://github.com/godotengine/godot/pull/36747","diff_url":"https://github.com/godotengine/godot/pull/36747.diff","patch_url":"https://github.com/godotengine/godot/pull/36747.patch","title":"Add blend_premul_alpha support to scene shaders.","state":"open","is_draft":false,"authored_by":{"id":7751182,"user":"jitspoe","avater":"https://avatars.githubusercontent.com/u/7751182?v=4","url":"https://github.com/jitspoe"},"created_at":"2020-03-03T03:10:23Z","updated_at":"2021-08-06T11:24:33Z","body":"This was previously only supported by 2D shaders, but can be pretty useful in 3D as well.  For example, I'm using it for lasers where I don't want to use pure additive blending, because they lose visibility with bright backgrounds, but a normal alpha blend doesn't look good, either, so I make them mostly additive with some slight alpha to ensure visibility on brighter areas.\r\n\r\nI'm making this pull request directly into 3.2 because the gles3 renderer was removed and I can't make the pull request in master and have it merged back to 3.2.  (Also, can't compile master due to some internal compiler error, so I'll have to figure that out and make a different pull request for master to support vulkan after I figure that out, if this goes through).","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":382683903,"public_id":36745,"url":"https://github.com/godotengine/godot/pull/36745","diff_url":"https://github.com/godotengine/godot/pull/36745.diff","patch_url":"https://github.com/godotengine/godot/pull/36745.patch","title":"Added condition to hide html preset button","state":"open","is_draft":false,"authored_by":{"id":25304034,"user":"maxbarrett9","avater":"https://avatars.githubusercontent.com/u/25304034?v=4","url":"https://github.com/maxbarrett9"},"created_at":"2020-03-03T00:38:13Z","updated_at":"2021-01-20T05:30:27Z","body":"Added to the code written by @jackbondpreston in https://github.com/godotengine/godot/pull/35680. Included a condition to check if button is disabled, then the button is hidden.\r\nFixes #35592.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":382579927,"public_id":36737,"url":"https://github.com/godotengine/godot/pull/36737","diff_url":"https://github.com/godotengine/godot/pull/36737.diff","patch_url":"https://github.com/godotengine/godot/pull/36737.patch","title":"Delay colorpick eyedrop preview using a timer","state":"open","is_draft":false,"authored_by":{"id":45542433,"user":"giarve","avater":"https://avatars.githubusercontent.com/u/45542433?v=4","url":"https://github.com/giarve"},"created_at":"2020-03-02T20:01:54Z","updated_at":"2021-03-23T15:23:02Z","body":"This avoids recalculating the color of the selected pixel every time the mouse is moved.\r\n\r\nFixes #25358.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":381905997,"public_id":36677,"url":"https://github.com/godotengine/godot/pull/36677","diff_url":"https://github.com/godotengine/godot/pull/36677.diff","patch_url":"https://github.com/godotengine/godot/pull/36677.patch","title":"Improve the plugin editor UX","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-29T17:58:18Z","updated_at":"2020-09-02T19:41:09Z","body":"- Make the subfolder path and script path optional.\r\n  - If empty, the default subfolder path will be the plugin name converted to `snake_case`.\r\n  - If empty, the script path will be `plugin.<ext>` where `<ext>` is the extension of the script language chosen.\r\n- Add tooltips to all fields.\r\n- Align labels to the right to be closer to the text fields.\r\n- Rename the \"Update\" button to \"Refresh\" in the plugin list as it doesn't actually update plugins, just refresh the list.\r\n\r\nCreating plugins has never been faster. Now, you just need to fill in the **Plugin Name** field and you're good to go :slightly_smiling_face: \r\n\r\nSee #36636.\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/75612685-38ea8580-5b26-11ea-9810-cef6047770b1.png)","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":307135532,"name":"topic:plugin","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":381624784,"public_id":36660,"url":"https://github.com/godotengine/godot/pull/36660","diff_url":"https://github.com/godotengine/godot/pull/36660.diff","patch_url":"https://github.com/godotengine/godot/pull/36660.patch","title":"Sync mouse_filter property in SpinBox with internal LineEdit","state":"open","is_draft":false,"authored_by":{"id":37181756,"user":"simpuid","avater":"https://avatars.githubusercontent.com/u/37181756?v=4","url":"https://github.com/simpuid"},"created_at":"2020-02-28T22:27:22Z","updated_at":"2021-01-05T00:58:29Z","body":"Fixes #36632 \r\n\r\nThe `mouse_filter` property of `SpinBox` is synchronized with `SpinBox::line_edit`. It was implemented by overriding `Control::set_mouse_filter` setter in `SpinBox` and forwarding `p_filter` of `Setter::set_mouse_filter` to `SpinBox::set_line_edit_mouse_filter`\r\n\r\nChanges made\r\n* Change `Control::set_mouse_filter` to virtual method.\r\n* Override `Control::set_mouse_filter` as `SpinBox::set_mouse_filter`\r\n* Added `SpinBox::_set_line_edit_mouse_filter` and call it in `SpinBox::set_mouse_filter` and in `SpinBox::SpinBox`\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":380485360,"public_id":36575,"url":"https://github.com/godotengine/godot/pull/36575","diff_url":"https://github.com/godotengine/godot/pull/36575.diff","patch_url":"https://github.com/godotengine/godot/pull/36575.patch","title":"Animation Curves: moving the timeline requires redrawing the bezier editor","state":"open","is_draft":false,"authored_by":{"id":45542433,"user":"giarve","avater":"https://avatars.githubusercontent.com/u/45542433?v=4","url":"https://github.com/giarve"},"created_at":"2020-02-26T20:21:49Z","updated_at":"2021-01-20T11:28:07Z","body":"The timeline could be dragged and resized but the bezier editor didn't answer to the movement redrawing the contents and the current time play bar.\r\n\r\nFixes #36403.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":380387900,"public_id":36569,"url":"https://github.com/godotengine/godot/pull/36569","diff_url":"https://github.com/godotengine/godot/pull/36569.diff","patch_url":"https://github.com/godotengine/godot/pull/36569.patch","title":"Fix the crash during recording","state":"open","is_draft":false,"authored_by":{"id":1877406,"user":"mika314","avater":"https://avatars.githubusercontent.com/u/1877406?v=4","url":"https://github.com/mika314"},"created_at":"2020-02-26T16:39:58Z","updated_at":"2021-01-05T00:58:25Z","body":"This fix addresses the following issue: Invalid read in audio demo #34494\r\n\r\nProtect recording_data with a mutex to prevent racing.\r\n\r\nTested with my crashing project on 3.2 branch for 5 minutes. No crashes.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":379853775,"public_id":36544,"url":"https://github.com/godotengine/godot/pull/36544","diff_url":"https://github.com/godotengine/godot/pull/36544.diff","patch_url":"https://github.com/godotengine/godot/pull/36544.patch","title":"Fix StringName Inequality Operators","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-02-25T22:52:46Z","updated_at":"2020-09-02T19:41:11Z","body":"Fixes #36511\r\n\r\nThis one got me for a good 4 hours!\r\n\r\n![image](https://user-images.githubusercontent.com/14253836/75295020-716d2500-57ef-11ea-9ef8-81a8f6ed788b.png)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":379781954,"public_id":36541,"url":"https://github.com/godotengine/godot/pull/36541","diff_url":"https://github.com/godotengine/godot/pull/36541.diff","patch_url":"https://github.com/godotengine/godot/pull/36541.patch","title":"WIP: adding docs for Texture2DArray, Cubemap, CubemapArray, and overhaul TextureLayered","state":"open","is_draft":true,"authored_by":{"id":6639237,"user":"MJacred","avater":"https://avatars.githubusercontent.com/u/6639237?v=4","url":"https://github.com/MJacred"},"created_at":"2020-02-25T20:23:01Z","updated_at":"2021-01-05T00:58:24Z","body":"will add docs for Texture2DArray and Texture3D as requested in issue #30298\r\n\r\n* [x] TextureLayered\r\n* [x] Texture2DArray\r\n* [x] Cubemap\r\n* [x] CubemapArray\r\n\r\n# TextureLayered\r\n\r\noverhaul\r\n* brief_description\r\n* description\r\n\r\nadding descriptions for\r\n*  _get_images()\r\n* create_from_images()\r\n* get_layers()\r\n* update_layer()\r\n\r\n# Texture2DArray\r\n\r\nadding\r\n* brief_description\r\n* description\r\n\r\n# Cubemap\r\n\r\nadding\r\n* brief_description\r\n* description\r\n\r\n# CubemapArray\r\n\r\nadding\r\n* brief_description\r\n* description\r\n","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":379153030,"public_id":36516,"url":"https://github.com/godotengine/godot/pull/36516","diff_url":"https://github.com/godotengine/godot/pull/36516.diff","patch_url":"https://github.com/godotengine/godot/pull/36516.patch","title":"GridMap: temporary hide cell under mouse cursor when painting","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2020-02-24T18:47:35Z","updated_at":"2021-03-20T20:52:45Z","body":"I took simple approach, when mouse cursor is moving on top of occupied cell, that cell is simple being transformed far far away, until another cell is pointed - then, first cell is being moved back to origin position. \r\n\r\nThat's the simplest way of fixing that issue, without in-depth reworking of how **MultimeshInstances** works - there is currently no API to hide single instance in Multimesh.\r\n\r\nFixes #5526","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":378753128,"public_id":36493,"url":"https://github.com/godotengine/godot/pull/36493","diff_url":"https://github.com/godotengine/godot/pull/36493.diff","patch_url":"https://github.com/godotengine/godot/pull/36493.patch","title":"Add option to allow echo events in menu shortcuts","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-02-23T21:28:24Z","updated_at":"2021-01-05T00:57:24Z","body":"I implemented this for #28427, but then realized I can close that issue without adding new functionality.\r\n\r\nLuckily I kept the code, because apparently this is useful for #31739\r\nTo use this in editor, you need to add `false, true` to editor shortcut, e.g.\r\n```\r\nedit_menu->get_popup()->add_shortcut(ED_GET_SHORTCUT(\"script_text_editor/delete_line\"), EDIT_DELETE_LINE, false, true);\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":378540855,"public_id":36434,"url":"https://github.com/godotengine/godot/pull/36434","diff_url":"https://github.com/godotengine/godot/pull/36434.diff","patch_url":"https://github.com/godotengine/godot/pull/36434.patch","title":"Add the \"invert condition\" property to AnimationNodeStateMachineTransition","state":"open","is_draft":false,"authored_by":{"id":31065808,"user":"Riteo","avater":"https://avatars.githubusercontent.com/u/31065808?v=4","url":"https://github.com/Riteo"},"created_at":"2020-02-22T02:31:14Z","updated_at":"2021-02-02T19:45:46Z","body":"Resolves [godotengine/godot-proposals#454](https://github.com/godotengine/godot-proposals/issues/454)\r\n\r\nAdds the \"Invert Condition\" parameter to AnimationNodeStateMachinetransition, which avoids the creation of \"not\" conditions(\"IsMoving\" \"NotIsMoving\")\r\n\r\nAlso, i've created a quick test project for testing this feature at https://github.com/Riteo/godot-invert-condition-test-project\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":378349027,"public_id":36424,"url":"https://github.com/godotengine/godot/pull/36424","diff_url":"https://github.com/godotengine/godot/pull/36424.diff","patch_url":"https://github.com/godotengine/godot/pull/36424.patch","title":" Improve the error message about MAX_EXTENSIONS. Add two comments about where extensions are being registered","state":"open","is_draft":false,"authored_by":{"id":17693273,"user":"M4gma","avater":"https://avatars.githubusercontent.com/u/17693273?v=4","url":"https://github.com/M4gma"},"created_at":"2020-02-21T15:51:12Z","updated_at":"2021-01-05T00:57:21Z","body":"Some error checks therefore were removed.\r\n\r\nSee: https://github.com/godotengine/godot/issues/36405","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":377898776,"public_id":36391,"url":"https://github.com/godotengine/godot/pull/36391","diff_url":"https://github.com/godotengine/godot/pull/36391.diff","patch_url":"https://github.com/godotengine/godot/pull/36391.patch","title":"Inform the vulkan driver about the engine version and the application version.","state":"open","is_draft":false,"authored_by":{"id":17693273,"user":"M4gma","avater":"https://avatars.githubusercontent.com/u/17693273?v=4","url":"https://github.com/M4gma"},"created_at":"2020-02-20T18:02:38Z","updated_at":"2021-01-05T00:57:20Z","body":"The engine version is passed by hashing VERSION_NUMBER from _core/version.h_\r\n\r\nI plan the applicationVersion to be passed by making the VCS api save the version string of a game at the project settings on export.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":376790836,"public_id":36331,"url":"https://github.com/godotengine/godot/pull/36331","diff_url":"https://github.com/godotengine/godot/pull/36331.diff","patch_url":"https://github.com/godotengine/godot/pull/36331.patch","title":"Dragging a node under the last item of the tree raises it a level","state":"open","is_draft":false,"authored_by":{"id":45542433,"user":"giarve","avater":"https://avatars.githubusercontent.com/u/45542433?v=4","url":"https://github.com/giarve"},"created_at":"2020-02-18T19:20:07Z","updated_at":"2021-01-05T00:57:18Z","body":"A children node couldn't be taken out of the father without scrolling back to the parent node icon\r\nand thus making very troublesome to rearrange a children to be a sibling of its parent if the list of the nodes was long.\r\n\r\nBy adding an extra dragging line at the end of any children tree we can ensure that the user can move without effort a children up to parent's level even if the parent is many nodes away.\r\n\r\n![dragging](https://user-images.githubusercontent.com/45542433/74770082-d5da3280-528b-11ea-970a-c71845389fe0.gif)\r\n\r\nIf needed, spacing or thickness for the new line can be increased.\r\n\r\nEDIT: As requested, thickness has been increased from 1 to 2.\r\n\r\nFixes #34033.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":376147677,"public_id":36301,"url":"https://github.com/godotengine/godot/pull/36301","diff_url":"https://github.com/godotengine/godot/pull/36301.diff","patch_url":"https://github.com/godotengine/godot/pull/36301.patch","title":"Add reparent methods to Node","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-02-17T13:51:06Z","updated_at":"2020-09-02T19:41:16Z","body":"Closes https://github.com/godotengine/godot-proposals/issues/153\r\nCloses #21781","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":375878886,"public_id":36285,"url":"https://github.com/godotengine/godot/pull/36285","diff_url":"https://github.com/godotengine/godot/pull/36285.diff","patch_url":"https://github.com/godotengine/godot/pull/36285.patch","title":"flesh out ProximityGroup class documentation","state":"open","is_draft":false,"authored_by":{"id":6639237,"user":"MJacred","avater":"https://avatars.githubusercontent.com/u/6639237?v=4","url":"https://github.com/MJacred"},"created_at":"2020-02-16T22:03:23Z","updated_at":"2021-03-07T18:13:20Z","body":"I wrote as much and good as I could, but I still have some trouble wrapping my head around the `ProximityGroup::broadcast()` method -> if the group names are created internally, how are they useful?\r\n\r\nfixes #29211\r\n\r\n**EDIT**: after reading it many times and some thinking, I figured it out. Commits can be merged if the explanation is fine","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":375847612,"public_id":36275,"url":"https://github.com/godotengine/godot/pull/36275","diff_url":"https://github.com/godotengine/godot/pull/36275.diff","patch_url":"https://github.com/godotengine/godot/pull/36275.patch","title":"flesh out ProxyTexture class documentation","state":"open","is_draft":false,"authored_by":{"id":6639237,"user":"MJacred","avater":"https://avatars.githubusercontent.com/u/6639237?v=4","url":"https://github.com/MJacred"},"created_at":"2020-02-16T16:55:48Z","updated_at":"2021-01-05T00:57:16Z","body":"adding\r\n* brief description\r\n* description\r\n\r\nadding methods\r\n* get_width\r\n* get_height\r\n* get_rid\r\n* has_alpha\r\n\r\nadding members\r\n* proxy\r\n* proxy_ph\r\n\r\nadding description for member `base`\r\n\r\nadding bindings in `ProxyTexture::_bind_methods()`","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":375756138,"public_id":36252,"url":"https://github.com/godotengine/godot/pull/36252","diff_url":"https://github.com/godotengine/godot/pull/36252.diff","patch_url":"https://github.com/godotengine/godot/pull/36252.patch","title":"Add colors to the command-line help","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-15T20:47:06Z","updated_at":"2021-03-31T16:33:03Z","body":"This makes the command-line help easier to read. The color scheme is inspired by [Composer](https://getcomposer.org).\r\n\r\n## TODO\r\n\r\n- Add Windows support. If the design is good to go, let me know and I'll do that :slightly_smiling_face: \r\n  - Alternatively, we may want to enable support for ANSI escape codes on Windows 10 and not bother with coloring terminal output on Windows 8.1 and older. This will make it possible to use the same color implementation on all platforms. We'll need to make the print handler strip ANSI escape code on older Windows versions for this to work.\r\n    - **Edit:** Done by https://github.com/godotengine/godot/pull/44118 (not merged yet).\r\n\r\n## Preview\r\n\r\n![Command-line help](https://user-images.githubusercontent.com/180032/74594994-bdc0a400-503c-11ea-8d37-d5091cc8c954.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":375129955,"public_id":36198,"url":"https://github.com/godotengine/godot/pull/36198","diff_url":"https://github.com/godotengine/godot/pull/36198.diff","patch_url":"https://github.com/godotengine/godot/pull/36198.patch","title":"Use JetBrains Mono as the editor's default code font","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-13T22:59:34Z","updated_at":"2021-08-22T04:50:14Z","body":"This recently released font has been gaining popularity thanks to its readability and aesthetics. It also features ligatures which will be usable once Godot features text shaping support.\r\n\r\nIts character set isn't as extensive as Hack's, but it should be sufficient for most uses.\r\n\r\nMore information at <https://www.jetbrains.com/lp/mono/>.\r\n\r\nThis also reorders the third-party font notices to be in alphabetical order.\r\n\r\n## Preview\r\n\r\n### Before\r\n\r\n![before](https://user-images.githubusercontent.com/1646875/74507180-a44b1b00-4ec9-11ea-981d-7200178b881d.png)\r\n\r\n### After\r\n\r\n![script_editor_font_jetbrains_mono](https://user-images.githubusercontent.com/180032/74486282-e91c8500-4ebc-11ea-91e6-fe7bac5e1ae0.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418518]},{"id":374090432,"public_id":36128,"url":"https://github.com/godotengine/godot/pull/36128","diff_url":"https://github.com/godotengine/godot/pull/36128.diff","patch_url":"https://github.com/godotengine/godot/pull/36128.patch","title":"Clarify TouchScreenButton operation & use.","state":"open","is_draft":false,"authored_by":{"id":189962,"user":"follower","avater":"https://avatars.githubusercontent.com/u/189962?v=4","url":"https://github.com/follower"},"created_at":"2020-02-12T03:46:48Z","updated_at":"2021-02-25T15:40:05Z","body":"Clarifies the ways in which a `TouchScreenButton` differs in operation from a `Control`-based node like `Button`.\r\n\r\nAdds (implied) clarification that `TouchScreenButtons` are not affected by the usual layout controls and hints at how this can be worked-around.\r\n\r\nMost of the text for the first paragraph is from @reduz here: <https://github.com/godotengine/godot/issues/15039#issuecomment-353887848>\r\n\r\nLayout workaround mentioned by @Calinou here: <https://github.com/godotengine/godot/issues/28814#issuecomment-491410744>\r\n\r\nThis came about in the process of trying to answer the query \"_Need UI Advice .. mixing Node2D with control?_\" here: <https://old.reddit.com/r/godot/comments/f2imur/need_ui_advice_mixing_node2d_with_control/>\r\n\r\nAdditional references:\r\n\r\n * \"TouchScreenButton is not consuming the event #21041 \": <https://github.com/godotengine/godot/issues/21041>\r\n\r\n----\r\n\r\nNote: I haven't checked this edit via the documentation generation system...because I'm a terrible person. :D (And because I can't do it through the web interface--yet. :) ) But hopefully it's better than nothing--feel free to close/modify as desired. Thanks!","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":373292685,"public_id":36084,"url":"https://github.com/godotengine/godot/pull/36084","diff_url":"https://github.com/godotengine/godot/pull/36084.diff","patch_url":"https://github.com/godotengine/godot/pull/36084.patch","title":"Blank/Comment lines at the beginning are considered \"unsafe\" #20418","state":"open","is_draft":false,"authored_by":{"id":3277121,"user":"wwrzal","avater":"https://avatars.githubusercontent.com/u/3277121?v=4","url":"https://github.com/wwrzal"},"created_at":"2020-02-10T18:44:55Z","updated_at":"2021-01-05T00:57:09Z","body":"GDScriptTokenizerText::_advance when detecting new line would first increment line number, parse leading spaces and tabs in new line and only then whould create new line token with incorrect data. I've added code to save correct line and column and pass it to _make_newline. This seems to fix #20418.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372776873,"public_id":36040,"url":"https://github.com/godotengine/godot/pull/36040","diff_url":"https://github.com/godotengine/godot/pull/36040.diff","patch_url":"https://github.com/godotengine/godot/pull/36040.patch","title":"Allow moving the editor's bottom panel to the right","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-09T01:16:34Z","updated_at":"2021-08-22T00:41:02Z","body":"This lets people make better use of their display if it's wide enough.\r\n\r\nThere's a shortcut to toggle the bottom panel's position: <kbd>Shift + F10</kbd>. Let me know if another combination would be more appropriate.\r\n\r\nThis is a WIP and needs some changes before it can be merged:\r\n\r\n- [ ] Disallow moving the bottom panel to the right if the editor window isn't wide enough. In my experience, this feature is only usable if the window is at least 1800 pixels wide. In practice, this means you need a 1920×1080 monitor at least. Ultrawide monitors are a particularly good fit for this feature.\r\n- [ ] Figure out what to do when no subpanel is displayed while the panel is on the right. Right now, the panel can still be resized but it just wastes space. Should we forbid closing a subpanel while the panel is moved to the right?\r\n- [ ] Collapse the splitter to make it non-draggable when moving the bottom panel back to the bottom while it's collapsed.\r\n  - This can also be solved by not allowing the user to close a subpanel while the panel is moved to the right (see above).\r\n- [ ] Save the setting and make it persist across editor restarts.\r\n- [x] ~~Change the button's tooltip after moving the bottom panel to the right.~~\r\n  - Renamed the tooltip to \"Toggle Bottom Panel Position\" to make it more logical in the editor shortcuts dialog.\r\n- [ ] Use an icon that better represents moving the panel? Right now, I just use a generic arrow icon.\r\n\r\nWe could also investigate making the panel movable to the left, but I think this is better left for a future pull request.\r\n\r\nThis partially addresses #26229 (and probably a few other issues I can't find right now).\r\n\r\n<details>\r\n<summary>February 2020 patch</summary>\r\n\r\n```patch\r\nFrom 29b62220849c90e2573ecd2c28311c096d1ef918 Mon Sep 17 00:00:00 2001\r\nFrom: Hugo Locurcio <hugo.locurcio@hugo.pro>\r\nDate: Sun, 9 Feb 2020 02:12:01 +0100\r\nSubject: [PATCH] Allow moving the editor's bottom panel to the right\r\n\r\nThis lets people make better use of their display if it's wide enough.\r\n---\r\n editor/editor_node.cpp                        | 46 ++++++++++++++++---\r\n editor/editor_node.h                          |  3 ++\r\n .../icons/icon_expand_bottom_dock_right.svg   |  1 +\r\n scene/gui/split_container.cpp                 | 17 +++++++\r\n scene/gui/split_container.h                   |  3 ++\r\n 5 files changed, 64 insertions(+), 6 deletions(-)\r\n create mode 100644 editor/icons/icon_expand_bottom_dock_right.svg\r\n\r\ndiff --git a/editor/editor_node.cpp b/editor/editor_node.cpp\r\nindex 7d0601e8db17..43ba28941bce 100644\r\n--- a/editor/editor_node.cpp\r\n+++ b/editor/editor_node.cpp\r\n@@ -4874,8 +4874,12 @@ void EditorNode::_bottom_panel_switch(bool p_enable, int p_idx) {\r\n \t\t} else {\r\n \t\t\tbottom_panel->add_style_override(\"panel\", gui_base->get_stylebox(\"panel\", \"TabContainer\"));\r\n \t\t}\r\n-\t\tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_VISIBLE);\r\n-\t\tcenter_split->set_collapsed(false);\r\n+\r\n+\t\tif (center_split->is_vertical()) {\r\n+\t\t\tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_VISIBLE);\r\n+\t\t\tcenter_split->set_collapsed(false);\r\n+\t\t}\r\n+\r\n \t\tif (bottom_panel_raise->is_pressed()) {\r\n \t\t\ttop_split->hide();\r\n \t\t}\r\n@@ -4885,8 +4889,12 @@ void EditorNode::_bottom_panel_switch(bool p_enable, int p_idx) {\r\n \t\tbottom_panel->add_style_override(\"panel\", gui_base->get_stylebox(\"panel\", \"TabContainer\"));\r\n \t\tbottom_panel_items[p_idx].button->set_pressed(false);\r\n \t\tbottom_panel_items[p_idx].control->set_visible(false);\r\n-\t\tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_HIDDEN);\r\n-\t\tcenter_split->set_collapsed(true);\r\n+\r\n+\t\tif (center_split->is_vertical()) {\r\n+\t\t\tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_HIDDEN);\r\n+\t\t\tcenter_split->set_collapsed(true);\r\n+\t\t}\r\n+\r\n \t\tbottom_panel_raise->hide();\r\n \t\tif (bottom_panel_raise->is_pressed()) {\r\n \t\t\ttop_split->show();\r\n@@ -5329,6 +5337,25 @@ void EditorNode::_bottom_panel_raise_toggled(bool p_pressed) {\r\n \ttop_split->set_visible(!p_pressed);\r\n }\r\n \r\n+void EditorNode::_bottom_panel_move_pressed() {\r\n+\r\n+\tif (center_split->is_vertical()) {\r\n+\t\t// Move the bottom panel to the right to make better use of wide displays.\r\n+\t\tcenter_split->set_vertical(false);\r\n+\t\tcenter_split->add_icon_override(\"grabber\", theme->get_icon(\"GuiHsplitter\", \"EditorIcons\"));\r\n+\t\tbottom_panel_raise->set_icon(gui_base->get_icon(\"ExpandBottomDockRight\", \"EditorIcons\"));\r\n+\t\tbottom_panel_move->set_icon(gui_base->get_icon(\"ArrowDown\", \"EditorIcons\"));\r\n+\t\t// Always allow moving the dragger if the panel is moved to the right.\r\n+\t\tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_VISIBLE);\r\n+\t} else {\r\n+\t\t// Move the bottom panel back to the bottom.\r\n+\t\tcenter_split->set_vertical(true);\r\n+\t\tcenter_split->add_icon_override(\"grabber\", theme->get_icon(\"GuiVsplitter\", \"EditorIcons\"));\r\n+\t\tbottom_panel_raise->set_icon(gui_base->get_icon(\"ExpandBottomDock\", \"EditorIcons\"));\r\n+\t\tbottom_panel_move->set_icon(gui_base->get_icon(\"ArrowRight\", \"EditorIcons\"));\r\n+\t}\r\n+}\r\n+\r\n void EditorNode::_update_video_driver_color() {\r\n \r\n \t// TODO: Probably should de-hardcode this and add to editor settings.\r\n@@ -5484,6 +5511,7 @@ void EditorNode::_bind_methods() {\r\n \r\n \tClassDB::bind_method(D_METHOD(\"_resources_reimported\"), &EditorNode::_resources_reimported);\r\n \tClassDB::bind_method(D_METHOD(\"_bottom_panel_raise_toggled\"), &EditorNode::_bottom_panel_raise_toggled);\r\n+\tClassDB::bind_method(D_METHOD(\"_bottom_panel_move_pressed\"), &EditorNode::_bottom_panel_move_pressed);\r\n \r\n \tClassDB::bind_method(D_METHOD(\"_on_plugin_ready\"), &EditorNode::_on_plugin_ready);\r\n \r\n@@ -6498,6 +6526,8 @@ EditorNode::EditorNode() {\r\n \tcenter_split->set_dragger_visibility(SplitContainer::DRAGGER_HIDDEN);\r\n \r\n \tbottom_panel_vb = memnew(VBoxContainer);\r\n+\t// Make tabs display at the bottom when the bottom bar is moved to the right.\r\n+\tbottom_panel_vb->set_alignment(BoxContainer::ALIGN_END);\r\n \tbottom_panel->add_child(bottom_panel_vb);\r\n \r\n \tbottom_panel_hb = memnew(HBoxContainer);\r\n@@ -6516,14 +6546,18 @@ EditorNode::EditorNode() {\r\n \r\n \tbottom_panel_raise = memnew(ToolButton);\r\n \tbottom_panel_raise->set_icon(gui_base->get_icon(\"ExpandBottomDock\", \"EditorIcons\"));\r\n-\r\n \tbottom_panel_raise->set_shortcut(ED_SHORTCUT(\"editor/bottom_panel_expand\", TTR(\"Expand Bottom Panel\"), KEY_MASK_SHIFT | KEY_F12));\r\n-\r\n \tbottom_panel_hb->add_child(bottom_panel_raise);\r\n \tbottom_panel_raise->hide();\r\n \tbottom_panel_raise->set_toggle_mode(true);\r\n \tbottom_panel_raise->connect(\"toggled\", this, \"_bottom_panel_raise_toggled\");\r\n \r\n+\tbottom_panel_move = memnew(ToolButton);\r\n+\tbottom_panel_move->set_icon(gui_base->get_icon(\"ArrowRight\", \"EditorIcons\"));\r\n+\tbottom_panel_move->set_shortcut(ED_SHORTCUT(\"editor/bottom_panel_move\", TTR(\"Toggle Bottom Panel Position\"), KEY_MASK_SHIFT | KEY_F10));\r\n+\tbottom_panel_hb->add_child(bottom_panel_move);\r\n+\tbottom_panel_move->connect(\"pressed\", this, \"_bottom_panel_move_pressed\");\r\n+\r\n \tlog = memnew(EditorLog);\r\n \tToolButton *output_button = add_bottom_panel_item(TTR(\"Output\"), log);\r\n \tlog->set_tool_button(output_button);\r\ndiff --git a/editor/editor_node.h b/editor/editor_node.h\r\nindex a5c04d353199..8a58d576d81e 100644\r\n--- a/editor/editor_node.h\r\n+++ b/editor/editor_node.h\r\n@@ -426,8 +426,11 @@ class EditorNode : public Node {\r\n \tVBoxContainer *bottom_panel_vb;\r\n \tLabel *version_label;\r\n \tToolButton *bottom_panel_raise;\r\n+\tToolButton *bottom_panel_move;\r\n \r\n \tvoid _bottom_panel_raise_toggled(bool);\r\n+\tvoid _bottom_panel_move_pressed();\r\n+\tvoid _init_center_split(bool p_on_right);\r\n \r\n \tEditorInterface *editor_interface;\r\n \r\ndiff --git a/editor/icons/icon_expand_bottom_dock_right.svg b/editor/icons/icon_expand_bottom_dock_right.svg\r\nnew file mode 100644\r\nindex 000000000000..22260628c647\r\n--- /dev/null\r\n+++ b/editor/icons/icon_expand_bottom_dock_right.svg\r\n@@ -0,0 +1 @@\r\n+<svg height=\"16\" viewBox=\"0 0 16 16\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#e0e0e0\" transform=\"matrix(0 -1 1 0 .75437 16.060236)\"><path d=\"m4.2130251 4.516057-3.5355339 3.5355339h2.5356849v4.9737171h1.9998394v-4.9737171h2.5356849l-3.5355339-3.5355339z\"/><path d=\"m11.907306 4.6119359-3.5355342 3.5355339h2.5356852v4.9737172h1.999839v-4.9737172h2.535685l-3.535534-3.5355339z\"/><path d=\"m1.288136 1.370074h14v1.830509h-14z\"/></g></svg>\r\n\\ No newline at end of file\r\ndiff --git a/scene/gui/split_container.cpp b/scene/gui/split_container.cpp\r\nindex 079907db07f4..95718ab46eb9 100644\r\n--- a/scene/gui/split_container.cpp\r\n+++ b/scene/gui/split_container.cpp\r\n@@ -333,6 +333,23 @@ bool SplitContainer::is_collapsed() const {\r\n \treturn collapsed;\r\n }\r\n \r\n+/**\r\n+ * Hack to make the editor's bottom panel position movable to the right without\r\n+ * having to fiddle with the node structure. This method is intentionally not\r\n+ * exposed for now.\r\n+ */\r\n+void SplitContainer::set_vertical(bool p_vertical) {\r\n+\r\n+\tvertical = p_vertical;\r\n+\tqueue_sort();\r\n+\tupdate();\r\n+}\r\n+\r\n+bool SplitContainer::is_vertical() const {\r\n+\r\n+\treturn vertical;\r\n+}\r\n+\r\n void SplitContainer::_bind_methods() {\r\n \r\n \tClassDB::bind_method(D_METHOD(\"_gui_input\"), &SplitContainer::_gui_input);\r\ndiff --git a/scene/gui/split_container.h b/scene/gui/split_container.h\r\nindex d759c6ad3526..00c111b39535 100644\r\n--- a/scene/gui/split_container.h\r\n+++ b/scene/gui/split_container.h\r\n@@ -73,6 +73,9 @@ class SplitContainer : public Container {\r\n \tvoid set_collapsed(bool p_collapsed);\r\n \tbool is_collapsed() const;\r\n \r\n+\tvoid set_vertical(bool p_vertical);\r\n+\tbool is_vertical() const;\r\n+\r\n \tvoid set_dragger_visibility(DraggerVisibility p_visibility);\r\n \tDraggerVisibility get_dragger_visibility() const;\r\n \r\n```\r\n</details>\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/74094476-39bd6800-4ae2-11ea-848f-6278bdebde21.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372766003,"public_id":36037,"url":"https://github.com/godotengine/godot/pull/36037","diff_url":"https://github.com/godotengine/godot/pull/36037.diff","patch_url":"https://github.com/godotengine/godot/pull/36037.patch","title":"Check if bbcode is enable and filled before parsing and overwrite text property","state":"open","is_draft":false,"authored_by":{"id":10395115,"user":"leodimano","avater":"https://avatars.githubusercontent.com/u/10395115?v=4","url":"https://github.com/leodimano"},"created_at":"2020-02-08T22:38:03Z","updated_at":"2021-01-05T00:57:06Z","body":"When the RichTextLabel node gets duplicates the last property to be duplicate is CustomEffects wich calls the parse_bbcode method. I've fix the parse_bbcode method to process only if the use_bbcode is flagged and there is actual bbcode to be parsed, otherwise keep the current node text.\r\n\r\n_Bugsquad edit:_ Fixes #35553","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372745701,"public_id":36023,"url":"https://github.com/godotengine/godot/pull/36023","diff_url":"https://github.com/godotengine/godot/pull/36023.diff","patch_url":"https://github.com/godotengine/godot/pull/36023.patch","title":"Tweak GDScript error messages for consistency","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-08T18:40:53Z","updated_at":"2020-09-02T19:41:24Z","body":"Follow-up to #31607.\r\n\r\nThis also mentions the number of arguments given when too many (or not enough) arguments were passed to a function.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372690252,"public_id":36007,"url":"https://github.com/godotengine/godot/pull/36007","diff_url":"https://github.com/godotengine/godot/pull/36007.diff","patch_url":"https://github.com/godotengine/godot/pull/36007.patch","title":"Fix project settings modifications requiring scene save","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-02-08T07:32:13Z","updated_at":"2021-01-05T00:10:50Z","body":"Changes to editor_node.cpp shouldn't do anything, just making code more readable.\r\n\r\nBasically, changes done to project settings used to add a `(*)` and you would need to CTRL+S even though the changes are saved automatically and have nothing to do with the scene","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372655033,"public_id":35998,"url":"https://github.com/godotengine/godot/pull/35998","diff_url":"https://github.com/godotengine/godot/pull/35998.diff","patch_url":"https://github.com/godotengine/godot/pull/35998.patch","title":"Remove most commented-out code lines across the codebase","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-08T00:26:56Z","updated_at":"2021-05-03T04:27:55Z","body":"**Don't merge yet; I'll redo this pull request after the `vulkan` branch is rebased into `master`.**\r\n\r\nSome multi-line commented code blocks may remain here and there as they're more difficult to find in an automated manner.\r\n\r\nThis should be reviewed thoroughly, as I may have accidentally removed a handful of blocks that contained useful information somehow.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372503556,"public_id":35988,"url":"https://github.com/godotengine/godot/pull/35988","diff_url":"https://github.com/godotengine/godot/pull/35988.diff","patch_url":"https://github.com/godotengine/godot/pull/35988.patch","title":"Add documentation for Physics2DDirectSpaceState","state":"open","is_draft":false,"authored_by":{"id":55366994,"user":"seenloitering","avater":"https://avatars.githubusercontent.com/u/55366994?v=4","url":"https://github.com/seenloitering"},"created_at":"2020-02-07T16:46:18Z","updated_at":"2021-01-05T00:56:58Z","body":"I've added a description for\r\nPhysics2DDirectSpaceState.intersect_point_on_canvas() that reflects its\r\ncurrent behaviour but I strongly suspect that its current behaviour\r\nisn't its intended behaviour. Should this change be committed?","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":372126901,"public_id":35964,"url":"https://github.com/godotengine/godot/pull/35964","diff_url":"https://github.com/godotengine/godot/pull/35964.diff","patch_url":"https://github.com/godotengine/godot/pull/35964.patch","title":"Allow printing any Variant using `print_line()` and `print_error()`","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-06T21:43:53Z","updated_at":"2021-08-22T05:13:24Z","body":"This makes print statement debugging faster to set up by not requiring users to convert the value to a string manually.\r\n\r\nPS: I couldn't get this to work with `print_verbose()`, as I'm getting this error:\r\n\r\n```text\r\nplatform/x11/detect_prime.cpp:141:4: error: no matching function for call to 'print_verbose'\r\n                        print_verbose(\"Failed to pipe(), using default GPU\");\r\n                        ^~~~~~~~~~~~~\r\n./core/print_string.h:61:13: note: candidate function not viable: no known conversion from 'const char [36]' to 'Variant' for 1st argument\r\nextern void print_verbose(Variant p_variant);\r\n```\r\n\r\nIt works fine for `print_line()` and `print_debug()`, so I don't see why it wouldn't work for `print_verbose()` as well.\r\n\r\n## Preview\r\n\r\nUsing the following snippet in Godot's C++ core:\r\n\r\n```cpp\r\nprint_line(\"Hello world\");\r\nprint_line(false);\r\nprint_line(1);\r\nprint_line(24.502);\r\nprint_line(Vector2(20, 40));\r\n```\r\n\r\nResults in:\r\n\r\n```text\r\nHello world\r\nFalse\r\n1\r\n24.502\r\n(20, 40)\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":372114709,"public_id":35962,"url":"https://github.com/godotengine/godot/pull/35962","diff_url":"https://github.com/godotengine/godot/pull/35962.diff","patch_url":"https://github.com/godotengine/godot/pull/35962.patch","title":"Highlight the error column in the script editor","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-06T21:13:18Z","updated_at":"2020-09-02T19:41:27Z","body":"This makes it easier to see where the script error is located exactly. The line's background is still highlighted to get the user's attention.\r\n\r\nThe default mark color was changed to be more transparent, as the underline makes the line more noticeable on its own.\r\n\r\nThis breaks compatibility in a minor way as some TextEdit methods' signatures had to be changed in a backwards-incompatible manner.\r\n\r\n## Preview\r\n\r\n### Error with column information\r\n\r\n(e.g. many syntax errors)\r\n\r\n![2020-02-06_22 09 57](https://user-images.githubusercontent.com/180032/73979192-0043fb80-492e-11ea-8b66-f93b98904fbc.png)\r\n\r\n### Error without column information\r\n\r\n(e.g. identifier not found)\r\n\r\n![2020-02-06_22 10 16](https://user-images.githubusercontent.com/180032/73979193-00dc9200-492e-11ea-8756-92b2299ee310.png)","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":371771199,"public_id":35945,"url":"https://github.com/godotengine/godot/pull/35945","diff_url":"https://github.com/godotengine/godot/pull/35945.diff","patch_url":"https://github.com/godotengine/godot/pull/35945.patch","title":"Fix multiple issues with test_body_motion() and test_body_ray_separation().","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2020-02-06T08:35:16Z","updated_at":"2021-02-18T13:24:11Z","body":"Fixes most of the jitter seen when using either `move_and_collide()`, `move_and_slide()` or `move_and_slide_with_snap()` and colliding with multiple surfaces. This is especially noticeable when two `BoxShape` `CollisionShape`s collide, for example a box shaped character on a `GridMap`.\r\n\r\nFixes #33833.\r\nFixes #34081.\r\nFixes #34098.\r\nFixes #34242.\r\nFixes #34436.\r\nFixes #34596.\r\nFixes #35713.\r\nFixes #35780.\r\nFixes #42175.\r\n\r\nUpdate:\r\nNow fixes remaining jitter, sliding in move_and_collide() and inaccurate collision information in Bullet physics:\r\nFixes #17893\r\nFixes #18433\r\nFixes #26550\r\nFixes #28717\r\nFixes #32182\r\n\r\n**Godot Physics v 3.1**\r\n\r\n![Godot-Physics-31](https://user-images.githubusercontent.com/9253928/87442303-05e3f280-c5ec-11ea-8feb-6db458fb9091.gif)\r\n\r\n**Godot Physics v 3.2**\r\n\r\n![Godot-Physics-32](https://user-images.githubusercontent.com/9253928/87442443-33c93700-c5ec-11ea-8b00-9e6fd9c2357b.gif)\r\n\r\n**Godot Physics v3.2 with #35945**\r\n\r\n![Godot-Physics-32-with-35945](https://user-images.githubusercontent.com/9253928/87442503-4a6f8e00-c5ec-11ea-9387-10ef92b82f6f.gif)\r\n\r\n**Bullet Physics v 3.1**\r\n\r\n![Bullet-Physics-31](https://user-images.githubusercontent.com/9253928/87442568-5c513100-c5ec-11ea-8c39-18faa50e6d05.gif)\r\n\r\n**Bullet Physics v 3.2**\r\n\r\n![Bullet-Physics-32](https://user-images.githubusercontent.com/9253928/87442348-1b591c80-c5ec-11ea-90c8-f1c9d371f843.gif)\r\n\r\n**Bullet Physics v3.2 with #35945**\r\n\r\n![Bullet-Physics-32-with-35945](https://user-images.githubusercontent.com/9253928/87442662-768b0f00-c5ec-11ea-9148-90c3ecb9f71c.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":371517247,"public_id":35930,"url":"https://github.com/godotengine/godot/pull/35930","diff_url":"https://github.com/godotengine/godot/pull/35930.diff","patch_url":"https://github.com/godotengine/godot/pull/35930.patch","title":"Add environment variables to define Android keystore information","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-05T18:18:05Z","updated_at":"2021-02-09T16:45:29Z","body":"These make it possible to specify keystore information without storing it into `export_presets.cfg`. When used, this makes `export_presets.cfg` safely checkable into version control. This should make setting up continuous integration significantly easier.\r\n\r\nThe variables are:\r\n\r\n- `GODOT_ANDROID_KEYSTORE_PATH`: Absolute path to the keystore file\r\n- `GODOT_ANDROID_KEYSTORE_USER`: Keystore username\r\n- `GODOT_ANDROID_KEYSTORE_PASSWORD`: Keystore password\r\n\r\nThese will be used when exporting in both debug and release modes. If a variable isn't set, the old behavior will apply.\r\n\r\nI'm marking this as a draft as it needs testing (cc @Myran) and better signalling in the editor GUI (if it's set before starting the graphical editor). Right now, if one of those variables is set, the editor Export dialog will still display the keystore properties as usual, even though it won't use their values. Any suggestions? I'd like to have the variables used in both headless and non-headless versions, as it's more consistent and can be useful to avoid storing the release keystore in the project files when working with version control.\r\n\r\nThis closes #2759. This closes https://github.com/godotengine/godot-proposals/issues/1156. See also https://github.com/github/gitignore/pull/2827 and https://github.com/godotengine/godot-demo-projects/issues/329.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":371283800,"public_id":35923,"url":"https://github.com/godotengine/godot/pull/35923","diff_url":"https://github.com/godotengine/godot/pull/35923.diff","patch_url":"https://github.com/godotengine/godot/pull/35923.patch","title":"Process _get_minimum_size() override from script in Container impls","state":"open","is_draft":false,"authored_by":{"id":4605568,"user":"staddy","avater":"https://avatars.githubusercontent.com/u/4605568?v=4","url":"https://github.com/staddy"},"created_at":"2020-02-05T10:05:31Z","updated_at":"2021-01-05T00:56:55Z","body":"Fixes #35909","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":370779896,"public_id":35901,"url":"https://github.com/godotengine/godot/pull/35901","diff_url":"https://github.com/godotengine/godot/pull/35901.diff","patch_url":"https://github.com/godotengine/godot/pull/35901.patch","title":"PackedByteArray, Array slice end exclusive, rename PackedByteArray subarray to slice","state":"open","is_draft":false,"authored_by":{"id":14253836,"user":"nathanfranke","avater":"https://avatars.githubusercontent.com/u/14253836?v=4","url":"https://github.com/nathanfranke"},"created_at":"2020-02-04T11:15:34Z","updated_at":"2020-10-30T10:40:50Z","body":"- `slice` end index is now exclusive \r\n- `Packed*Array::subarray` is now `Packed*Array::slice`\r\n\r\n```swift\r\nfunc _ready() -> void:\r\n\tvar array := PackedByteArray([0, 1, 2, 3, 4, 5, 6, 7])\r\n\t\r\n\taprint(array.slice(0, 4))             ### 0, 1, 2, 3\r\n\t# Lines below would have crashed\r\n\taprint(array.slice(4, 8))             ### 4, 5, 6, 7\r\n\taprint(array.slice(0, array.size()))   ### 0, 1, 2, 3, 4, 5, 6, 7\r\n\r\nfunc aprint(array: PackedByteArray) -> void:\r\n\tvar s := String()\r\n\tfor i in array:\r\n\t\ts += \", \" + str(i)\r\n\tprint(s.substr(2))\r\n```","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":370042342,"public_id":35859,"url":"https://github.com/godotengine/godot/pull/35859","diff_url":"https://github.com/godotengine/godot/pull/35859.diff","patch_url":"https://github.com/godotengine/godot/pull/35859.patch","title":"Add visual feedback when hovering or dragging the code minimap grabber","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-02-02T18:53:20Z","updated_at":"2020-09-02T19:41:30Z","body":"This makes it more obvious that the minimap grabber can be dragged to scroll.\r\n\r\n## Preview\r\n\r\n[Preview on Gfycat](https://gfycat.com/reasonablerevolvingafricanwilddog)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369865379,"public_id":35816,"url":"https://github.com/godotengine/godot/pull/35816","diff_url":"https://github.com/godotengine/godot/pull/35816.diff","patch_url":"https://github.com/godotengine/godot/pull/35816.patch","title":"Modify Array/Dictionary::operator== to do real key/value comparison","state":"open","is_draft":false,"authored_by":{"id":3187637,"user":"touilleMan","avater":"https://avatars.githubusercontent.com/u/3187637?v=4","url":"https://github.com/touilleMan"},"created_at":"2020-02-01T06:45:13Z","updated_at":"2021-07-26T18:56:02Z","body":"Here is my attempt to fix the current infamous dictionary comparison behavior (see #27615)\r\n\r\nBasically the issue is currently two Dictionary object only considered equal if they point on the same underlying hashmap.\r\nThis is very error prone given this behavior leaks into GDScript:\r\n```gdscript\r\nvar a = {}\r\nvar b = {}\r\nvar c = a\r\nprint(a == b)  # false\r\nprint(a == c)  # true\r\n```\r\n\r\nThere is already PR #29222 that tries to fix this by modifying Variant comparison. However I believe this is not the right way to go given it only fix GDScript, but not GDNative !\r\n\r\nCurrently GDNative's `godot_dictionary_operator_equal` is pretty useless (I would even say it is extremely error prone, I've personally been bitten multiple time by this function) and so GDNative users has to implement their own comparison (see https://github.com/touilleMan/godot-python/blob/72df9d1b38120aeec3c702004e14dcb82e95bde5/tools/builtins_templates/dictionary.tmpl.pxi#L180-L185) which is both cumbersome and inefficient.\r\n\r\nGiven I couldn't really figure out the usecase for this underlying-hashmap-only comparison, I've recompiled a modified version of Godot with `Dictionary::operator==` and `Dictionary::operator!=` removed (see https://github.com/touilleMan/godot/commit/2409aa62bed81be948e3efbc99ae3c578fda6502).\r\nThe only place those operator are used are in `variant_op.cpp` in the `OP_EQUAL` and `OP_NOT_EQUAL` operators.\r\nSo I guess I can officially say the current implementation of `Dictionary::operator==` is useless \\o/\r\n\r\nOf course, I think we should do the same for `Array::operator==`, I'll update this PR with those change if we agree on the idea ;-)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":369852134,"public_id":35813,"url":"https://github.com/godotengine/godot/pull/35813","diff_url":"https://github.com/godotengine/godot/pull/35813.diff","patch_url":"https://github.com/godotengine/godot/pull/35813.patch","title":"ptrcall no longer call destructor on return value buffer before using it","state":"open","is_draft":false,"authored_by":{"id":3187637,"user":"touilleMan","avater":"https://avatars.githubusercontent.com/u/3187637?v=4","url":"https://github.com/touilleMan"},"created_at":"2020-02-01T04:37:04Z","updated_at":"2021-04-25T11:08:29Z","body":"fix #34264\r\n\r\nptrcall always overwrite the return value buffer with it own return value\r\ndata. Hence a non initialized buffer should be provided to ptrcall.\r\n\r\nI've tested this with code like this:\r\n```c\r\ngodot_string __ret;\r\nmemset(&__ret, 0xff, sizeof(__ret));\r\ngdapi10.godot_method_bind_ptrcall(\r\n    __methbind__Object__get_class,\r\n    my_obj_ptr,\r\n    NULL,\r\n    &__ret\r\n)\r\n```\r\nwithout the fix this endup in a segfault, with this fix it works fine\r\n\r\nI guess we should be double careful before merging this given ptrcall is a strange beast and my knowledge is limited on it ;-)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":580537003,"name":"topic:gdnative","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3377457]},{"id":369810863,"public_id":35806,"url":"https://github.com/godotengine/godot/pull/35806","diff_url":"https://github.com/godotengine/godot/pull/35806.diff","patch_url":"https://github.com/godotengine/godot/pull/35806.patch","title":"Added tooltip delay setting for editor","state":"open","is_draft":false,"authored_by":{"id":3761567,"user":"Fermats-Fish","avater":"https://avatars.githubusercontent.com/u/3761567?v=4","url":"https://github.com/Fermats-Fish"},"created_at":"2020-01-31T23:21:26Z","updated_at":"2021-01-05T00:10:47Z","body":"Resolves #27879 and resolves #9030.\r\n\r\nAdds an editor setting which changes the tooltip delay for tooltips inside the editor.\r\n\r\nA restart is required for this change to be applied, however the code could be extended so that this is not required.\r\n\r\nThis is my first time contributing to a major open source project, and my first time using C++, so let me know if I should have done anything differently.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369805119,"public_id":35805,"url":"https://github.com/godotengine/godot/pull/35805","diff_url":"https://github.com/godotengine/godot/pull/35805.diff","patch_url":"https://github.com/godotengine/godot/pull/35805.patch","title":"Add clear instructions on how to get the Import dock to do something …","state":"open","is_draft":false,"authored_by":{"id":2841740,"user":"jahd2602","avater":"https://avatars.githubusercontent.com/u/2841740?v=4","url":"https://github.com/jahd2602"},"created_at":"2020-01-31T22:57:35Z","updated_at":"2021-01-05T00:49:09Z","body":"…inside the import dock itself when no file is selected.\r\n\r\nFixes #14714\r\n\r\nRight now the text goes: **Select a resource file to adjust import settings**. Feel free to change or suggest a better one.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369790055,"public_id":35804,"url":"https://github.com/godotengine/godot/pull/35804","diff_url":"https://github.com/godotengine/godot/pull/35804.diff","patch_url":"https://github.com/godotengine/godot/pull/35804.patch","title":"Add duplicate track action to AnimationPlayer","state":"open","is_draft":false,"authored_by":{"id":2841740,"user":"jahd2602","avater":"https://avatars.githubusercontent.com/u/2841740?v=4","url":"https://github.com/jahd2602"},"created_at":"2020-01-31T22:03:16Z","updated_at":"2020-10-09T06:26:18Z","body":"The PR #24210 was originally made by PedroHugoNoevo, and this PR is his commit applied to Godot 3.2-stable.\r\n\r\nOriginal commit by: PedroHugoNoevo\r\n\r\n**Original PR:**\r\n> # This solves issue #15029\r\n> \r\n> ![https://i.imgur.com/uo3pAFY.png](https://camo.githubusercontent.com/9666819c857a9d7661e9302dc406dc8e4ed54f3c/68747470733a2f2f692e696d6775722e636f6d2f756f33704146592e706e67)\r\n> \r\n> ![https://i.imgur.com/xyhg2h6.png](https://camo.githubusercontent.com/786bb816808d9df53f66a0815cdff360b8330fa0/68747470733a2f2f692e696d6775722e636f6d2f787968673268362e706e67)\r\n> \r\n> ![https://i.imgur.com/aI5rLtW.png](https://camo.githubusercontent.com/a07b49e71d025737a76cc4e8172037192561aeeb/68747470733a2f2f692e696d6775722e636f6d2f614935724c74572e706e67)\r\n\r\nI created this PR because he hasn't interacted with the original PR since December 2018 and this seems to be able to benefit a lot of users according to the issue's +1s.\r\n\r\n*Bugsquad edit:* Fixes #15029.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369744474,"public_id":35800,"url":"https://github.com/godotengine/godot/pull/35800","diff_url":"https://github.com/godotengine/godot/pull/35800.diff","patch_url":"https://github.com/godotengine/godot/pull/35800.patch","title":"Change light attentuation for GIProbes","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2020-01-31T19:49:15Z","updated_at":"2020-09-02T19:41:32Z","body":"Fixes: https://github.com/godotengine/godot/issues/35200\r\n\r\nFrom my understanding, we are taking a dot product between the cell normal and the light direction to easily exclude certain surfaces. However, it seems the normal and light direction are either in very different spaces or the normal is completely broken. Either way, starting with an ``attenuation`` of ``1.0`` results in accurate lighting.\r\n\r\nBecause I don't totally understand why the current approach is broken, this will need @reduz's approval before merging. \r\n\r\n**Before**\r\n![Screenshot (40)](https://user-images.githubusercontent.com/16521339/73569621-ab7d1e00-441f-11ea-9690-cf3de0404e40.png)\r\n\r\n**After**\r\n![Screenshot (41)](https://user-images.githubusercontent.com/16521339/73569625-addf7800-441f-11ea-8cdd-303b83f9a3bf.png)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369683032,"public_id":35791,"url":"https://github.com/godotengine/godot/pull/35791","diff_url":"https://github.com/godotengine/godot/pull/35791.diff","patch_url":"https://github.com/godotengine/godot/pull/35791.patch","title":"Added support for flipping BoxContainer children","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2020-01-31T17:17:06Z","updated_at":"2021-08-13T21:05:30Z","body":"This change adds a `flip_order property` which allows inverting the container's children positions without changing the order they are rendered.\r\n\r\n| Flip Order off  | Flip Order on |\r\n| ------------- | ------------- |\r\n| <img src=\"https://user-images.githubusercontent.com/1075032/73559555-928f5f80-4455-11ea-9be2-2932ff8f7e6b.png\" width=\"100\" />  | <img src=\"https://user-images.githubusercontent.com/1075032/73559560-94592300-4455-11ea-8ef1-12a936f7612b.png\" width=\"100\" />  |\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/804.*\r\n","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":369304650,"public_id":35758,"url":"https://github.com/godotengine/godot/pull/35758","diff_url":"https://github.com/godotengine/godot/pull/35758.diff","patch_url":"https://github.com/godotengine/godot/pull/35758.patch","title":"Remove redundant thread sync counter draw_pending","state":"open","is_draft":false,"authored_by":{"id":24513485,"user":"zmanuel","avater":"https://avatars.githubusercontent.com/u/24513485?v=4","url":"https://github.com/zmanuel"},"created_at":"2020-01-30T21:45:46Z","updated_at":"2021-03-21T15:50:18Z","body":"The functions that used it already use a threadsafe FIFO queue\r\nto communicate between threads and a sync to have the main thread\r\nwait for the render thread.\r\n\r\nFixes #35718","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":369208208,"public_id":35750,"url":"https://github.com/godotengine/godot/pull/35750","diff_url":"https://github.com/godotengine/godot/pull/35750.diff","patch_url":"https://github.com/godotengine/godot/pull/35750.patch","title":"Enhancements for the OptionButton class","state":"open","is_draft":true,"authored_by":{"id":47700418,"user":"dalexeev","avater":"https://avatars.githubusercontent.com/u/47700418?v=4","url":"https://github.com/dalexeev"},"created_at":"2020-01-30T17:53:37Z","updated_at":"2020-09-02T19:41:36Z","body":"Related PR: #21837\r\n\r\nI ran into two problems:\r\n1. Unable to deselect `OptionButton` items\r\n    <details>\r\n    \r\n    ```\r\n    Docs:\r\n    -------\r\n    int selected [default: -1]\r\n    The index of the currently selected item, or -1 if no item is selected.\r\n    ```\r\n    \r\n    This does not work ([optbutt_-1.zip](https://github.com/godotengine/godot/files/4135313/optbutt_-1.zip)).\r\n    \r\n    </details>\r\n\r\n2. The first item is selected automatically.\r\n    It seems to be not such a big problem, but still I really want to fix it.\r\n\r\nI tried to solve these problems and still maintain backward compatibility.\r\nYour suggestions for improving the code are welcome. :smiley: \r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":369054111,"public_id":35739,"url":"https://github.com/godotengine/godot/pull/35739","diff_url":"https://github.com/godotengine/godot/pull/35739.diff","patch_url":"https://github.com/godotengine/godot/pull/35739.patch","title":"Fixes enum autocompletetion showing class names with an underscore","state":"open","is_draft":false,"authored_by":{"id":29702428,"user":"Janglee123","avater":"https://avatars.githubusercontent.com/u/29702428?v=4","url":"https://github.com/Janglee123"},"created_at":"2020-01-30T12:45:26Z","updated_at":"2021-01-05T00:56:50Z","body":"fixes #35469.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":368742126,"public_id":35716,"url":"https://github.com/godotengine/godot/pull/35716","diff_url":"https://github.com/godotengine/godot/pull/35716.diff","patch_url":"https://github.com/godotengine/godot/pull/35716.patch","title":"Tooltips for exported variables","state":"open","is_draft":false,"authored_by":{"id":1554127,"user":"Listwon","avater":"https://avatars.githubusercontent.com/u/1554127?v=4","url":"https://github.com/Listwon"},"created_at":"2020-01-29T20:07:01Z","updated_at":"2021-08-06T11:24:33Z","body":"Backward compatible solution to add custom tooltips for exported variables.\r\nUses comments syntax, so it won't throw errors on previous versions. Tooltips are parsed only in editor. Supports BBCode.\r\n``` gdscript\r\n## [b]Tooltips[/b] for exported variables. [br][img]icon.png[/img] [br]With [color=green]BBCode[/color] support. [br]Enjoy!\r\nexport var with_tooltip = 2\r\n```\r\n![tooltips1](https://user-images.githubusercontent.com/1554127/73392683-8df26c00-42da-11ea-9fc5-f6287db5b410.jpg)\r\n![tooltips2](https://user-images.githubusercontent.com/1554127/73392659-8632c780-42da-11ea-9d96-a67a7f9f3a83.jpg)\r\n\r\nRelated issue https://github.com/godotengine/godot/issues/6204","target_branch":"3.x","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[4038183,4418518,4418563,4418914]},{"id":368333287,"public_id":35680,"url":"https://github.com/godotengine/godot/pull/35680","diff_url":"https://github.com/godotengine/godot/pull/35680.diff","patch_url":"https://github.com/godotengine/godot/pull/35680.patch","title":"Fix HTML5 one click button being active with templates missing","state":"open","is_draft":false,"authored_by":{"id":1207989,"user":"jackbondpreston","avater":"https://avatars.githubusercontent.com/u/1207989?v=4","url":"https://github.com/jackbondpreston"},"created_at":"2020-01-29T01:49:41Z","updated_at":"2020-09-02T19:41:38Z","body":"The editor would previously have the HTML5 one click deploy button is always visible if an HTML5 preset has been defined, even if the templates are missing or if it's misconfigured.\r\nThis disables the button in these cases and provides the error message output of can_export as the tooltip of the disabled button.\r\nFixes #35592.\r\n\r\nThis is my first attempt at a change on this project - if anything is wrong, apologies, please let me know.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":368317178,"public_id":35679,"url":"https://github.com/godotengine/godot/pull/35679","diff_url":"https://github.com/godotengine/godot/pull/35679.diff","patch_url":"https://github.com/godotengine/godot/pull/35679.patch","title":"Add an XML schema for documentation","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-01-29T00:33:33Z","updated_at":"2021-08-22T03:05:11Z","body":"This makes it easier to spot syntax errors when editing the class reference. The schema is referenced locally so validation can still work offline.\r\n\r\nTested with the [vscode-xml](https://github.com/redhat-developer/vscode-xml) Visual Studio Code add-on.","target_branch":"master","labels":[{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367984145,"public_id":35658,"url":"https://github.com/godotengine/godot/pull/35658","diff_url":"https://github.com/godotengine/godot/pull/35658.diff","patch_url":"https://github.com/godotengine/godot/pull/35658.patch","title":"Page allocation in MessageQueue","state":"open","is_draft":false,"authored_by":{"id":4605568,"user":"staddy","avater":"https://avatars.githubusercontent.com/u/4605568?v=4","url":"https://github.com/staddy"},"created_at":"2020-01-28T12:23:14Z","updated_at":"2020-09-24T07:08:47Z","body":"Fixes #35653","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367577367,"public_id":35626,"url":"https://github.com/godotengine/godot/pull/35626","diff_url":"https://github.com/godotengine/godot/pull/35626.diff","patch_url":"https://github.com/godotengine/godot/pull/35626.patch","title":"Add Desktop to file dialogue as drive in unix","state":"open","is_draft":false,"authored_by":{"id":17744127,"user":"ShlomiRex","avater":"https://avatars.githubusercontent.com/u/17744127?v=4","url":"https://github.com/ShlomiRex"},"created_at":"2020-01-27T16:12:55Z","updated_at":"2021-01-05T00:52:32Z","body":"When I click \"Import\" (or Create Project) in Project Manager and want to select desktop from the drives on top-left, I can't, it's not there. So I added it.\r\nIt should be added to any dialogue that uses the File Dialogue\r\nIt's a small commit. It's my first pull ever / first contribution. Please accept :P","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367455321,"public_id":35617,"url":"https://github.com/godotengine/godot/pull/35617","diff_url":"https://github.com/godotengine/godot/pull/35617.diff","patch_url":"https://github.com/godotengine/godot/pull/35617.patch","title":"Fix negative delta arguments","state":"open","is_draft":false,"authored_by":{"id":24513485,"user":"zmanuel","avater":"https://avatars.githubusercontent.com/u/24513485?v=4","url":"https://github.com/zmanuel"},"created_at":"2020-01-27T12:05:05Z","updated_at":"2021-04-29T17:54:21Z","body":"Three attack points, all after the regular calculations:\r\n1. Prevent negative physics timestep counts. They could occur if\r\n   physics_jtter_fix is changed at runtime.\r\n2. idle_step is not allowed to go below one tick. That could\r\n   happen on physics_jitter_fix changes or heavily fluctuating\r\n   performance.\r\n3. Prevent that the idle_step modification breaks the promise\r\n   that Engine.get_physics_interpolation_fraction() is between\r\n   0 and 1 by doing more physics steps than the base system wants.\r\n\r\nFixes #26887","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":367375793,"public_id":35614,"url":"https://github.com/godotengine/godot/pull/35614","diff_url":"https://github.com/godotengine/godot/pull/35614.diff","patch_url":"https://github.com/godotengine/godot/pull/35614.patch","title":"WIP: Raise configuration warning when PhysicsBody/2D is scaled","state":"open","is_draft":true,"authored_by":{"id":4701338,"user":"akien-mga","avater":"https://avatars.githubusercontent.com/u/4701338?v=4","url":"https://github.com/akien-mga"},"created_at":"2020-01-27T08:49:51Z","updated_at":"2021-02-08T16:05:23Z","body":"This is still not supported as per #5734, even though we aim to lift\r\nthis limitation eventually.\r\n\r\nFixes #26890.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367365900,"public_id":35613,"url":"https://github.com/godotengine/godot/pull/35613","diff_url":"https://github.com/godotengine/godot/pull/35613.diff","patch_url":"https://github.com/godotengine/godot/pull/35613.patch","title":"Audio driver for JACK","state":"open","is_draft":false,"authored_by":{"id":17614485,"user":"jpcima","avater":"https://avatars.githubusercontent.com/u/17614485?v=4","url":"https://github.com/jpcima"},"created_at":"2020-01-27T08:19:49Z","updated_at":"2021-04-30T17:17:07Z","body":"#24274\r\n\r\nThis adds partial support of JACK audio, for now only playback.\r\n\r\nJACK is a sound server for audio which uses virtual software clients and ports, it was designed for Linux professional-level audio.\r\n\r\nI will add capture later, which must not be difficult, after I figure how to use Godot better, which I have very little practical experience with.\r\n\r\n- There exists pseudo-devices, which permit to create a virtual client with set number of outputs (2, 4, 6,8). The default will be stereo client, and this default will also connect its sound to physical outputs.\r\n\r\n- The client will name itself using the setting of the application, or it falls back to `VERSION_NAME`, defined as \"Godot Engine\".\r\n\r\n- JACK audio clients are expected to operate under hard-realtime conditions. While I don't know if `audio_server_process` will be, this driver code at least is expected to conform.\r\n\r\n- The audio thread will try-lock the `Mutex`, not `lock`, this helps Godot to be a good client and not xrun the JACK server.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367166348,"public_id":35565,"url":"https://github.com/godotengine/godot/pull/35565","diff_url":"https://github.com/godotengine/godot/pull/35565.diff","patch_url":"https://github.com/godotengine/godot/pull/35565.patch","title":"Split the Always Show Grid checkbox into 3 options inside sub menu.","state":"open","is_draft":false,"authored_by":{"id":18746022,"user":"MightyPrinny","avater":"https://avatars.githubusercontent.com/u/18746022?v=4","url":"https://github.com/MightyPrinny"},"created_at":"2020-01-25T23:47:36Z","updated_at":"2021-01-20T05:55:45Z","body":"![image](https://user-images.githubusercontent.com/18746022/73128743-ae58b880-3fb2-11ea-98ab-53a769a22ce7.png)\r\n\r\nThis splits the Always Show Grid checkbox into 3 options:\r\n\r\n- Show\r\n- Show When Snapping To Grid\r\n- Hide\r\n\r\nToggle Grid hides the grid when it's visible, when it's invisible it sets the visibility to Show When Grid Snapping, if grid snapping is enabled and Show, when grid snapping is disabled.\r\n\r\nThis allows disabling the 2D Grid when grid snapping is enabled, fixes #34386.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":367136850,"public_id":35555,"url":"https://github.com/godotengine/godot/pull/35555","diff_url":"https://github.com/godotengine/godot/pull/35555.diff","patch_url":"https://github.com/godotengine/godot/pull/35555.patch","title":"Add a \"version\" project setting, remove preset-specific version fields","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-01-25T17:40:36Z","updated_at":"2021-08-22T10:58:06Z","body":"This makes it easy to retrieve the project version at runtime for display purposes, while simplifying the export preset configuration.\r\n\r\nThe iOS version requirement was also documented. See [this Stack Overflow question](https://stackoverflow.com/q/19726988).\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/372.\r\n\r\n<details>\r\n<summary>January 2020 patch</summary>\r\n\r\n```patch\r\nFrom fa0de0ebb644e44452cc78c824e287d2085b8ec0 Mon Sep 17 00:00:00 2001\r\nFrom: Hugo Locurcio <hugo.locurcio@hugo.pro>\r\nDate: Sat, 25 Jan 2020 18:32:52 +0100\r\nSubject: [PATCH] Add a \"version\" project setting, remove preset-specific\r\n version fields\r\n\r\nThis makes it easy to retrieve the project version at runtime\r\nfor display purposes, while simplifying the export preset configuration.\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/372.\r\n---\r\n core/project_settings.cpp          |  1 +\r\n doc/classes/ProjectSettings.xml    |  4 ++++\r\n platform/android/export/export.cpp |  6 +++---\r\n platform/iphone/export/export.cpp  |  6 ++----\r\n platform/osx/export/export.cpp     |  6 ++----\r\n platform/windows/export/export.cpp | 19 +++++++++----------\r\n 6 files changed, 21 insertions(+), 21 deletions(-)\r\n\r\ndiff --git a/core/project_settings.cpp b/core/project_settings.cpp\r\nindex a01a8a35c610..b48f8a09587c 100644\r\n--- a/core/project_settings.cpp\r\n+++ b/core/project_settings.cpp\r\n@@ -1013,6 +1013,7 @@ ProjectSettings::ProjectSettings() {\r\n \tGLOBAL_DEF(\"application/config/name\", \"\");\r\n \tGLOBAL_DEF(\"application/config/description\", \"\");\r\n \tcustom_prop_info[\"application/config/description\"] = PropertyInfo(Variant::STRING, \"application/config/description\", PROPERTY_HINT_MULTILINE_TEXT);\r\n+\tGLOBAL_DEF(\"application/config/version\", \"1.0.0\");\r\n \tGLOBAL_DEF(\"application/run/main_scene\", \"\");\r\n \tcustom_prop_info[\"application/run/main_scene\"] = PropertyInfo(Variant::STRING, \"application/run/main_scene\", PROPERTY_HINT_FILE, \"*.tscn,*.scn,*.res\");\r\n \tGLOBAL_DEF(\"application/run/disable_stdout\", false);\r\ndiff --git a/doc/classes/ProjectSettings.xml b/doc/classes/ProjectSettings.xml\r\nindex 8d3cfad5d96b..68318d2f6c46 100644\r\n--- a/doc/classes/ProjectSettings.xml\r\n+++ b/doc/classes/ProjectSettings.xml\r\n@@ -216,6 +216,10 @@\r\n \t\t<member name=\"application/config/use_custom_user_dir\" type=\"bool\" setter=\"\" getter=\"\" default=\"false\">\r\n \t\t\tIf [code]true[/code], the project will save user data to its own user directory (see [member application/config/custom_user_dir_name]). This setting is only effective on desktop platforms. A name must be set in the [member application/config/custom_user_dir_name] setting for this to take effect. If [code]false[/code], the project will save user data to [code](OS user data directory)/Godot/app_userdata/(project name)[/code].\r\n \t\t</member>\r\n+\t\t<member name=\"application/config/version\" type=\"String\" setter=\"\" getter=\"\" default=\"&quot;1.0.0&quot;\">\r\n+\t\t\tThe project's human-readable version identifier. This should always be set to a non-empty string, as some exporters rely on this value being defined.\r\n+\t\t\t[b]Note:[/b] When exporting for iOS, this version number must be incremented every time a new version is submitted to the App Store, even if the previous version was rejected by Apple. For instance, version [code]1.2.3[/code] can be incremented to [code]1.2.4[/code], [code]1.3.0[/code] or [code]2.0.0[/code].\r\n+\t\t</member>\r\n \t\t<member name=\"application/config/windows_native_icon\" type=\"String\" setter=\"\" getter=\"\" default=\"&quot;&quot;\">\r\n \t\t</member>\r\n \t\t<member name=\"application/run/disable_stderr\" type=\"bool\" setter=\"\" getter=\"\" default=\"false\">\r\ndiff --git a/platform/android/export/export.cpp b/platform/android/export/export.cpp\r\nindex 0ebd97d4286b..fd4503a2cc4e 100644\r\n--- a/platform/android/export/export.cpp\r\n+++ b/platform/android/export/export.cpp\r\n@@ -693,7 +693,7 @@ class EditorExportPlatformAndroid : public EditorExportPlatform {\r\n \t\tuint32_t string_table_ends = 0;\r\n \t\tVector<uint8_t> stable_extra;\r\n \r\n-\t\tString version_name = p_preset->get(\"version/name\");\r\n+\t\tString version_name = GLOBAL_GET(\"application/config/version\");\r\n \t\tint version_code = p_preset->get(\"version/code\");\r\n \t\tString package_name = p_preset->get(\"package/unique_name\");\r\n \r\n@@ -1541,7 +1541,7 @@ class EditorExportPlatformAndroid : public EditorExportPlatform {\r\n \t\tint rv;\r\n \r\n \t\tbool remove_prev = p_preset->get(\"one_click_deploy/clear_previous_install\");\r\n-\t\tString version_name = p_preset->get(\"version/name\");\r\n+\t\tString version_name = GLOBAL_GET(\"application/config/version\");\r\n \t\tString package_name = p_preset->get(\"package/unique_name\");\r\n \r\n \t\tif (remove_prev) {\r\n@@ -2170,7 +2170,7 @@ class EditorExportPlatformAndroid : public EditorExportPlatform {\r\n \t\tString cmdline = p_preset->get(\"command_line/extra_args\");\r\n \r\n \t\tint version_code = p_preset->get(\"version/code\");\r\n-\t\tString version_name = p_preset->get(\"version/name\");\r\n+\t\tString version_name = GLOBAL_GET(\"application/config/version\");\r\n \t\tString package_name = p_preset->get(\"package/unique_name\");\r\n \r\n \t\tString apk_expansion_pkey = p_preset->get(\"apk_expansion/public_key\");\r\ndiff --git a/platform/iphone/export/export.cpp b/platform/iphone/export/export.cpp\r\nindex b606d570c209..c8bf7cdb7470 100644\r\n--- a/platform/iphone/export/export.cpp\r\n+++ b/platform/iphone/export/export.cpp\r\n@@ -223,8 +223,6 @@ void EditorExportPlatformIOS::get_export_options(List<ExportOption> *r_options)\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/info\"), \"Made with Godot Engine\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/identifier\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"com.example.game\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/signature\"), \"\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/short_version\"), \"1.0\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/version\"), \"1.0\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/copyright\"), \"\"));\r\n \r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::BOOL, \"capabilities/arkit\"), false));\r\n@@ -296,9 +294,9 @@ void EditorExportPlatformIOS::_fix_config_file(const Ref<EditorExportPreset> &p_\r\n \t\t} else if (lines[i].find(\"$identifier\") != -1) {\r\n \t\t\tstrnew += lines[i].replace(\"$identifier\", p_preset->get(\"application/identifier\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$short_version\") != -1) {\r\n-\t\t\tstrnew += lines[i].replace(\"$short_version\", p_preset->get(\"application/short_version\")) + \"\\n\";\r\n+\t\t\tstrnew += lines[i].replace(\"$short_version\", GLOBAL_GET(\"application/config/version\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$version\") != -1) {\r\n-\t\t\tstrnew += lines[i].replace(\"$version\", p_preset->get(\"application/version\")) + \"\\n\";\r\n+\t\t\tstrnew += lines[i].replace(\"$version\", GLOBAL_GET(\"application/config/version\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$signature\") != -1) {\r\n \t\t\tstrnew += lines[i].replace(\"$signature\", p_preset->get(\"application/signature\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$copyright\") != -1) {\r\ndiff --git a/platform/osx/export/export.cpp b/platform/osx/export/export.cpp\r\nindex cf38664022f5..e1ed41962af5 100644\r\n--- a/platform/osx/export/export.cpp\r\n+++ b/platform/osx/export/export.cpp\r\n@@ -126,8 +126,6 @@ void EditorExportPlatformOSX::get_export_options(List<ExportOption> *r_options)\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/icon\", PROPERTY_HINT_FILE, \"*.png,*.icns\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/identifier\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"com.example.game\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/signature\"), \"\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/short_version\"), \"1.0\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/version\"), \"1.0\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/copyright\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::BOOL, \"display/high_res\"), false));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"privacy/camera_usage_description\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"Provide a message if you need to use the camera\"), \"\"));\r\n@@ -335,9 +333,9 @@ void EditorExportPlatformOSX::_fix_plist(const Ref<EditorExportPreset> &p_preset\r\n \t\t} else if (lines[i].find(\"$identifier\") != -1) {\r\n \t\t\tstrnew += lines[i].replace(\"$identifier\", p_preset->get(\"application/identifier\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$short_version\") != -1) {\r\n-\t\t\tstrnew += lines[i].replace(\"$short_version\", p_preset->get(\"application/short_version\")) + \"\\n\";\r\n+\t\t\tstrnew += lines[i].replace(\"$short_version\", GLOBAL_GET(\"application/config/version\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$version\") != -1) {\r\n-\t\t\tstrnew += lines[i].replace(\"$version\", p_preset->get(\"application/version\")) + \"\\n\";\r\n+\t\t\tstrnew += lines[i].replace(\"$version\", GLOBAL_GET(\"application/config/version\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$signature\") != -1) {\r\n \t\t\tstrnew += lines[i].replace(\"$signature\", p_preset->get(\"application/signature\")) + \"\\n\";\r\n \t\t} else if (lines[i].find(\"$copyright\") != -1) {\r\ndiff --git a/platform/windows/export/export.cpp b/platform/windows/export/export.cpp\r\nindex 34d66ecd79b3..dd56085040c9 100644\r\n--- a/platform/windows/export/export.cpp\r\n+++ b/platform/windows/export/export.cpp\r\n@@ -88,8 +88,6 @@ void EditorExportPlatformWindows::get_export_options(List<ExportOption> *r_optio\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::POOL_STRING_ARRAY, \"codesign/custom_options\"), PoolStringArray()));\r\n \r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/icon\", PROPERTY_HINT_FILE, \"*.ico\"), \"\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/file_version\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"1.0.0\"), \"\"));\r\n-\tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/product_version\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"1.0.0\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/company_name\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"Company Name\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/product_name\", PROPERTY_HINT_PLACEHOLDER_TEXT, \"Game Name\"), \"\"));\r\n \tr_options->push_back(ExportOption(PropertyInfo(Variant::STRING, \"application/file_description\"), \"\"));\r\n@@ -105,27 +103,28 @@ void EditorExportPlatformWindows::_rcedit_add_data(const Ref<EditorExportPreset>\r\n \t}\r\n \r\n \tif (!FileAccess::exists(rcedit_path)) {\r\n-\t\tERR_PRINTS(\"Could not find rcedit executable at \" + rcedit_path + \", no icon or app information data will be included.\");\r\n+\t\tERR_PRINTS(\"Could not find rcedit executable at \" + rcedit_path + \". No icon or app information data will be included.\");\r\n \t\treturn;\r\n \t}\r\n \r\n #ifndef WINDOWS_ENABLED\r\n-\t// On non-Windows we need WINE to run rcedit\r\n+\t// On non-Windows platforms, we need Wine to run rcedit.\r\n \tString wine_path = EditorSettings::get_singleton()->get(\"export/windows/wine\");\r\n \r\n \tif (wine_path != String() && !FileAccess::exists(wine_path)) {\r\n-\t\tERR_PRINTS(\"Could not find wine executable at \" + wine_path + \", no icon or app information data will be included.\");\r\n+\t\tERR_PRINTS(\"Could not find Wine executable at \" + wine_path + \". No icon or app information data will be included.\");\r\n \t\treturn;\r\n \t}\r\n \r\n \tif (wine_path == String()) {\r\n-\t\twine_path = \"wine\"; // try to run wine from PATH\r\n+\t\t// Try to run Wine from the `PATH`.\r\n+\t\twine_path = \"wine\";\r\n \t}\r\n #endif\r\n \r\n \tString icon_path = ProjectSettings::get_singleton()->globalize_path(p_preset->get(\"application/icon\"));\r\n-\tString file_verion = p_preset->get(\"application/file_version\");\r\n-\tString product_version = p_preset->get(\"application/product_version\");\r\n+\tString file_version = GLOBAL_GET(\"application/config/version\");\r\n+\tString product_version = GLOBAL_GET(\"application/config/version\");\r\n \tString company_name = p_preset->get(\"application/company_name\");\r\n \tString product_name = p_preset->get(\"application/product_name\");\r\n \tString file_description = p_preset->get(\"application/file_description\");\r\n@@ -139,9 +138,9 @@ void EditorExportPlatformWindows::_rcedit_add_data(const Ref<EditorExportPreset>\r\n \t\targs.push_back(\"--set-icon\");\r\n \t\targs.push_back(icon_path);\r\n \t}\r\n-\tif (file_verion != String()) {\r\n+\tif (file_version != String()) {\r\n \t\targs.push_back(\"--set-file-version\");\r\n-\t\targs.push_back(file_verion);\r\n+\t\targs.push_back(file_version);\r\n \t}\r\n \tif (product_version != String()) {\r\n \t\targs.push_back(\"--set-product-version\");\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3112904,3112906,3112909,4418914]},{"id":366964968,"public_id":35530,"url":"https://github.com/godotengine/godot/pull/35530","diff_url":"https://github.com/godotengine/godot/pull/35530.diff","patch_url":"https://github.com/godotengine/godot/pull/35530.patch","title":"Improve InstancePlaceholder documentation and expose instance_path property","state":"open","is_draft":false,"authored_by":{"id":28286961,"user":"Jummit","avater":"https://avatars.githubusercontent.com/u/28286961?v=4","url":"https://github.com/Jummit"},"created_at":"2020-01-24T18:40:55Z","updated_at":"2020-11-27T15:55:50Z","body":"Some of this may not make any sense because I don't know if InstancePlaceholders are meant to be used per script. If not, then making `instance_path` a property is pointless.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":283518839,"name":"documentation","color":"#ffddff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":366856313,"public_id":35517,"url":"https://github.com/godotengine/godot/pull/35517","diff_url":"https://github.com/godotengine/godot/pull/35517.diff","patch_url":"https://github.com/godotengine/godot/pull/35517.patch","title":"GLES3: Blit render target with appropriate texture filter.","state":"open","is_draft":false,"authored_by":{"id":16866987,"user":"ville2304","avater":"https://avatars.githubusercontent.com/u/16866987?v=4","url":"https://github.com/ville2304"},"created_at":"2020-01-24T14:15:15Z","updated_at":"2021-08-06T11:24:33Z","body":"EDIT: With this one can enable main viewport filtering by setting get_viewport().get_texture().flags to Texture.FLAG_FILTER. Useful for non pixel arty games rendered at lower resolution. GLES2 renderer was already working like this.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":366815730,"public_id":35508,"url":"https://github.com/godotengine/godot/pull/35508","diff_url":"https://github.com/godotengine/godot/pull/35508.diff","patch_url":"https://github.com/godotengine/godot/pull/35508.patch","title":"Use a fixed-width font for internal references in the editor help","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-01-24T12:32:11Z","updated_at":"2020-09-02T19:41:45Z","body":"Since internal references are often written in scripts, it makes sense to use a fixed-width font for them. This was requested by @akien-mga :slightly_smiling_face:\r\n\r\nWe can't do this in reStructuredText easily (it requires defining an extension or something), so this only affects the editor help.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":366624456,"public_id":35493,"url":"https://github.com/godotengine/godot/pull/35493","diff_url":"https://github.com/godotengine/godot/pull/35493.diff","patch_url":"https://github.com/godotengine/godot/pull/35493.patch","title":"Add relative pivot to control nodes","state":"open","is_draft":false,"authored_by":{"id":28424206,"user":"creikey","avater":"https://avatars.githubusercontent.com/u/28424206?v=4","url":"https://github.com/creikey"},"created_at":"2020-01-24T00:01:50Z","updated_at":"2020-09-02T19:41:45Z","body":"Continuation of #30305 due to my previously poor branch management skills ( not the business kind ).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":364534558,"public_id":35316,"url":"https://github.com/godotengine/godot/pull/35316","diff_url":"https://github.com/godotengine/godot/pull/35316.diff","patch_url":"https://github.com/godotengine/godot/pull/35316.patch","title":"Hide the contact shadow property as it often looks broken","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-01-19T13:29:46Z","updated_at":"2021-08-06T11:24:33Z","body":"The property can still be adjusted by setting its value in a script, but it's no longer exposed in the editor. There are significant bugs that prevent its widespread use anyway.\r\n\r\nThis might be a bit controversial, but time has showed [yet again](https://gist.github.com/Calinou/49aefe52ce8f67ffa3f743932123d14f#gistcomment-3143379) that people are often confused by this feature :slightly_smiling_face:\r\n\r\nWe could also remove all code related to contact shadows, but it's more work and might make the Vulkan rebase more difficult.\r\n\r\nSee also #23838, #25619 and #31084.","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418726]},{"id":364432344,"public_id":35282,"url":"https://github.com/godotengine/godot/pull/35282","diff_url":"https://github.com/godotengine/godot/pull/35282.diff","patch_url":"https://github.com/godotengine/godot/pull/35282.patch","title":"Font size changing in editor help section","state":"open","is_draft":false,"authored_by":{"id":54987242,"user":"noname1477","avater":"https://avatars.githubusercontent.com/u/54987242?v=4","url":"https://github.com/noname1477"},"created_at":"2020-01-18T14:39:24Z","updated_at":"2021-01-05T00:51:47Z","body":"Made font size changing work in the editor's help section, which was previously not affected by `main_font_size`. Fixes #35269 .","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":364427322,"public_id":35278,"url":"https://github.com/godotengine/godot/pull/35278","diff_url":"https://github.com/godotengine/godot/pull/35278.diff","patch_url":"https://github.com/godotengine/godot/pull/35278.patch","title":"Add BLEND_MODE_DISABLED to Spatial Shader render_mode as blend_disabled","state":"open","is_draft":false,"authored_by":{"id":14304694,"user":"Chrisyss","avater":"https://avatars.githubusercontent.com/u/14304694?v=4","url":"https://github.com/Chrisyss"},"created_at":"2020-01-18T13:34:42Z","updated_at":"2021-01-05T00:51:49Z","body":"This allows for Viewports with mesh instances to capture the RGBA independently of blend modes..\r\n\r\nAn extremely necessary feature for Creating any kind of advanced Multi-pass shaders or Render passes that require dense packing.  \r\n\r\nIt follows the Add \"No-blend\" branch of the canvas item.  Same just for spatial. It was a bit of work!\r\n\r\nI would really love it if this get's pulled .. I saw lots of people who wanted this feature.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":364109869,"public_id":35234,"url":"https://github.com/godotengine/godot/pull/35234","diff_url":"https://github.com/godotengine/godot/pull/35234.diff","patch_url":"https://github.com/godotengine/godot/pull/35234.patch","title":"Enable plugins from asset library by default","state":"open","is_draft":true,"authored_by":{"id":28286961,"user":"Jummit","avater":"https://avatars.githubusercontent.com/u/28286961?v=4","url":"https://github.com/Jummit"},"created_at":"2020-01-17T12:03:18Z","updated_at":"2021-01-05T00:10:25Z","body":"fixes godotengine/godot-proposals#324 and #16492","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":391232995,"name":"topic:assetlib","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":363354217,"public_id":35168,"url":"https://github.com/godotengine/godot/pull/35168","diff_url":"https://github.com/godotengine/godot/pull/35168.diff","patch_url":"https://github.com/godotengine/godot/pull/35168.patch","title":"Fix error when click edge of the tree icon","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2020-01-15T21:50:41Z","updated_at":"2021-01-05T00:51:46Z","body":"Fixes #27580\r\n\r\nThis might be a little hack though. The problem is that the method which sets `cache.click_type` and the `get_item_at_position()` use different logic and recognize clicks with different results. The clicked item is then \"ensured\" here, which might result in nulling a correct click:\r\nhttps://github.com/godotengine/godot/blob/5f99e3396f8468ab74bff6bc2fe9742f670a054a/scene/gui/tree.cpp#L2611-L2615\r\nIf you add another null check in the code I linked above, it results in click having a visual click rectangle and no effect.\r\n\r\nThe logic of determining click is too convoluted, so I just gave up in fixing the differences and ensured the same result by calling `get_item_at_position()`.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":363037837,"public_id":35144,"url":"https://github.com/godotengine/godot/pull/35144","diff_url":"https://github.com/godotengine/godot/pull/35144.diff","patch_url":"https://github.com/godotengine/godot/pull/35144.patch","title":"Add FastNoise","state":"open","is_draft":false,"authored_by":{"id":632766,"user":"tinmanjuggernaut","avater":"https://avatars.githubusercontent.com/u/632766?v=4","url":"https://github.com/tinmanjuggernaut"},"created_at":"2020-01-15T09:28:25Z","updated_at":"2021-03-02T12:10:40Z","body":"* Builds on 4.0\r\n* Adds abstract Noise class to define interface\r\n* Provides a default implementation of get_seamless_image() (swap quadrants, alpha blend over seams)\r\n* Reorganizes OpenSimplexNoise, NoiseTexture classes and folders\r\n* Implements FastNoise\r\n* Fixes #22337\r\n \r\nFastNoise [4.0 branch](https://github.com/tinmanjuggernaut/godot/tree/add_fastnoise) (this PR)\r\nFastNoise [3.2 branch](https://github.com/tinmanjuggernaut/godot/tree/add_fastnoise3.2) (I can make a PR for backporting anytime)\r\n\r\nFastNoiseSIMD has been moved to a [separate repository](https://github.com/tinmanjuggernaut/godot_fastnoise_simd) due to cross-compiling w/ mingw-w64 being unsupported. It supports both 3.2 and 4.0.\r\n\r\nBinaries with both FastNoise and FastNoiseSIMD:\r\nhttp://tokisan.com/godot-binaries/","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":362375151,"public_id":35103,"url":"https://github.com/godotengine/godot/pull/35103","diff_url":"https://github.com/godotengine/godot/pull/35103.diff","patch_url":"https://github.com/godotengine/godot/pull/35103.patch","title":"Tweak the 3D editor inertia defaults for better responsiveness","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2020-01-13T23:39:51Z","updated_at":"2020-09-02T19:41:53Z","body":"The default orbit sensitivity was slightly decreased to account for this change.\r\n\r\nThis also removes the need for separate manipulation inertia settings, as the default settings are more responsive.\r\n\r\nPlease test the new settings :slightly_smiling_face:","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":362255023,"public_id":35094,"url":"https://github.com/godotengine/godot/pull/35094","diff_url":"https://github.com/godotengine/godot/pull/35094.diff","patch_url":"https://github.com/godotengine/godot/pull/35094.patch","title":"Fixes custom styles for hover_pressed on CheckButton and CheckBox (v2.0)","state":"open","is_draft":false,"authored_by":{"id":15088582,"user":"fossegutten","avater":"https://avatars.githubusercontent.com/u/15088582?v=4","url":"https://github.com/fossegutten"},"created_at":"2020-01-13T18:18:28Z","updated_at":"2020-09-02T19:41:53Z","body":"supersedes #34730\r\nfixes #34727\r\nBetter and cleaner commit than last time, I hope. Should be less confusing for users.\r\n\r\nAllows to use a theme and change text color for CheckButton and Checkbox, in the hover_pressed state.\r\nBefore, you had to add a custom stylebox to each CheckButton or CheckBox node, for the hover_pressed state. If not, the node would not use the hover_pressed stylebox from the theme, nor font_color_hover_pressed from the theme or node properties.\r\n\r\nHowever, now you need to address the hover_pressed state for checkbox and checkbutton. It will not fall through to pressed state like before. \r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":361420001,"public_id":34988,"url":"https://github.com/godotengine/godot/pull/34988","diff_url":"https://github.com/godotengine/godot/pull/34988.diff","patch_url":"https://github.com/godotengine/godot/pull/34988.patch","title":"Fixed `move_and_slide` `stop_on_slope`","state":"open","is_draft":false,"authored_by":{"id":8342599,"user":"AndreaCatania","avater":"https://avatars.githubusercontent.com/u/8342599?v=4","url":"https://github.com/AndreaCatania"},"created_at":"2020-01-10T12:03:24Z","updated_at":"2021-06-05T15:45:08Z","body":"After the `move_and_slide` behaviour reversion (in #33864) the old stop on slope check is not more valid making the `stop_on_slope` not working. This PR fix it for both 2d and 3d.\r\n\r\nThis work has been kindly sponsored by IMVU.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":359981950,"public_id":34888,"url":"https://github.com/godotengine/godot/pull/34888","diff_url":"https://github.com/godotengine/godot/pull/34888.diff","patch_url":"https://github.com/godotengine/godot/pull/34888.patch","title":"Improve access to vector in get_data_as_csv()","state":"open","is_draft":false,"authored_by":{"id":55448607,"user":"kotelifelif","avater":"https://avatars.githubusercontent.com/u/55448607?v=4","url":"https://github.com/kotelifelif"},"created_at":"2020-01-07T13:07:58Z","updated_at":"2021-01-05T00:51:39Z","body":"I try to solve 34640 issue. I find that in EditorProfiler::get_data_as_csv() method it< frame_cat.size() * frame_metrics.size().","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1327318271,"name":"crash","color":"#885544"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":359912686,"public_id":34885,"url":"https://github.com/godotengine/godot/pull/34885","diff_url":"https://github.com/godotengine/godot/pull/34885.diff","patch_url":"https://github.com/godotengine/godot/pull/34885.patch","title":"Move timeline by one step when track with increment property is created","state":"open","is_draft":false,"authored_by":{"id":10924228,"user":"rathren","avater":"https://avatars.githubusercontent.com/u/10924228?v=4","url":"https://github.com/rathren"},"created_at":"2020-01-07T09:59:29Z","updated_at":"2021-01-05T00:10:34Z","body":"This closes #33681","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":359246319,"public_id":34828,"url":"https://github.com/godotengine/godot/pull/34828","diff_url":"https://github.com/godotengine/godot/pull/34828.diff","patch_url":"https://github.com/godotengine/godot/pull/34828.patch","title":"Display compatible custom resources when editing a Resource property in the inspector","state":"open","is_draft":false,"authored_by":{"id":46539626,"user":"Phischermen","avater":"https://avatars.githubusercontent.com/u/46539626?v=4","url":"https://github.com/Phischermen"},"created_at":"2020-01-04T20:48:11Z","updated_at":"2021-07-15T17:31:51Z","body":"Fixes #31591 \r\nWhen the user adds a custom resource via a GDScript plugin, their resource will now be displayed in the pop up menu when editing a compatible Resource property.\r\n\r\nOne limitation of my solution however is that it does not display children of custom resources. The solution I have in mind for that issue is a bit messy: find children of each custom type already found, and then find their children until no more children are found.\r\n\r\nI'm actually not sure how to make a custom resource that derives from another custom resource through a GDScript plugin, so I can't set up a test project right now. If anyone knows how, I'd appreciate some guidance.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":359021855,"public_id":34785,"url":"https://github.com/godotengine/godot/pull/34785","diff_url":"https://github.com/godotengine/godot/pull/34785.diff","patch_url":"https://github.com/godotengine/godot/pull/34785.patch","title":"Allow _integrate_forces() function to be called when defined in C++","state":"open","is_draft":false,"authored_by":{"id":12711425,"user":"afauchille","avater":"https://avatars.githubusercontent.com/u/12711425?v=4","url":"https://github.com/afauchille"},"created_at":"2020-01-03T15:16:07Z","updated_at":"2021-01-17T19:50:01Z","body":"At the current moment in Godot, _integrate_forces() can only be called if it is defined in a script.\r\nIt should be allowed to define this function in C++, in order to be able to customize the physics of a RigidBody-derivated class in custom modules.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":358834136,"public_id":34767,"url":"https://github.com/godotengine/godot/pull/34767","diff_url":"https://github.com/godotengine/godot/pull/34767.diff","patch_url":"https://github.com/godotengine/godot/pull/34767.patch","title":"Port material texture optimization to Vulkan","state":"open","is_draft":true,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2020-01-03T00:01:40Z","updated_at":"2021-05-03T04:49:28Z","body":"Ports the useful parts of https://github.com/godotengine/godot/pull/33097 into Vulkan\r\n\r\nThis avoids creating sampler2D uniforms for roughness and metallic textures when not used. ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":358145288,"public_id":34701,"url":"https://github.com/godotengine/godot/pull/34701","diff_url":"https://github.com/godotengine/godot/pull/34701.diff","patch_url":"https://github.com/godotengine/godot/pull/34701.patch","title":"Don't automatically trim trailing whitespace on the current line","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-12-30T15:39:03Z","updated_at":"2020-09-02T19:41:58Z","body":"This prevents the cursor from moving unexpectedly when saving a file.\r\n\r\n\"Trim Trailing Whitespace On Save\" is now enabled by default, as this change makes it much more convenient to use.\r\n\r\nManual whitespace trimming operations (such as using the menu option) will still trim trailing whitespace on the current line.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":356104769,"public_id":34544,"url":"https://github.com/godotengine/godot/pull/34544","diff_url":"https://github.com/godotengine/godot/pull/34544.diff","patch_url":"https://github.com/godotengine/godot/pull/34544.patch","title":"Add time scale property to Timer node","state":"open","is_draft":false,"authored_by":{"id":26509794,"user":"wingedadventurer","avater":"https://avatars.githubusercontent.com/u/26509794?v=4","url":"https://github.com/wingedadventurer"},"created_at":"2019-12-22T17:04:16Z","updated_at":"2021-03-20T20:06:08Z","body":"Adds time scale property to the Timer node, allowing it to tick faster/slower.\r\n\r\nUseful if you are implementing slow motion mechanic, and want **specific** Timer nodes to behave accordingly (`Engine.time_scale` won't cut it as it is applied to every node). Think games like Superhot, where game timer can either tick in real-time or in slowmo-time.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":356037877,"public_id":34528,"url":"https://github.com/godotengine/godot/pull/34528","diff_url":"https://github.com/godotengine/godot/pull/34528.diff","patch_url":"https://github.com/godotengine/godot/pull/34528.patch","title":"Add an editor window color project setting","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-12-21T22:59:14Z","updated_at":"2021-08-22T03:10:07Z","body":"This can be used to distinguish projects more easily, which is especially helpful when working on multiple projects at the same time.\r\n\r\nThe current coloring is a proof of concept. It does the job, but it's not that pretty. It'd be ideal if we could change the window border colors, but this requires us to implement client-side decorations first. (In other words, disabling the system-provided window borders and adding our own.)\r\n\r\nThis feature is inspired by the Visual Studio Code add-on [Peacock](https://github.com/johnpapa/vscode-peacock).\r\n\r\n## Preview\r\n\r\n![Editor colors](https://user-images.githubusercontent.com/180032/71314735-0ea58900-244e-11ea-8954-0caad2e02fb5.png)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":355526483,"public_id":34474,"url":"https://github.com/godotengine/godot/pull/34474","diff_url":"https://github.com/godotengine/godot/pull/34474.diff","patch_url":"https://github.com/godotengine/godot/pull/34474.patch","title":"Don't expose 2 script properties in Inspector","state":"open","is_draft":false,"authored_by":{"id":8281454,"user":"volzhs","avater":"https://avatars.githubusercontent.com/u/8281454?v=4","url":"https://github.com/volzhs"},"created_at":"2019-12-20T04:52:01Z","updated_at":"2021-01-05T00:51:23Z","body":"![Screenshot from 2019-12-20 13-48-33](https://user-images.githubusercontent.com/8281454/71231124-da3bab00-232f-11ea-8c81-880bd64302ac.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":354844497,"public_id":34444,"url":"https://github.com/godotengine/godot/pull/34444","diff_url":"https://github.com/godotengine/godot/pull/34444.diff","patch_url":"https://github.com/godotengine/godot/pull/34444.patch","title":"Create script API for reading and writing zip files","state":"open","is_draft":false,"authored_by":{"id":24497353,"user":"flyingpimonster","avater":"https://avatars.githubusercontent.com/u/24497353?v=4","url":"https://github.com/flyingpimonster"},"created_at":"2019-12-18T22:18:22Z","updated_at":"2021-06-16T06:28:02Z","body":"This builds on #22554, which only supported writing zip files.\r\n\r\nCreates two new classes, ZipReader and ZipWriter, for reading and writing zip files in GDScript using the already bundled minizip library.\r\n\r\nExample:\r\n```gdscript\r\nvar p := ZIPPacker.new()\r\np.open(\"user://test.zip\")\r\np.start_file(\"hello/world.txt\")\r\np.write_file(\"Hello, world!\".to_utf8_buffer())\r\np.close()\r\n\r\nvar r := ZipReader.new()\r\nr.open(\"user://test.zip\")\r\nfor filename in r.get_files():\r\n    print(filename, \": \", r.read_file(filename).get_string_from_utf8())\r\n```\r\n\r\nNote: Append modes don't work yet due to a bug in `core/io/zip_io.cpp`. The `zipio_open` function doesn't properly handle the `ZLIB_FILEFUNC_MODE_EXISTING` flag. I'll fix that in another PR.\r\n\r\n*Bugsquad edit: This closes https://github.com/godotengine/godot-proposals/issues/1069.*","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":354780698,"public_id":34438,"url":"https://github.com/godotengine/godot/pull/34438","diff_url":"https://github.com/godotengine/godot/pull/34438.diff","patch_url":"https://github.com/godotengine/godot/pull/34438.patch","title":"Prevent to create or choose file outside of scope","state":"open","is_draft":false,"authored_by":{"id":6075580,"user":"NoFr1ends","avater":"https://avatars.githubusercontent.com/u/6075580?v=4","url":"https://github.com/NoFr1ends"},"created_at":"2019-12-18T19:39:56Z","updated_at":"2021-01-18T10:00:40Z","body":"Fixes #34194 \r\n\r\n---\r\n\r\nValidate relative paths in file dialog to make sure that\r\nthe provided path doesn't escape the scope of the\r\nfile dialog. Before it was possible to create, save or open a\r\nfile outside of res:// for example.\r\n\r\n---\r\n\r\nWe also could move the `check_access_scope` to the driver implementation to let the operating system resolves the relative path and then make sure that the resolved path still starts with the root path of `DirAccess`. Feedback wanted.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":353685873,"public_id":34383,"url":"https://github.com/godotengine/godot/pull/34383","diff_url":"https://github.com/godotengine/godot/pull/34383.diff","patch_url":"https://github.com/godotengine/godot/pull/34383.patch","title":"[3.x] GUI: Support for multi touch in _gui_input","state":"open","is_draft":false,"authored_by":{"id":6075580,"user":"NoFr1ends","avater":"https://avatars.githubusercontent.com/u/6075580?v=4","url":"https://github.com/NoFr1ends"},"created_at":"2019-12-16T17:50:16Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #29525 \r\n\r\n---\r\n\r\nSends the released and drag touch events to the expected control.\r\nDrag events now goes to the underlying control or if a touch press before happened to that control.\r\nReleased events now goes to the control which received the pressed event before.\r\n\r\nBefore the released event only reached _gui_input if it was from the first finger. \r\nAnd the drag events always reached the control with the first touch.\r\n\r\nI also attached the small test project with which I tested the pressed & released events.\r\n[TestMultiTouch.zip](https://github.com/godotengine/godot/files/3969434/TestMultiTouch.zip)","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[]},{"id":353228673,"public_id":34359,"url":"https://github.com/godotengine/godot/pull/34359","diff_url":"https://github.com/godotengine/godot/pull/34359.diff","patch_url":"https://github.com/godotengine/godot/pull/34359.patch","title":"Store meta for instanced scenes","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2019-12-15T01:21:36Z","updated_at":"2020-09-02T19:42:03Z","body":"I investigated #12990 and noticed that metadata is a hardcoded exception for instances. I was going to put a comment in the issue, but then decided to try my luck with making a PR right away :v (maybe it will be closed, but will raise more awareness for the issue)\r\n\r\nRemoving the exception makes the metadata correctly saved, but it also permanently overwrites the metadata from original scene. If you e.g. set root node as locked and instance it in another scene, then the lock will also be saved in the other scene. And when you remove it from the original scene, the lock in the new scene will stay.\r\n\r\nNow, should this be expected behavior? The dictionaries are compared by reference and since metadata is now always unique, the metadata in the instanced scene will never be equal to the original one, thus every instance will serialize duplicate metadata of original scene. We could somehow force metadata to be compared by value, but still, any modification will make the dictionary unique and store all keys.\r\n\r\nSo uh, in case this is acceptable, the PR can be merged. If not, meta serialization needs some rework to fix the issue.\r\n\r\nResolves #12990\r\nFixes #12838\r\nHelps #33790","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":350880368,"public_id":34226,"url":"https://github.com/godotengine/godot/pull/34226","diff_url":"https://github.com/godotengine/godot/pull/34226.diff","patch_url":"https://github.com/godotengine/godot/pull/34226.patch","title":"Fixes get_method_list function to return a correct info about custom functions","state":"open","is_draft":false,"authored_by":{"id":22608042,"user":"Dbeckett23","avater":"https://avatars.githubusercontent.com/u/22608042?v=4","url":"https://github.com/Dbeckett23"},"created_at":"2019-12-09T18:39:49Z","updated_at":"2020-09-02T19:42:05Z","body":"This PR is for progress made on https://github.com/godotengine/godot/issues/33624.\r\n\r\nI am working on contributing to an open source project for a class assignment and don't have enough time to track down some of the TODOs I added.  I plan on continuing work on this issue once I have more free time.\r\n\r\nPlease let me know of any advice or recommendations for changes I should to make. ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":350290898,"public_id":34179,"url":"https://github.com/godotengine/godot/pull/34179","diff_url":"https://github.com/godotengine/godot/pull/34179.diff","patch_url":"https://github.com/godotengine/godot/pull/34179.patch","title":"Cyclic BlendSpaces [1D/2D] for Animation","state":"open","is_draft":true,"authored_by":{"id":5601015,"user":"marstaik","avater":"https://avatars.githubusercontent.com/u/5601015?v=4","url":"https://github.com/marstaik"},"created_at":"2019-12-07T08:31:42Z","updated_at":"2021-04-30T00:40:23Z","body":"*Note*: Depends on https://github.com/godotengine/godot/pull/34134, as the blends are even more broken without it.\r\n\r\nThis PR aims to do some bugfixing for blendspaces as well as introduce the concept of *Cyclic* BlendSpaces.\r\n\r\nThere was some previous discussion of this here: https://github.com/godotengine/godot/issues/23414\r\n\r\nComing from other game engines, this is really a crucial and useful component for animation.\r\n\r\nThese cyclic BlendSpaces are very important for blending in animations whose timescale is supposed to match, such as movement animations, look-at animations, breathing animations, etc...\r\n\r\nCurrently they only support AnimationNodeAnimation's, since its currently the only way to reliably obtain an AnimationNodes runtime length, which is a hard requirement.\r\n\r\nIf AnimationNode's had a common interface where each node could return its computed runtime length, then any node could be used in the future, but that is a ton of work and maybe not as crucial for Cyclic BlendSpaces anyways.\r\n\r\nHere is a Demo:\r\nhttps://f.staik.net/f/2de.mp4","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":349742940,"public_id":34134,"url":"https://github.com/godotengine/godot/pull/34134","diff_url":"https://github.com/godotengine/godot/pull/34134.diff","patch_url":"https://github.com/godotengine/godot/pull/34134.patch","title":"Bugfix: Fix Anim Tree blending inconsistency","state":"open","is_draft":false,"authored_by":{"id":5601015,"user":"marstaik","avater":"https://avatars.githubusercontent.com/u/5601015?v=4","url":"https://github.com/marstaik"},"created_at":"2019-12-06T03:09:43Z","updated_at":"2021-08-13T17:46:58Z","body":"Reduz had done some work on this to make it a \"nicer\" blend, but the logic is non-linear and non-deterministic.\r\n\r\nIn the old blending method, there is a rot_blend_accum that gets increased for each blend, and then the blend percentage is divided over the maximum.\r\n\r\nThis leads to non-linear scaling that is non-deterministic, since the order of the blends makes the blend weights different.\r\n\r\nIE:\r\nBlend 1 : 0.4 percent\r\nBlend 2: 0.5 percent\r\nBlend 3: 0.1 percent\r\n-> (0.4/0.4 * rotation) * (0.5 / 0.9 * rotation) * ( 0.1 / 1.0 * rotation)\r\n\r\nIf you change the order:\r\nBlend 3: 0.1\r\nBlend 1: 0.4\r\nBlend 2: 0.5\r\n-> (0.1/0.1 * rotation) * (0.4 / 0.5 * rotation) * (0.5 / 1.0 * rotation)\r\n...Which is inconsistent for the reasons above\r\n\r\nThis change also causes the triangles in blend spaces to jump dramatically between two zones, as you would go from blending triangle A into triangle B (where Blend 2 & 3 are the common edge between the triangles):\r\nBlend 1: 0.1\r\nBlend 2: 0.5\r\nBlend 3: 0.4\r\n->\r\nBlend 2: 0.5\r\nBlend 3: 0.4\r\nBlend 4: 0.1\r\n\r\nStrangely enough, the root motion code above it actually calculates all of the transforms correctly.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418380]},{"id":347209062,"public_id":34013,"url":"https://github.com/godotengine/godot/pull/34013","diff_url":"https://github.com/godotengine/godot/pull/34013.diff","patch_url":"https://github.com/godotengine/godot/pull/34013.patch","title":"Allow scale setters to work with negative scales and add to Basis","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2019-11-30T09:31:17Z","updated_at":"2021-08-10T20:47:48Z","body":"I wrote the Transform2D scale setters awhile back, but I forgot about making it work with negative scales. I've updated the code to work such that. for example, setting the same scale won't change the matrix. It works by finding the \"delta\" multiplier needed to change the scale to the desired scale.\r\n\r\nHere's some test code, in C#:\r\n\r\n```cs\r\nTransform2D t = Transform2D.Identity;\r\nt.x = Vector2.Left;\r\nGD.Print(t.Scale);\r\nGD.Print(t);\r\nt.Scale = t.Scale; // Shouldn't change the transform, so the output should be the same:\r\nGD.Print(t.Scale);\r\nGD.Print(t);\r\n```\r\n\r\nI also added it to Basis, and I changed Mono's Basis scale getter to use `Column0` etc.\r\n\r\nI also noticed this very long comment in Basis `get_scale`:\r\n\r\n```cpp\r\n// FIXME: We are assuming M = R.S (R is rotation and S is scaling), and use polar decomposition to extract R and S.\r\n// A polar decomposition is M = O.P, where O is an orthogonal matrix (meaning rotation and reflection) and\r\n// P is a positive semi-definite matrix (meaning it contains absolute values of scaling along its diagonal).\r\n//\r\n// Despite being different from what we want to achieve, we can nevertheless make use of polar decomposition\r\n// here as follows. We can split O into a rotation and a reflection as O = R.Q, and obtain M = R.S where\r\n// we defined S = Q.P. Now, R is a proper rotation matrix and S is a (signed) scaling matrix,\r\n// which can involve negative scalings. However, there is a catch: unlike the polar decomposition of M = O.P,\r\n// the decomposition of O into a rotation and reflection matrix as O = R.Q is not unique.\r\n// Therefore, we are going to do this decomposition by sticking to a particular convention.\r\n// This may lead to confusion for some users though.\r\n//\r\n// The convention we use here is to absorb the sign flip into the scaling matrix.\r\n// The same convention is also used in other similar functions such as get_rotation_axis_angle, get_rotation, ...\r\n//\r\n// A proper way to get rid of this issue would be to store the scaling values (or at least their signs)\r\n// as a part of Basis. However, if we go that path, we need to disable direct (write) access to the\r\n// matrix elements.\r\n//\r\n// The rotation part of this decomposition is returned by get_rotation* functions.\r\n```\r\n\r\nIn a nutshell, the fix mentioned would significantly change how Basis works, overcomplicating it for little benefit. I think the best solution is to change this comment to be a note on how things work, removing \"FIXME\" and maybe rewording the text. Thoughts? EDIT: @tagcup ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":347168560,"public_id":34005,"url":"https://github.com/godotengine/godot/pull/34005","diff_url":"https://github.com/godotengine/godot/pull/34005.diff","patch_url":"https://github.com/godotengine/godot/pull/34005.patch","title":"Add MaxAxis and MinAxis to Vector2","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2019-11-29T22:25:07Z","updated_at":"2021-08-16T01:06:38Z","body":"Also some cleanup with core's Vector3 methods so that it is consistent, for example it returns enums internally (GDScript still gets ints). In Mono's Vector3, alphabetize the methods.\r\n\r\nI suggest 4.0 milestone because this is a very non-essential enhancement.\r\n\r\nEDIT: Also now fixes #34190.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,3857901,4418914]},{"id":346876134,"public_id":33984,"url":"https://github.com/godotengine/godot/pull/33984","diff_url":"https://github.com/godotengine/godot/pull/33984.diff","patch_url":"https://github.com/godotengine/godot/pull/33984.patch","title":"Tree item folding improvements","state":"open","is_draft":true,"authored_by":{"id":52422077,"user":"FeatherAntennae","avater":"https://avatars.githubusercontent.com/u/52422077?v=4","url":"https://github.com/FeatherAntennae"},"created_at":"2019-11-29T02:56:32Z","updated_at":"2020-09-02T19:42:08Z","body":"## What is this / TLWR\r\nA few small changes to the Tree and TreeItem classes along with a not so small refactor of all their in-editor implementation.\r\n\r\nThe goal is to reduce clutter in many classes that each have their own (different) implementation of the same logic, while giving new and old behaviors of the UI trees better consistency across the editor.\r\n\r\n## Intro\r\n\r\nOnce upon a time, in an editor near you, \r\neach UI trees were their own.\r\n\r\nThey all had different implementations of the same functionalities and sometimes completly different behaviour. Some had more functionalities than the others and their handling were are all different.\r\n\r\nUsers were feeling defeated and engine devs were getting depressions from the Spaghetti Oriented Programing that came from years of awesome contributors trying very hard to make everyone happy by adding small requested features in specific parts of the editor while also working on the more important parts of the core engine.\r\n\r\nBut all hope is not lost! The community is constantly growing and now, a bored software engineering student and part time UI/UX designer decided to learn C++ to help the devs growing the engine he loves into an healthy and powerful tool for all of your game making needs.\r\n\r\n### But how?\r\nBy making a few small changes to the Tree and TreeItem classes along with a not so small refactor of all their in editor implementation.\r\n\r\n### Goal\r\nReducing clutter in many classes that each have their own (different) implementation of the same logic while giving new and old behaviors of the UI trees a good dose of consistency across the editor.\r\n\r\nThis will also make the implementation of #31815 cleaner and easier.\r\n\r\n### What's left to do\r\nThis is still a WIP as I plan to refactor the folding logic in every corners of the editor to use the new available methods to reduce clutter and have consistent functionalities across the editor.\r\n\r\nI also want to write documentation for the new methods, give more appropriate icons to the context menu option and of course would like some feedback on the changes.\r\n\r\n### Note\r\n\r\nI made it a bit easier to change the scene tree dock's context menu's order, so don't hesitate to suggest different placement of items if you think this one is too different or bad, I tried to keep things relatively where they were while reducing the amount of groups and allowing for the tree folding utilities to be added.\r\n\r\nI also made it so the comportment of the alt+click functionalities extremely easy to tweak if needed so the current behavior is open to discussion.\r\n\r\n## TODO\r\nI'm leaving this here as a small reminder of what's left to do in a slightly more exhaustive way. Will change as the status of the PR changes.\r\n\r\n### Code\r\n#### Tree / TreeItem methods\r\nImplement advanced tree expending/folding logic directly into TreeItem and adds some helper methods to Tree and TreeItem.\r\n\r\n- [x]    `TreeItem::set_collapsed_recursive(...)`\r\n- [x]    `TreeItem::toggle_collapsed_all_descendants()`\r\n- [x]    `TreeItem::is_active()`\r\n- [x]    `Tree::set_collapsed_all(...)`\r\n\r\n#### Tree Behaviour\r\nAdd editor wide support for ALT+Clicking the folding arrows of Tree controls for recursive expansion and collapse of descendants.\r\n\r\n- [x]    `Add functionality when handling user input.`\r\n\r\n#### Refactoring\r\nRemove Tree and TreeItem collapse/expand logic and custom tree behaviour from all independent components of the editor as it should be handled by the TreeItem and Tree classes directly.\r\n\r\n- [x]    `Scene Tree Dock`\r\n- [ ]     `File System Dock`\r\n- [ ]     `Inspector Dock`\r\n- [ ]     `Find other places where it happens!`\r\n\r\n#### UI/UX\r\nAdd functionality and common behaviour to all UI trees to keep user interaction consistent throughout the editor.\r\n\r\n- [ ]     `Icons for the context menus`\r\n- [x]    `Scene Tree Dock -> add expand/collapse utilities to context menu`\r\n- [x]    `Scene Tree Dock -> reorder context menu elements to keep things in a related order and reduce the amount of lost space caused by abundant separator.`\r\n- [ ]     `File System Dock context menu`\r\n- [ ]     `Node Dock context menu`\r\n- [ ]     `Import Dock? -> Allow collapsing sections to act like other similar UI`\r\n- [ ]     `Search Help context menu`\r\n- [ ]     `Manage Editor features context menu`\r\n- [ ]     `Editor Settings context menu`\r\n- [ ]     `Project Settings context menu`\r\n- [ ]     `Tools -> \"Orphan Resource Explorer\" context menu`\r\n- [ ]     `Find other places where it's needed!`\r\n\r\n### Documentation\r\nUpdate the class reference for every new methods and add a small section to the doc to expose some of the more hidden behaviour.\r\n\r\n- [ ]    `TreeItem::set_collapsed_recursive(...)`\r\n- [ ]    `TreeItem::toggle_collapsed_all_descendants()`\r\n- [ ]    `TreeItem::is_active()`\r\n- [ ]    `Tree::set_collapsed_all(...)`\r\n- [ ]    `Editor manual? -> Navigation and Default behaviours? -> UI Trees -> ALT+Click fold arrow`\r\n\r\n### Miscellaneous\r\nOther things not necessarily related to the code, including things related to the pull request itself and this post.\r\n\r\n- [ ]    `GIF of the alt+click folding functionality alone`\r\n- [ ]    `GIF of the normal folding functionality alone`\r\n- [ ]    `GIF of the expand / collapse all functionality`\r\n- [ ]    `GIF of the collapse unselected functionality`\r\n- [ ]    `GIF of the expand / collapse descendants functionality`\r\n- [ ]    `Before/After picture comparison of the Scene Tree Dock context menu (one item selected, one external item selected, multiple item selected)`\r\n\r\n\r\n## Preview\r\nHere you can see the context menu, some folding functions, the normal arrow folding and the alt+click arrow folding for the scene tree. The alt+click logic applies to all Tree controls in the editor. I forgot to show it, but the Expand/Collapse Descendant function of the context menu does the same thing as the alt+click on the arrow.\r\n\r\n![Sceme Tree Folding Logic](https://user-images.githubusercontent.com/52422077/69840421-7a1e8100-1229-11ea-9faa-ddce04344062.gif)\r\n\r\nThe new context menu layout for easier analysis, feedback, insults, kudos, etc.\r\n![image](https://user-images.githubusercontent.com/52422077/69840659-48f28080-122a-11ea-8b2c-d0e482ed1a95.png)       ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":346512092,"public_id":33961,"url":"https://github.com/godotengine/godot/pull/33961","diff_url":"https://github.com/godotengine/godot/pull/33961.diff","patch_url":"https://github.com/godotengine/godot/pull/33961.patch","title":"Add Arrange functionality","state":"open","is_draft":false,"authored_by":{"id":8281454,"user":"volzhs","avater":"https://avatars.githubusercontent.com/u/8281454?v=4","url":"https://github.com/volzhs"},"created_at":"2019-11-28T04:09:39Z","updated_at":"2021-06-30T09:07:50Z","body":"![arrange](https://user-images.githubusercontent.com/8281454/69822524-ec9f5900-1249-11ea-8a2d-676771c7323a.gif)\r\n\r\nArrange panel is visible when selecting 2 or more `CanvasItem` nodes.\r\ntoo late for 3.2? :smile: \r\n\r\n_Edit : Arrange tool was moved to Toolbar from Inspector._","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":346247022,"public_id":33940,"url":"https://github.com/godotengine/godot/pull/33940","diff_url":"https://github.com/godotengine/godot/pull/33940.diff","patch_url":"https://github.com/godotengine/godot/pull/33940.patch","title":"Fix GridMap cursor position when using half-resolution rendering","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-11-27T13:43:55Z","updated_at":"2021-08-22T03:06:51Z","body":"**Note:** This fix only works on the first viewport, it won't apply correctly to other viewports whose Half Resolution mode is different from the first viewport. Help on solving this would be appreciated :slightly_smiling_face:\r\n\r\nThis closes #33937.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418550,4418726]},{"id":344759556,"public_id":33832,"url":"https://github.com/godotengine/godot/pull/33832","diff_url":"https://github.com/godotengine/godot/pull/33832.diff","patch_url":"https://github.com/godotengine/godot/pull/33832.patch","title":"Add cell_item_changed signal to GridMaps","state":"open","is_draft":false,"authored_by":{"id":45057944,"user":"WatchThemFall","avater":"https://avatars.githubusercontent.com/u/45057944?v=4","url":"https://github.com/WatchThemFall"},"created_at":"2019-11-23T01:18:30Z","updated_at":"2020-09-04T09:50:58Z","body":"A signal called when a GridMap cell is changed. It returns the changed GridMap as an object, the changed cell's Vector3, the new item, and the previous item. Returns -1 as \"previous\" if no item existed, and returns -1 for the \"new\" item if it was an erase action.\r\n\r\nHere's an example of what this can be used for:\r\nhttps://i.imgur.com/1eZtotw.mp4\r\nIt makes GridMap quite a bit more powerful.\r\n\r\nFixes https://github.com/godotengine/godot/issues/11855\r\nhttps://github.com/godotengine/godot/issues/10418\r\n\r\n(Sorry I opened and closed a duplicate pull request earlier. I closed it because I ran it through some clang formatter, and it messed it up horribly. I didn't realize it wouldn't actually completely erase the PR.)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":342816118,"public_id":33743,"url":"https://github.com/godotengine/godot/pull/33743","diff_url":"https://github.com/godotengine/godot/pull/33743.diff","patch_url":"https://github.com/godotengine/godot/pull/33743.patch","title":"Independant spinbox arrow step precision","state":"open","is_draft":false,"authored_by":{"id":2924543,"user":"johannesgunnar","avater":"https://avatars.githubusercontent.com/u/2924543?v=4","url":"https://github.com/johannesgunnar"},"created_at":"2019-11-19T18:08:36Z","updated_at":"2021-08-05T21:18:11Z","body":"The arrow buttons on Spinbox become relatively useless when one wants to have the ability to write numbers with high precision. For example setting step to 0.000001. In its current form the arrow buttons will become relatively useless.\r\n\r\nThis pull request fixes that by implementing an independent step value for the arrow buttons on spinboxes. Default value is 0 to avoid breaking compatibility, and if range class step value is higher it will use that step instead.\r\n![spinbox](https://user-images.githubusercontent.com/2924543/69173144-12fd2000-0af7-11ea-832d-3ab0ab5627c5.gif)\r\n\r\nThis is related to my proposal https://github.com/godotengine/godot-proposals/issues/226\r\n\r\nThis work has been kindly sponsored by IMVU.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":342685587,"public_id":33733,"url":"https://github.com/godotengine/godot/pull/33733","diff_url":"https://github.com/godotengine/godot/pull/33733.diff","patch_url":"https://github.com/godotengine/godot/pull/33733.patch","title":"Reset animation on playback stop","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2019-11-19T13:40:46Z","updated_at":"2021-03-10T00:11:32Z","body":"Fixes #27499","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":341996436,"public_id":33694,"url":"https://github.com/godotengine/godot/pull/33694","diff_url":"https://github.com/godotengine/godot/pull/33694.diff","patch_url":"https://github.com/godotengine/godot/pull/33694.patch","title":"Fix IBL specular persisting when specular disabled","state":"open","is_draft":false,"authored_by":{"id":16521339,"user":"clayjohn","avater":"https://avatars.githubusercontent.com/u/16521339?v=4","url":"https://github.com/clayjohn"},"created_at":"2019-11-18T07:02:16Z","updated_at":"2020-10-19T06:30:17Z","body":"Fixes: #33616 \r\n\r\n``SPECULAR_DISABLED`` wasn't affecting IBL specular. So in PBR scenes, there were still specular highlights even when specular was disabled.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":341801355,"public_id":33666,"url":"https://github.com/godotengine/godot/pull/33666","diff_url":"https://github.com/godotengine/godot/pull/33666.diff","patch_url":"https://github.com/godotengine/godot/pull/33666.patch","title":"Corrected 'add_callback' for Signal Connection to Prevent Incorrect Number of New Lines","state":"open","is_draft":false,"authored_by":{"id":3040352,"user":"Eoin-ONeill-Yokai","avater":"https://avatars.githubusercontent.com/u/3040352?v=4","url":"https://github.com/Eoin-ONeill-Yokai"},"created_at":"2019-11-16T23:20:55Z","updated_at":"2021-01-01T07:28:59Z","body":"As originally reported by KoBeWi #33287 -- With code end-line behavior added in #29262, it's sometimes possible for the wrong number of new lines to be created depending on the number of new lines at the end of the document. \r\n\r\nNow, it will try to find the last line with valid content and add the appropriate number of spaces according to the GDScript standard (2 new lines between each function.) This should bring more consistency to the user experience. For files with ridiculous amount of whitespace at the end of the document, there's a cutoff of 50 lines. ","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":340648964,"public_id":33602,"url":"https://github.com/godotengine/godot/pull/33602","diff_url":"https://github.com/godotengine/godot/pull/33602.diff","patch_url":"https://github.com/godotengine/godot/pull/33602.patch","title":"Fix AudioStreamPlayer emitting finished signal on stopping","state":"open","is_draft":false,"authored_by":{"id":17108460,"user":"Xrayez","avater":"https://avatars.githubusercontent.com/u/17108460?v=4","url":"https://github.com/Xrayez"},"created_at":"2019-11-13T20:18:06Z","updated_at":"2021-07-26T12:49:13Z","body":"Stopping and finishing a track are treated separately, ensure to reset `setstop` flag to `false` on playing again.\r\n\r\nThis breaks compat for people who expect/rely on `$audio.stop()` to emit `finished` signal as well. The signal is only emitted when the track reaches the end now.\r\n\r\nDue to this, I've added `stopped` signal which is emitted only when the playback is abruptly stopped (same as before, but now it won't emit when the playback finishes normally, which closes #33579).\r\n\r\n## Test project\r\n\r\n[audio-stream-player-stop-finished.zip](https://github.com/godotengine/godot/files/4864744/audio-stream-player-stop-finished.zip) (Intro.ogg taken from demo projects).\r\n","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":339448388,"public_id":33541,"url":"https://github.com/godotengine/godot/pull/33541","diff_url":"https://github.com/godotengine/godot/pull/33541.diff","patch_url":"https://github.com/godotengine/godot/pull/33541.patch","title":"Add bbcode support for printing output (colored debug messages, better logging)","state":"open","is_draft":false,"authored_by":{"id":13589801,"user":"georgwacker","avater":"https://avatars.githubusercontent.com/u/13589801?v=4","url":"https://github.com/georgwacker"},"created_at":"2019-11-11T13:58:48Z","updated_at":"2020-09-02T19:42:14Z","body":"In reference to better logging #19122 and  #10870, this simple change enables styling of print messages.\r\nThe editor output log already uses a RichTextLabel, so why not use the bbcode functionality?\r\n\r\nIf performance is a concern (`add_text` vs `append_bbcode`) perhaps we could make it an editor setting?\r\n\r\nIf used, the bbcode will of course show up in the log files, I believe the same is true for coloring output in Unity. I don't think this is an issue if you want colored output for debugging, though. \r\n\r\nThis is how it looks:\r\n![print_color](https://user-images.githubusercontent.com/13589801/68591498-2d008800-0491-11ea-877a-4f95c95b48d0.PNG)\r\n\r\n```\r\nprint(\"normal print\")\r\nprint(\"[rainbow]normal print[/rainbow]\")\r\nprint_debug(\"[color=aqua]Debug: [/color]\", \"[color=lime]Object 02[/color]\")\r\n```\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":339107447,"public_id":33505,"url":"https://github.com/godotengine/godot/pull/33505","diff_url":"https://github.com/godotengine/godot/pull/33505.diff","patch_url":"https://github.com/godotengine/godot/pull/33505.patch","title":"Color stacktraces printed by the crash handler when in a TTY","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-11-10T02:02:03Z","updated_at":"2021-05-06T15:47:57Z","body":"**Depends on https://github.com/godotengine/godot/pull/44118.**\r\n\r\nThis makes them easier to read, which in turn improves the developer experience.\r\n\r\nThe part that enables ANSI escape codes on Windows was inspired by [this page](https://solarianprogrammer.com/2019/04/08/c-programming-ansi-escape-codes-windows-macos-linux-terminals/).\r\n\r\n## Preview\r\n\r\n![Stacktrace on Windows](https://user-images.githubusercontent.com/180032/68537559-8029ec00-0366-11ea-8d5f-e10ceb0f3e09.png)\r\n\r\nPS: For testing purposes, you can call `CRASH_NOW();` anywhere to make Godot crash.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":339047879,"public_id":33489,"url":"https://github.com/godotengine/godot/pull/33489","diff_url":"https://github.com/godotengine/godot/pull/33489.diff","patch_url":"https://github.com/godotengine/godot/pull/33489.patch","title":"Update configuration warnings for Particles, CPUParticles, Particles2D & CPUParticles2D","state":"open","is_draft":true,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2019-11-09T15:39:09Z","updated_at":"2020-09-02T19:42:14Z","body":"Particle systems track changes in meshes, materials & parameters in the editor in order to update warnings properly.\r\n\r\nFixes #33488","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":335682776,"public_id":33252,"url":"https://github.com/godotengine/godot/pull/33252","diff_url":"https://github.com/godotengine/godot/pull/33252.diff","patch_url":"https://github.com/godotengine/godot/pull/33252.patch","title":"Add option to paste animation as duplicate","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2019-11-02T01:05:00Z","updated_at":"2021-08-14T17:04:45Z","body":"Might resolve #24950\r\n![image](https://user-images.githubusercontent.com/2223172/68063729-a969cd00-fd13-11e9-8524-84efe2ad536a.png)\r\n\r\n@avencherus \r\n@golddotasksquestions\r\n\r\nEDIT:\r\nAdded another commit that alternatively makes Paste duplicate by default and adds \"Paste As Reference\" option for current behavior.\r\n![image](https://user-images.githubusercontent.com/2223172/68071639-81fb1a80-fd7c-11e9-9c23-df75b5ca7493.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":335133792,"public_id":33220,"url":"https://github.com/godotengine/godot/pull/33220","diff_url":"https://github.com/godotengine/godot/pull/33220.diff","patch_url":"https://github.com/godotengine/godot/pull/33220.patch","title":"Fix voices of AudioEffectChorus not updating correctly in inspector","state":"open","is_draft":false,"authored_by":{"id":15001253,"user":"norkn","avater":"https://avatars.githubusercontent.com/u/15001253?v=4","url":"https://github.com/norkn"},"created_at":"2019-10-31T20:25:15Z","updated_at":"2021-06-06T13:16:56Z","body":"Fixes #20003.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":572781997,"name":"topic:audio","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":334152902,"public_id":33177,"url":"https://github.com/godotengine/godot/pull/33177","diff_url":"https://github.com/godotengine/godot/pull/33177.diff","patch_url":"https://github.com/godotengine/godot/pull/33177.patch","title":"Added some functions to harmonize Vector2/Vector3","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2019-10-30T10:33:19Z","updated_at":"2020-09-02T19:42:18Z","body":"This change adds a few missing functions to `Vector2` and `Vector3` to make their functionalities similar. The code has been also cleaned to follow the new coding rules.\r\n\r\nNew methods in Vector2 (from Vector3):\r\n`Vector2 Vector2::inverse()`\r\n`int Vector2::min_axis()`\r\n`int Vector2::max_axis()`\r\n\r\nNew method in Vector3 (from Vector2):\r\n`Vector3 Vector3::clamped(float length)`\r\n\r\nThese new methods are exposed to gdscript/gdnative and the doc is updated.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":333198992,"public_id":33143,"url":"https://github.com/godotengine/godot/pull/33143","diff_url":"https://github.com/godotengine/godot/pull/33143.diff","patch_url":"https://github.com/godotengine/godot/pull/33143.patch","title":"Create docs button for FileSystem resources","state":"open","is_draft":false,"authored_by":{"id":8457973,"user":"thiagoamendola","avater":"https://avatars.githubusercontent.com/u/8457973?v=4","url":"https://github.com/thiagoamendola"},"created_at":"2019-10-28T16:10:23Z","updated_at":"2020-10-27T07:05:22Z","body":"Like the node's context menu from the **Scene** tab, the context menu for\r\nresources in the **FileSystem** tab should contain an _\"Open Documentation\"_ button.\r\n\r\nThe _\"Open Documentation\"_ button for resources can open the documentation for\r\ngiven resource's type. It works with multiple file selections and avoids\r\nopening an empty documentation tab for folders.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":332958050,"public_id":33131,"url":"https://github.com/godotengine/godot/pull/33131","diff_url":"https://github.com/godotengine/godot/pull/33131.diff","patch_url":"https://github.com/godotengine/godot/pull/33131.patch","title":"Fix related editor panel not opening after creating resource","state":"open","is_draft":false,"authored_by":{"id":8457973,"user":"thiagoamendola","avater":"https://avatars.githubusercontent.com/u/8457973?v=4","url":"https://github.com/thiagoamendola"},"created_at":"2019-10-28T05:38:12Z","updated_at":"2021-03-11T16:50:32Z","body":"When creating a new resource inside an editor node, its related editor panel\r\nshould open automatically but it was opening only after selecting the resource.\r\nJust like in **_resource_selected** method from `editor_properties` class,\r\nadding a section unfold call in **_menu_option** method fixes this issue.\r\n\r\nFix #32895","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":332906426,"public_id":33123,"url":"https://github.com/godotengine/godot/pull/33123","diff_url":"https://github.com/godotengine/godot/pull/33123.diff","patch_url":"https://github.com/godotengine/godot/pull/33123.patch","title":"Capitalize properties in the remote inspector","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-10-27T23:39:54Z","updated_at":"2021-08-22T02:59:33Z","body":"This makes property casing consistent with the editor.\r\n\r\nIf property capitalization is disabled in the Editor Settings, the remote inspector will also disable capitalization.\r\n\r\n## Preview\r\n\r\n![image](https://user-images.githubusercontent.com/180032/67643789-8ad29300-f91b-11e9-9d9f-4deb2ae2c415.png)","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":332755374,"public_id":33080,"url":"https://github.com/godotengine/godot/pull/33080","diff_url":"https://github.com/godotengine/godot/pull/33080.diff","patch_url":"https://github.com/godotengine/godot/pull/33080.patch","title":"Added support for generic type exported properties in gdscript","state":"open","is_draft":false,"authored_by":{"id":1075032,"user":"pouleyKetchoupp","avater":"https://avatars.githubusercontent.com/u/1075032?v=4","url":"https://github.com/pouleyKetchoupp"},"created_at":"2019-10-26T10:16:27Z","updated_at":"2021-04-28T18:19:37Z","body":"This change allows scripts to use untyped properties. Their type can be changed in the inspector the same way as for elements in `Array` or `Dictionary`.\r\n\r\nThis implementation uses properties of type `TYPE_NIL` with the existing usage flag `PROPERTY_USAGE_NIL_IS_VARIANT`.\r\n\r\nSyntax for property list:\r\n```\r\n{\r\n\t\"name\": \"generic_var\",\r\n\t\"type\": TYPE_NIL,\r\n\t\"usage\": PROPERTY_USAGE_DEFAULT | PROPERTY_USAGE_NIL_IS_VARIANT,\r\n\t\"hint\": PROPERTY_HINT_NONE,\r\n\t\"hint_string\" : \"\",\r\n}\r\n```\r\n\r\nSyntax for exported variable:\r\n`export(Variant) var generic_export_var`\r\n\r\nProperty in the inspector:\r\n<img src=\"https://user-images.githubusercontent.com/1075032/67617781-0da60180-f7e7-11e9-8698-6ec3212d2b58.png\" width=\"300\"/>","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":330951060,"public_id":32979,"url":"https://github.com/godotengine/godot/pull/32979","diff_url":"https://github.com/godotengine/godot/pull/32979.diff","patch_url":"https://github.com/godotengine/godot/pull/32979.patch","title":"Create intermediate segments in ConcavePolygonShape2D.","state":"open","is_draft":false,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2019-10-22T11:57:27Z","updated_at":"2020-09-02T19:42:20Z","body":"Fixes #19353, fixes #29320.\r\n\r\nA ConcavePolygonShape2D is expected to be similar to a ConvexPolygonShape2D. The [description for ConcavePolygonShape2D](https://docs.godotengine.org/en/3.1/classes/class_concavepolygonshape2d.html#description) states:\r\n> The main difference between a ConvexPolygonShape2D and a ConcavePolygonShape2D is that a concave polygon assumes it is concave and uses a more complex method of collision detection, and a convex one forces itself to be convex in order to speed up collision detection.\r\n\r\nThis patch makes them similar by using the points in the PoolVector2Array associated with a ConcavePolygonShape2D to create a contiguous, closed-loop of segments instead of requiring and grouping them into pairs of discontiguous segments, which leaves unexpected holes between the pairs.","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":330715360,"public_id":32968,"url":"https://github.com/godotengine/godot/pull/32968","diff_url":"https://github.com/godotengine/godot/pull/32968.diff","patch_url":"https://github.com/godotengine/godot/pull/32968.patch","title":"Rework vformat to use variadic templates","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2019-10-21T22:05:58Z","updated_at":"2021-01-21T11:45:36Z","body":"Now scales better and does not perform unnecessary if statements","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":330149093,"public_id":32949,"url":"https://github.com/godotengine/godot/pull/32949","diff_url":"https://github.com/godotengine/godot/pull/32949.diff","patch_url":"https://github.com/godotengine/godot/pull/32949.patch","title":"Implement debug memory marking","state":"open","is_draft":true,"authored_by":{"id":11797174,"user":"RandomShaper","avater":"https://avatars.githubusercontent.com/u/11797174?v=4","url":"https://github.com/RandomShaper"},"created_at":"2019-10-20T19:28:28Z","updated_at":"2021-05-03T04:14:19Z","body":"This consists in marking memory regions with certain specific values when they are (re)allocated or\r\nfreed in order to ease debugging of certain bugs, catching them as early as possible, detect\r\nuninitialized variables, etc.\r\n\r\nSome C++ implementations may already do this in debug mode, but the idea of this is to make it work\r\nexactly the same regardless the platform/compiler/library.\r\n\r\n```\r\nALLOCATED\r\n+-------------------------+\r\n| F1 F1 F1 F1 F1 F1 F1 F1 |\r\n+-------------------------+\r\n\r\nREALLOCATED (new size > old size)\r\n\r\n/----------------- new size -----------------/\r\n/------- old size -------/---- size diff ----/\r\n\r\n+------------------------+===================+\r\n|   current contents     | F2 F2 F2 F2 F2 F2 |\r\n+------------------------+===================+\r\n\r\nREALLOCATED (new size < old size)\r\n\r\n/----------------- old size -----------------/\r\n/------- new size -------/---- size diff ----/\r\n\r\n+------------------------+···················+\r\n|   kept contents        | F3 F3 F3 F3 F3 F3 :\r\n+------------------------+···················+\r\n\r\nFREED\r\n+·························+\r\n: F4 F4 F4 F4 F4 F4 F4 F4 :\r\n+·························+\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":330148035,"public_id":32948,"url":"https://github.com/godotengine/godot/pull/32948","diff_url":"https://github.com/godotengine/godot/pull/32948.diff","patch_url":"https://github.com/godotengine/godot/pull/32948.patch","title":"Fixed Node's editor description not showing up after saving","state":"open","is_draft":false,"authored_by":{"id":37383316,"user":"Muller-Castro","avater":"https://avatars.githubusercontent.com/u/37383316?v=4","url":"https://github.com/Muller-Castro"},"created_at":"2019-10-20T19:17:16Z","updated_at":"2021-02-25T15:28:53Z","body":"The description was only updating during \"Switch Scene Tab\"\r\n\r\nBefore:\r\n\r\n![Before](https://user-images.githubusercontent.com/37383316/67164804-bd492280-f354-11e9-955d-760d36208a6c.gif)\r\n\r\n-----------------------------------------------------------------------------------------\r\n\r\nAfter:\r\n\r\n![After](https://user-images.githubusercontent.com/37383316/67164812-cc2fd500-f354-11e9-8be6-575b12c435cd.gif)\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418563]},{"id":330121730,"public_id":32943,"url":"https://github.com/godotengine/godot/pull/32943","diff_url":"https://github.com/godotengine/godot/pull/32943.diff","patch_url":"https://github.com/godotengine/godot/pull/32943.patch","title":"Fix: mouse_exited event/notification called properly when mouse drag in Control","state":"open","is_draft":false,"authored_by":{"id":1110337,"user":"dreamsComeTrue","avater":"https://avatars.githubusercontent.com/u/1110337?v=4","url":"https://github.com/dreamsComeTrue"},"created_at":"2019-10-20T14:22:09Z","updated_at":"2020-09-02T19:42:22Z","body":"Fixes: https://github.com/godotengine/godot/issues/19808\r\nFixes #19601\r\nAlso - is related to another PR by me: https://github.com/godotengine/godot/pull/32937\r\nSo - better would be to merge current one, because it fixes both issues  :)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":330070705,"public_id":32929,"url":"https://github.com/godotengine/godot/pull/32929","diff_url":"https://github.com/godotengine/godot/pull/32929.diff","patch_url":"https://github.com/godotengine/godot/pull/32929.patch","title":"[WIP] add explicit constructs with single arg","state":"open","is_draft":true,"authored_by":{"id":23621844,"user":"FrazerClews","avater":"https://avatars.githubusercontent.com/u/23621844?v=4","url":"https://github.com/FrazerClews"},"created_at":"2019-10-20T00:39:50Z","updated_at":"2020-09-02T19:42:23Z","body":"used cppcheck 1.86 to catch and add explicit to constructors with single arguments","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":329105356,"public_id":32887,"url":"https://github.com/godotengine/godot/pull/32887","diff_url":"https://github.com/godotengine/godot/pull/32887.diff","patch_url":"https://github.com/godotengine/godot/pull/32887.patch","title":"[WIP] Standardise the behaviour of the const and non const versions of the array operator within and between the Map classes","state":"open","is_draft":true,"authored_by":{"id":9253928,"user":"madmiraal","avater":"https://avatars.githubusercontent.com/u/9253928?v=4","url":"https://github.com/madmiraal"},"created_at":"2019-10-17T07:16:43Z","updated_at":"2020-09-02T19:42:23Z","body":"Fixes part 7 of #27638, which was not addressed by #30716.\r\n\r\nPart 7 of #27638 points out that in the non const version of the array subscript overloading of the VMap<T, V> template class an instance of V is used uninitialised:\r\n![55487295-202fd200-562e-11e9-9230-26c7e63537e4](https://user-images.githubusercontent.com/9253928/66929159-d5f2c900-f032-11e9-9804-35c9d2e60fad.png)\r\n\r\nThe non const version of an array subscript overload can be used to both assign a value and give access to a writeable version of an underlying variable. The use of an uninitialised version of V is only a problem when the array subscript is used to access a writeable version of the underlying variable when the array index i.e. the T key is not found in the underlying CowData, but a potential problem nonetheless.\r\n\r\nThe const version of the VMap array subscript overload calls CRASH_COND when the T key is not found in the underlying CowData.\r\nhttps://github.com/godotengine/godot/blob/119bf237209414a49879fba40459f22315ab1467/core/vmap.h#L186-L193\r\nThis patch mirrors the non const behaviour. Any attempt to use VMap's array subscript to access a value V, when the T key is not found will generate a CRASH_COND instead.\r\n\r\nUnfortunately, this will also cause a CRASH_COND if the array subscript is used to assign a V value to a new T value. Since the code was simply calling the public insert function, code using VMap can use this function instead:\r\nhttps://github.com/godotengine/godot/blob/119bf237209414a49879fba40459f22315ab1467/core/vmap.h#L116-L127\r\nThis will have the desired result of overwriting the existing V value if the T key value exists and creating a new pair if it doesn't.\r\n\r\nVMap is currently used by Object for Signal, Slot pairs, VisualShader for connections and GDScriptTokenizerBuffer for storing bytes (uint32_t). It appears as if only Object is using VMap's non const version of the array subscript, and it only uses it once for assignment and twice for accessing writeable versions of the underlying Slots. Therefore this patch also makes the following changes:\r\n\r\n- Object's use of the array subscript assignment is replaced with the insert function.\r\n- The first use for accessing a writeable version of a Slot is also protected by an initial check to ensure the key exists:\r\nhttps://github.com/godotengine/godot/blob/119bf237209414a49879fba40459f22315ab1467/core/object.cpp#L1459-L1466\r\nTherefore, no change is required.\r\n- The second use for accessing a writeable version also performs a ERR_FAIL_COND_MSG check, which also returns out of the function.\r\nhttps://github.com/godotengine/godot/blob/119bf237209414a49879fba40459f22315ab1467/core/object.cpp#L1524-L1526\r\nTherefore, no change is required.\r\n\r\n","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":328772848,"public_id":32871,"url":"https://github.com/godotengine/godot/pull/32871","diff_url":"https://github.com/godotengine/godot/pull/32871.diff","patch_url":"https://github.com/godotengine/godot/pull/32871.patch","title":"Editor Array subhints fix","state":"open","is_draft":false,"authored_by":{"id":13684645,"user":"lonegamedev","avater":"https://avatars.githubusercontent.com/u/13684645?v=4","url":"https://github.com/lonegamedev"},"created_at":"2019-10-16T13:52:12Z","updated_at":"2020-09-02T19:42:24Z","body":"F.e restrict Array's editor UI to allow only NodePaths of RigidBody type.\r\n\r\nI think hint_string syntax was supposed to be:\r\n\r\n(VARIANT_ID_INT):[(HINT_ID_INT)/(HINT_STRING)]\r\nthe section after colon is optional\r\n\r\nbut it's hard to figure out without any docs,\r\nand broken string parser.\r\n\r\nUse Example:\r\n\r\nADD_PROPERTY(PropertyInfo(Variant::ARRAY,\r\n\"hints_array\", PROPERTY_HINT_NONE,\r\nitos(Variant::NODE_PATH)+\":\"+itos(PROPERTY_HINT_NODE_PATH_VALID_TYPES)+\"/RigidBody\"),\r\n\"set_hints\", \"get_hints\");","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":328651661,"public_id":32861,"url":"https://github.com/godotengine/godot/pull/32861","diff_url":"https://github.com/godotengine/godot/pull/32861.diff","patch_url":"https://github.com/godotengine/godot/pull/32861.patch","title":"Added a FULLRECT_UV keyword in canvas item","state":"open","is_draft":false,"authored_by":{"id":7917475,"user":"QbieShay","avater":"https://avatars.githubusercontent.com/u/7917475?v=4","url":"https://github.com/QbieShay"},"created_at":"2019-10-16T09:10:36Z","updated_at":"2021-08-11T21:46:33Z","body":"There are some cases where having information on the position compared\r\nto the full quad is useful, for example a vertical fade based on the\r\nquad's y UV coordinate.\r\n\r\nCurrently, cases such as atlas and 9patch don't bring information regarding the quad uv.\r\nexample below, the big white robot is a regular sprite while the smaller block on the\r\n left is an atlas. note the different alpha.\r\nwith `COLOR.a = UV.y`\r\n![Screenshot_2019-10-16_11-12-15](https://user-images.githubusercontent.com/7917475/66905367-053f1100-f006-11e9-9b6b-a3c7d3392371.png)\r\nwith `COLOR.a = FULLRECT_UV.y`\r\n![Screenshot_2019-10-16_11-11-53](https://user-images.githubusercontent.com/7917475/66905402-15ef8700-f006-11e9-9ca5-a8c1ec08f393.png)\r\n\r\n\r\nAn alternative solution would be to pass unprocessed UV in the vertex shader, but it could break compat.\r\n\r\nThis does not work for GLES2's 9patch rect.\r\n\r\nArtwork by Manuel Bustamante: https://www.artstation.com/artwork/3oa9lJ","target_branch":"3.x","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"},{"id":1609442062,"name":"topic:shaders","color":"#ffee88"}],"milestone":{"id":6559374,"title":"3.4","url":"https://github.com/godotengine/godot/milestone/12"},"teams":[3609449]},{"id":327773470,"public_id":32825,"url":"https://github.com/godotengine/godot/pull/32825","diff_url":"https://github.com/godotengine/godot/pull/32825.diff","patch_url":"https://github.com/godotengine/godot/pull/32825.patch","title":"Add flag to keep billboard material rotation","state":"open","is_draft":false,"authored_by":{"id":40247521,"user":"Sogomn","avater":"https://avatars.githubusercontent.com/u/40247521?v=4","url":"https://github.com/Sogomn"},"created_at":"2019-10-14T12:20:56Z","updated_at":"2020-09-02T19:42:24Z","body":"Fixes #18296","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":327448508,"public_id":32769,"url":"https://github.com/godotengine/godot/pull/32769","diff_url":"https://github.com/godotengine/godot/pull/32769.diff","patch_url":"https://github.com/godotengine/godot/pull/32769.patch","title":"Interactive music","state":"open","is_draft":false,"authored_by":{"id":38693875,"user":"DanielMatarov","avater":"https://avatars.githubusercontent.com/u/38693875?v=4","url":"https://github.com/DanielMatarov"},"created_at":"2019-10-12T09:49:50Z","updated_at":"2021-05-10T18:17:11Z","body":"The feature from GSOC 2019 is mostly functional but I would love to hear what could be improved in order for it to be merged","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":326975098,"public_id":32734,"url":"https://github.com/godotengine/godot/pull/32734","diff_url":"https://github.com/godotengine/godot/pull/32734.diff","patch_url":"https://github.com/godotengine/godot/pull/32734.patch","title":"Improve editor property capitalization","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-10-10T23:57:48Z","updated_at":"2021-01-11T07:16:36Z","body":"An hardcoded list of exceptions is now used to make property name capitalization more natural.\r\n\r\nI'm not too happy with this implementation – maybe we should add an optional \"friendly name\" property hint in the end. Also, it takes more time to run the string replacements (30 µs on average for each string in a debug build, compared to 10 µs with the old method). Still, it's not run every frame so it *should* be fine performance-wise.\r\n\r\nThere are other improvements we can do, such as not capitalizing stop words like `at`, `in` and `to`. We could do this for the general-purpose `String::capitalize()` function in 4.0.\r\n\r\n## Preview\r\n\r\n*Look at the section and property names.*\r\n\r\n![Project Settings](https://user-images.githubusercontent.com/180032/66614780-90657480-ebca-11e9-83ec-ec182e5ea94a.png)\r\n\r\nThis closes https://github.com/godotengine/godot-proposals/issues/1399.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":325960345,"public_id":32661,"url":"https://github.com/godotengine/godot/pull/32661","diff_url":"https://github.com/godotengine/godot/pull/32661.diff","patch_url":"https://github.com/godotengine/godot/pull/32661.patch","title":"Add \"Open in External Editor\" function","state":"open","is_draft":false,"authored_by":{"id":6402237,"user":"jabcross","avater":"https://avatars.githubusercontent.com/u/6402237?v=4","url":"https://github.com/jabcross"},"created_at":"2019-10-08T20:56:40Z","updated_at":"2020-09-02T19:42:27Z","body":"Add the option to open a specific file in the external editor.\r\nIt's found in the script editor's File menu.\r\n\r\nHad to extend ScriptTextEditor to provide line and\r\ncolumn as a Vector2i to preserve cursor position.\r\n\r\n(The shortcut in the picture is not there by default, I assigned it locally to test it.)\r\n\r\n![Screenshot_2019-10-08_17-53-45](https://user-images.githubusercontent.com/6402237/66432570-c4873c80-e9f4-11e9-9702-e7b244efbe97.png)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":323611496,"public_id":32480,"url":"https://github.com/godotengine/godot/pull/32480","diff_url":"https://github.com/godotengine/godot/pull/32480.diff","patch_url":"https://github.com/godotengine/godot/pull/32480.patch","title":"Fix SceneState instancing crash with NULL root node","state":"open","is_draft":false,"authored_by":{"id":9861570,"user":"Ternvein","avater":"https://avatars.githubusercontent.com/u/9861570?v=4","url":"https://github.com/Ternvein"},"created_at":"2019-10-02T06:59:16Z","updated_at":"2020-09-02T19:42:28Z","body":"Fixed:\r\n- `SceneState::instance()` no longer crashes on `NULL` pointer dereference when instanced scene is completely invalid.\r\n\r\nFixes one of the crashes from #26394 (https://github.com/godotengine/godot/issues/26394#issuecomment-470525673). This patch just prevents the crash, but there is still alert rises in editor, so it doesn't actually closes the issue.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":322439007,"public_id":32421,"url":"https://github.com/godotengine/godot/pull/32421","diff_url":"https://github.com/godotengine/godot/pull/32421.diff","patch_url":"https://github.com/godotengine/godot/pull/32421.patch","title":"Report explicit error when shadowing reserved keyword","state":"open","is_draft":false,"authored_by":{"id":550176,"user":"Chownie","avater":"https://avatars.githubusercontent.com/u/550176?v=4","url":"https://github.com/Chownie"},"created_at":"2019-09-28T19:03:23Z","updated_at":"2020-09-02T19:42:28Z","body":"Created as to fix  #32372 by producing an error which explicitly reports why the script isn't valid (attempt to use reserved term) and which term is the problem.\r\n\r\nI'm not 100% certain about the wording, I don't know if there's standards to follow in this regard.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279098082,"name":"topic:gdscript","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":320058954,"public_id":32255,"url":"https://github.com/godotengine/godot/pull/32255","diff_url":"https://github.com/godotengine/godot/pull/32255.diff","patch_url":"https://github.com/godotengine/godot/pull/32255.patch","title":"Fix crash on Android devices supporting S3TC","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2019-09-22T16:00:53Z","updated_at":"2021-08-06T11:24:33Z","body":"Fixes #28308\r\n\r\nAndroid devices that support S3TC will currently crash if you export / run from the IDE a project that has S3TC textures imported. This is because these are not exported in the APK (android exporter, exporter.cpp, get_preset_features()), but the .import file still contains a reference to the S3TC files, and the app will attempt to load the resource and fail.\r\n\r\nThis PR fixes this by simply faking lack of hardware support for S3TC on android devices.\r\n\r\nAn alternative method maybe to remove the reference to the s3tc in the .import file.","target_branch":"3.x","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[3609449]},{"id":317331949,"public_id":32124,"url":"https://github.com/godotengine/godot/pull/32124","diff_url":"https://github.com/godotengine/godot/pull/32124.diff","patch_url":"https://github.com/godotengine/godot/pull/32124.patch","title":"Indent dictionaries and arrays in text scene/resource formats","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-09-13T13:43:12Z","updated_at":"2020-09-04T11:22:52Z","body":"- Write each value on its own line in arrays, dictionaries and variable-size constructors for better VCS diffs.\r\n- Add trailing commas in arrays, dictionaries and variable-size constructors for better VCS diffs.\r\n- Write the groups array on the same line for better readability, since it's part of the section header.\r\n- Remove spaces before and after parentheses for better readability.\r\n\r\nNote that tabs were used in indentation to be consistent with the C++ and [GDScript style guide](http://docs.godotengine.org/en/latest/getting_started/scripting/gdscript/gdscript_styleguide.html). Remember that tabs appear as 8 spaces wide on GitHub, but most text editors will display them as 4 spaces wide.\r\n\r\nThis *should* be fully backwards-compatible, but please test in your projects for possible regressions :slightly_smiling_face:\r\n\r\nIt'd be nice to figure out a way to indent nested arrays/dictionaries properly too.\r\n\r\nThis closes #16051. This closes #16783.\r\n\r\n## Comparison of a saved scene\r\n\r\n### Before\r\n\r\n```ini\r\n[gd_scene load_steps=14 format=2]\r\n\r\n[ext_resource path=\"res://icon.png\" type=\"Texture\" id=1]\r\n[ext_resource path=\"res://Node2D.gd\" type=\"Script\" id=2]\r\n[ext_resource path=\"res://RigidBody2D.gd\" type=\"Script\" id=3]\r\n\r\n[sub_resource type=\"RectangleShape2D\" id=1]\r\nextents = Vector2( 24.71, 22.51 )\r\n\r\n[sub_resource type=\"OccluderPolygon2D\" id=2]\r\npolygon = PoolVector2Array( 85.9506, 411.251, 112.55, 492.001, 38.7991, 523.2, -67.9497, 561.351, -121.15, 542.351, -152.5, 525.251, -144.9, 493.901 )\r\n\r\n[sub_resource type=\"ShaderMaterial\" id=3]\r\n\r\n[sub_resource type=\"StyleBoxFlat\" id=4]\r\ncorner_radius_top_left = 8\r\ncorner_radius_top_right = 8\r\ncorner_radius_bottom_right = 8\r\ncorner_radius_bottom_left = 8\r\n\r\n[sub_resource type=\"SpatialMaterial\" id=5]\r\nalbedo_color = Color( 0.607843, 0.607843, 0.607843, 1 )\r\n\r\n[sub_resource type=\"CubeMesh\" id=6]\r\nmaterial = SubResource( 5 )\r\n\r\n[sub_resource type=\"Animation\" id=7]\r\nloop = true\r\ntracks/0/type = \"value\"\r\ntracks/0/path = NodePath(\"Sprite2:position\")\r\ntracks/0/interp = 1\r\ntracks/0/loop_wrap = true\r\ntracks/0/imported = false\r\ntracks/0/enabled = true\r\ntracks/0/keys = {\r\n\"times\": PoolRealArray( 0, 1 ),\r\n\"transitions\": PoolRealArray( 1, 1 ),\r\n\"update\": 0,\r\n\"values\": [ Vector2( 695, 496 ), Vector2( 866, 442 ) ]\r\n}\r\n\r\n[sub_resource type=\"BoxShape\" id=8]\r\n\r\n[sub_resource type=\"ParticlesMaterial\" id=9]\r\nflag_disable_z = true\r\ngravity = Vector3( 0, 98, 0 )\r\norbit_velocity = 0.0\r\norbit_velocity_random = 0.0\r\n\r\n[sub_resource type=\"SpriteFrames\" id=10]\r\nanimations = [ {\r\n\"frames\": [ ExtResource( 1 ), ExtResource( 1 ) ],\r\n\"loop\": true,\r\n\"name\": \"default\",\r\n\"speed\": 5.0\r\n} ]\r\n\r\n[node name=\"Node2D\" type=\"Node2D\" groups=[\r\n\"some_group\",\r\n]]\r\nposition = Vector2( -79, -32 )\r\nscript = ExtResource( 2 )\r\n__meta__ = {\r\n\"_edit_horizontal_guides_\": [ -179.616 ],\r\n\"_edit_vertical_guides_\": [ 63.6369 ]\r\n}\r\n\r\n[node name=\"RigidBody2D\" type=\"RigidBody2D\" parent=\".\" groups=[\r\n\"some_group\",\r\n]]\r\nposition = Vector2( 796.095, 187.746 )\r\nlinear_velocity = Vector2( 0, 200 )\r\nscript = ExtResource( 3 )\r\n__meta__ = {\r\n\"_edit_group_\": true\r\n}\r\n\r\n[node name=\"CollisionPolygon2D\" type=\"CollisionPolygon2D\" parent=\"RigidBody2D\" groups=[\r\n\"some_group\",\r\n]]\r\nposition = Vector2( 177.537, 13.2786 )\r\nrotation = 1.12923\r\nbuild_mode = 1\r\npolygon = PoolVector2Array( 48, -34, 31, 33, -36, 32, -22.1588, -8.28403, -37, -36, -1, -60, 29.4206, -60.8425 )\r\none_way_collision = true\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\"RigidBody2D\" groups=[\r\n\"some_group\",\r\n\"test\",\r\n]]\r\nposition = Vector2( 0, -2.10803 )\r\ntexture = ExtResource( 1 )\r\n\r\n[node name=\"RigidBody2D2\" type=\"RigidBody2D\" parent=\".\"]\r\nposition = Vector2( 1086.09, 189.746 )\r\nlinear_velocity = Vector2( 0, 200 )\r\nlinear_damp = 100.0\r\n__meta__ = {\r\n\"_edit_group_\": true\r\n}\r\n\r\n[node name=\"CollisionPolygon2D\" type=\"CollisionPolygon2D\" parent=\"RigidBody2D2\"]\r\nposition = Vector2( 177.537, 13.2786 )\r\nrotation = 1.12923\r\nbuild_mode = 1\r\npolygon = PoolVector2Array( 48, -34, 31, 33, -36, 32, -22.1588, -8.28403, -37, -36, -1, -60, 29.4206, -60.8425 )\r\none_way_collision = true\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\"RigidBody2D2\"]\r\nposition = Vector2( 0, -2.10803 )\r\ntexture = ExtResource( 1 )\r\n\r\n[node name=\"StaticBody2D\" type=\"StaticBody2D\" parent=\".\"]\r\nposition = Vector2( 491.095, 289.746 )\r\n\r\n[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\"StaticBody2D\"]\r\nposition = Vector2( -0.0526123, 99.2191 )\r\nshape = SubResource( 1 )\r\n\r\n[node name=\"LightOccluder2D\" type=\"LightOccluder2D\" parent=\".\"]\r\nposition = Vector2( 558.201, -346.2 )\r\noccluder = SubResource( 2 )\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\".\"]\r\nposition = Vector2( 247, 29 )\r\nrotation = 0.261799\r\ntexture = ExtResource( 1 )\r\noffset = Vector2( 61.2328, 261.126 )\r\n\r\n[node name=\"Control\" type=\"Control\" parent=\".\"]\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"SpinBox\" type=\"SpinBox\" parent=\"Control\"]\r\nanchor_top = 1.0\r\nanchor_bottom = 1.0\r\nmargin_left = 65.0\r\nmargin_top = -85.0\r\nmargin_right = 139.0\r\nmargin_bottom = -61.0\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"Polygon2D\" type=\"Polygon2D\" parent=\".\"]\r\nmaterial = SubResource( 3 )\r\nposition = Vector2( 72.892, 24 )\r\ntexture = ExtResource( 1 )\r\npolygon = PoolVector2Array( 734.366, 109.02, 844.061, 200.987, 834.089, 347.247, 759, 402, 678.964, 327.302, 666.56, 214.201 )\r\nuv = PoolVector2Array( 734.366, 109.02, 844.061, 200.987, 834.089, 347.247, 759, 384, 678.964, 327.302, 666.56, 214.201 )\r\n\r\n[node name=\"Camera\" type=\"Camera\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, -0.0156461, 0.999878, 0, -0.999878, -0.0156461, 0, 0, 0 )\r\n\r\n[node name=\"Button\" type=\"Button\" parent=\".\"]\r\nmargin_left = 407.0\r\nmargin_top = 243.0\r\nmargin_right = 439.0\r\nmargin_bottom = 263.0\r\ncustom_styles/normal = SubResource( 4 )\r\ntext = \"hello\"\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"MeshInstance\" type=\"MeshInstance\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 4.26556, 0, 0 )\r\nmesh = SubResource( 6 )\r\nmaterial/0 = null\r\n\r\n[node name=\"AnimationPlayer\" type=\"AnimationPlayer\" parent=\".\"]\r\n\"anims/New Anim\" = SubResource( 7 )\r\n\r\n[node name=\"Sprite2\" type=\"Sprite\" parent=\".\"]\r\nposition = Vector2( 841.716, 449.669 )\r\ntexture = ExtResource( 1 )\r\n\r\n[node name=\"Tween\" type=\"Tween\" parent=\".\"]\r\n\r\n[node name=\"LineEdit\" type=\"LineEdit\" parent=\".\"]\r\nmargin_left = 261.0\r\nmargin_top = 56.0\r\nmargin_right = 319.0\r\nmargin_bottom = 80.0\r\neditable = false\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"TextEdit\" type=\"TextEdit\" parent=\".\"]\r\nmargin_left = 139.0\r\nmargin_top = 53.0\r\nmargin_right = 179.0\r\nmargin_bottom = 93.0\r\nreadonly = true\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"Node\" type=\"Node\" parent=\".\"]\r\n\r\n[node name=\"FileDialog\" type=\"FileDialog\" parent=\".\"]\r\nvisible = true\r\nmargin_left = 224.0\r\nmargin_top = 102.0\r\nmargin_right = 679.0\r\nmargin_bottom = 400.0\r\nrect_min_size = Vector2( 400, 140 )\r\ncurrent_file = \"3d.tscn\"\r\ncurrent_path = \"res://3d.tscn\"\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n\r\n[node name=\"RayCast\" type=\"RayCast\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 3 )\r\n\r\n[node name=\"RayCast2\" type=\"RayCast\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 2 )\r\nenabled = true\r\n\r\n[node name=\"CollisionShape\" type=\"CollisionShape\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -3 )\r\nshape = SubResource( 8 )\r\n\r\n[node name=\"CollisionShape2\" type=\"CollisionShape\" parent=\".\"]\r\ntransform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -6 )\r\nshape = SubResource( 8 )\r\ndisabled = true\r\n\r\n[node name=\"CollisionPolygon\" type=\"CollisionPolygon\" parent=\".\"]\r\npolygon = PoolVector2Array( -14.2938, 2.25676, -22.0017, 0.105297, -19.431, -3.78434, -2.85363, 3.25932 )\r\n\r\n[node name=\"CPUParticles2D\" type=\"CPUParticles2D\" parent=\".\"]\r\nvisible = false\r\ntexture = ExtResource( 1 )\r\n\r\n[node name=\"Particles2D\" type=\"Particles2D\" parent=\".\"]\r\nvisible = false\r\nposition = Vector2( 150, 190 )\r\nprocess_material = SubResource( 9 )\r\ntexture = ExtResource( 1 )\r\n\r\n[node name=\"TheNodeWithAnUnnecessaryLongName\" type=\"AnimatedSprite\" parent=\".\"]\r\nvisible = false\r\nposition = Vector2( 150, 190 )\r\nframes = SubResource( 10 )\r\n\r\n[node name=\"AudioStreamPlayer\" type=\"AudioStreamPlayer\" parent=\".\"]\r\n\r\n[node name=\"SoftBody\" type=\"SoftBody\" parent=\".\"]\r\n\r\n[node name=\"TextEdit2\" type=\"TextEdit\" parent=\".\"]\r\nmargin_left = 771.0\r\nmargin_top = 268.0\r\nmargin_right = 1026.0\r\nmargin_bottom = 535.0\r\n__meta__ = {\r\n\"_edit_use_anchors_\": false\r\n}\r\n[connection signal=\"frame_changed\" from=\"RigidBody2D/Sprite\" to=\".\" method=\"_on_Sprite_frame_changed\"]\r\n[connection signal=\"draw\" from=\"RigidBody2D2/CollisionPolygon2D\" to=\".\" method=\"_on_CollisionPolygon2D_draw\"]\r\n\r\n```\r\n\r\n### After\r\n\r\n```ini\r\n[gd_scene load_steps=14 format=2]\r\n\r\n[ext_resource path=\"res://icon.png\" type=\"Texture\" id=1]\r\n[ext_resource path=\"res://Node2D.gd\" type=\"Script\" id=2]\r\n[ext_resource path=\"res://RigidBody2D.gd\" type=\"Script\" id=3]\r\n\r\n[sub_resource type=\"RectangleShape2D\" id=1]\r\nextents = Vector2(24.71, 22.51)\r\n\r\n[sub_resource type=\"OccluderPolygon2D\" id=2]\r\npolygon = PoolVector2Array(\r\n\t85.9506, 411.251,\r\n\t112.55, 492.001,\r\n\t38.7991, 523.2,\r\n\t-67.9497, 561.351,\r\n\t-121.15, 542.351,\r\n\t-152.5, 525.251,\r\n\t-144.9, 493.901\r\n)\r\n\r\n[sub_resource type=\"ShaderMaterial\" id=3]\r\n\r\n[sub_resource type=\"StyleBoxFlat\" id=4]\r\ncorner_radius_top_left = 8\r\ncorner_radius_top_right = 8\r\ncorner_radius_bottom_right = 8\r\ncorner_radius_bottom_left = 8\r\n\r\n[sub_resource type=\"SpatialMaterial\" id=5]\r\nalbedo_color = Color(0.607843, 0.607843, 0.607843, 1)\r\n\r\n[sub_resource type=\"CubeMesh\" id=6]\r\nmaterial = SubResource(5)\r\n\r\n[sub_resource type=\"Animation\" id=7]\r\nloop = true\r\ntracks/0/type = \"value\"\r\ntracks/0/path = NodePath(\"Sprite2:position\")\r\ntracks/0/interp = 1\r\ntracks/0/loop_wrap = true\r\ntracks/0/imported = false\r\ntracks/0/enabled = true\r\ntracks/0/keys = {\r\n\t\"times\": PoolRealArray(\r\n\t0,\r\n\t1\r\n),\r\n\t\"transitions\": PoolRealArray(\r\n\t1,\r\n\t1\r\n),\r\n\t\"update\": 0,\r\n\t\"values\": [\r\n\tVector2(695, 496),\r\n\tVector2(866, 442),\r\n],\r\n}\r\n\r\n[sub_resource type=\"BoxShape\" id=8]\r\n\r\n[sub_resource type=\"ParticlesMaterial\" id=9]\r\nflag_disable_z = true\r\ngravity = Vector3(0, 98, 0)\r\norbit_velocity = 0.0\r\norbit_velocity_random = 0.0\r\n\r\n[sub_resource type=\"SpriteFrames\" id=10]\r\nanimations = [\r\n\t{\r\n\t\"frames\": [\r\n\tExtResource(1),\r\n\tExtResource(1),\r\n],\r\n\t\"loop\": true,\r\n\t\"name\": \"default\",\r\n\t\"speed\": 5.0,\r\n},\r\n]\r\n\r\n[node name=\"Node2D\" type=\"Node2D\" groups=[\"some_group\"]]\r\nposition = Vector2(-79, -32)\r\nscript = ExtResource(2)\r\n__meta__ = {\r\n\t\"_edit_horizontal_guides_\": [\r\n\t-179.616,\r\n],\r\n\t\"_edit_vertical_guides_\": [\r\n\t63.6369,\r\n],\r\n}\r\n\r\n[node name=\"RigidBody2D\" type=\"RigidBody2D\" parent=\".\" groups=[\"some_group\"]]\r\nposition = Vector2(796.095, 187.746)\r\nlinear_velocity = Vector2(0, 200)\r\nscript = ExtResource(3)\r\n__meta__ = {\r\n\t\"_edit_group_\": true,\r\n}\r\n\r\n[node name=\"CollisionPolygon2D\" type=\"CollisionPolygon2D\" parent=\"RigidBody2D\" groups=[\"some_group\"]]\r\nposition = Vector2(177.537, 13.2786)\r\nrotation = 1.12923\r\nbuild_mode = 1\r\npolygon = PoolVector2Array(\r\n\t48, -34,\r\n\t31, 33,\r\n\t-36, 32,\r\n\t-22.1588, -8.28403,\r\n\t-37, -36,\r\n\t-1, -60,\r\n\t29.4206, -60.8425\r\n)\r\none_way_collision = true\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\"RigidBody2D\" groups=[\"some_group\", \"test\"]]\r\nposition = Vector2(0, -2.10803)\r\ntexture = ExtResource(1)\r\n\r\n[node name=\"RigidBody2D2\" type=\"RigidBody2D\" parent=\".\"]\r\nposition = Vector2(1086.09, 189.746)\r\nlinear_velocity = Vector2(0, 200)\r\nlinear_damp = 100.0\r\n__meta__ = {\r\n\t\"_edit_group_\": true,\r\n}\r\n\r\n[node name=\"CollisionPolygon2D\" type=\"CollisionPolygon2D\" parent=\"RigidBody2D2\"]\r\nposition = Vector2(177.537, 13.2786)\r\nrotation = 1.12923\r\nbuild_mode = 1\r\npolygon = PoolVector2Array(\r\n\t48, -34,\r\n\t31, 33,\r\n\t-36, 32,\r\n\t-22.1588, -8.28403,\r\n\t-37, -36,\r\n\t-1, -60,\r\n\t29.4206, -60.8425\r\n)\r\none_way_collision = true\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\"RigidBody2D2\"]\r\nposition = Vector2(0, -2.10803)\r\ntexture = ExtResource(1)\r\n\r\n[node name=\"StaticBody2D\" type=\"StaticBody2D\" parent=\".\"]\r\nposition = Vector2(491.095, 289.746)\r\n\r\n[node name=\"CollisionShape2D\" type=\"CollisionShape2D\" parent=\"StaticBody2D\"]\r\nposition = Vector2(-0.0526123, 99.2191)\r\nshape = SubResource(1)\r\n\r\n[node name=\"LightOccluder2D\" type=\"LightOccluder2D\" parent=\".\"]\r\nposition = Vector2(558.201, -346.2)\r\noccluder = SubResource(2)\r\n\r\n[node name=\"Sprite\" type=\"Sprite\" parent=\".\"]\r\nposition = Vector2(247, 29)\r\nrotation = 0.261799\r\ntexture = ExtResource(1)\r\noffset = Vector2(61.2328, 261.126)\r\n\r\n[node name=\"Control\" type=\"Control\" parent=\".\"]\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"SpinBox\" type=\"SpinBox\" parent=\"Control\"]\r\nanchor_top = 1.0\r\nanchor_bottom = 1.0\r\nmargin_left = 65.0\r\nmargin_top = -85.0\r\nmargin_right = 139.0\r\nmargin_bottom = -61.0\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"Polygon2D\" type=\"Polygon2D\" parent=\".\"]\r\nmaterial = SubResource(3)\r\nposition = Vector2(72.892, 24)\r\ntexture = ExtResource(1)\r\npolygon = PoolVector2Array(\r\n\t734.366, 109.02,\r\n\t844.061, 200.987,\r\n\t834.089, 347.247,\r\n\t759, 402,\r\n\t678.964, 327.302,\r\n\t666.56, 214.201\r\n)\r\nuv = PoolVector2Array(\r\n\t734.366, 109.02,\r\n\t844.061, 200.987,\r\n\t834.089, 347.247,\r\n\t759, 384,\r\n\t678.964, 327.302,\r\n\t666.56, 214.201\r\n)\r\n\r\n[node name=\"Camera\" type=\"Camera\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, -0.0156461, 0.999878, 0, -0.999878, -0.0156461, 0, 0, 0)\r\n\r\n[node name=\"Button\" type=\"Button\" parent=\".\"]\r\nmargin_left = 407.0\r\nmargin_top = 243.0\r\nmargin_right = 439.0\r\nmargin_bottom = 263.0\r\ncustom_styles/normal = SubResource(4)\r\ntext = \"hello\"\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"MeshInstance\" type=\"MeshInstance\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.26556, 0, 0)\r\nmesh = SubResource(6)\r\nmaterial/0 = null\r\n\r\n[node name=\"AnimationPlayer\" type=\"AnimationPlayer\" parent=\".\"]\r\n\"anims/New Anim\" = SubResource(7)\r\n\r\n[node name=\"Sprite2\" type=\"Sprite\" parent=\".\"]\r\nposition = Vector2(841.716, 449.669)\r\ntexture = ExtResource(1)\r\n\r\n[node name=\"Tween\" type=\"Tween\" parent=\".\"]\r\n\r\n[node name=\"LineEdit\" type=\"LineEdit\" parent=\".\"]\r\nmargin_left = 261.0\r\nmargin_top = 56.0\r\nmargin_right = 319.0\r\nmargin_bottom = 80.0\r\neditable = false\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"TextEdit\" type=\"TextEdit\" parent=\".\"]\r\nmargin_left = 139.0\r\nmargin_top = 53.0\r\nmargin_right = 179.0\r\nmargin_bottom = 93.0\r\nreadonly = true\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"Node\" type=\"Node\" parent=\".\"]\r\n\r\n[node name=\"FileDialog\" type=\"FileDialog\" parent=\".\"]\r\nvisible = true\r\nmargin_left = 224.0\r\nmargin_top = 102.0\r\nmargin_right = 679.0\r\nmargin_bottom = 400.0\r\nrect_min_size = Vector2(400, 140)\r\ncurrent_file = \"3d.tscn\"\r\ncurrent_path = \"res://3d.tscn\"\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n\r\n[node name=\"RayCast\" type=\"RayCast\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 3)\r\n\r\n[node name=\"RayCast2\" type=\"RayCast\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 2)\r\nenabled = true\r\n\r\n[node name=\"CollisionShape\" type=\"CollisionShape\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -3)\r\nshape = SubResource(8)\r\n\r\n[node name=\"CollisionShape2\" type=\"CollisionShape\" parent=\".\"]\r\ntransform = Transform(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -6)\r\nshape = SubResource(8)\r\ndisabled = true\r\n\r\n[node name=\"CollisionPolygon\" type=\"CollisionPolygon\" parent=\".\"]\r\npolygon = PoolVector2Array(\r\n\t-14.2938, 2.25676,\r\n\t-22.0017, 0.105297,\r\n\t-19.431, -3.78434,\r\n\t-2.85363, 3.25932\r\n)\r\n\r\n[node name=\"CPUParticles2D\" type=\"CPUParticles2D\" parent=\".\"]\r\nvisible = false\r\ntexture = ExtResource(1)\r\n\r\n[node name=\"Particles2D\" type=\"Particles2D\" parent=\".\"]\r\nvisible = false\r\nposition = Vector2(150, 190)\r\nprocess_material = SubResource(9)\r\ntexture = ExtResource(1)\r\n\r\n[node name=\"TheNodeWithAnUnnecessaryLongName\" type=\"AnimatedSprite\" parent=\".\"]\r\nvisible = false\r\nposition = Vector2(150, 190)\r\nframes = SubResource(10)\r\n\r\n[node name=\"AudioStreamPlayer\" type=\"AudioStreamPlayer\" parent=\".\"]\r\n\r\n[node name=\"SoftBody\" type=\"SoftBody\" parent=\".\"]\r\n\r\n[node name=\"TextEdit2\" type=\"TextEdit\" parent=\".\"]\r\nmargin_left = 771.0\r\nmargin_top = 268.0\r\nmargin_right = 1026.0\r\nmargin_bottom = 535.0\r\n__meta__ = {\r\n\t\"_edit_use_anchors_\": false,\r\n}\r\n[connection signal=\"frame_changed\" from=\"RigidBody2D/Sprite\" to=\".\" method=\"_on_Sprite_frame_changed\"]\r\n[connection signal=\"draw\" from=\"RigidBody2D2/CollisionPolygon2D\" to=\".\" method=\"_on_CollisionPolygon2D_draw\"]\r\n```","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":315778488,"public_id":32068,"url":"https://github.com/godotengine/godot/pull/32068","diff_url":"https://github.com/godotengine/godot/pull/32068.diff","patch_url":"https://github.com/godotengine/godot/pull/32068.patch","title":"Reformat Transform(2D) matrix display in the inspector","state":"open","is_draft":true,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2019-09-10T01:39:23Z","updated_at":"2021-08-22T05:54:54Z","body":"EDIT: Marked as draft because #47635 should be merged before this one (it's a subset).\r\n\r\nImplements and closes https://github.com/godotengine/godot-proposals/issues/1820, and fixes #44669.\r\n\r\nPreviously the Transform editors in the inspector were a bit of a mess. Columns were displayed horizontally, rows displayed vertically, there was repeated information, and labels were non-unique. Also, Node2D is completely missing a section for its matrix, so it's impossible to edit a 2D node's transform matrix directly without using a script.\r\n\r\nThis PR fixes all of these problems. Here are some before and after screenshots, the left side is before, the right side is after. There are exported values, Node2D, and Node3D. Each side has equivalent values to each other, the Y component of the X column vector (row 2 col 1) is set to 5 for most of the examples, and for Node2D the rotation is set to 5.\r\n\r\n![Untitled](https://user-images.githubusercontent.com/1646875/111742689-fd207c00-885e-11eb-806b-86fd52875422.png)\r\n\r\nThe \"Matrix\" section has been renamed to \"Raw Matrix\" to better convey that this is how Godot works under-the-hood, and to slightly discourage users who don't know what it is from touching it. Editing the matrix of a transform directly is something users should know how it works before jumping in, or else they will get confused.\r\n\r\nThe items have been transposed to display columns vertically and rows horizontally (as it should be), except that for Node2D and Node3D, the origin vector is not displayed, instead, only the Basis is displayed. This is because we don't need to duplicate information already present in \"Translation\". The origin vector is still displayed for exported transforms. I decided to color it Cyan, rather than leave it gray, which I think looks better. This Cyan color also replaces gray in `Quat` and `Plane` (but of course we can change this back if desired).\r\n\r\nThe names are row-column, just like in math, such that \"yx\" is equivalent to `transform.basis.x.y`, etc. This is much better than the previous ambiguous, repeated, non-unique \"x\", \"y\", and \"z\".\r\n\r\nPreviously, the transform matrix was not displayed at all for Node2D. The display now exists, and closely resembles the section for Node3D, it only shows the basis part (excludes the origin vector) because the information exists in \"Position\".\r\n\r\nColoring is now done by a helper method in `editor/editor_inspector.cpp`. I also made everything else use these helpers methods, which helps avoid code duplication (and also, while I haven't benchmarked it, I'm fairly confident this will run faster since it's not re-calculating the same colors multiple times anywhere that uses the colors multiple times). There are three of these methods, since some things only need XY, some need XYZ, and some need four colors.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418542,4418550,4418718,4418726]},{"id":315517232,"public_id":32056,"url":"https://github.com/godotengine/godot/pull/32056","diff_url":"https://github.com/godotengine/godot/pull/32056.diff","patch_url":"https://github.com/godotengine/godot/pull/32056.patch","title":"Remember the editor window position and size across restarts","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-09-09T12:54:55Z","updated_at":"2021-07-12T07:10:56Z","body":"Some notes:\r\n\r\n- For the purposes of configuration saving, exiting while the editor is fullscreen will be saved as maximized.\r\n- ~~The configuration accounts for multiple monitors and will save the window position relative to the current monitor. When reopening the editor, it will open on the monitor that's currently active.~~\r\n  - **TODO:** Remove this and just use absolute coordinates, as most other applications seem to use absolute coordinates.\r\n- If the editor isn't maximized, the window will be resized while the splash screen is displayed. This could be solved by moving the configuration loading code to `main.cpp`, but I don't know how this could be done since it needs to be done early enough while getting the file path from the EditorSettings singleton.\r\n\r\nThis closes #5114.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":313072118,"public_id":31877,"url":"https://github.com/godotengine/godot/pull/31877","diff_url":"https://github.com/godotengine/godot/pull/31877.diff","patch_url":"https://github.com/godotengine/godot/pull/31877.patch","title":"Added Viewport canvas cull mask feature","state":"open","is_draft":false,"authored_by":{"id":38382,"user":"puthre","avater":"https://avatars.githubusercontent.com/u/38382?v=4","url":"https://github.com/puthre"},"created_at":"2019-09-01T23:15:47Z","updated_at":"2020-09-02T19:42:33Z","body":"There was no way to render canvasitems in specific viewports and this commit fixes that.\r\nAdded \"Layers\" property to canvas items and \"Canvas Cull Mask\" property to viewports so you can now enable / disable layers of canvas items per viewport.\r\nHopefully this will also help in adding effects to nodes (like glow) that need rendering\r\nto texture.\r\n\r\n_Bugsquad edit: Fix #31312, Fix #5441, Fix #31856_","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":312885064,"public_id":31815,"url":"https://github.com/godotengine/godot/pull/31815","diff_url":"https://github.com/godotengine/godot/pull/31815.diff","patch_url":"https://github.com/godotengine/godot/pull/31815.patch","title":"Editor setting popup menu","state":"open","is_draft":true,"authored_by":{"id":52422077,"user":"FeatherAntennae","avater":"https://avatars.githubusercontent.com/u/52422077?v=4","url":"https://github.com/FeatherAntennae"},"created_at":"2019-08-30T21:08:03Z","updated_at":"2020-09-02T19:42:34Z","body":"*Bugsquad edit:* Depends on #36926.\r\n\r\nWork in progress. PR opened to facilitate feedback.\r\n\r\nAdds a small popup menu to the editor settings dialogue window accessible through a menu button next to the search bars and through right clicking in the trees.\r\n\r\n![AiSEA1L224](https://user-images.githubusercontent.com/52422077/64050905-6f2f5400-cb47-11e9-9266-7e7a06fa34bb.gif)\r\n\r\n\r\nThe goal is to put together a bunch of small quality of life improvement to the way users interact with these settings by allowing to collapse / expand all of the sections at once, collapse all the sections except the one that is currently active and restore everything to their default values without having to manually reset all settings one by one.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":309169508,"public_id":31509,"url":"https://github.com/godotengine/godot/pull/31509","diff_url":"https://github.com/godotengine/godot/pull/31509.diff","patch_url":"https://github.com/godotengine/godot/pull/31509.patch","title":"Enable ProGuard for Android release builds to decrease APK size","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-08-20T18:13:20Z","updated_at":"2020-11-13T05:44:25Z","body":"This reduces the size of release APKs by about 300 KB on average.\r\n\r\nI'm marking this as a draft since this will likely conflict with third-party modules in its current state. How could this be integrated so modules can supply their own ProGuard exclusions? (cc @megasoft78)\r\n\r\nAlso, this should be tested when Mono support is enabled to check for bugs that could appear when using ProGuard alongside. (cc @neikeq)\r\n\r\nOther than that, I can confirm it works when exporting the Platformer 2D demo.\r\n\r\nIf this is merged, we should also update the documentation to mention that release export templates use ProGuard. Since stack traces will be obfuscated, this will require developers to deobfuscate them using the appropriate mapping tools. See *ProGuard and obfuscated stack traces* in [this article](https://medium.com/androiddevelopers/troubleshooting-proguard-issues-on-android-bce9de4f8a74).\r\n\r\nRelated to #18253.","target_branch":"master","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":279098009,"name":"topic:buildsystem","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":306294064,"public_id":31298,"url":"https://github.com/godotengine/godot/pull/31298","diff_url":"https://github.com/godotengine/godot/pull/31298.diff","patch_url":"https://github.com/godotengine/godot/pull/31298.patch","title":"Fix keyboard navigation in file dialog","state":"open","is_draft":false,"authored_by":{"id":45311997,"user":"ptrojahn","avater":"https://avatars.githubusercontent.com/u/45311997?v=4","url":"https://github.com/ptrojahn"},"created_at":"2019-08-11T17:03:55Z","updated_at":"2020-09-02T19:42:36Z","body":"When pressing Alt + Left, the item list already handled the event\r\nand moved the selection to the left, unless the first item was\r\nselected. Because of this, moving up the history didn't work\r\nconsistently. By using the gui_input signal to override the event\r\nhandling, we can catch these events and handle them before the\r\nitem list gets its fingers on them.\r\nAlso gui_input should be emitted in viewport.cpp before _gui_input\r\nis called(Like explained in line 1516).\r\n\r\nRelated to #18793\r\nMight be a better way to do #22198","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":304981495,"public_id":31171,"url":"https://github.com/godotengine/godot/pull/31171","diff_url":"https://github.com/godotengine/godot/pull/31171.diff","patch_url":"https://github.com/godotengine/godot/pull/31171.patch","title":"Project feature warning system","state":"open","is_draft":false,"authored_by":{"id":1646875,"user":"aaronfranke","avater":"https://avatars.githubusercontent.com/u/1646875?v=4","url":"https://github.com/aaronfranke"},"created_at":"2019-08-07T05:08:23Z","updated_at":"2021-08-11T01:32:28Z","body":"(Note: This PR also increments the config version by necessity)\r\n\r\nA mostly complete implementation of a feature warning system, closes https://github.com/godotengine/godot-proposals/issues/427, closes https://github.com/godotengine/godot/issues/25497\r\n\r\n![f](https://user-images.githubusercontent.com/1646875/62596124-cec27880-b895-11e9-883d-ad3d6e4e5da5.png)\r\n\r\nWhat works: Reading project features from `project.godot`, displaying unsupported features, warning when trying to open a project with unsupported features, changing the features to comply with currently supported and required features, and saving project features to `project.godot`.\r\n\r\nWhat doesn't work & needs work (EDIT: All work now):\r\n\r\n- [x] It doesn't add `config/features` in projects where there is none already (however, it does always get added to brand new projects). EDIT: This works now!\r\n\r\n- [x] The feature list is not sorted in any way. It doesn't seem that `PoolStringArray` can sort. EDIT: It's sorted now! I rebased this on top of #32144 which should be merged first. EDIT: It's merged!\r\n\r\n- [x] For integration with the Mono module, it needs to add the \"C#\" feature tag to projects, but only if the projects have a C# solution generated. We don't want non-C# projects opened with Mono-enabled Godot to show warnings in non-Mono Godot. EDIT: This now works!\r\n\r\nSide note: I considered if this could replace `config_version` but I think it's actually ideal to have both a version feature tag and a config version stored. For example, let's say 4.0 and 4.1 have the same `config_version` but 4.2 has a higher number. This means that if you tried to open 4.0 projects in 4.1 and vice versa it would show a warning, but upgrading to 4.2 is still one-way.","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":410064485,"name":"needs testing","color":"#ffcc44"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":302051815,"public_id":30920,"url":"https://github.com/godotengine/godot/pull/30920","diff_url":"https://github.com/godotengine/godot/pull/30920.diff","patch_url":"https://github.com/godotengine/godot/pull/30920.patch","title":"Add `backwards` as a property of `AnimatedSprite`.","state":"open","is_draft":false,"authored_by":{"id":31814150,"user":"cgxeiji","avater":"https://avatars.githubusercontent.com/u/31814150?v=4","url":"https://github.com/cgxeiji"},"created_at":"2019-07-29T12:42:40Z","updated_at":"2021-06-06T13:32:44Z","body":"Fixes https://github.com/godotengine/godot/issues/30785.","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":300807612,"public_id":30798,"url":"https://github.com/godotengine/godot/pull/30798","diff_url":"https://github.com/godotengine/godot/pull/30798.diff","patch_url":"https://github.com/godotengine/godot/pull/30798.patch","title":"[WIP] Add semi-fixed timestep and physics time stretching for global timescale","state":"open","is_draft":false,"authored_by":{"id":21999379,"user":"lawnjelly","avater":"https://avatars.githubusercontent.com/u/21999379?v=4","url":"https://github.com/lawnjelly"},"created_at":"2019-07-24T16:44:19Z","updated_at":"2020-11-07T11:26:45Z","body":"Fixes #24769\r\nFixes #24334\r\n\r\nThe main change in this PR is adding the option in project settings->physics to choose between the old fixed timestep and a new path for semi-fixed timestep. With semi-fixed timestep users can either choose a high physics fps and get the benefit of matching between physics and frame times, or low physics fps and have physics effectively driven by frame deltas.\r\n\r\nThere is also a minor refactor to the main::iteration function, notably moving the physics tick into a separate function, as well as a major refactor to main_timer_sync, separating the common components of timing (timescaling, limiting max physics ticks) from the details of the timestep functionality themselves, which are separated into 2 classes, MainTimerSync_JitterFix (the old fixed timestep) and MainTimerSync_SemiFixed.\r\n\r\nThere is also an added option to allow the existing global time_scale to change the speed of the game without affecting the physics tick rate (i.e. giving consistent physics at different timescales).","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":300075775,"public_id":30765,"url":"https://github.com/godotengine/godot/pull/30765","diff_url":"https://github.com/godotengine/godot/pull/30765.diff","patch_url":"https://github.com/godotengine/godot/pull/30765.patch","title":"Expose \"meta\" to the Inspector. For real.","state":"open","is_draft":false,"authored_by":{"id":30739239,"user":"YeldhamDev","avater":"https://avatars.githubusercontent.com/u/30739239?v=4","url":"https://github.com/YeldhamDev"},"created_at":"2019-07-22T23:30:46Z","updated_at":"2021-01-24T21:16:18Z","body":"Second attempt. As requested by @akien-mga here: https://github.com/godotengine/godot/pull/22642#issuecomment-513727886.\r\n\r\n**Things that need to be worked out:**\r\n- Meta properties being inserted in scene files even if empty. Not caused by commit itself but by how dictionaries are handled. Will be fixed by the merging of either #29222 or #35816.\r\n- `ProjectSettings` exposes it in its documentation.\r\n\r\n(It will, hopefully this time) Closes #5433.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":298873586,"public_id":30675,"url":"https://github.com/godotengine/godot/pull/30675","diff_url":"https://github.com/godotengine/godot/pull/30675.diff","patch_url":"https://github.com/godotengine/godot/pull/30675.patch","title":"Add link property for link button","state":"open","is_draft":false,"authored_by":{"id":1850856,"user":"zaksnet","avater":"https://avatars.githubusercontent.com/u/1850856?v=4","url":"https://github.com/zaksnet"},"created_at":"2019-07-18T11:37:59Z","updated_at":"2021-08-21T22:40:07Z","body":"This is useful when you want to add link buttons through code (simplifies things) and anyway without this `linkButton` is just a button with an underline. I tried connecting the `pressed` signal instead of launching the URL from the draw event but i couldn't figure it out, any guidance is appreciated. Also documented `linkButton.xml`\r\n\r\nIf this is going to get merged it would be nice to add:\r\n\r\n- [ ] StyleBoxes for the rest of the states (currently only for focused exists).\r\n- [ ] Text alignment.\r\n\r\nI wouldn't bother otherwise since you can do all this with a button already, but since this exists, we could improve it.\r\n\r\nEDIT: Changed keyword from `Link` to `Url` since its more proper in this case (link most of the times implies a website URL, while URL can be anything from websites, file paths to system paths or even UNC network paths). Also added `launch_url` to manually launch the `Url`. @akien-mga please review.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":298688371,"public_id":30665,"url":"https://github.com/godotengine/godot/pull/30665","diff_url":"https://github.com/godotengine/godot/pull/30665.diff","patch_url":"https://github.com/godotengine/godot/pull/30665.patch","title":"Added extents for GPU and CPU Particles2D emission points","state":"open","is_draft":false,"authored_by":{"id":2043211,"user":"eligt","avater":"https://avatars.githubusercontent.com/u/2043211?v=4","url":"https://github.com/eligt"},"created_at":"2019-07-17T22:12:10Z","updated_at":"2021-06-18T15:44:10Z","body":"The emission mask now uses relative values which are multiplied by the emission extents. This also fixes the issue where emission points are dependent on original texture size.\r\n\r\nThis commits also change emission points texture to be centered on the particle system instead of placing the top left corner at the center.\r\n\r\nI think this also fixes #16411","target_branch":"master","labels":[{"id":955079684,"name":"breaks compat","color":"#b64245"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":298138694,"public_id":30623,"url":"https://github.com/godotengine/godot/pull/30623","diff_url":"https://github.com/godotengine/godot/pull/30623.diff","patch_url":"https://github.com/godotengine/godot/pull/30623.patch","title":"Prevent editing properties managed by parent container","state":"open","is_draft":false,"authored_by":{"id":19125153,"user":"Awkor","avater":"https://avatars.githubusercontent.com/u/19125153?v=4","url":"https://github.com/Awkor"},"created_at":"2019-07-16T17:24:47Z","updated_at":"2021-08-21T18:17:50Z","body":"Addresses #28718 by making the properties that are managed by parent container not editable inside the inspector.\r\n\r\nCurrently the properties that get disabled are:\r\n* Anchor\r\n* Margin\r\n* Position\r\n* Scale\r\n* Size\r\n\r\nThis is achieved by disabling mouse interactions and preventing focus on the aforementioned inspector properties.\r\n\r\nThis is how it looks when properties get disabled:\r\n![capture](https://user-images.githubusercontent.com/19125153/61315243-a3042380-a7fe-11e9-923c-c890cee30935.png)\r\n\r\n*Bugsquad edit:* Fixes #28718 and fixes https://github.com/godotengine/godot-proposals/issues/2202.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":1732720779,"name":"topic:gui","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4418914]},{"id":297850321,"public_id":30607,"url":"https://github.com/godotengine/godot/pull/30607","diff_url":"https://github.com/godotengine/godot/pull/30607.diff","patch_url":"https://github.com/godotengine/godot/pull/30607.patch","title":"use pass by const& in method_ptrcall.h","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2019-07-16T02:29:12Z","updated_at":"2020-09-02T19:42:40Z","body":"Passing by value actually incurs a cost, even for COW data types, because the constructor have to either perform a pointless assignment to null or unref.\r\nAdditionally, adding the const keyword will allow the compiler to be confidence in optimizing it around and makes sure the function implementation is indeed not modifying its (now) references.\r\n\r\nEdit: Not entirely sure why Travis is failing, nor do I understand why...its saying i have to amend my commit? Regardless, I didn't clang format because it will ruin the entire file diff so as to make the changes not obvious.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":297379848,"public_id":30578,"url":"https://github.com/godotengine/godot/pull/30578","diff_url":"https://github.com/godotengine/godot/pull/30578.diff","patch_url":"https://github.com/godotengine/godot/pull/30578.patch","title":"Create AudioEffectEQCustom; docs included","state":"open","is_draft":true,"authored_by":{"id":45892908,"user":"kawa-yoiko","avater":"https://avatars.githubusercontent.com/u/45892908?v=4","url":"https://github.com/kawa-yoiko"},"created_at":"2019-07-14T09:13:32Z","updated_at":"2021-07-12T05:47:04Z","body":"An audio equalizer with customizable band frequencies is added and the documentation has been updated. Closes #27585.\r\n\r\nI believe this cannot be worked around by a few lines of code and there are plenty of use cases (a parametric EQ can make up a large part of audio effects), so I made it.\r\n\r\nOther changes (none should introduce compatibility breakage):\r\n- Existing preset equalizers (6, 10, 21 bands) are made subclasses of a new class `AudioEffectEQPreset` which inherits `AudioEffectEQ`\r\n- Prevented `AudioEffectEQ` from being created directly on the bus\r\n- Minor changes in logic of class `EQ`\r\n\r\nI tried my best to comply with existing conventions, but in case anything is to be changed or discussed please kindly specify! ^ ^","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":572781997,"name":"topic:audio","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":297119962,"public_id":30541,"url":"https://github.com/godotengine/godot/pull/30541","diff_url":"https://github.com/godotengine/godot/pull/30541.diff","patch_url":"https://github.com/godotengine/godot/pull/30541.patch","title":"Initialize Variant::_data to 0","state":"open","is_draft":false,"authored_by":{"id":6733660,"user":"hbina","avater":"https://avatars.githubusercontent.com/u/6733660?v=4","url":"https://github.com/hbina"},"created_at":"2019-07-12T15:28:11Z","updated_at":"2021-08-21T22:04:16Z","body":"I have noticed that Variant constructed through the default constructor doesn't actually zero out the memory it holds leading to arbitrary data...\r\n\r\nThis could potentially avoid mistakes when converting from `Variant::Type::NIL` to `Variant::Type::INT`.\r\n\r\nSee: https://en.cppreference.com/w/cpp/language/default_initialization","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":295070631,"public_id":30391,"url":"https://github.com/godotengine/godot/pull/30391","diff_url":"https://github.com/godotengine/godot/pull/30391.diff","patch_url":"https://github.com/godotengine/godot/pull/30391.patch","title":"Add support for internal nodes","state":"open","is_draft":false,"authored_by":{"id":2223172,"user":"KoBeWi","avater":"https://avatars.githubusercontent.com/u/2223172?v=4","url":"https://github.com/KoBeWi"},"created_at":"2019-07-07T00:36:06Z","updated_at":"2021-04-26T01:38:08Z","body":"Internal nodes are nodes that aren't exposed to the user. This is useful for control nodes that use other control nodes and we don't want anyone to meddle with them (e.g. ColorPicker or WindowDialog).\r\n\r\nCompared to normal nodes:\r\n\r\n- you can't normally access them with `get_child()` or `get_children()`\r\n- `get_child_count()` will not count internal nodes, `get_position_in_node()` will return\r\nposition - internals size\r\n- `move_child()`'s position will skip these nodes too\r\n- you can however access them by passing `false` to `skip_internal` argument of aforementioned methods\r\n- `skip_internal` is `true` by default in bindings (i.e. scripts), but it's false in code (so anything relying on children indexes won't break)\r\n- internal nodes are always at the beginning of children list, even when added after normal nodes\r\n\r\nThis is supposed to fix #30381, close #21458 and resolve #7142\r\nIt's probably also useful for ppl making plugins. You can make a node internal by passing `true` to the new third argument of `add_child()`.\r\n\r\n~~This is still WIP. While implementation is ok, internal nodes should be added to other controls (right now it's only ColorPicker) and it needs doc update.~~","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783,4418914]},{"id":292803451,"public_id":30153,"url":"https://github.com/godotengine/godot/pull/30153","diff_url":"https://github.com/godotengine/godot/pull/30153.diff","patch_url":"https://github.com/godotengine/godot/pull/30153.patch","title":"Remove checks for underscores","state":"open","is_draft":true,"authored_by":{"id":45311997,"user":"ptrojahn","avater":"https://avatars.githubusercontent.com/u/45311997?v=4","url":"https://github.com/ptrojahn"},"created_at":"2019-06-28T11:59:51Z","updated_at":"2020-09-27T05:05:08Z","body":"Pull #26990 makes them obsolete","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":709269775,"name":"topic:mono","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":290836685,"public_id":29989,"url":"https://github.com/godotengine/godot/pull/29989","diff_url":"https://github.com/godotengine/godot/pull/29989.diff","patch_url":"https://github.com/godotengine/godot/pull/29989.patch","title":"Multi-focus, player-specific input events.","state":"open","is_draft":true,"authored_by":{"id":1687918,"user":"Faless","avater":"https://avatars.githubusercontent.com/u/1687918?v=4","url":"https://github.com/Faless"},"created_at":"2019-06-22T17:19:50Z","updated_at":"2020-09-02T19:42:42Z","body":"Mostly implement what discussed in #20091 . Focus uses group names (strings) instead of booleans.\r\n\r\nA demo project with split screen, separate focus and inputs is available here: \r\n(`W,A,S,D,Space ||| LEFT,RIGHT,UP,DOWN, Enter`)\r\n\r\n[ActionPlayer.zip](https://github.com/godotengine/godot/files/3317041/ActionPlayer.zip) ([live HTML5 here](https://no-war.fales.me/ActionLayer.html), you need to first click into the page after loading for input to start working)\r\n\r\nThe PR basically add a `player` field to each input event in the `InputMap`.\r\nAction related methods have a new parameter for specifying which player to filter (`0` for no filtering).\r\n\r\n![viewport_player_filter](https://user-images.githubusercontent.com/1687918/59966748-fac1ae80-9520-11e9-9f46-636888834aa7.png)\r\n\r\n![inputmap](https://user-images.githubusercontent.com/1687918/59966791-73c10600-9521-11e9-87a5-a9b15fdcc0a5.png)\r\n\r\nViewport have two new properties under \"GUI\" section: `input_player` to specify which player the UI will filter (default `0`, i.e. no filtering) and `focus_group`property decides focus sharing. Viewports in the same `focus_group` share focus across them.\r\n\r\n![viewportgui](https://user-images.githubusercontent.com/1687918/59966847-390b9d80-9522-11e9-96d4-2dbd46a58236.png)\r\n\r\nThis change is quite hacky, and we are still trying to figure out if there's a better way then this to get multifocus and UI actions working together. Without overcomplicating things but still allowing people to make split screen games and use Godot UI nodes.\r\n\r\nI'm setting this PR to milestone 4.0 so we can get @reduz input once he is done with Vulkan.\r\nIf anyone has suggestions, ideas, they are more than welcome.\r\n\r\nFixes #10755","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":890310664,"name":"topic:input","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":290686632,"public_id":29964,"url":"https://github.com/godotengine/godot/pull/29964","diff_url":"https://github.com/godotengine/godot/pull/29964.diff","patch_url":"https://github.com/godotengine/godot/pull/29964.patch","title":"Implement middle-clicking to invert a gradient in the Gradient editor","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-06-21T17:19:47Z","updated_at":"2020-11-20T23:41:17Z","body":"This can make it easier to work on more complex gradients.\r\n\r\nPS: Is there a more suited shortcut that could be used for this? I haven't really looked how gradient editors in other software handle this feature.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":289600822,"public_id":29892,"url":"https://github.com/godotengine/godot/pull/29892","diff_url":"https://github.com/godotengine/godot/pull/29892.diff","patch_url":"https://github.com/godotengine/godot/pull/29892.patch","title":"Adding Motion Matching Library","state":"open","is_draft":false,"authored_by":{"id":35968657,"user":"Aa20475","avater":"https://avatars.githubusercontent.com/u/35968657?v=4","url":"https://github.com/Aa20475"},"created_at":"2019-06-19T08:48:44Z","updated_at":"2021-01-20T06:40:07Z","body":"Basic Structure of Node and tree made\r\n\r\nTODO: Build tree","target_branch":"master","labels":[{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":289244532,"public_id":29867,"url":"https://github.com/godotengine/godot/pull/29867","diff_url":"https://github.com/godotengine/godot/pull/29867.diff","patch_url":"https://github.com/godotengine/godot/pull/29867.patch","title":"add consideration for 2d physics center_of_mass","state":"open","is_draft":false,"authored_by":{"id":8491351,"user":"raphael10241024","avater":"https://avatars.githubusercontent.com/u/8491351?v=4","url":"https://github.com/raphael10241024"},"created_at":"2019-06-18T11:52:17Z","updated_at":"2021-01-26T09:38:22Z","body":"add consideration for 2d physics center_of_mass\r\nThis should close https://github.com/godotengine/godot/issues/12353 ","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":2666708059,"name":"topic:2d","color":"#ffee88"},{"id":370471880,"name":"topic:physics","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[4417777]},{"id":289071132,"public_id":29861,"url":"https://github.com/godotengine/godot/pull/29861","diff_url":"https://github.com/godotengine/godot/pull/29861.diff","patch_url":"https://github.com/godotengine/godot/pull/29861.patch","title":"Added a new member to Node's data called \"time_scale\"","state":"open","is_draft":false,"authored_by":{"id":7023575,"user":"KokaKnut","avater":"https://avatars.githubusercontent.com/u/7023575?v=4","url":"https://github.com/KokaKnut"},"created_at":"2019-06-18T01:07:17Z","updated_at":"2021-03-25T18:44:56Z","body":"Added a new member to Node's data called \"physics_time_scale\". This allows\r\nspeeding up and slowing down the amount of time a node thinks has passed.\r\n\r\nFor example, a Timer can have its physics_time_scale set to 2.0 to count at\r\ndouble speed (two seconds per one real time).\r\n\r\nUse the inherit bool to inherit changes to the parents timescale\r\n\r\nNOTE: This only effects physics processing. Idle processing may find strange behavior were it to have matching implementation.\r\n\r\nAdds functionality for #6885","target_branch":"master","labels":[{"id":279097162,"name":"discussion","color":"#ccaaff"},{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":285794031,"public_id":29544,"url":"https://github.com/godotengine/godot/pull/29544","diff_url":"https://github.com/godotengine/godot/pull/29544.diff","patch_url":"https://github.com/godotengine/godot/pull/29544.patch","title":"Validate Object existence when casting","state":"open","is_draft":false,"authored_by":{"id":2591099,"user":"hpvb","avater":"https://avatars.githubusercontent.com/u/2591099?v=4","url":"https://github.com/hpvb"},"created_at":"2019-06-06T13:04:30Z","updated_at":"2021-01-28T12:48:29Z","body":"When `Object::cast_to<>()` is used from a message it's possible that the\r\nobject has been deleted by the time the method is actually called. This\r\ncan then lead to a crash when trying to use `dynamic_cast<>`.\r\n\r\nThis commit adds a check to `Object::cast_to<>` to check in ObjectDB if\r\nthe object is in fact still valid. This appears to have a positive\r\nimpact on performance. I can't entirely explain why though. I assume it\r\nis because we actually return `NULL` From `dynamic_cast<>` way more often\r\nthan we think. The hashtable lookup may be faster than a `dynamic_cast<>`\r\non a `NULL` object.\r\n\r\nSome Bunnymark results:\r\n```\r\nBefore:\r\nbenchmark output: 5497\r\nbenchmark output: 5460\r\nbenchmark output: 5584\r\nbenchmark output: 5587\r\nbenchmark output: 5611\r\n\r\nAfter:\r\nbenchmark output: 5830\r\nbenchmark output: 5679\r\nbenchmark output: 5696\r\nbenchmark output: 5758\r\nbenchmark output: 5705\r\n```\r\n\r\nThis fixes #26394 (The other case) and probably many other random crashes.","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":284790907,"public_id":29458,"url":"https://github.com/godotengine/godot/pull/29458","diff_url":"https://github.com/godotengine/godot/pull/29458.diff","patch_url":"https://github.com/godotengine/godot/pull/29458.patch","title":"Fix Root Motion Delta Translation","state":"open","is_draft":false,"authored_by":{"id":50343833,"user":"iwHiteRabbiT","avater":"https://avatars.githubusercontent.com/u/50343833?v=4","url":"https://github.com/iwHiteRabbiT"},"created_at":"2019-06-04T02:16:46Z","updated_at":"2021-01-20T11:22:00Z","body":"Delta Translation of Root Motion is now relative to the current Orientation Basis.\r\nYou can add it directly to the Velocity to move your model accordingly (turning animation is a good example)","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":283079392,"public_id":29268,"url":"https://github.com/godotengine/godot/pull/29268","diff_url":"https://github.com/godotengine/godot/pull/29268.diff","patch_url":"https://github.com/godotengine/godot/pull/29268.patch","title":"Add a \"pressed\" style to PopupMenu","state":"open","is_draft":true,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2019-05-29T03:26:06Z","updated_at":"2021-08-22T02:51:30Z","body":"This makes PopupMenus (and derivatives such as OptionButtons) feel more responsive to user input, as they can display a different stylebox and font color when an option is pressed.\r\n\r\nNote that it's quite subtle when using the default dark theme (one can only darken a dark color so much), but this might change when I complete my editor theme redesign :wink:\r\n\r\n## Preview\r\n\r\n[![PopupMenu \"pressed\" style in action](https://thumbs.gfycat.com/ClearBestGangesdolphin-size_restricted.gif)](https://gfycat.com/ClearBestGangesdolphin)\r\n\r\n*Click for a smoother version.*","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":280073305,"public_id":28976,"url":"https://github.com/godotengine/godot/pull/28976","diff_url":"https://github.com/godotengine/godot/pull/28976.diff","patch_url":"https://github.com/godotengine/godot/pull/28976.patch","title":"exposing global_class access via ClassDB","state":"open","is_draft":false,"authored_by":{"id":10124094,"user":"RameshRavone","avater":"https://avatars.githubusercontent.com/u/10124094?v=4","url":"https://github.com/RameshRavone"},"created_at":"2019-05-18T02:58:04Z","updated_at":"2020-09-02T19:42:46Z","body":"adding `get_global_class_list`, `global_class_exists` and exposing via ClassDB,\r\n\r\nUsage:\r\n```\r\nif ClassDB.global_class_exists(\"CustomAction\") and ClassDB.can_instance(\"CustomAction\"):\r\n        ClassDB.instance(\"CustomAction\").Execute()\r\n```\r\n\r\nThis dosn't do much in GDScript but for GDNative/PluginScript and Mono I think this can help a bit, especially if you are developing a EditorPlugin and want your user to create GlobalScript's this can help a lot,\r\n\r\n**Edit:** Fixes #28929","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":272334101,"public_id":28297,"url":"https://github.com/godotengine/godot/pull/28297","diff_url":"https://github.com/godotengine/godot/pull/28297.diff","patch_url":"https://github.com/godotengine/godot/pull/28297.patch","title":"Move enum to int casts from call site into macros, e.g. ERR_FAIL_INDEX","state":"open","is_draft":false,"authored_by":{"id":11571820,"user":"starry-abyss","avater":"https://avatars.githubusercontent.com/u/11571820?v=4","url":"https://github.com/starry-abyss"},"created_at":"2019-04-22T10:10:12Z","updated_at":"2021-08-22T02:47:22Z","body":"Related PR/discussion: https://github.com/godotengine/godot/pull/26868\r\n\r\nMost of the times we pass integers to macros ERR_FAIL_INDEX, ERR_FAIL_INDEX_V, CRASH_BAD_INDEX, ERR_FAIL_UNSIGNED_INDEX_V, but sometimes we also want to pass enums. Passing enums requires a cast, so compiler produces no warnings for the comparison `(m_index) >= (m_size)`.\r\n\r\nFor contributors to not worry about the difference when using the macro, I moved the cast into macros themselves.\r\n\r\nI left two occurences intact (`drivers\\gles2\\rasterizer_scene_gles2.cpp` and `drivers\\gles2\\rasterizer_scene_gles3.cpp`), because they are casting `uint32_t shadow` (unsigned int) to int, and I think it doesn't hurt to be explicit there.\r\n\r\n~~Note: I'm waiting for https://github.com/godotengine/godot/pull/26868 PR to pass CI and merge, so one extra line can be updated in this PR, after rebase.~~","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":270237866,"public_id":27988,"url":"https://github.com/godotengine/godot/pull/27988","diff_url":"https://github.com/godotengine/godot/pull/27988.diff","patch_url":"https://github.com/godotengine/godot/pull/27988.patch","title":"[WIP] Reworked and more capable ConnectDialog","state":"open","is_draft":true,"authored_by":{"id":19392104,"user":"samdze","avater":"https://avatars.githubusercontent.com/u/19392104?v=4","url":"https://github.com/samdze"},"created_at":"2019-04-13T16:24:59Z","updated_at":"2021-05-04T13:31:29Z","body":"This ConnectDialog gives a comprehensive set of tools to connect signals and to manage their arguments, all in a very discoverable way and still being simple in its initial appearance.\r\n\r\nCurrently implemented:\r\n\r\n- [x] Refactored PropertySelector to make it possible to create one inside any part of the interface. (not only in a ConfirmationDialog)\r\n- [x] There are now two distinct modes in the ConnectDialog: \"New Method\" and \"Existing Method\" modes.\r\n- [x] Existing Method mode lets the user select the method of choice inside a list of available methods. The list can be searched and the methods descriptions can be viewed in real-time.\r\n- [x] Adjustments in the UI of the Dialog: Deferred/Oneshot checkboxes and \"Edit Arguments...\" button.\r\n- [x] Added new bindable argument types: Object, Array, Dictionary, NodePath, PoolArray...\r\n- [x] Added arguments info in the main dialog.\r\n- [x] Added locked arguments info in the bindings dialog for arguments passed directly by the emitting signal.\r\n- [x] Children nodes of instanced scenes are displayed in the Connect Dialog SceneTree if Editable Children is active.\r\n- [x] Fixed (Connecting From) not displaying in \"Existing Method\" mode.\r\n- [x] The script and instanced scene icons now always appear in the scene tree, with tooltips.\r\n- [x] Disable \"New Method\" mode if Script Editor is disabled in the current Editor Features profile.\r\n- [x] Added warnings for \"inexistent method\" in \"Existing Method\" mode and for \"method already defined\" in \"New Method\" mode.\r\n- [ ] Auto binding of the right amount/types of arguments when selecting an existing method.\r\n- [ ] Bind arguments with proper names displayed so that their intent/purpose is clearer.\r\n- [ ] More...\r\n\r\n(Outdated gif)\r\n![fkVtIHL](https://user-images.githubusercontent.com/19392104/56082318-c3939a80-5e17-11e9-9f2e-9422ea080557.gif)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":265852659,"public_id":27517,"url":"https://github.com/godotengine/godot/pull/27517","diff_url":"https://github.com/godotengine/godot/pull/27517.diff","patch_url":"https://github.com/godotengine/godot/pull/27517.patch","title":"Allow only one text selection at a time","state":"open","is_draft":false,"authored_by":{"id":45311997,"user":"ptrojahn","avater":"https://avatars.githubusercontent.com/u/45311997?v=4","url":"https://github.com/ptrojahn"},"created_at":"2019-03-29T20:17:49Z","updated_at":"2021-03-25T16:36:14Z","body":"Allow only one text selection per window, unless an edit opts out by\r\nsetting \"independent selection\" to true.\r\n\r\nFixes #27511","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":255779736,"public_id":26263,"url":"https://github.com/godotengine/godot/pull/26263","diff_url":"https://github.com/godotengine/godot/pull/26263.diff","patch_url":"https://github.com/godotengine/godot/pull/26263.patch","title":"Make iOS export fast and easy","state":"open","is_draft":true,"authored_by":{"id":276118,"user":"samgreen","avater":"https://avatars.githubusercontent.com/u/276118?v=4","url":"https://github.com/samgreen"},"created_at":"2019-02-25T07:09:59Z","updated_at":"2021-08-21T22:28:53Z","body":"I'd like to get to 1-click deploy from the editor for iOS games. The first step is ensuring the export pipeline is solid, up-to-date and has very reasonable defaults.\r\n\r\n# Changes\r\n* Move to **Truly Automatic** ™️ code-signing. The trick is providing a default value of `iPhone Developer` and `iPhone Distribution` to pick from available code signing identities (Beward, this can cause #24866 and loss of sanity). The old behavior is still here if you choose to modify the export settings. Most of this process should now be automatic for _most users_\r\n* Depend on modifying the `.xcodeproj` **much** less. We want to stay away from modifying this file and instead let Xcode manage it. To that end, most settings have been moved to `xcconfig` files.\r\n* Add `Common.xcconfig` these settings are applied to all (Debug and Release) builds\r\n* Generate tweakable settings in `godot.xcconfig` and add to `xcodeproj`\r\n* Don't require any icons for successful export, iOS will use a white icon with concentric circles until the art is in place. This was just _one more_ hurdle people needed to see their games run on their devices, I've personally spent a bit of time generating random PNGs just to skip an error in this part of the export. Note that we (obviously) still set the icons if the developer provides them.\r\n* Disambiguate the two versions needed on export. One is a 3 digit version that MUST increment, one is for public display.\r\n* Remove **Access WiFi** capability from export option, as it does [something else](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_networking_wifi-info?language=objc).\r\n* Bump deployment target to iOS 10 (to match the export templates).\r\n* Enabled just about every optional warning and set some to errors, to ensure the best hygiene. Also fixed all warnings that resulted from this.\r\n\r\n# Resolves\r\n* #25128 - .xcconfig files autoescape all strings by default\r\n* #24866 - This was due to the project not actually forcing the placeholder if the user typed nothing for the code signing identities\r\n* #22197 - Ensures x86_64 slices is added to lipo fat binary\r\n* #19996 - Use injected entitlements based on provisioning profile\r\n* #15997 - Only 2 values (team ID and bundle ID) are now required to properly export to iOS, all other settings are tweakable after export via the `.xcconfig` file.\r\n\r\n# Clean Up\r\n* Remove `CFBundleSignature` from `plist` (This is an OS X key).\r\n* Remove `CFBundleIcons` from `plist (We previously migrated to Asset Catalogs)\r\n* Resolve all build warnings from exported Xcode project\r\n\r\n# Proposal for future work\r\n* Remove identity and export method entirely and depend on Xcode export from Archive (this allows re-exporting the same build repeatedly with different certs, profiles, and capabilities).\r\n* Add better documentation around `capabilities` and what they mean.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097519,"name":"platform:ios","color":"#e4e4e4"},{"id":1007033697,"name":"salvageable","color":"#ff7766"},{"id":279098255,"name":"topic:porting","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":255659970,"public_id":26221,"url":"https://github.com/godotengine/godot/pull/26221","diff_url":"https://github.com/godotengine/godot/pull/26221.diff","patch_url":"https://github.com/godotengine/godot/pull/26221.patch","title":"[WIP] Adding ARCore","state":"open","is_draft":true,"authored_by":{"id":1945449,"user":"BastiaanOlij","avater":"https://avatars.githubusercontent.com/u/1945449?v=4","url":"https://github.com/BastiaanOlij"},"created_at":"2019-02-24T04:49:22Z","updated_at":"2021-08-06T11:24:34Z","body":"This is still a Work In Progress but we're making good progress. Please feel free to try and give feedback.\r\n\r\nRight now it almost runs, it downloads the libraries, requests permissions and has all the code that should allow us to do positional tracking. No camera image yet but we just have one shader issue to fix. \r\n\r\nFor those who want to help out you can best clone the ARCore branch on my fork and just compile it, \r\nI'm maintaining a test project here:\r\nhttps://github.com/BastiaanOlij/godot3_test_projects/tree/ARCore/ARCore\r\n\r\nOr create a project with the following code in your main script:\r\n```\r\nfunc _ready():\r\n\t# ARCore initialisation should be in _ready\r\n\tvar arcore = ARVRServer.find_interface('ARCore')\r\n\tif arcore and arcore.initialize():\r\n\t\t# this just means we started our initialisation process successfully\r\n\t\tget_viewport().arvr = true\r\n\t\t\t\r\n\t\t# assign our camera\r\n\t\tget_viewport().get_camera().environment.background_camera_feed_id = arcore.get_camera_feed_id()\r\n```\r\nAlso make sure your environment is setup to use a background camera\r\n\r\nTodos:\r\n- fix shader issues around external sampler\r\n- fix matrix issues\r\n- add support for detecting anchors\r\n- add code for handling when Godot needs to be pauzed (reacting to notifications)\r\n\r\n","target_branch":"3.x","labels":[{"id":1647053200,"name":"cherrypick:3.x","color":"#446699"},{"id":73330068,"name":"feature proposal","color":"#4466ff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097562,"name":"platform:android","color":"#e4e4e4"},{"id":2666708289,"name":"topic:3d","color":"#ffee88"},{"id":865585000,"name":"topic:xr","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":243259866,"public_id":24860,"url":"https://github.com/godotengine/godot/pull/24860","diff_url":"https://github.com/godotengine/godot/pull/24860.diff","patch_url":"https://github.com/godotengine/godot/pull/24860.patch","title":"Warn on case mismatch on Unix systems","state":"open","is_draft":false,"authored_by":{"id":3855602,"user":"EmrysMyrddin","avater":"https://avatars.githubusercontent.com/u/3855602?v=4","url":"https://github.com/EmrysMyrddin"},"created_at":"2019-01-09T09:16:40Z","updated_at":"2021-02-12T09:48:56Z","body":"# Purpose\r\n\r\nThis pull request aims to fix #23441 (display a warning when using a file with the wrong case).\r\n\r\n# Exemples\r\n\r\n```gdscript\r\n# Foo.gd\r\n\r\nextends Node\r\n```\r\n```gdscript\r\n# res://Bar.gd\r\n\r\nextends 'foo.gd'\r\n```\r\n\r\nThis shows this warning :\r\n\r\n```\r\nCase mismatch opening requested file '/Users/valentin/Dev/Projects/Godot/Tests/foo.gd', stored as '/Users/valentin/Dev/Projects/Godot/Tests/Foo.gd' in the filesystem. This file will not open when exported to other case-sensitive platforms.\r\n```\r\n\r\n# Caveats\r\n\r\nSince I'm using POSIX `realpath` function, this warning will also be displayed if there is a symlink somewhere in the path. This is due to `real_path` resolving all symlinks to find a real path on the disk.\r\n\r\nExemple:\r\n\r\n```gdscript\r\n# linked/Foo.gd\r\n\r\nextends Node\r\n```\r\n\r\n```gdscript\r\n# Bar.gd\r\n\r\nextends linked/Foo.gd\r\n```\r\n\r\nHere, given that `linked` folder is a symlink, we will get this warning :\r\n\r\n```\r\nCase mismatch opening requested file '/Users/valentin/Dev/Projects/Godot/Tests/linked/Foo.gd', stored as '/Users/valentin/Dev/Projects/Godot/Tests/somewhere_else/Foo.gd' in the filesystem. This file will not open when exported to other case-sensitive platforms.\r\n```\r\n\r\nI haven't found any way to avoid this problem... So if anyone have an idea...","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":279097326,"name":"platform:linuxbsd","color":"#e4e4e4"},{"id":279097780,"name":"platform:macos","color":"#e4e4e4"},{"id":279097966,"name":"topic:core","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":238970864,"public_id":24402,"url":"https://github.com/godotengine/godot/pull/24402","diff_url":"https://github.com/godotengine/godot/pull/24402.diff","patch_url":"https://github.com/godotengine/godot/pull/24402.patch","title":"Improvements to AnimationNodeStateMachine","state":"open","is_draft":false,"authored_by":{"id":1387165,"user":"guilhermefelipecgs","avater":"https://avatars.githubusercontent.com/u/1387165?v=4","url":"https://github.com/guilhermefelipecgs"},"created_at":"2018-12-16T14:53:15Z","updated_at":"2021-06-21T23:30:26Z","body":"Closes #19773.\r\n\r\nOpen the menu to add new animation nodes by dragging the transitions to empty areas and automatically connecting them:\r\n![peek 10-02-2019 16-34](https://user-images.githubusercontent.com/1387165/52537828-f2c35800-2d51-11e9-8790-d305ca1f6f05.gif)\r\nAdds box selection to the state machine:\r\n![peek 10-02-2019 16-35](https://user-images.githubusercontent.com/1387165/52537830-f3f48500-2d51-11e9-97d5-83091a5eab49.gif)\r\nAdd feature to group/ungroup selected nodes in a \"sub\" state machine:\r\n![peek 10-02-2019 16-37](https://user-images.githubusercontent.com/1387165/52537842-3cac3e00-2d52-11e9-83a7-e10518398898.gif)\r\nAdd popup to connect nodes in sub state machine:\r\n![peek 10-02-2019 16-40](https://user-images.githubusercontent.com/1387165/52537869-9d3b7b00-2d52-11e9-8867-7ae1c4f5f126.gif)\r\nAdd new \"type\" of transition line when multiple transitions are grouped:\r\n![peek 10-02-2019 16-44](https://user-images.githubusercontent.com/1387165/52537906-19ce5980-2d53-11e9-8905-64d006e2ab9a.gif)\r\nAdd dialog to select which transitions can be deleted when they are grouped:\r\n![peek 10-02-2019 16-45](https://user-images.githubusercontent.com/1387165/52537922-4b472500-2d53-11e9-8c28-3d40d0a44608.gif)\r\n","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":1349613124,"name":"for pr meeting","color":"#88f795"},{"id":2666705648,"name":"topic:animation","color":"#ffee88"},{"id":279098219,"name":"topic:editor","color":"#ffee88"},{"id":283518733,"name":"usability","color":"#447744"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":220110818,"public_id":22686,"url":"https://github.com/godotengine/godot/pull/22686","diff_url":"https://github.com/godotengine/godot/pull/22686.diff","patch_url":"https://github.com/godotengine/godot/pull/22686.patch","title":"Fix filesystem dock which allow to exist folders with the same name - e.g. AAA and aaa on Windows","state":"open","is_draft":false,"authored_by":{"id":5897520,"user":"dualtagh","avater":"https://avatars.githubusercontent.com/u/5897520?v=4","url":"https://github.com/dualtagh"},"created_at":"2018-10-03T17:01:25Z","updated_at":"2021-06-06T13:40:39Z","body":"Fixes https://github.com/godotengine/godot/issues/22475\r\n\r\nThe script editor doesn't actually create a new folder called \"AAA\", but it does add it to the FileSystem tree. Rescanning when a new script is added to refresh","target_branch":"master","labels":[{"id":73330064,"name":"bug","color":"#ff6055"},{"id":205417413,"name":"platform:windows","color":"#e4e4e4"},{"id":279098219,"name":"topic:editor","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]},{"id":218738740,"public_id":22488,"url":"https://github.com/godotengine/godot/pull/22488","diff_url":"https://github.com/godotengine/godot/pull/22488.diff","patch_url":"https://github.com/godotengine/godot/pull/22488.patch","title":"[WIP] Added new scaling modes to splash screen","state":"open","is_draft":true,"authored_by":{"id":8157352,"user":"samuelpedrajas","avater":"https://avatars.githubusercontent.com/u/8157352?v=4","url":"https://github.com/samuelpedrajas"},"created_at":"2018-09-27T17:57:32Z","updated_at":"2020-09-02T19:42:52Z","body":"Originally I opened this PR https://github.com/godotengine/godot/pull/20541 but I deleted my godot repository, so I became unable to edit my own PR. Here's the new one.\r\n\r\nI basically added a new property called `stretch_mode` to `Application/Boot Splash/` in the project settings. This property allows 5 values representing different stretch modes: `keep, keep_width, keep_height, cover and expand`.\r\n\r\nFor compatibility purposes, I kept the already available `fullsize` property. Like before, if `fullsize` is `false` no stretching will be applied and the image is left to its original size. If `fullsize` is `true`, then the selected stretch mode will be applied.\r\n\r\nSelecting `keep` and having `fullsize` to `true` will result in the same behavior as having `fullsize` to `true` before this commit. Because of this, I set `keep` as the default value for `stretch_mode`.\r\n\r\nI wasn't able to keep compatibility for `VisualServer.set_boot_image()` function. I changed the signature from `void set_boot_image(const Ref<Image> &p_image, const Color &p_color, bool p_scale)` to `void set_boot_image(const Ref<Image> &p_image, const Color &p_color, SplashStretchMode p_stretch_mode)`, where `SplashStretchMode` is an `enum` I defined in `servers/VisualServer.h`. I don't know if this is a big problem.\r\n\r\nHere's how the the new property looks like:\r\n![stretch_mode](https://user-images.githubusercontent.com/8157352/46164206-b2c17400-c28d-11e8-8da0-fbd7c3f6c7da.png)\r\n\r\n\r\nHere's some pictures to illustrate how each scaling mode works. In each case an icon with size 64x64 is used:\r\n\r\n| Stretch Mode | Horizontal (960x540) | Vertical (540x960) |\r\n| ------------- | ------------- | ------------- |\r\n| `fullsize=false`  | ![h_fullsize_off](https://user-images.githubusercontent.com/8157352/43355917-985f0818-9266-11e8-85e0-3e76241e3cc0.png) | ![v_fullsize_off](https://user-images.githubusercontent.com/8157352/43355920-acea9b44-9266-11e8-9eec-0f8483652ede.png) |\r\n| `fullsize=true` and `stretch_mode=keep_width`  | ![h_keep_width](https://user-images.githubusercontent.com/8157352/43355935-dd389bf2-9266-11e8-8f16-69b363d3c5a5.png)  | ![v_fullsize_on](https://user-images.githubusercontent.com/8157352/43355943-f0a2d144-9266-11e8-94c6-131086427154.png)  |\r\n| `fullsize=true` and `stretch_mode=keep_height`  | ![h_fullsize_on](https://user-images.githubusercontent.com/8157352/43355939-ee6ae6be-9266-11e8-9186-2ee769baa5c9.png)  | ![v_keep_height](https://user-images.githubusercontent.com/8157352/43355944-f0d9b8ee-9266-11e8-9fe1-f2c2dfcc3401.png)  |\r\n| `fullsize=true` and `stretch_mode=cover` | ![h_keep_width](https://user-images.githubusercontent.com/8157352/43355935-dd389bf2-9266-11e8-8f16-69b363d3c5a5.png)  | ![v_keep_height](https://user-images.githubusercontent.com/8157352/43355944-f0d9b8ee-9266-11e8-9fe1-f2c2dfcc3401.png)  |\r\n| `fullsize=true` and `stretch_mode=expand`  | ![h_expand](https://user-images.githubusercontent.com/8157352/43355937-ee2b2326-9266-11e8-87c9-83af89423e21.png) | ![v_expand](https://user-images.githubusercontent.com/8157352/43355940-eed1dc7a-9266-11e8-87c9-05c7e358db77.png)  |\r\n| `fullsize=true` and `stretch_mode=keep`  | ![h_fullsize_on](https://user-images.githubusercontent.com/8157352/43355939-ee6ae6be-9266-11e8-9186-2ee769baa5c9.png) | ![v_fullsize_on](https://user-images.githubusercontent.com/8157352/43355943-f0a2d144-9266-11e8-94c6-131086427154.png) |\r\n\r\nAs I said, `fullsize=true` with `stretch_mode=keep` results in the same behavior as `fullsize=true` before this commit.\r\n\r\nThis may solve this feature request: https://github.com/godotengine/godot/issues/22075.\r\n*Bugsquad edit:* Fixes #22075.\r\n\r\nI don't usually code in C++ and I don't know the project well yet so any improvement suggestion is welcome.","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[1828783]},{"id":210953225,"public_id":21446,"url":"https://github.com/godotengine/godot/pull/21446","diff_url":"https://github.com/godotengine/godot/pull/21446.diff","patch_url":"https://github.com/godotengine/godot/pull/21446.patch","title":"Add a 2D scale factor property","state":"open","is_draft":false,"authored_by":{"id":180032,"user":"Calinou","avater":"https://avatars.githubusercontent.com/u/180032?v=4","url":"https://github.com/Calinou"},"created_at":"2018-08-26T14:07:25Z","updated_at":"2021-08-22T02:56:42Z","body":"This can be used to make 2D elements larger or smaller, independently of the current stretch mode.\r\n\r\nOnly the `disabled` and `2d` stretch modes support this new property.\r\n\r\nNote that I removed the property hint for `shrink` as it was causing the Project Settings GUI to recognize it as a string instead of a floating-point value (it seems there's no way to add property hints for floats).\r\n\r\n[Demo project](https://github.com/godotengine/godot/files/2321558/2d-scaling-demo.zip)","target_branch":"master","labels":[{"id":73330066,"name":"enhancement","color":"#aaccff"},{"id":311852125,"name":"needs work","color":"#cc9999"},{"id":279097966,"name":"topic:core","color":"#ffee88"},{"id":279098111,"name":"topic:rendering","color":"#ffee88"}],"milestone":{"id":3901874,"title":"4.0","url":"https://github.com/godotengine/godot/milestone/9"},"teams":[]}]}